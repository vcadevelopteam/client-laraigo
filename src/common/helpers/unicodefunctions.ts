function convertToBold(text:string) {
    const boldMap = {
      'A': '𝐀', 'B': '𝐁', 'C': '𝐂', 'D': '𝐃', 'E': '𝐄', 'F': '𝐅', 'G': '𝐆',
      'H': '𝐇', 'I': '𝐈', 'J': '𝐉', 'K': '𝐊', 'L': '𝐋', 'M': '𝐌', 'N': '𝐍',
      'O': '𝐎', 'P': '𝐏', 'Q': '𝐐', 'R': '𝐑', 'S': '𝐒', 'T': '𝐓', 'U': '𝐔',
      'V': '𝐕', 'W': '𝐖', 'X': '𝐗', 'Y': '𝐘', 'Z': '𝐙',
      'a': '𝐚', 'b': '𝐛', 'c': '𝐜', 'd': '𝐝', 'e': '𝐞', 'f': '𝐟', 'g': '𝐠',
      'h': '𝐡', 'i': '𝐢', 'j': '𝐣', 'k': '𝐤', 'l': '𝐥', 'm': '𝐦', 'n': '𝐧',
      'o': '𝐨', 'p': '𝐩', 'q': '𝐪', 'r': '𝐫', 's': '𝐬', 't': '𝐭', 'u': '𝐮',
      'v': '𝐯', 'w': '𝐰', 'x': '𝐱', 'y': '𝐲', 'z': '𝐳',
      '0': '𝟎', '1': '𝟏', '2': '𝟐', '3': '𝟑', '4': '𝟒', '5': '𝟓', '6': '𝟔',
      '7': '𝟕', '8': '𝟖', '9': '𝟗',
      '!': '𝗇', '"': '𝖆', '#': '𝖇', '$': '𝖈', '%': '𝖉', '&': '𝖊', '\'': '𝖋',
      '(': '𝖌', ')': '𝖍', '*': '𝖎', '+': '𝖏', ',': '𝖐', '-': '𝖑', '.': '𝖒',
      '/': '𝖓', ':': '𝖔', ';': '𝖕', '<': '𝖖', '=': '𝖗', '>': '𝖘', '?': '𝖙',
      '@': '𝖚', '[': '𝖛', '\\': '𝖜', ']': '𝖝', '^': '𝖞', '_': '𝖟', '`': '𝖠',
      '{': '𝖡', '|': '𝖢', '}': '𝖣', '~': '𝖤', ' ': ' '
    };
  
    return text.split('').map(char => boldMap[char] || char).join('');
}

function convertToItalic(text:string) {
    const italicMap = {
      'A': '𝐴', 'B': '𝐵', 'C': '𝐶', 'D': '𝐷', 'E': '𝐸', 'F': '𝐹', 'G': '𝐺',
      'H': '𝐻', 'I': '𝐼', 'J': '𝐽', 'K': '𝐾', 'L': '𝐿', 'M': '𝑀', 'N': '𝑁',
      'O': '𝑂', 'P': '𝑃', 'Q': '𝑄', 'R': '𝑅', 'S': '𝑆', 'T': '𝑇', 'U': '𝑈',
      'V': '𝑉', 'W': '𝑊', 'X': '𝑋', 'Y': '𝑌', 'Z': '𝑍',
      'a': '𝑎', 'b': '𝑏', 'c': '𝑐', 'd': '𝑑', 'e': '𝑒', 'f': '𝑓', 'g': '𝑔',
      'h': '𝑖', 'i': '𝑖', 'j': '𝑗', 'k': '𝑘', 'l': '𝑙', 'm': '𝑚', 'n': '𝑛',
      'o': '𝑜', 'p': '𝑝', 'q': '𝑞', 'r': '𝑟', 's': '𝑠', 't': '𝑡', 'u': '𝑢',
      'v': '𝑣', 'w': '𝑤', 'x': '𝑥', 'y': '𝑦', 'z': '𝑧',
      '0': '𝟢', '1': '𝟣', '2': '𝟤', '3': '𝟥', '4': '𝟦', '5': '𝟧', '6': '𝟨',
      '7': '𝟩', '8': '𝟪', '9': '𝟫',
      '!': '!', '"': '"', '#': '#', '$': '$', '%': '%', '&': '&', '\'': '\'',
      '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', '-': '-', '.': '.',
      '/': '/', ':': ':', ';': ';', '<': '<', '=': '=', '>': '>', '?': '?',
      '@': '@', '[': '[', '\\': '\\', ']': ']', '^': '^', '_': '_', '`': '`',
      '{': '{', '|': '|', '}': '}', '~': '~', ' ': ' '
    };
  
    return text.split('').map(char => italicMap[char] || char).join('');
}

function convertToUnderlined(text:string) {
    const underlineMap = {
      'A': 'A\u0332', 'B': 'B\u0332', 'C': 'C\u0332', 'D': 'D\u0332', 'E': 'E\u0332', 
      'F': 'F\u0332', 'G': 'G\u0332', 'H': 'H\u0332', 'I': 'I\u0332', 'J': 'J\u0332', 
      'K': 'K\u0332', 'L': 'L\u0332', 'M': 'M\u0332', 'N': 'N\u0332', 'O': 'O\u0332', 
      'P': 'P\u0332', 'Q': 'Q\u0332', 'R': 'R\u0332', 'S': 'S\u0332', 'T': 'T\u0332', 
      'U': 'U\u0332', 'V': 'V\u0332', 'W': 'W\u0332', 'X': 'X\u0332', 'Y': 'Y\u0332', 
      'Z': 'Z\u0332', 'a': 'a\u0332', 'b': 'b\u0332', 'c': 'c\u0332', 'd': 'd\u0332', 
      'e': 'e\u0332', 'f': 'f\u0332', 'g': 'g\u0332', 'h': 'h\u0332', 'i': 'i\u0332', 
      'j': 'j\u0332', 'k': 'k\u0332', 'l': 'l\u0332', 'm': 'm\u0332', 'n': 'n\u0332', 
      'o': 'o\u0332', 'p': 'p\u0332', 'q': 'q\u0332', 'r': 'r\u0332', 's': 's\u0332', 
      't': 't\u0332', 'u': 'u\u0332', 'v': 'v\u0332', 'w': 'w\u0332', 'x': 'x\u0332', 
      'y': 'y\u0332', 'z': 'z\u0332', '0': '0\u0332', '1': '1\u0332', '2': '2\u0332', 
      '3': '3\u0332', '4': '4\u0332', '5': '5\u0332', '6': '6\u0332', '7': '7\u0332', 
      '8': '8\u0332', '9': '9\u0332', '!': '!\u0332', '"': '"\u0332', '#': '#\u0332', 
      '$': '$\u0332', '%': '%\u0332', '&': '&\u0332', '\'': '\'\u0332', '(': '(\u0332', 
      ')': ')\u0332', '*': '*\u0332', '+': '+\u0332', ',': ',\u0332', '-': '-\u0332', 
      '.': '.\u0332', '/': '/\u0332', ':': ':\u0332', ';': ';\u0332', '<': '<\u0332', 
      '=': '=\u0332', '>': '>\u0332', '?': '?\u0332', '@': '@\u0332', '[': '[\u0332', 
      '\\': '\\\u0332', ']': ']\u0332', '^': '^\u0332', '_': '_\u0332', '`': '`\u0332', 
      '{': '{\u0332', '|': '|\u0332', '}': '}\u0332', '~': '~\u0332', ' ': ' \u0332'
    };
  
    return text.split('').map(char => underlineMap[char] || char).join('');
}

function convertToStrikethrough(text:string) {
    const strikethroughMap = {
      'A': 'A\u0336', 'B': 'B\u0336', 'C': 'C\u0336', 'D': 'D\u0336', 'E': 'E\u0336', 
      'F': 'F\u0336', 'G': 'G\u0336', 'H': 'H\u0336', 'I': 'I\u0336', 'J': 'J\u0336', 
      'K': 'K\u0336', 'L': 'L\u0336', 'M': 'M\u0336', 'N': 'N\u0336', 'O': 'O\u0336', 
      'P': 'P\u0336', 'Q': 'Q\u0336', 'R': 'R\u0336', 'S': 'S\u0336', 'T': 'T\u0336', 
      'U': 'U\u0336', 'V': 'V\u0336', 'W': 'W\u0336', 'X': 'X\u0336', 'Y': 'Y\u0336', 
      'Z': 'Z\u0336', 'a': 'a\u0336', 'b': 'b\u0336', 'c': 'c\u0336', 'd': 'd\u0336', 
      'e': 'e\u0336', 'f': 'f\u0336', 'g': 'g\u0336', 'h': 'h\u0336', 'i': 'i\u0336', 
      'j': 'j\u0336', 'k': 'k\u0336', 'l': 'l\u0336', 'm': 'm\u0336', 'n': 'n\u0336', 
      'o': 'o\u0336', 'p': 'p\u0336', 'q': 'q\u0336', 'r': 'r\u0336', 's': 's\u0336', 
      't': 't\u0336', 'u': 'u\u0336', 'v': 'v\u0336', 'w': 'w\u0336', 'x': 'x\u0336', 
      'y': 'y\u0336', 'z': 'z\u0336', '0': '0\u0336', '1': '1\u0336', '2': '2\u0336', 
      '3': '3\u0336', '4': '4\u0336', '5': '5\u0336', '6': '6\u0336', '7': '7\u0336', 
      '8': '8\u0336', '9': '9\u0336', '!': '!\u0336', '"': '"\u0336', '#': '#\u0336', 
      '$': '$\u0336', '%': '%\u0336', '&': '&\u0336', '\'': '\'\u0336', '(': '(\u0336', 
      ')': ')\u0336', '*': '*\u0336', '+': '+\u0336', ',': ',\u0336', '-': '-\u0336', 
      '.': '.\u0336', '/': '/\u0336', ':': ':\u0336', ';': ';\u0336', '<': '<\u0336', 
      '=': '=\u0336', '>': '>\u0336', '?': '?\u0336', '@': '@\u0336', '[': '[\u0336', 
      '\\': '\\\u0336', ']': ']\u0336', '^': '^\u0336', '_': '_\u0336', '`': '`\u0336', 
      '{': '{\u0336', '|': '|\u0336', '}': '}\u0336', '~': '~\u0336', ' ': ' \u0336'
    };
  
    return text.split('').map(char => strikethroughMap[char] || char).join('');
}
  
function convertToMonospace(text:string) {
    const monospaceMap = {
      'A': '𝙰', 'B': '𝙱', 'C': '𝙲', 'D': '𝙳', 'E': '𝙴', 'F': '𝙵', 'G': '𝙶',
      'H': '𝙷', 'I': '𝙸', 'J': '𝙹', 'K': '𝙺', 'L': '𝙻', 'M': '𝙼', 'N': '𝙽',
      'O': '𝙾', 'P': '𝙿', 'Q': '𝚀', 'R': '𝚁', 'S': '𝚂', 'T': '𝚃', 'U': '𝚄',
      'V': '𝚅', 'W': '𝚆', 'X': '𝚇', 'Y': '𝚈', 'Z': '𝚉', 'a': '𝚊', 'b': '𝚋',
      'c': '𝚌', 'd': '𝚍', 'e': '𝚎', 'f': '𝚏', 'g': '𝚐', 'h': '𝚑', 'i': '𝚒',
      'j': '𝚓', 'k': '𝚔', 'l': '𝚕', 'm': '𝚖', 'n': '𝚗', 'o': '𝚘', 'p': '𝚙',
      'q': '𝚚', 'r': '𝚛', 's': '𝚜', 't': '𝚝', 'u': '𝚞', 'v': '𝚟', 'w': '𝚠',
      'x': '𝚡', 'y': '𝚢', 'z': '𝚣', '0': '𝟶', '1': '𝟷', '2': '𝟸', '3': '𝟹',
      '4': '𝟺', '5': '𝟻', '6': '𝟼', '7': '𝟽', '8': '𝟾', '9': '𝟿', '!': '！',
      '"': '＂', '#': '＃', '$': '＄', '%': '％', '&': '＆', '\'': '＇', '(': '（',
      ')': '）', '*': '＊', '+': '＋', ',': '，', '-': '－', '.': '．', '/': '／',
      ':': '：', ';': '；', '<': '＜', '=': '＝', '>': '＞', '?': '？', '@': '＠',
      '[': '［', '\\': '＼', ']': '］', '^': '＾', '_': '＿', '`': '｀', '{': '｛',
      '|': '｜', '}': '｝', '~': '～', ' ': ' '
    };
  
    return text.split('').map(char => monospaceMap[char] || char).join('');
}

//combinados 2 
function convertToBoldItalic(text:string) {
    const boldItalicMap = {
      'A': '𝑨', 'B': '𝑩', 'C': '𝑪', 'D': '𝑫', 'E': '𝑬', 'F': '𝑭', 'G': '𝑮',
      'H': '𝑯', 'I': '𝑰', 'J': '𝑱', 'K': '𝑲', 'L': '𝑳', 'M': '𝑴', 'N': '𝑵',
      'O': '𝑶', 'P': '𝑷', 'Q': '𝑸', 'R': '𝑹', 'S': '𝑺', 'T': '𝑻', 'U': '𝑼',
      'V': '𝑽', 'W': '𝑾', 'X': '𝑿', 'Y': '𝒀', 'Z': '𝒁', 'a': '𝒶', 'b': '𝒷',
      'c': '𝒸', 'd': '𝒹', 'e': '𝒺', 'f': '𝒻', 'g': '𝒼', 'h': '𝒽', 'i': '𝒾',
      'j': '𝒿', 'k': '𝓀', 'l': '𝓁', 'm': '𝓂', 'n': '𝓃', 'o': '𝓄', 'p': '𝓅',
      'q': '𝓆', 'r': '𝓇', 's': '𝓈', 't': '𝓉', 'u': '𝓊', 'v': '𝓋', 'w': '𝓌',
      'x': '𝓍', 'y': '𝓎', 'z': '𝓏', '0': '𝟎', '1': '𝟏', '2': '𝟐', '3': '𝟑',
      '4': '𝟒', '5': '𝟓', '6': '𝟔', '7': '𝟕', '8': '𝟖', '9': '𝟗', '!': '!', 
      '"': '"', '#': '#', '$': '$', '%': '%', '&': '&', '\'': '\'',
      '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', '-': '-', '.': '.',
      '/': '/', ':': ':', ';': ';', '<': '<', '=': '=', '>': '>', '?': '?',
      '@': '@', '[': '[', '\\': '\\', ']': ']', '^': '^', '_': '_', '`': '`',
      '{': '{', '|': '|', '}': '}', '~': '~', ' ': ' '
    };
  
    return text.split('').map(char => boldItalicMap[char] || char).join('');
}

function convertToBoldUnderlined(text:string) {
    const boldUnderlineMap = {
      'A': '𝐴\u0332', 'B': '𝐵\u0332', 'C': '𝐶\u0332', 'D': '𝐷\u0332', 'E': '𝐸\u0332', 
      'F': '𝐹\u0332', 'G': '𝐺\u0332', 'H': '𝐻\u0332', 'I': '𝐼\u0332', 'J': '𝒥\u0332', 
      'K': '𝐾\u0332', 'L': '𝐿\u0332', 'M': '𝑀\u0332', 'N': '𝑁\u0332', 'O': '𝑂\u0332', 
      'P': '𝑃\u0332', 'Q': '𝑄\u0332', 'R': '𝑅\u0332', 'S': '𝑆\u0332', 'T': '𝑇\u0332', 
      'U': '𝑈\u0332', 'V': '𝑉\u0332', 'W': '𝑊\u0332', 'X': '𝑋\u0332', 'Y': '𝑌\u0332', 
      'Z': '𝑍\u0332', 'a': '𝑎\u0332', 'b': '𝑏\u0332', 'c': '𝑐\u0332', 'd': '𝑑\u0332', 
      'e': '𝑒\u0332', 'f': '𝑓\u0332', 'g': '𝑔\u0332', 'h': '𝒽\u0332', 'i': '𝑖\u0332', 
      'j': '𝑗\u0332', 'k': '𝑘\u0332', 'l': '𝑙\u0332', 'm': '𝑚\u0332', 'n': '𝑛\u0332', 
      'o': '𝑜\u0332', 'p': '𝑝\u0332', 'q': '𝑞\u0332', 'r': '𝑟\u0332', 's': '𝑠\u0332', 
      't': '𝑡\u0332', 'u': '𝑢\u0332', 'v': '𝑣\u0332', 'w': '𝑤\u0332', 'x': '𝑥\u0332', 
      'y': '𝑦\u0332', 'z': '𝑧\u0332', '0': '𝟎\u0332', '1': '𝟏\u0332', '2': '𝟐\u0332', 
      '3': '𝟑\u0332', '4': '𝟒\u0332', '5': '𝟓\u0332', '6': '𝟔\u0332', '7': '𝟕\u0332', 
      '8': '𝟖\u0332', '9': '𝟗\u0332', '!': '!\u0332', '"': '"\u0332', '#': '#\u0332', 
      '$': '$\u0332', '%': '%\u0332', '&': '&\u0332', '\'': '\'\u0332', '(': '(\u0332', 
      ')': ')\u0332', '*': '*\u0332', '+': '+\u0332', ',': ',\u0332', '-': '-\u0332', 
      '.': '.\u0332', '/': '/\u0332', ':': ':\u0332', ';': ';\u0332', '<': '<\u0332', 
      '=': '=\u0332', '>': '>\u0332', '?': '?\u0332', '@': '@\u0332', '[': '[\u0332', 
      '\\': '\\\u0332', ']': ']\u0332', '^': '^\u0332', '_': '_\u0332', '`': '`\u0332', 
      '{': '{\u0332', '|': '|\u0332', '}': '}\u0332', '~': '~\u0332', ' ': ' \u0332'
    };
  
    return text.split('').map(char => boldUnderlineMap[char] || char).join('');
}

function convertToBoldStrikethrough(text:string) {
    const boldStrikethroughMap = {
      'A': '𝐴\u0336', 'B': '𝐵\u0336', 'C': '𝐶\u0336', 'D': '𝐷\u0336', 'E': '𝐸\u0336', 
      'F': '𝐹\u0336', 'G': '𝐺\u0336', 'H': '𝐻\u0336', 'I': '𝐼\u0336', 'J': '𝐽\u0336', 
      'K': '𝐾\u0336', 'L': '𝐿\u0336', 'M': '𝑀\u0336', 'N': '𝑁\u0336', 'O': '𝑂\u0336', 
      'P': '𝑃\u0336', 'Q': '𝑄\u0336', 'R': '𝑅\u0336', 'S': '𝑆\u0336', 'T': '𝑇\u0336', 
      'U': '𝑈\u0336', 'V': '𝑉\u0336', 'W': '𝑊\u0336', 'X': '𝑋\u0336', 'Y': '𝑌\u0336', 
      'Z': '𝑍\u0336', 'a': '𝑎\u0336', 'b': '𝑏\u0336', 'c': '𝑐\u0336', 'd': '𝑑\u0336', 
      'e': '𝑒\u0336', 'f': '𝑓\u0336', 'g': '𝑔\u0336', 'h': 'ℎ\u0336', 'i': '𝑖\u0336', 
      'j': '𝑗\u0336', 'k': '𝑘\u0336', 'l': '𝑙\u0336', 'm': '𝑚\u0336', 'n': '𝑛\u0336', 
      'o': '𝑜\u0336', 'p': '𝑝\u0336', 'q': '𝑞\u0336', 'r': '𝑟\u0336', 's': '𝑠\u0336', 
      't': '𝑡\u0336', 'u': '𝑢\u0336', 'v': '𝑣\u0336', 'w': '𝑤\u0336', 'x': '𝑥\u0336', 
      'y': '𝑦\u0336', 'z': '𝑧\u0336', '0': '𝟎\u0336', '1': '𝟏\u0336', '2': '𝟐\u0336', 
      '3': '𝟑\u0336', '4': '𝟒\u0336', '5': '𝟓\u0336', '6': '𝟔\u0336', '7': '𝟕\u0336', 
      '8': '𝟖\u0336', '9': '𝟗\u0336', '!': '!\u0336', '"': '"\u0336', '#': '#\u0336', 
      '$': '$\u0336', '%': '%\u0336', '&': '&\u0336', '\'': '\'\u0336', '(': '(\u0336', 
      ')': ')\u0336', '*': '*\u0336', '+': '+\u0336', ',': ',\u0336', '-': '-\u0336', 
      '.': '.\u0336', '/': '/\u0336', ':': ':\u0336', ';': ';\u0336', '<': '<\u0336', 
      '=': '=\u0336', '>': '>\u0336', '?': '?\u0336', '@': '@\u0336', '[': '[\u0336', 
      '\\': '\\\u0336', ']': ']\u0336', '^': '^\u0336', '_': '_\u0336', '`': '`\u0336', 
      '{': '{\u0336', '|': '|\u0336', '}': '}\u0336', '~': '~\u0336', ' ': ' \u0336'
    };
  
    return text.split('').map(char => boldStrikethroughMap[char] || char).join('');
}