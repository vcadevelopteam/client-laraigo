{"version":3,"sources":["pages/Corporations.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js","store/signup/actions.ts"],"names":["useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","DetailCorporation","data","row","edit","setViewSelected","multiData","fetchData","arrayBread","classes","useState","waitSave","setWaitSave","billbyorg","setbillbyorg","doctype","sunatcountry","setdoctype","dataDocType","success","executeRes","useSelector","state","main","execute","dispatch","useDispatch","t","useTranslation","user","login","validateToken","dataStatus","dataType","dataPaymentPlan","countryList","signup","typeofcreditList","partnerType","useForm","defaultValues","id","corpid","description","type","status","logo","logotype","paymentplanid","docnum","businessname","fiscaladdress","contactemail","automaticpayment","automaticperiod","automaticinvoice","contact","autosendinvoice","credittype","operation","paymentmethod","companysize","partner","register","handleSubmit","setValue","trigger","getValues","errors","formState","React","useEffect","validate","value","length","langKeys","field_required","msg","doctype_others_non_home_error","undefined","doctype_dni_error","doctype_foreigners_card","doctype_ruc_error","doctype_passport_error","doctype_unknown_error","docTypeValidate","hasvalue","isemail","test","emailverification","roledesc","loading","error","errormessage","code","module","corporation_plural","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","onSubmit","callback","a","fd","FormData","append","name","CommonService","uploadFile","insCorp","manageConfirmation","visible","question","confirmation_save","countries","useMemo","sort","b","localeCompare","docTypes","filter","x","domainvalue","domaindesc","style","width","display","justifyContent","breadcrumbs","corporationdetail","handleClick","title","newcorporation","gap","alignItems","variant","color","startIcon","backgroundColor","onClick","back","className","save","label","corporation","valueDefault","onChange","uset","prefixTranslation","optionDesc","optionValue","billingplan","prepaid","postpaid","country","docType","disabled","documentnumber","contactbilling","billingmail","typecredit","Corporations","history","useHistory","mainResult","executeResult","configuration_plural","mainData","setMainData","viewSelected","rowSelected","setRowSelected","columns","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","getCollection","getCorpSel","getCountryList","getMultiCollection","getValuesFromDomain","getPaymentPlanSel","getValuesFromDomainCorp","resetAllMain","successful_delete","map","typedesc","toLowerCase","toUpperCase","statusdesc","confirmation_delete","redirectFunc","view","push","paths","CONFIGURATION","titlemodule","count","onClickRow","ButtonsElement","download","includes","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","executeSubscription","requestBody","callAPI","ChannelsService","execSub","types","actionTypes","SIGNUP","SIGNUP_SUCCESS","failure","SIGNUP_FAILURE","executeCheckNewUser","validateNewUser","ISVALID","ISVALID_SUCCESS","ISVALID_FAILURE","verifyPlan","accessToken","vrfplan","VERIFYPLAN","VERIFYPLAN_SUCCESS","VERIFYPLAN_FAILURE","getCurrencyList","CURRENCYLIST","CURRENCYLIST_SUCCESS","CURRENCYLIST_FAILURE","COUNTRYLIST","COUNTRYLIST_SUCCESS","COUNTRYLIST_FAILURE"],"mappings":"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","file":"static/js/64.7927a3de.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useMemo, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TemplateSwitch, TitleDetail, FieldView, FieldEdit, FieldSelect } from 'components';\r\nimport { getCorpSel, getPaymentPlanSel, getValuesFromDomain, getValuesFromDomainCorp, insCorp } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCollection, execute, getMultiCollection, resetAllMain } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { CommonService } from 'network';\r\nimport { getCountryList } from 'store/signup/actions';\r\nimport paths from 'common/constants/paths';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n}));\r\n\r\nconst Corporations: FC = () => {\r\n    const history = useHistory();\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const arrayBread = [\r\n        { id: \"view-0\", name: t(langKeys.configuration_plural) },\r\n        { id: \"view-1\", name: t(langKeys.corporation_plural) },\r\n    ];\r\n    const [mainData, setMainData] = useState<any>([]);\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'corpid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.corporation),\r\n                accessor: 'description',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.type),\r\n                accessor: 'typedesc',\r\n                NoFilter: true,\r\n                // Cell: (props: any) => {\r\n                //     const { type } = props.cell.row.original;\r\n                //     return (t(`type_corp_${type}`.toLowerCase()) || \"\").toUpperCase()\r\n                // }\r\n            },\r\n            {\r\n                Header: t(langKeys.billingplan),\r\n                accessor: 'paymentplandesc',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'statusdesc',\r\n                NoFilter: true,\r\n                // prefixTranslation: 'status_',\r\n                // Cell: (props: any) => {\r\n                //     const { status } = props.cell.row.original;\r\n                //     return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                // }\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getCorpSel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getCountryList())\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"ESTADOGENERICO\"),\r\n            getValuesFromDomain(\"TIPOCORP\"),\r\n            getPaymentPlanSel(),\r\n            getValuesFromDomainCorp('BILLINGDOCUMENTTYPE', '_DOCUMENT', 1, 0),\r\n            getValuesFromDomain(\"TYPECREDIT\"),\r\n            getValuesFromDomain(\"TYPEPARTNER\"),\r\n        ]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.corporation_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    useEffect(() => {\r\n        setMainData(mainResult.mainData.data.map(x => ({\r\n            ...x,\r\n            typedesc: (t(`type_corp_${x.type}`.toLowerCase()) || \"\").toUpperCase(),\r\n            statusdesc: (t(`status_${x.status}`.toLowerCase()) || \"\").toUpperCase()\r\n        })))\r\n    }, [mainResult.mainData.data])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insCorp({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.corpid })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n    function redirectFunc(view: string) {\r\n        if (view === \"view-0\") {\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={redirectFunc}\r\n                    />\r\n                </div>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.corporation_plural, { count: 2 })}\r\n                    onClickRow={handleEdit}\r\n                    data={mainData}\r\n                    ButtonsElement={() => (\r\n                        <Button\r\n                            disabled={mainResult.mainData.loading}\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => history.push(paths.CONFIGURATION)}\r\n                        >{t(langKeys.back)}</Button>\r\n                    )}\r\n                    download={true}\r\n                    loading={mainResult.mainData.loading}\r\n                    register={['SUPERADMIN'].includes(user?.roledesc || \"\")}\r\n                    handleRegister={handleRegister}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailCorporation\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\ninterface DetailCorporationProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n    arrayBread: any;\r\n}\r\n\r\nconst DetailCorporation: React.FC<DetailCorporationProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData, arrayBread }) => {\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [billbyorg, setbillbyorg] = useState(row?.billbyorg || false);\r\n    const [doctype, setdoctype] = useState(row?.doctype || ((row?.sunatcountry) === \"PE\" ? \"1\" : \"0\"))\r\n    const dataDocType = multiData[3] && multiData[3].success ? multiData[3].data : [];\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const dataStatus = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const dataType = multiData[1] && multiData[1].success ? multiData[1].data : [];\r\n    const dataPaymentPlan = multiData[2] && multiData[2].success ? multiData[2].data : [];\r\n    const countryList = useSelector(state => state.signup.countryList);\r\n    const typeofcreditList = multiData[4] && multiData[4].success ? multiData[4].data : [];\r\n    const partnerType = multiData[5] && multiData[5].success ? multiData[5].data : [];\r\n\r\n    const { register, handleSubmit, setValue, trigger, getValues, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            id: row ? row.corpid : 0,\r\n            description: row ? (row.description || '') : '',\r\n            type: row ? row.type : 'NINGUNO',\r\n            status: row?.status || 'ACTIVO',\r\n            logo: row ? row.logo : '',\r\n            logotype: row ? row.logotype : '',\r\n            paymentplanid: row?.paymentplanid || 0,\r\n            billbyorg: row?.billbyorg || false,\r\n            doctype: row?.doctype || '',\r\n            docnum: row?.docnum || '',\r\n            businessname: row?.businessname || '',\r\n            fiscaladdress: row?.fiscaladdress || '',\r\n            sunatcountry: row?.sunatcountry || '',\r\n            contactemail: row?.contactemail || '',\r\n            automaticpayment: row?.automaticpayment || false,\r\n            automaticperiod: row?.automaticperiod || false,\r\n            automaticinvoice: row?.automaticinvoice || false,\r\n            contact: row?.contact || '',\r\n            autosendinvoice: row?.autosendinvoice || false,\r\n            credittype: row?.credittype || \"typecredit_alcontado\",\r\n            operation: row ? \"UPDATE\" : \"INSERT\",\r\n            paymentmethod: row?.paymentmethod || \"\",\r\n            companysize: null,\r\n            partner: row?.partner || \"\",\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        const docTypeValidate = (docnum: string): string | undefined => {\r\n            if (!docnum) {\r\n                return t(langKeys.field_required);\r\n            }\r\n\r\n            let msg = \"\";\r\n            switch (doctype) {\r\n                case \"0\": // OTROS o NO DOMICILIARIO\r\n                    msg = t(langKeys.doctype_others_non_home_error);\r\n                    return docnum.length > 15 ? msg : undefined;\r\n                case \"1\": // DNI\r\n                    msg = t(langKeys.doctype_dni_error);\r\n                    return docnum.length !== 8 ? msg : undefined;\r\n                case \"4\": // CARNET DE EXTRANJERIA\r\n                    msg = t(langKeys.doctype_foreigners_card);\r\n                    return docnum.length > 12 ? msg : undefined;\r\n                case \"6\": // REG. UNICO DE CONTRIBUYENTES\r\n                    msg = t(langKeys.doctype_ruc_error);\r\n                    return docnum.length !== 11 ? msg : undefined;\r\n                case \"7\": // PASAPORTE\r\n                    msg = t(langKeys.doctype_passport_error);\r\n                    return docnum.length > 12 ? msg : undefined;\r\n                case \"11\": // PART. DE NACIMIENTO-IDENTIDAD\r\n                default: return t(langKeys.doctype_unknown_error);\r\n            }\r\n        }\r\n        register('description', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('type', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('doctype', { validate: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('docnum', { validate: (value) => !billbyorg ? docTypeValidate(value) : true });\r\n        register('businessname', { validate: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('fiscaladdress', { validate: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('contact', { validate: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('contactemail', {\r\n            validate: {\r\n                hasvalue: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true,\r\n                isemail: (value) => !billbyorg ? ((/\\S+@\\S+\\.\\S+/.test(value)) || t(langKeys.emailverification) + \"\") : true\r\n            }\r\n        });\r\n        register('sunatcountry', { validate: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('credittype', { validate: (value) => !billbyorg ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('paymentmethod', { validate: (value) => user?.roledesc === \"SUPERADMIN\" ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('paymentplanid', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('automaticpayment');\r\n        register('automaticperiod');\r\n        register('automaticinvoice');\r\n        register('partner');\r\n    }, [register, billbyorg, doctype, getValues, t]);\r\n\r\n    useEffect(() => {\r\n    }, [executeRes, waitSave])\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.corporation_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = async () => {\r\n            dispatch(showBackdrop(true));\r\n            if (typeof data.logo === 'object' && !!data.logo) {\r\n                const fd = new FormData();\r\n                fd.append('file', data.logo, data.logo.name);\r\n                data.logo = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n            }\r\n            if (typeof data.logotype === 'object' && !!data.logotype) {\r\n                const fd = new FormData();\r\n                fd.append('file', data.logotype, data.logotype.name);\r\n                data.logotype = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n            }\r\n            if (data.billbyorg) {\r\n                data = {\r\n                    ...data,\r\n                    doctype: \"\",\r\n                    docnum: \"\",\r\n                    businessname: \"\",\r\n                    fiscaladdress: \"\",\r\n                    contact: \"\",\r\n                    contactemail: \"\",\r\n                    sunatcountry: \"\",\r\n                    autosendinvoice: false,\r\n                    automaticpayment: false,\r\n                    automaticperiod: true,\r\n                    automaticinvoice: true,\r\n                }\r\n            }\r\n            setWaitSave(true)\r\n            dispatch(execute(insCorp(data)));\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    const countries = useMemo(() => {\r\n        if (countryList.loading) return [];\r\n        return countryList.data.sort((a, b) => {\r\n            return a.description.localeCompare(b.description);\r\n        });\r\n    }, [countryList]);\r\n\r\n    const docTypes = useMemo(() => {\r\n        if (!dataDocType || dataDocType.length === 0) return [];\r\n\r\n        let val: { domaindesc: string }[];\r\n        if (getValues(\"sunatcountry\") === \"PE\") {\r\n            // FILTRAR NO DOMICILIARIO // OTROS\r\n            val = dataDocType.filter(x => x.domainvalue !== \"0\") as any[];\r\n        } else {\r\n            val = dataDocType as any[];\r\n        }\r\n\r\n        return val.sort((a, b) => {\r\n            return a.domaindesc.localeCompare(b.domaindesc);\r\n        });\r\n    }, [dataDocType, getValues(\"sunatcountry\")]);\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread, { id: \"view-2\", name: t(langKeys.corporationdetail) }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.description}` : t(langKeys.newcorporation)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        {edit &&\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                startIcon={<SaveIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >{t(langKeys.save)}\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.corporation)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('description')}\r\n                                onChange={(value) => setValue('description', value)}\r\n                                error={errors?.description?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.corporation)}\r\n                                value={row?.description}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                label={t(langKeys.type)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('type')}\r\n                                onChange={(value) => setValue('type', value?.domainvalue)}\r\n                                error={errors?.type?.message}\r\n                                data={dataType}\r\n                                uset={true}\r\n                                prefixTranslation=\"type_corp_\"\r\n                                optionDesc=\"domainvalue\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.type)}\r\n                                value={row?.type || \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldSelect\r\n                            label={t(langKeys.status)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues('status')}\r\n                            onChange={(value) => setValue('status', value?.domainvalue)}\r\n                            error={errors?.status?.message}\r\n                            data={dataStatus}\r\n                            uset={true}\r\n                            prefixTranslation=\"status_\"\r\n                            optionDesc=\"domainvalue\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.partner)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"partner\")}\r\n                            onChange={(value) => setValue('partner', value?.domainvalue || \"\")}\r\n                            data={partnerType}\r\n                            error={errors?.partner?.message}\r\n                            optionDesc=\"domainvalue\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <TemplateSwitch\r\n                            label={t(langKeys.billbyorg)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues('billbyorg')}\r\n                            onChange={(value) => {\r\n                                setValue('billbyorg', value);\r\n                                setbillbyorg(value);\r\n                                trigger('billbyorg');\r\n                            }}\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.billingplan)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"paymentplanid\")}\r\n                            onChange={(value) => setValue('paymentplanid', value?.paymentplanid || 0)}\r\n                            data={dataPaymentPlan}\r\n                            error={errors?.paymentplanid?.message}\r\n                            optionDesc=\"plan\"\r\n                            optionValue=\"paymentplanid\"\r\n                        />\r\n                    </div>\r\n                    {user?.roledesc === \"SUPERADMIN\" && <div className=\"row-zyx\">\r\n                        <FieldSelect\r\n                            label={t(langKeys.paymentmethod)}\r\n                            className=\"col-12\"\r\n                            valueDefault={getValues(\"paymentmethod\")}\r\n                            onChange={(value) => setValue('paymentmethod', value?.value || \"\")}\r\n                            data={[{ name: t(langKeys.prepaid), value: \"PREPAGO\" }, { name: t(langKeys.postpaid), value: \"POSTPAGO\" }]}\r\n                            error={errors?.paymentmethod?.message}\r\n                            optionDesc=\"name\"\r\n                            optionValue=\"value\"\r\n                        />\r\n                    </div>}\r\n                    {!getValues('billbyorg') && (\r\n                        <>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldSelect\r\n                                    label={t(langKeys.country)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues(\"sunatcountry\")}\r\n                                    onChange={(value) => {\r\n                                        setValue(\"sunatcountry\", value?.code || \"\");\r\n\r\n                                        setValue(\"doctype\", value?.code === \"PE\" ? \"1\" : \"0\");\r\n                                        setdoctype(value?.code === \"PE\" ? \"1\" : \"0\");\r\n                                    }}\r\n                                    error={errors?.sunatcountry?.message}\r\n                                    data={countries}\r\n                                    optionDesc=\"description\"\r\n                                    optionValue=\"code\"\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.fiscaladdress)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('fiscaladdress')}\r\n                                    onChange={(value) => setValue('fiscaladdress', value)}\r\n                                    error={errors?.fiscaladdress?.message}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldSelect\r\n                                    uset={true}\r\n                                    prefixTranslation='billingfield_'\r\n                                    label={t(langKeys.docType)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={doctype}\r\n                                    disabled={getValues(\"sunatcountry\") !== \"PE\"}\r\n                                    onChange={(value) => {\r\n                                        setValue(\"doctype\", value?.domainvalue || \"\");\r\n                                        setdoctype(value?.domainvalue || \"\");\r\n                                    }}\r\n                                    error={errors?.doctype?.message}\r\n                                    data={docTypes}\r\n                                    optionDesc=\"domaindesc\"\r\n                                    optionValue=\"domainvalue\"\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.documentnumber)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('docnum')}\r\n                                    onChange={(value) => setValue('docnum', value)}\r\n                                    error={errors?.docnum?.message}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                    label={t(langKeys.businessname)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('businessname')}\r\n                                    onChange={(value) => setValue('businessname', value)}\r\n                                    error={errors?.businessname?.message}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                    label={t(langKeys.contactbilling)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('contact')}\r\n                                    onChange={(value) => setValue('contact', value)}\r\n                                    error={errors?.contact?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.billingmail)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('contactemail')}\r\n                                    onChange={(value) => setValue('contactemail', value)}\r\n                                    error={errors?.contactemail?.message}\r\n                                />\r\n                            </div>\r\n                            {user?.roledesc === \"SUPERADMIN\" &&\r\n                                <>\r\n                                    <div className=\"row-zyx\">\r\n                                        <FieldSelect\r\n                                            label={t(langKeys.typecredit)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues(\"credittype\")}\r\n                                            onChange={(value) => { setValue(\"credittype\", value?.domainvalue || \"\"); }}\r\n                                            error={errors?.credittype?.message}\r\n                                            disabled={user?.roledesc !== \"SUPERADMIN\"}\r\n                                            data={typeofcreditList}\r\n                                            uset={true}\r\n                                            optionDesc=\"domainvalue\"\r\n                                            optionValue=\"domainvalue\"\r\n                                        />\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.autosendinvoice)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('autosendinvoice')}\r\n                                            onChange={(value) => setValue('autosendinvoice', value)}\r\n                                            disabled={user?.roledesc !== \"SUPERADMIN\"}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"row-zyx\">\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.automaticpayment)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('automaticpayment')}\r\n                                            onChange={(value) => setValue('automaticpayment', value)}\r\n                                            disabled={user?.roledesc !== \"SUPERADMIN\"}\r\n                                        />\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.automaticperiod)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('automaticperiod')}\r\n                                            onChange={(value) => setValue('automaticperiod', value)}\r\n                                            disabled={user?.roledesc !== \"SUPERADMIN\"}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"row-zyx\">\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.automaticinvoice)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('automaticinvoice')}\r\n                                            onChange={(value) => setValue('automaticinvoice', value)}\r\n                                            disabled={user?.roledesc !== \"SUPERADMIN\"}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )}\r\n                    {/* <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldUploadImage\r\n                                label={t(langKeys.logo)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row?.logo}\r\n                                onChange={onChangeLogo}\r\n                            />\r\n                            :\r\n                            <img src={row?.logo} alt={row?.logo} />\r\n                        }\r\n                        {edit ?\r\n                            <FieldUploadImage\r\n                                label={t(langKeys.logotype)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row?.logotype}\r\n                                onChange={onChangeLogotype}\r\n                            />\r\n                            :\r\n                            <img src={row?.logotype} alt={row?.logotype} />\r\n                        }\r\n                    </div> */}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Corporations;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","import { IActionCall, IRequestBody } from \"@types\";\r\nimport { ChannelsService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.PAGELIST,\r\n        success: actionTypes.PAGELIST_SUCCESS,\r\n        failure: actionTypes.PAGELIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeSubscription = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.execSub(requestBody),\r\n    types: {\r\n        loading: actionTypes.SIGNUP,\r\n        success: actionTypes.SIGNUP_SUCCESS,\r\n        failure: actionTypes.SIGNUP_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const validatechannels = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.valChannels(requestBody),\r\n    types: {\r\n        loading: actionTypes.VALCHANNELS,\r\n        success: actionTypes.VALCHANNELS_SUCCESS,\r\n        failure: actionTypes.VALCHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeCheckNewUser = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.validateNewUser(requestBody),\r\n    types: {\r\n        loading: actionTypes.ISVALID,\r\n        success: actionTypes.ISVALID_SUCCESS,\r\n        failure: actionTypes.ISVALID_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const verifyPlan = (accessToken: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.vrfplan(accessToken),\r\n    types: {\r\n        loading: actionTypes.VERIFYPLAN,\r\n        success: actionTypes.VERIFYPLAN_SUCCESS,\r\n        failure: actionTypes.VERIFYPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsListSub = (): IActionCall => ({type: actionTypes.PAGELIST_RESET});\r\n\r\nexport const getCurrencyList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCurrencyList(),\r\n    types: {\r\n        loading: actionTypes.CURRENCYLIST,\r\n        success: actionTypes.CURRENCYLIST_SUCCESS,\r\n        failure: actionTypes.CURRENCYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getCountryList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCountryList(),\r\n    types: {\r\n        loading: actionTypes.COUNTRYLIST,\r\n        success: actionTypes.COUNTRYLIST_SUCCESS,\r\n        failure: actionTypes.COUNTRYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});"],"sourceRoot":""}