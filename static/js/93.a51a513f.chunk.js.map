{"version":3,"sources":["pages/BotDesigner.tsx","store/botdesigner/actions.ts"],"names":["origin","URL","apiUrls","CHATFLOW","pathname","url","BotDesigner","dispatch","useDispatch","history","useHistory","useEffect","window","addEventListener","event","data","chatblock","chatblock_set","push","paths","VARIABLECONFIGURATION","receiveCrossDomainMessage","useState","frame","setFrame","msg","win","document","getElementById","contentWindow","postMessage","postCrossDomainMessage","localStorage","getItem","style","width","height","position","zIndex","color","open","id","title","src","border","onLoad","payload","type","actionTypes","CHATBLOCK_SET","chatblock_reset","CHATBLOCK_RESET"],"mappings":"sNAUMA,EAAS,IAAIC,IAAIC,IAAQC,UAAUH,OACnCI,EAAW,IAAIH,IAAIC,IAAQC,UAAUC,SACrCC,EAAG,UAAML,GAAM,OAAGI,GAoDTE,UAlDS,WACpB,IAAMC,EAAWC,cACXC,EAAUC,cAWhBC,qBAAU,WACNC,OAAOC,iBAAiB,WAAW,SAACC,GAAK,OAVX,SAACA,GACA,IAAD,GAArB,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOd,UAAWA,IACT,OAALc,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOC,YAAI,WAAN,EAAL,EAAaC,aACbT,EAASU,YAAcH,EAAMC,KAAKC,YAClCP,EAAQS,KAAKC,IAAMC,wBAMmBC,CAA0BP,QACzE,IAEH,IAMA,EAA0BQ,oBAAS,GAAM,mBAAlCC,EAAK,KAAEC,EAAQ,KAQtB,OANAb,qBAAU,WACFY,GATuB,SAACE,GAAc,IAAD,EACrCC,EAAmB,QAAX,EAAGC,gBAAQ,aAAR,EAAUC,eAAe,OACrC,OAAHF,QAAG,IAAHA,KAAKG,cAAcC,YAAY,CAAE,IAAOL,GAAOzB,GAQ3C+B,CAAuBC,aAAaC,QAAQ,kBAEjD,CAACV,IAGA,sBAAKW,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,SAAU,YAAa,UAChE,cAAC,IAAQ,CAACH,MAAO,CAAEI,OAAQ,UAAWC,MAAO,OAAQF,SAAU,YAAcG,MAAOjB,EAAM,SACtF,cAAC,IAAgB,CAACgB,MAAM,cAE5B,wBACIE,GAAG,MACHC,MAAM,cACNC,IAAKtC,EACL6B,MAAO,CAAEE,OAAQ,OAAQD,MAAO,OAAQS,OAAQ,QAChDC,OAAQ,WACJrB,GAAS,W,iCCvD7B,iFAEaP,EAAgB,SAACF,GAAS,MAAmB,CACtD+B,QAAS/B,EACTgC,KAAMC,IAAYC,gBAGTC,EAAkB,WAAH,MAAuB,CAACH,KAAMC,IAAYG","file":"static/js/93.a51a513f.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useDispatch } from 'react-redux';\r\nimport { chatblock_set } from 'store/botdesigner/actions';\r\nimport { useHistory } from 'react-router-dom'\r\nimport paths from 'common/constants/paths';\r\nimport { apiUrls } from 'common/constants';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst origin = new URL(apiUrls.CHATFLOW).origin;\r\nconst pathname = new URL(apiUrls.CHATFLOW).pathname\r\nconst url = `${origin}${pathname}`;\r\n\r\nconst BotDesigner: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const receiveCrossDomainMessage = (event: any) => {\r\n        if (event?.origin === origin) {\r\n            if (event?.data?.chatblock) {\r\n                dispatch(chatblock_set(event.data.chatblock));\r\n                history.push(paths.VARIABLECONFIGURATION);\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('message', (event) => receiveCrossDomainMessage(event));\r\n    }, [])\r\n\r\n    const postCrossDomainMessage = (msg: any) => {\r\n        var win: any = document?.getElementById('ifr');\r\n        win?.contentWindow.postMessage({ 'jwt': msg }, origin);\r\n        return undefined;\r\n    }\r\n\r\n    const [frame, setFrame] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (frame) {\r\n            postCrossDomainMessage(localStorage.getItem('accessToken'));\r\n        }\r\n    }, [frame])\r\n\r\n    return (\r\n        <div style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            <Backdrop style={{ zIndex: 999999999, color: '#fff', position: 'absolute' }} open={!frame}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <iframe\r\n                id=\"ifr\"\r\n                title='botdesigner'\r\n                src={url}\r\n                style={{ height: '100%', width: '100%', border: 'none' }}\r\n                onLoad={() => {\r\n                    setFrame(true);\r\n                }}\r\n            >\r\n            </iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BotDesigner;","import { IActionCall } from \"@types\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const chatblock_set = (data: any): IActionCall => ({\r\n    payload: data,\r\n    type: actionTypes.CHATBLOCK_SET\r\n});\r\n\r\nexport const chatblock_reset = (): IActionCall => ({type: actionTypes.CHATBLOCK_RESET});"],"sourceRoot":""}