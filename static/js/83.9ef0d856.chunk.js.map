{"version":3,"sources":["pages/Users.tsx","store/person/actions.ts","store/activationuser/actions.ts"],"names":["useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","mb2","marginBottom","title","fontSize","color","palette","text","primary","button","fontWeight","textTransform","paswordCondition","textAlign","badge","paddingRight","paddingLeft","borderRadius","display","lineHeight","whiteSpace","verticalAlign","marginLeft","badgeSuccess","backgroundColor","badgeFailure","ListItemSkeleton","style","paddingBottom","flexDirection","flexGrow","container","direction","item","sm","xl","xs","md","lg","margin","DetailOrgUser","index","data","row","multiData","edit","updateRecords","preData","triggerSave","setAllIndex","handleDelete","classes","dispatch","useDispatch","t","useTranslation","resFromOrg","useSelector","state","main","multiDataAux","dataRoles","success","dataOrganizationsTmp","useState","loading","dataOrganizations","setDataOrganizations","dataSupervisors","setDataSupervisors","dataChannels","setDataChannels","dataGroups","setDataGroups","dataApplications","setDataApplications","useForm","register","handleSubmit","setValue","getValues","trigger","errors","formState","reset","updatefield","field","value","p","itmp","useEffect","a","allOk","operation","id","indexSupervisor","findIndex","x","key","indexChannels","indexGroups","indexApplications","tempdata","map","description","toLowerCase","toUpperCase","sort","b","orgid","length","roleid","roledesc","orgdesc","supervisordesc","channelsdesc","supervisor","type","channels","redirect","groups","labels","status","bydefault","validate","langKeys","field_required","filter","some","y","getMultiCollectionAux","getApplicationsByRole","onSubmit","defaultExpanded","expandIcon","neworganization","width","className","label","organization","valueDefault","onChange","getSupervisors","getChannelsByOrg","getValuesFromDomain","triggerOnChangeOnFirst","error","message","optionDesc","optionValue","role","roldesc","channel","o","communicationchannelid","join","default_organization","usr","userdesc","default_application","path","group","domainvalue","variant","startIcon","onClick","delete","ModalPassword","openModal","setOpenModal","parentSetValue","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","securityRules","samepassword","password","mincharacters","mincharacterspwd","maxcharacters","maxcharacterspwd","consecutivecharacters","validateNumbersEqualsConsecutive","numequalconsecutivecharacterspwd","lowercaseletters","validateDomainCharacters","lowercaseletterspwd","uppercaseletters","uppercaseletterspwd","numbers","numericalcharacterspwd","specialcharacters","validateDomainCharactersSpecials","specialcharacterspwd","passwordConditions","setpasswordConditions","dataFieldSelect","name","defaultValues","confirmpassword","generate_password","send_password_by_email","change_password_on_login","clearErrors","pwdchangefirstlogin","onSubmitPassword","Object","values","reduce","acc","showSnackbar","show","severity","invalid_password","open","setpassword","buttonText1","cancel","buttonText2","save","handleClickButton1","handleClickButton2","rndPassword","randomText","InputProps","endAdornment","position","edge","passwordCond1","clsx","yes","no","passwordCond2","passwordCond3","allowsconsecutivenumbers","passwordCond4","passwordCond7","passwordCond8","passwordCond9","passwordCond5","passwordCond6","DetailUsers","setViewSelected","fetchData","arrayBread","waitSave","setWaitSave","executeRes","activationuser","saveUser","detailRes","mainAux","orgsToDelete","setOrgsToDelete","openDialogStatus","setOpenDialogStatus","openDialogPassword","setOpenDialogPassword","setTriggerSave","dataStatus","dataDocType","dataCompanies","dataBillingGroups","dataStatusUsers","allIndex","getOrganizations","setGetOrganizations","waitUploadFile","setWaitUploadFile","uploadResult","uploadFile","filterDataOrg","i","url","userid","firstname","lastname","email","doctype","docnum","company","billinggroupid","registercode","twofactorauthentication","image","errormessage","code","module","user","toLocaleLowerCase","showBackdrop","successful_edit","successful_register","emailRequired","test","emailverification","React","needsvalidation","dnivalidation","doctype_dni_error","cevalidation","doctype_foreigners_card","rucvalidation","doctype_ruc_error","resetMainAux","getCollectionAux","getOrgUserSel","organization_by_default","manageConfirmation","visible","question","confirmation_save","callback","header","insUser","language","currentlanguage","detail","insOrgUser","password_required","justifyContent","breadcrumbs","handleClick","newuser","gap","alignItems","back","changePassword","height","src","accept","e","files","selectedFile","fd","FormData","append","onSelectImage","target","htmlFor","bottom","right","cursor","docType","docNumber","billingGroup","domainid","registerCode","uset","prefixTranslation","organization_permissions","disabled","Users","history","useHistory","mainResult","mainData","mainMultiResult","deleteResult","delUser","dataUsers","setdataUsers","dataChannelsTemp","setdataChannelsTemp","waitImport","setWaitImport","waitChanges","setwaitChanges","domains","person","editableDomains","login","validateToken","viewSelected","rowSelected","setRowSelected","waitCheck","setWaitCheck","setOperation","fileToUpload","setFileToUpload","mainAuxResult","messageError","setMessageError","importCount","setImportCount","configuration_plural","user_plural","redirectFunc","view","push","paths","CONFIGURATION","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","extraOption","duplicate","deleteFunction","editFunction","handleEdit","extraFunction","handleDuplicate","ExtraICon","fill","Header","attention_group","handleTemplate","d","domaindesc","docTypes","billinggroups","genericstatus","userstatus","roles","usergroup","exportExcel","template","import","templateMaker","handleTemplateDrop","dropusers","getCollection","getUserSel","getDomainsByTypename","getMultiCollection","getOrgsByCorp","getRolesByOrg","getSecurityRules","resetAllMain","newcount","successful_transaction","successful_delete","handleUpload","useravailable","limit","file","uploadExcel","undefined","excel","datainit","array_trimmer","f","keys","includes","billinggroup","messageerrors","error_estructure_user","userlimit","table","String","Boolean","slice","forEach","handleDropUsers","Number","username","no_records_valid","confirmation_delete","checkLimit","checkUserPaymentPlan","usernumber","userscontracted","titlemodule","count","download","hoverShadow","handleRegister","importCSV","onClickRow","ButtonsElement","component","i18nKey","getPersonListPaginated","payload","callAPI","CommonService","mainPaginated","types","actionTypes","GET_PERSON_LIST","failure","GET_PERSON_LIST_FAILURE","GET_PERSON_LIST_SUCCESS","resetGetPersonListPaginated","GET_PERSON_LIST_RESET","getPersonLinkListPaginated","GET_PERSON_LINK","GET_PERSON_LINK_FAILURE","GET_PERSON_LINK_SUCCESS","getTicketListByPerson","GET_TICKET_LIST_BY_PERSON","GET_TICKET_LIST_BY_PERSON_FAILURE","GET_TICKET_LIST_BY_PERSON_SUCCESS","resetGetTicketListByPerson","GET_TICKET_LIST_BY_PERSON_RESET","getReferrerListByPerson","GET_REFERRER_LIST_BY_PERSON","GET_REFERRER_LIST_BY_PERSON_FAILURE","GET_REFERRER_LIST_BY_PERSON_SUCCESS","resetGetReferrerListByPerson","GET_REFERRER_LIST_BY_PERSON_RESET","getChannelListByPerson","GET_CHANNEL_LIST_BY_PERSON","GET_CHANNEL_LIST_BY_PERSON_FAILURE","GET_CHANNEL_LIST_BY_PERSON_SUCCESS","resetGetChannelListByPerson","GET_CHANNEL_LIST_BY_PERSON_RESET","getLeadsByPerson","PersonService","GET_LEAD_LIST_BY_PERSON","GET_LEAD_LIST_BY_PERSON_FAILURE","GET_LEAD_LIST_BY_PERSON_SUCCESS","resetGetLeadsByPerson","GET_LEAD_LIST_BY_PERSON_RESET","multiMain","adviserSel","getMessageTemplateLst","getCommChannelLst","getPropertySelByName","GET_DOMAINS_BY_TYPENAME","GET_DOMAINS_BY_TYPENAME_FAILURE","GET_DOMAINS_BY_TYPENAME_SUCCESS","resetGetDomainsByTypename","GET_DOMAINS_BY_TYPENAME_RESET","editPerson","insert","EDIT_PERSON","EDIT_PERSON_FAILURE","EDIT_PERSON_SUCCESS","resetEditPerson","EDIT_PERSON_RESET","sendActivation","token","ActivationUserService","postActivationUser","ACTIVATIONUSER_SEND","ACTIVATIONUSER_SUCCESS","ACTIVATIONUSER_FAILURE","requestBody","postSaveUser","EXECUTE_MAIN","EXECUTE_MAIN_SUCCESS","EXECUTE_MAIN_FAILURE","DELUSER_SEND","DELUSER_SUCCESS","DELUSER_FAILURE"],"mappings":"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","file":"static/js/83.9ef0d856.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DialogZyx, TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldEdit, FieldSelect, FieldMultiSelect, TemplateSwitch, TemplateSwitchYesNo } from 'components';\r\nimport { getOrgUserSel, getUserSel, getValuesFromDomain, getOrgsByCorp, getRolesByOrg, getSupervisors, getChannelsByOrg, getApplicationsByRole, insUser, insOrgUser, randomText, templateMaker, exportExcel, uploadExcel, array_trimmer, checkUserPaymentPlan, getSecurityRules, validateNumbersEqualsConsecutive, validateDomainCharacters, validateDomainCharactersSpecials } from 'common/helpers';\r\nimport { getDomainsByTypename } from 'store/person/actions';\r\nimport { Dictionary, MultiData } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { uploadFile } from 'store/main/actions';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport clsx from 'clsx';\r\nimport {\r\n    getCollection, resetAllMain, getMultiCollection,\r\n    getCollectionAux, resetMainAux, getMultiCollectionAux\r\n} from 'store/main/actions';\r\nimport { saveUser, delUser } from 'store/activationuser/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider, Grid, ListItem, Box, IconButton } from '@material-ui/core';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { DuplicateIcon } from 'icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport paths from 'common/constants/paths';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\n\r\ninterface DetailProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData?: () => void;\r\n    arrayBread: any;\r\n}\r\ninterface ModalProps {\r\n    data: RowSelected;\r\n    multiData: MultiData[];\r\n    preData: (Dictionary | null)[]; //ORGANIZATIONS\r\n    openModal?: boolean;\r\n    setOpenModal?: (open: boolean) => void;\r\n    updateRecords?: (record: any) => void; //SETDATAORGANIZATION\r\n    triggerSave?: boolean;\r\n    index: number;\r\n    setAllIndex: (index: any) => void;\r\n    handleDelete: (row: Dictionary | null, index: number) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        // maxWidth: '80%',\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    mb2: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    paswordCondition: {\r\n        textAlign: 'center'\r\n    },\r\n    badge: {\r\n        paddingRight: \"0.6em\",\r\n        paddingLeft: \"0.6em\",\r\n        borderRadius: \"10rem\",        \r\n        display: \"inline-block\",\r\n        padding: \"0.25em 0.4em\",\r\n        fontSize: \"75%\",\r\n        fontWeight: \"bold\",\r\n        lineHeight: \"1\",\r\n        textAlign: \"center\",\r\n        whiteSpace: \"nowrap\",\r\n        verticalAlign: \"baseline\",\r\n        marginLeft: \"10px\"\r\n    },\r\n    badgeSuccess: {\r\n        color: \"#fff\",\r\n        backgroundColor: \"#28a745\",\r\n    },\r\n    badgeFailure: {\r\n        color: \"#fff\",\r\n        backgroundColor: \"#fb5f5f\",\r\n    },\r\n}));\r\nconst ListItemSkeleton: FC = () => (\r\n    <ListItem style={{ display: 'flex', paddingLeft: 0, paddingRight: 0, paddingBottom: 8 }}>\r\n        <Box style={{ padding: 20, backgroundColor: 'white', display: 'flex', flexDirection: 'column', flexGrow: 1, }}>\r\n            <Grid container direction=\"column\">\r\n                <Grid container direction=\"row\" spacing={1}>\r\n                    <Grid item sm={12} xl={12} xs={12} md={12} lg={12}>\r\n                        <Skeleton />\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider style={{ margin: '10px 0' }} />\r\n                <Grid container direction=\"row\" spacing={1}>\r\n                    <Grid item sm={12} xl={12} xs={12} md={12} lg={12}>\r\n                        <Skeleton />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    </ListItem>\r\n)\r\n\r\nconst DetailOrgUser: React.FC<ModalProps> = ({ index, data: { row, edit }, multiData, updateRecords, preData, triggerSave, setAllIndex, handleDelete }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const resFromOrg = useSelector(state => state.main.multiDataAux);\r\n\r\n    // const dataTypeUser = multiData[5] && multiData[5].success ? multiData[5].data : [];\r\n    // const dataGroups = multiData[6] && multiData[6].success ? multiData[6].data : [];\r\n    const dataRoles = multiData[9] && multiData[9].success ? multiData[9].data : [];\r\n    const dataOrganizationsTmp = multiData[8] && multiData[8].success ? multiData[8].data : []\r\n\r\n    const [dataOrganizations, setDataOrganizations] = useState<{ loading: boolean; data: Dictionary[] }>({ loading: false, data: [] })\r\n    const [dataSupervisors, setDataSupervisors] = useState<{ loading: boolean; data: Dictionary[] }>({ loading: false, data: [] });\r\n    const [dataChannels, setDataChannels] = useState<{ loading: boolean; data: Dictionary[] }>({ loading: false, data: [] });\r\n    const [dataGroups, setDataGroups] = useState<{ loading: boolean; data: Dictionary[] }>({ loading: false, data: [] });\r\n    const [dataApplications, setDataApplications] = useState<{ loading: boolean; data: Dictionary[] }>({ loading: false, data: [] });\r\n\r\n    const { register, handleSubmit, setValue, getValues, trigger, formState: { errors }, reset } = useForm();\r\n\r\n    useEffect(() => {\r\n        if (triggerSave) {\r\n            (async () => {\r\n                const allOk = await trigger(); //para q valide el formulario\r\n                const data = getValues();\r\n                if (allOk) {\r\n                    updateRecords && updateRecords((p: Dictionary[], itmp: number) => {\r\n                        p[index] = { ...data, operation: (p[index].id === 0 || p[index].operation ===\"INSERT\") ? \"INSERT\" : \"UPDATE\" }\r\n                        return p;\r\n                    })\r\n                }\r\n                setAllIndex((p: number[]) => [...p, { index, allOk }]);\r\n            })()\r\n        }\r\n    }, [triggerSave])\r\n\r\n    function updatefield(field: string, value: any) {\r\n        updateRecords && updateRecords((p: Dictionary[], itmp: number) => {\r\n            p[index] = { ...p[index], [field]: value }\r\n            return p;\r\n        })\r\n    }\r\n\r\n    useEffect(() => {//validar la respuesta y asignar la  data a supervisores y canales segun la organización q cambió\r\n        const indexSupervisor = resFromOrg.data.findIndex((x: MultiData) => x.key === (\"UFN_USER_SUPERVISOR_LST\" + (index + 1)));\r\n        const indexChannels = resFromOrg.data.findIndex((x: MultiData) => x.key === (\"UFN_COMMUNICATIONCHANNELBYORG_LST\" + (index + 1)));\r\n        const indexGroups = resFromOrg.data.findIndex((x: MultiData) => x.key === (`UFN_DOMAIN_LST_VALORES_GRUPOS${(index + 1)}`));\r\n        const indexApplications = resFromOrg.data.findIndex((x: MultiData) => x.key === (\"UFN_APPS_DATA_SEL\" + (index + 1)));\r\n\r\n        if (indexSupervisor > -1)\r\n            setDataSupervisors({ loading: false, data: resFromOrg.data[indexSupervisor] && resFromOrg.data[indexSupervisor].success ? resFromOrg.data[indexSupervisor].data : [] });\r\n\r\n        if (indexChannels > -1)\r\n            setDataChannels({ loading: false, data: resFromOrg.data[indexChannels] && resFromOrg.data[indexChannels].success ? resFromOrg.data[indexChannels].data : [] });\r\n\r\n        if (indexGroups > -1)\r\n            setDataGroups({ loading: false, data: resFromOrg.data[indexGroups] && resFromOrg.data[indexGroups].success ? resFromOrg.data[indexGroups].data : [] });\r\n\r\n        if (indexApplications > -1) {\r\n            let tempdata = resFromOrg.data[indexApplications] && resFromOrg.data[indexApplications].success ? resFromOrg.data[indexApplications].data.map(x => ({\r\n                ...x,\r\n                description: (t(`app_${x.description}`.toLowerCase()) || \"\").toUpperCase(),\r\n            })) : []\r\n            tempdata.sort(function (a, b) {\r\n                if (a.description < b.description) {\r\n                    return -1;\r\n                }\r\n                if (a.description > b.description) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n            setDataApplications({ loading: false, data: resFromOrg.data[indexApplications] && resFromOrg.data[indexApplications].success ? tempdata : [] });\r\n        }\r\n    }, [resFromOrg])\r\n\r\n    useEffect(() => {\r\n        //PARA MODALES SE DEBE RESETEAR EN EL EDITAR\r\n        reset({\r\n            orgid: row ? row.orgid : (dataOrganizationsTmp.length === 1 ? dataOrganizationsTmp[0].orgid : 0),\r\n            roleid: row ? row.roleid : 0,\r\n            roledesc: row ? row.roledesc : '', //for table\r\n            orgdesc: row ? row.orgdesc : '', //for table\r\n            supervisordesc: row ? row.supervisordesc : '', //for table\r\n            channelsdesc: row ? row.channelsdesc : '', //for table\r\n            supervisor: row ? row.supervisor : '',\r\n            type: row?.type || '',\r\n            channels: row?.channels || '',\r\n            redirect: row?.redirect || '',\r\n            groups: row?.groups || '',\r\n            labels: row?.labels || '',\r\n            status: 'DESCONECTADO',\r\n            bydefault: row?.bydefault || false,\r\n        })\r\n\r\n        register('orgid', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('roleid', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('supervisor');\r\n        // register('type', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('channels');\r\n        register('redirect', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('groups');\r\n        register('roledesc');\r\n        register('orgdesc');\r\n        register('supervisordesc');\r\n        register('channelsdesc');\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('labels');\r\n        register('bydefault');\r\n\r\n        setDataOrganizations({ loading: false, data: dataOrganizationsTmp.filter(x => x.orgid === row?.orgid || !preData.some(y => y?.orgid === x.orgid)) });\r\n\r\n        //forzar a que el select de aplicaciones renderice, por eso se desactivó el triggerOnChangeOnFirst en role\r\n        if (row && row.id !== 0) {\r\n            setDataApplications({ loading: true, data: [] });\r\n            dispatch(getMultiCollectionAux([\r\n                getApplicationsByRole(row.roleid, index + 1),\r\n            ]))\r\n        }\r\n    }, [preData])\r\n\r\n    const onSubmit = handleSubmit((data) => { //GUARDAR MODAL\r\n        if (!row)\r\n            updateRecords && updateRecords((p: Dictionary[]) => [...p, { ...data, operation: \"INSERT\" }])\r\n        else\r\n            updateRecords && updateRecords((p: Dictionary[]) => p.map(x => x.orgid === row ? { ...x, ...data, operation: (x.operation || \"UPDATE\") } : x))\r\n        // setOpenModal(false)\r\n    });\r\n\r\n    const onChangeOrganization = (value: Dictionary) => {\r\n        setValue('orgid', value?.orgid || 0);\r\n        setValue('orgdesc', value?.orgdesc || '');\r\n        updateRecords && updateRecords((p: Dictionary[], itmp: number) => {\r\n            p[index] = { ...p[index], orgid: value?.orgid || 0, orgdesc: value?.orgdesc || '' }\r\n            return p;\r\n        })\r\n        if (value) {\r\n            setDataSupervisors({ loading: true, data: [] });\r\n            setDataChannels({ loading: true, data: [] });\r\n            setDataGroups({ loading: true, data: [] });\r\n            dispatch(getMultiCollectionAux([\r\n                getSupervisors(value.orgid, 0, index + 1),\r\n                getChannelsByOrg(value.orgid, index + 1),\r\n                getValuesFromDomain(\"GRUPOS\", `_GRUPOS${index + 1}`, value.orgid)\r\n            ]))\r\n        } else {\r\n            setDataSupervisors({ loading: false, data: [] });\r\n            setDataChannels({ loading: false, data: [] });\r\n            setDataGroups({ loading: false, data: [] });\r\n        }\r\n    }\r\n\r\n    const onChangeRole = (value: Dictionary) => {\r\n        setValue('roleid', value ? value.roleid : 0);\r\n        setValue('roledesc', value ? value.roldesc : 0);\r\n        setValue('type', value ? value.type : 0);\r\n        setValue('redirect', ''); \r\n        updatefield('redirect', '');\r\n\r\n        updateRecords && updateRecords((p: Dictionary[], itmp: number) => {\r\n            p[index] = { ...p[index], roleid: value?.roleid || 0, roledesc: value?.roldesc || 0, type: value?.type || 0 }\r\n            return p;\r\n        })\r\n        if (value) {\r\n            setDataApplications({ loading: true, data: [] });\r\n            dispatch(getMultiCollectionAux([\r\n                getApplicationsByRole(value.roleid, index + 1),\r\n            ]))\r\n        } else {\r\n            setDataApplications({ loading: false, data: [] })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Accordion defaultExpanded={row?.id === 0} style={{ marginBottom: '8px' }}>\r\n\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                <Typography>{(row?.orgid) ? row.orgdesc : t(langKeys.neworganization)}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n                <form onSubmit={onSubmit} style={{ width: '100%' }}>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-6\">\r\n                            <FieldSelect\r\n                                label={t(langKeys.organization)}\r\n                                className={classes.mb2}\r\n                                valueDefault={getValues('orgid')}\r\n                                onChange={onChangeOrganization}\r\n                                triggerOnChangeOnFirst={true}\r\n                                error={errors?.orgid?.message}\r\n                                data={dataOrganizations.data}\r\n                                optionDesc=\"orgdesc\"\r\n                                optionValue=\"orgid\"\r\n                            />\r\n                            <FieldSelect\r\n                                label={t(langKeys.role)}\r\n                                className={classes.mb2}\r\n                                valueDefault={row?.roleid || \"\"}\r\n                                onChange={onChangeRole}\r\n                                error={errors?.roleid?.message}\r\n                                // triggerOnChangeOnFirst={true}\r\n                                data={dataRoles}\r\n                                optionDesc=\"roldesc\"\r\n                                optionValue=\"roleid\"\r\n                            />\r\n                            <FieldMultiSelect //los multiselect te devuelven un array de objetos en OnChange por eso se le recorre\r\n                                label={t(langKeys.channel)}\r\n                                className={classes.mb2}\r\n                                valueDefault={row?.channels || \"\"}\r\n                                onChange={(value) => {\r\n                                    setValue('channels', value.map((o: Dictionary) => o.communicationchannelid).join())\r\n                                    setValue('channelsdesc', value.map((o: Dictionary) => o.description).join())\r\n                                    updatefield('channels', value.map((o: Dictionary) => o.communicationchannelid).join())\r\n                                    updatefield('channelsdesc', value.map((o: Dictionary) => o.description).join())\r\n                                }}\r\n                                error={errors?.channels?.message}\r\n                                loading={dataChannels.loading}\r\n                                data={dataChannels.data}\r\n                                optionDesc=\"description\"\r\n                                optionValue=\"communicationchannelid\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <TemplateSwitchYesNo\r\n                                label={t(langKeys.default_organization)}\r\n                                className={classes.mb2}\r\n                                valueDefault={row?.bydefault || false}\r\n                                onChange={(value) => { setValue('bydefault', value); updatefield('bydefault', value) }} />\r\n                            <FieldSelect\r\n                                label={t(langKeys.supervisor)}\r\n                                className={classes.mb2}\r\n                                valueDefault={row?.supervisor || \"\"}\r\n                                triggerOnChangeOnFirst={true}\r\n                                onChange={(value) => {\r\n                                    setValue('supervisor', value ? value.usr : '');\r\n                                    setValue('supervisordesc', value ? value.userdesc : '');\r\n                                    updatefield('supervisor', value?.usr || '');\r\n                                    updatefield('supervisordesc', value?.userdesc || '');\r\n                                }}\r\n                                error={errors?.supervisor?.message}\r\n                                data={dataSupervisors.data}\r\n                                loading={dataSupervisors.loading}\r\n                                optionDesc=\"userdesc\"\r\n                                optionValue=\"usr\"\r\n                            />\r\n\r\n                            <FieldSelect\r\n                                label={t(langKeys.default_application)}\r\n                                className={classes.mb2}\r\n                                valueDefault={getValues(\"redirect\")}\r\n                                onChange={(value) => { setValue('redirect', value?.path || ''); updatefield('redirect', value?.path || '') }}\r\n                                error={errors?.redirect?.message}\r\n                                data={dataApplications.data}\r\n                                loading={dataApplications.loading}\r\n                                triggerOnChangeOnFirst={true}\r\n                                optionDesc=\"description\"\r\n                                optionValue=\"path\"\r\n                            />\r\n                            <FieldMultiSelect //los multiselect te devuelven un array de objetos en OnChange por eso se le recorre\r\n                                label={t(langKeys.group)}\r\n                                className={classes.mb2}\r\n                                valueDefault={row?.groups || \"\"}\r\n                                onChange={(value) => { setValue('groups', value.map((o: Dictionary) => o.domainvalue).join()); updatefield('groups', value.map((o: Dictionary) => o.domainvalue).join()) }}\r\n                                error={errors?.groups?.message}\r\n                                loading={dataGroups.loading}\r\n                                data={dataGroups.data}\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ textAlign: 'right' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<DeleteIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => handleDelete(row, index)}\r\n                        >{t(langKeys.delete)}</Button>\r\n                    </div>\r\n                </form>\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    );\r\n}\r\n\r\ninterface ModalPasswordProps {\r\n    openModal: boolean;\r\n    setOpenModal: (value: boolean) => any;\r\n    data: any;\r\n    parentSetValue: (...param: any) => any;\r\n}\r\n\r\nconst ModalPassword: React.FC<ModalPasswordProps> = ({ openModal, setOpenModal, data, parentSetValue }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const mainMultiResult = useSelector(state => state.main.multiData);\r\n    const securityRules = mainMultiResult.data.filter(x=>x.key===\"UFN_SECURITYRULES_SEL\")?.[0]\r\n    const [passwordConditions, setpasswordConditions] = useState({\r\n        samepassword: !!data?.password,\r\n        mincharacters: (data?.password||\"\").length >= (securityRules?.data?.[0]?.mincharacterspwd||0),\r\n        maxcharacters: (data?.password||\"\").length <= (securityRules?.data?.[0]?.maxcharacterspwd||0),\r\n        consecutivecharacters: validateNumbersEqualsConsecutive(data?.password||\"\",securityRules?.data?.[0]?.numequalconsecutivecharacterspwd||securityRules?.data?.[0]?.maxcharacterspwd||0),\r\n        lowercaseletters: validateDomainCharacters(data?.password||\"\", 'a-z', securityRules?.data?.[0]?.lowercaseletterspwd||\"04\"),\r\n        uppercaseletters: validateDomainCharacters(data?.password||\"\", 'A-Z', securityRules?.data?.[0]?.uppercaseletterspwd||\"04\"),\r\n        numbers: validateDomainCharacters(data?.password||\"\", '1-9', securityRules?.data?.[0]?.numericalcharacterspwd||\"04\"),\r\n        specialcharacters: validateDomainCharactersSpecials(data?.password||\"\", securityRules?.data?.[0]?.specialcharacterspwd||\"04\"),\r\n    });\r\n    const dataFieldSelect = [\r\n        {name: \"Empieza\", value: \"01\"},\r\n        {name: \"Incluye\", value: \"02\"},\r\n        {name: \"Más de 1\", value: \"03\"},\r\n        {name: \"No Considera\", value: \"04\"},\r\n        {name: \"Termina\", value: \"05\"},\r\n    ]\r\n\r\n    const { register, handleSubmit, setValue, getValues, formState: { errors }, trigger, clearErrors } = useForm({\r\n        defaultValues: {\r\n            password: '',\r\n            confirmpassword: '',\r\n            generate_password: false,\r\n            send_password_by_email: false,\r\n            change_password_on_login: false\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValue('password', data?.password);\r\n        setValue('confirmpassword', data?.password);\r\n        setValue('send_password_by_email', data?.send_password_by_email);\r\n        setValue('change_password_on_login', data?.pwdchangefirstlogin);\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        register('password', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('confirmpassword', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n    }, [])\r\n\r\n    const setRandomPassword = (value: boolean) => {\r\n        if (value) {\r\n            const rndPassword = randomText(10, true, true, true);\r\n            setValue('password', rndPassword);\r\n            setValue('confirmpassword', rndPassword);\r\n            trigger();\r\n        }\r\n    }\r\n\r\n    const handleCancelModal = () => {\r\n        setOpenModal(false);\r\n        setValue('password', data?.password);\r\n        setValue('confirmpassword', data?.password);\r\n        setValue('send_password_by_email', data?.send_password_by_email);\r\n        setValue('change_password_on_login', data?.pwdchangefirstlogin);\r\n        clearErrors();\r\n        setpasswordConditions({...passwordConditions,\r\n            samepassword: !!data?.password,\r\n            mincharacters: (data?.password||\"\").length >= (securityRules?.data?.[0]?.mincharacterspwd||0),\r\n            maxcharacters: (data?.password||\"\").length <= (securityRules?.data?.[0]?.maxcharacterspwd||0),\r\n            consecutivecharacters: validateNumbersEqualsConsecutive(data?.password||\"\",securityRules?.data?.[0]?.numequalconsecutivecharacterspwd||securityRules?.data?.[0]?.maxcharacterspwd||0),\r\n            lowercaseletters: validateDomainCharacters(data?.password||\"\", 'a-z', securityRules?.data?.[0]?.lowercaseletterspwd||\"04\"),\r\n            uppercaseletters: validateDomainCharacters(data?.password||\"\", 'A-Z', securityRules?.data?.[0]?.uppercaseletterspwd||\"04\"),\r\n            numbers: validateDomainCharacters(data?.password||\"\", '1-9', securityRules?.data?.[0]?.numericalcharacterspwd||\"04\"),\r\n            specialcharacters: validateDomainCharactersSpecials(data?.password||\"\", securityRules?.data?.[0]?.specialcharacterspwd||\"04\"),\r\n        })        \r\n    }\r\n\r\n    const onSubmitPassword = handleSubmit((data) => {    \r\n        if(!!Object.values(passwordConditions).reduce((acc,x)=>acc*(+ x),1)){\r\n            parentSetValue('password', data.password);\r\n            parentSetValue('send_password_by_email', data.send_password_by_email);\r\n            parentSetValue('pwdchangefirstlogin', data.change_password_on_login);\r\n            setOpenModal(false);\r\n        }else{\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.invalid_password) }));\r\n        }\r\n    });\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.setpassword)}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.save)}\r\n            handleClickButton1={handleCancelModal}\r\n            handleClickButton2={onSubmitPassword}\r\n        >\r\n            <div className=\"row-zyx\">\r\n                <TemplateSwitch\r\n                    label={t(langKeys.generate_password)}\r\n                    className=\"col-4\"\r\n                    valueDefault={getValues('generate_password')}\r\n                    onChange={setRandomPassword}\r\n                />\r\n                <TemplateSwitch\r\n                    label={t(langKeys.send_password_by_email)}\r\n                    className=\"col-4\"\r\n                    valueDefault={getValues('send_password_by_email')}\r\n                    onChange={(value) => setValue('send_password_by_email', value)}\r\n                />\r\n                <TemplateSwitch\r\n                    label={t(langKeys.change_password_on_login)}\r\n                    className=\"col-4\"\r\n                    valueDefault={getValues('change_password_on_login')}\r\n                    onChange={(value) => setValue('change_password_on_login', value)}\r\n                />\r\n            </div>\r\n            <div className=\"row-zyx\">\r\n                <FieldEdit\r\n                    label={t(langKeys.password)}\r\n                    className=\"col-6\"\r\n                    valueDefault={getValues('password')}\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    onChange={(value) => {\r\n                        setpasswordConditions({...passwordConditions,\r\n                            samepassword:getValues(\"confirmpassword\")===value,\r\n                            mincharacters: value.length >= (securityRules?.data?.[0]?.mincharacterspwd||0),\r\n                            maxcharacters: value.length <= (securityRules?.data?.[0]?.maxcharacterspwd||0),\r\n                            consecutivecharacters: validateNumbersEqualsConsecutive(value,securityRules?.data?.[0]?.numequalconsecutivecharacterspwd||securityRules?.data?.[0]?.maxcharacterspwd||0),\r\n                            lowercaseletters: validateDomainCharacters(value, 'a-z', securityRules?.data?.[0]?.lowercaseletterspwd||\"04\"),\r\n                            uppercaseletters: validateDomainCharacters(value, 'A-Z', securityRules?.data?.[0]?.uppercaseletterspwd||\"04\"),\r\n                            numbers: validateDomainCharacters(value, '1-9', securityRules?.data?.[0]?.numericalcharacterspwd||\"04\"),\r\n                            specialcharacters: validateDomainCharactersSpecials(value, securityRules?.data?.[0]?.specialcharacterspwd||\"04\"),\r\n                        })\r\n                        setValue('password', value)\r\n                    }}\r\n                    error={errors?.password?.message}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={() => setShowPassword(!showPassword)}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <FieldEdit\r\n                    label={t(langKeys.confirmpassword)}\r\n                    className=\"col-6\"\r\n                    valueDefault={getValues('confirmpassword')}\r\n                    type={showConfirmPassword ? 'text' : 'password'}\r\n                    onChange={(value) => {\r\n                        setpasswordConditions({...passwordConditions,samepassword:getValues(\"password\")===value})\r\n                        setValue('confirmpassword', value)\r\n                    }}\r\n                    error={errors?.confirmpassword?.message}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond1)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.samepassword,\r\n                    [classes.badgeFailure]: !passwordConditions.samepassword,\r\n                })}>{passwordConditions.samepassword?t(langKeys.yes):t(langKeys.no)}</span></div>\r\n                {!!securityRules?.data?.[0]?.mincharacterspwd && <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond2)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.mincharacters,\r\n                    [classes.badgeFailure]: !passwordConditions.mincharacters,\r\n                })}>{securityRules?.data?.[0]?.mincharacterspwd}</span></div>}\r\n                {!!securityRules?.data?.[0]?.maxcharacterspwd && <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond3)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.maxcharacters,\r\n                    [classes.badgeFailure]: !passwordConditions.maxcharacters,\r\n                })}>{securityRules?.data?.[0]?.maxcharacterspwd}</span></div>}\r\n                {!!securityRules?.data?.[0]?.allowsconsecutivenumbers && <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond4)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.consecutivecharacters,\r\n                    [classes.badgeFailure]: !passwordConditions.consecutivecharacters,\r\n                })}>{securityRules?.data?.[0]?.numequalconsecutivecharacterspwd}</span></div>}\r\n                {(securityRules?.data?.[0]?.lowercaseletterspwd!==\"04\") && <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond7)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.lowercaseletters,\r\n                    [classes.badgeFailure]: !passwordConditions.lowercaseletters,\r\n                })}>{dataFieldSelect.filter((x:any)=>x.value===(securityRules?.data?.[0]?.lowercaseletterspwd||\"04\"))[0].name}</span></div>}\r\n                {(securityRules?.data?.[0]?.uppercaseletterspwd!==\"04\") && <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond8)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.uppercaseletters,\r\n                    [classes.badgeFailure]: !passwordConditions.uppercaseletters,\r\n                })}>{dataFieldSelect.filter((x:any)=>x.value===(securityRules?.data?.[0]?.uppercaseletterspwd||\"04\"))[0].name}</span></div>}\r\n                {(securityRules?.data?.[0]?.numericalcharacterspwd!==\"04\") && <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond9)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.numbers,\r\n                    [classes.badgeFailure]: !passwordConditions.numbers,\r\n                })}>{dataFieldSelect.filter((x:any)=>x.value===(securityRules?.data?.[0]?.numericalcharacterspwd||\"04\"))[0].name}</span></div>}\r\n                <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond5)}</span><span className={clsx(classes.badge, {\r\n                    [classes.badgeSuccess]: passwordConditions.specialcharacters,\r\n                    [classes.badgeFailure]: !passwordConditions.specialcharacters,\r\n                })}>{dataFieldSelect.filter((x:any)=>x.value===(securityRules?.data?.[0]?.specialcharacterspwd||\"04\"))[0].name}</span></div>\r\n                <div className={classes.paswordCondition}><span>{t(langKeys.passwordCond6)}</span></div>\r\n            </div>\r\n        </DialogZyx>\r\n    )\r\n}\r\n\r\nconst DetailUsers: React.FC<DetailProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData,arrayBread }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.activationuser.saveUser);\r\n    const detailRes = useSelector(state => state.main.mainAux); //RESULTADO DEL DETALLE\r\n\r\n    const [dataOrganizations, setDataOrganizations] = useState<(Dictionary | null)[]>([]);\r\n    const [orgsToDelete, setOrgsToDelete] = useState<Dictionary[]>([]);\r\n    const [openDialogStatus, setOpenDialogStatus] = useState(false);\r\n    const [openDialogPassword, setOpenDialogPassword] = useState(false);\r\n\r\n    const [triggerSave, setTriggerSave] = useState(false)\r\n    const dataStatus = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const dataDocType = multiData[1] && multiData[1].success ? multiData[1].data : [];\r\n    const dataCompanies = multiData[2] && multiData[2].success ? multiData[2].data : [];\r\n    const dataBillingGroups = multiData[3] && multiData[3].success ? multiData[3].data : [];\r\n    const dataStatusUsers = multiData[4] && multiData[4].success ? multiData[4].data : [];\r\n    const [allIndex, setAllIndex] = useState([])\r\n    const [getOrganizations, setGetOrganizations] = useState(false);\r\n    const [waitUploadFile, setWaitUploadFile] = useState(false);\r\n\r\n\r\n    const uploadResult = useSelector(state => state.main.uploadFile);\r\n\r\n    useEffect(() => { //RECIBE LA DATA DE LAS ORGANIZACIONES \r\n        if (!detailRes.loading && !detailRes.error && getOrganizations) {\r\n            setDataOrganizations(detailRes.data);\r\n        }\r\n    }, [detailRes]);\r\n\r\n    const handleRegister = () => {\r\n        setDataOrganizations(p => [...p, { id: 0 }]);\r\n    }\r\n    const handleDelete = (row: Dictionary | null, index: number) => {\r\n        if (row && row.id !== 0 && row.operation !== \"INSERT\") {\r\n            setOrgsToDelete(p => [...p, { ...row, operation: \"DELETE\", status: 'ELIMINADO' }]);\r\n        }\r\n        const filterDataOrg = dataOrganizations.filter((x, i) => i !== index)\r\n        setDataOrganizations(filterDataOrg);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (waitUploadFile) {\r\n            if (!uploadResult.loading && !uploadResult.error) {\r\n                setValue('image', uploadResult.url)\r\n                setWaitUploadFile(false);\r\n            } else if (uploadResult.error) {\r\n\r\n                setWaitUploadFile(false);\r\n            }\r\n        }\r\n    }, [waitUploadFile, uploadResult])\r\n\r\n\r\n    const onSelectImage = (files: any) => {\r\n        const selectedFile = files[0];\r\n        var fd = new FormData();\r\n        fd.append('file', selectedFile, selectedFile.name);\r\n        dispatch(uploadFile(fd));\r\n        setWaitUploadFile(true);\r\n    }\r\n\r\n    const { register, handleSubmit, setValue, getValues, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            type: 'NINGUNO',\r\n            id: edit ? (row?.userid || 0) : 0,\r\n            operation: edit ? (row ? \"EDIT\" : \"INSERT\") : \"INSERT\",\r\n            description: row?.description || '',\r\n            firstname: row?.firstname || '',\r\n            lastname: row?.lastname || '',\r\n            password: edit ? (row?.password || '') : \"\",\r\n            usr: row?.usr || '',\r\n            email: edit ? (row?.email || '') : \"\",\r\n            doctype: row?.doctype || '',\r\n            docnum: row?.docnum || '',\r\n            company: row?.company || '',\r\n            billinggroupid: row?.billinggroupid || 0,\r\n            registercode: row?.registercode || '',\r\n            twofactorauthentication: row?.twofactorauthentication || false,\r\n            status: row?.status || 'ACTIVO',\r\n            image: row?.image || null,\r\n            send_password_by_email: false,\r\n            pwdchangefirstlogin: false\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    const emailRequired = (value: string) => {\r\n        if (value.length === 0) {\r\n            return t(langKeys.field_required) as string;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n            return t(langKeys.emailverification) as string;\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        register('type');\r\n        register('id');\r\n        register('password');\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('firstname', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('lastname', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usr', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('email', { validate: emailRequired, value: '' });\r\n        register('doctype', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('docnum', { validate: {\r\n            needsvalidation: (value:any) => ((value && value.length) || t(langKeys.field_required)),\r\n            dnivalidation: (value:any) => (getValues(\"doctype\") === \"DNI\")? ((value && value.length === 8) || t(langKeys.doctype_dni_error)) : true,\r\n            cevalidation: (value:any) => (getValues(\"doctype\") === \"CE\")? ((value && value.length === 12) || t(langKeys.doctype_foreigners_card)) : true,\r\n            rucvalidation: (value:any) => (getValues(\"doctype\") === \"RUC\")? ((value && value.length === 11) || t(langKeys.doctype_ruc_error)) : true,\r\n        }});\r\n        register('billinggroupid');\r\n        register('description');\r\n        register('twofactorauthentication');\r\n        register('image');\r\n\r\n        dispatch(resetMainAux())\r\n        if (row && edit) {\r\n            setGetOrganizations(true)\r\n            dispatch(getCollectionAux(getOrgUserSel((row?.userid || 0), 0))); //TRAE LAS ORGANIZACIONES ASIGNADAS DEL USUARIO\r\n        }\r\n        if (!row)\r\n            setDataOrganizations(p => [...p, { id: 0 }]);\r\n    }, [register]);\r\n\r\n    useEffect(() => {\r\n        if (allIndex.length === dataOrganizations.length && triggerSave) {\r\n            setTriggerSave(false);\r\n            const error = allIndex.some((x: any) => !x.allOk)\r\n            if (error) {\r\n                return\r\n            }\r\n            if (!dataOrganizations.some(x => x?.bydefault)) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.organization_by_default) }));\r\n                return;\r\n            } else if (dataOrganizations.filter(x => x?.bydefault).length > 1) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.organization_by_default) }));\r\n                return;\r\n            }\r\n            const data = getValues();\r\n\r\n            const callback = () => {\r\n                dispatch(showBackdrop(true));\r\n                dispatch(saveUser({\r\n                    header: insUser({ ...data, language: t(langKeys.currentlanguage) }),\r\n                    detail: [...dataOrganizations.filter(x => x && x?.operation).map(x => x && insOrgUser(x)), ...orgsToDelete.map(x => insOrgUser(x))]!\r\n                }, true));\r\n                setWaitSave(true)\r\n            }\r\n\r\n            dispatch(manageConfirmation({\r\n                visible: true,\r\n                question: t(langKeys.confirmation_save),\r\n                callback\r\n            }))\r\n        }\r\n    }, [allIndex, triggerSave])\r\n\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (!row && !data.password) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.password_required) }));\r\n            return;\r\n        }\r\n        if (!edit && data.password === \"\") {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.password_required) }));\r\n            return;\r\n        }\r\n        setTriggerSave(true)\r\n        setAllIndex([])\r\n    });\r\n\r\n    const onChangeStatus = (value: Dictionary) => {\r\n        setValue('status', (value ? value.domainvalue : ''));\r\n        value && setOpenDialogStatus(true)\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread,{ id: \"view-2\", name: `${t(langKeys.user)} ${t(langKeys.detail)}` }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={edit ? (row ? `${row.firstname} ${row.lastname}` : t(langKeys.newuser)) : t(langKeys.newuser)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        <>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"button\"\r\n                                startIcon={<LockOpenIcon color=\"secondary\" />}\r\n                                onClick={() => setOpenDialogPassword(true)}\r\n                            >{t(edit ? (row ? langKeys.changePassword : langKeys.setpassword) : langKeys.setpassword)}</Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                startIcon={<SaveIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >{t(langKeys.save)}</Button>\r\n                        </>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-6\" style={{ display: 'flex', flexDirection: 'column', gap: 16 }}>\r\n                            <FieldEdit\r\n                                label={t(langKeys.firstname)}\r\n                                style={{ marginBottom: 8 }}\r\n                                valueDefault={row?.firstname || \"\"}\r\n                                onChange={(value) => setValue('firstname', value)}\r\n                                error={errors?.firstname?.message}\r\n                            />\r\n                            <FieldEdit\r\n                                label={t(langKeys.lastname)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row?.lastname || \"\"}\r\n                                onChange={(value) => setValue('lastname', value)}\r\n                                error={errors?.lastname?.message}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            <div style={{ position: 'relative' }}>\r\n                                <Avatar style={{ width: 120, height: 120 }} src={getValues('image')} />\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"image/*\"\r\n                                    id=\"laraigo-upload-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => onSelectImage(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                    <Avatar style={{ position: 'absolute', bottom: 0, right: 0, backgroundColor: '#7721ad', cursor: 'pointer' }}>\r\n                                        <CameraAltIcon style={{ color: '#FFF' }} />\r\n                                    </Avatar>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={`${t(langKeys.user)}`}\r\n                            className=\"col-6\"\r\n                            valueDefault={edit ? (row?.usr || \"\") : \"\"}\r\n                            onChange={(value) => setValue('usr', value)}\r\n                            error={errors?.usr?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={`${t(langKeys.email)}`}\r\n                            className=\"col-6\"\r\n                            valueDefault={edit ? (row?.email || \"\") : \"\"}\r\n                            onChange={(value) => setValue('email', value)}\r\n                            error={errors?.email?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldSelect\r\n                            label={t(langKeys.company)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.company || \"\"}\r\n                            onChange={(value) => setValue('company', value ? value.domainvalue : '')}\r\n                            error={errors?.company?.message}\r\n                            data={dataCompanies}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.docType)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.doctype || \"\"}\r\n                            onChange={(value) => setValue('doctype', value ? value.domainvalue : '')}\r\n                            error={errors?.doctype?.message}\r\n                            data={dataDocType}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.docNumber)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.docnum || \"\"}\r\n                            type=\"number\"\r\n                            onChange={(value) => setValue('docnum', value)}\r\n                            error={errors?.docnum?.message}\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.billingGroup)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.billinggroupid || \"\"}\r\n                            onChange={(value) => setValue('billinggroupid', (value ? value.domainid : 0))}\r\n                            error={errors?.billinggroupid?.message}\r\n                            data={dataBillingGroups}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainid\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.registerCode)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.registercode || \"\"}\r\n                            onChange={(value) => setValue('registercode', value)}\r\n                            error={errors?.registercode?.message}\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.twofactorauthentication)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues('twofactorauthentication') ? 'ACTIVO' : \"INACTIVO\"}\r\n                            onChange={(value) => setValue('twofactorauthentication', (value ? value.domainvalue === 'ACTIVO' : false))}\r\n                            error={errors?.twofactorauthentication?.message}\r\n                            data={dataStatus}\r\n                            uset={true}\r\n                            prefixTranslation=\"status_\"\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.status)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.status || \"ACTIVO\"}\r\n                            onChange={onChangeStatus}\r\n                            uset={true}\r\n                            error={errors?.status?.message}\r\n                            data={dataStatusUsers}\r\n                            prefixTranslation=\"status_\"\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className={classes.containerDetail}>\r\n                {detailRes.error ? <h1>ERROR</h1> :\r\n                    <div>\r\n                        <div style={{ marginBottom: '16px', display: 'flex', justifyContent: 'space-between' }}>\r\n                            <div className={classes.title}>{t(langKeys.organization_permissions)}</div>\r\n                            <div>\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={detailRes.loading}\r\n                                    startIcon={<AddIcon color=\"secondary\" />}\r\n                                    onClick={handleRegister}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                >{t(langKeys.register)}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        {detailRes.loading ?\r\n                            <ListItemSkeleton /> :\r\n                            dataOrganizations.map((item, index) => (\r\n                                <DetailOrgUser\r\n                                    key={item?.orgid || `detail${index*1000}`}\r\n                                    index={index}\r\n                                    data={{ row: item, edit }}\r\n                                    multiData={multiData}\r\n                                    updateRecords={setDataOrganizations}\r\n                                    preData={dataOrganizations}\r\n                                    triggerSave={triggerSave}\r\n                                    handleDelete={handleDelete}\r\n                                    setAllIndex={setAllIndex}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n            <DialogZyx\r\n                open={openDialogStatus}\r\n                title={t(langKeys.status)}\r\n                buttonText1={t(langKeys.save)}\r\n                handleClickButton1={() => setOpenDialogStatus(false)}\r\n            >\r\n                <FieldEdit\r\n                    label={t(langKeys.description)}\r\n                    className=\"col-6\"\r\n                    valueDefault={row?.description || \"\"}\r\n                    onChange={(value) => setValue('description', value)}\r\n                    error={errors?.description?.message}\r\n                />\r\n            </DialogZyx>\r\n            <ModalPassword\r\n                openModal={openDialogPassword}\r\n                setOpenModal={setOpenDialogPassword}\r\n                data={getValues()}\r\n                parentSetValue={setValue}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Users: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main.mainData);\r\n    const mainMultiResult = useSelector(state => state.main.multiData);\r\n    const executeRes = useSelector(state => state.activationuser.saveUser);\r\n    const deleteResult = useSelector(state => state.activationuser.delUser);\r\n    const [dataUsers, setdataUsers] = useState<Dictionary[]>([]);\r\n    // const [dataOrganizationsTmp, setdataOrganizationsTmp] = useState<Dictionary[]>([]);\r\n    const [dataChannelsTemp, setdataChannelsTemp] = useState<Dictionary[]>([]);\r\n    const [waitImport, setWaitImport] = useState(false);\r\n    const [waitChanges, setwaitChanges] = useState(false);\r\n    const domains = useSelector(state => state.person.editableDomains);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    useEffect(() => {\r\n        // setdataOrganizationsTmp(mainMultiResult.data[8] && mainMultiResult.data[8].success ? mainMultiResult.data[8].data : [])\r\n        setdataChannelsTemp(mainMultiResult.data[10] && mainMultiResult.data[10].success ? mainMultiResult.data[10].data : [])\r\n    }, [mainMultiResult.data]);\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [waitCheck, setWaitCheck] = useState(false);\r\n    const [operation, setOperation] = useState('REGISTER');\r\n    const [fileToUpload, setFileToUpload] = useState(null);\r\n    const mainAuxResult = useSelector(state => state.main.mainAux);\r\n    const [messageError, setMessageError] = useState('');\r\n    const [importCount, setImportCount] = useState(0)\r\n    const arrayBread = [\r\n        { id: \"view-0\", name: t(langKeys.configuration_plural) },\r\n        { id: \"view-1\", name: t(langKeys.user_plural) },\r\n    ];\r\n    function redirectFunc(view:string){\r\n        if(view ===\"view-0\"){\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'userid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            extraOption={t(langKeys.duplicate)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                            extraFunction={() => handleDuplicate(row)}\r\n                            ExtraICon={() => <DuplicateIcon width={28} style={{ fill: '#7721AD' }} />}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.name),\r\n                accessor: 'firstname',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.lastname),\r\n                accessor: 'lastname',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: `${t(langKeys.user)}`,\r\n                accessor: 'usr',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: `${t(langKeys.email)}`,\r\n                accessor: 'email',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.attention_group),\r\n                accessor: 'groups',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.role),\r\n                accessor: 'roledesc',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.billingGroup),\r\n                accessor: 'billinggroup',\r\n                NoFilter: true\r\n            },\r\n\r\n        ],\r\n        []\r\n    );\r\n    const handleTemplate = () => {\r\n        const data = [\r\n            {},\r\n            {},\r\n            {},\r\n            domains.value?.company?.reduce((a, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {}),\r\n            domains.value?.docTypes.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_documenttype_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            {},\r\n            domains.value?.billinggroups?.reduce((a, d) => ({ ...a, [d.domainid]: d.domaindesc }), {}),\r\n            {},\r\n            domains.value?.genericstatus?.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`status_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            domains.value?.userstatus?.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`status_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            {},\r\n            {},\r\n            {},\r\n            { 'true': 'true', 'false': 'false' },\r\n            domains.value?.roles?.reduce((a, d) => ({ ...a, [d.roleid]: d.roldesc }), {}),\r\n            dataChannelsTemp.reduce((a, d) => ({ ...a, [d.communicationchannelid]: d.description }), {}),\r\n            domains.value?.usergroup?.reduce((a, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {}),\r\n        ];\r\n        const header = [\r\n            'firstname',\r\n            'lastname',\r\n            'email',\r\n            'company',\r\n            'doctype',\r\n            'docnum',\r\n            'billinggroup',\r\n            'registercode',\r\n            'twofactorauthentication',\r\n            'status',\r\n            'image',\r\n            'user',\r\n            'password',\r\n            'pwdchangefirstlogin',\r\n            'role',\r\n            'channels',\r\n            'groups'\r\n        ];\r\n        exportExcel(`${t(langKeys.template)} ${t(langKeys.import)}`, templateMaker(data, header));\r\n    }\r\n    const handleTemplateDrop = () => {\r\n        const data = [\r\n            {},\r\n            domains.value?.userstatus?.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`status_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            { 0: 'true', 1: 'false' },\r\n        ];\r\n        const header = [\r\n            'username',\r\n            'status',\r\n            'delete',\r\n        ];\r\n        exportExcel(`${t(langKeys.template)} ${t(langKeys.dropusers)}`, templateMaker(data, header));\r\n    }\r\n\r\n    const fetchData = () => dispatch(getCollection(getUserSel(0)));\r\n\r\n    useEffect(() => {\r\n        mainResult.data && setdataUsers(mainResult.data);\r\n    }, [mainResult]);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getDomainsByTypename());\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"ESTADOGENERICO\"),\r\n            getValuesFromDomain(\"TIPODOCUMENTO\"),\r\n            getValuesFromDomain(\"EMPRESA\"),\r\n            getValuesFromDomain(\"GRUPOFACTURACION\"),\r\n            getValuesFromDomain(\"ESTADOUSUARIO\"),\r\n            getValuesFromDomain(\"TIPOUSUARIO\"), //formulario orguser\r\n            getValuesFromDomain(\"GRUPOS\"), //formulario orguser\r\n            getValuesFromDomain(\"ESTADOORGUSER\"), //formulario orguser\r\n            getOrgsByCorp(0), //formulario orguser\r\n            getRolesByOrg(), //formulario orguser\r\n            getChannelsByOrg(user?.orgid),\r\n            getSecurityRules(),\r\n        ]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitImport) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                const newcount = importCount - 1;\r\n\r\n                if (newcount === 0) {\r\n                    setImportCount(0);\r\n                    setMessageError('');\r\n                    if (messageError) {\r\n                        dispatch(showSnackbar({ show: true, severity: \"error\", message: messageError }));\r\n                    } else {\r\n                        dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }))\r\n                    }\r\n                    fetchData();\r\n                    dispatch(showBackdrop(false));\r\n                    setWaitImport(false);\r\n                } else {\r\n                    setImportCount(newcount);\r\n                }\r\n                // dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }))\r\n            } else if (executeRes.error) {\r\n                const newcount = importCount - 1;\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: `${t(langKeys.user).toLocaleLowerCase()}(${executeRes.key})` })\r\n                if (newcount === 0) {\r\n                    setImportCount(0);\r\n                    setMessageError('');\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: messageError + errormessage }));\r\n\r\n                    fetchData();\r\n                    dispatch(showBackdrop(false));\r\n                    setWaitImport(false);\r\n                } else {\r\n                    setImportCount(newcount);\r\n                    setMessageError(messageError + errormessage + \"\\n\");\r\n                }\r\n                // dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                // dispatch(showBackdrop(false));\r\n                // setWaitImport(false);\r\n            }\r\n        }\r\n    }, [executeRes, waitImport, importCount])\r\n\r\n    useEffect(() => {\r\n        if (waitChanges) {\r\n            if (!deleteResult.loading && !deleteResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_transaction) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setwaitChanges(false);\r\n            } else if (deleteResult.error) {\r\n                const errormessage = t(deleteResult.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setwaitChanges(false);\r\n            }\r\n        }\r\n    }, [deleteResult, waitChanges])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!deleteResult.loading && !deleteResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (deleteResult.error) {\r\n                const errormessage = t(deleteResult.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [deleteResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleUpload = async (files: any, useravailable: number, limit: number) => {\r\n        \r\n        const file = files?.item(0);\r\n        if (file) {\r\n            let excel: any = await uploadExcel(file, undefined);\r\n            const datainit = array_trimmer(excel);\r\n            const data = datainit.filter((f: any) => {\r\n                return (f.company === undefined || Object.keys(domains.value?.company?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.company))\r\n                    && (f.doctype === undefined || Object.keys(domains.value?.docTypes?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.doctype))\r\n                    && (f.billinggroup === undefined || Object.keys(domains.value?.billinggroups?.reduce((a: any, d) => ({ ...a, [d.domainid]: `${d.domainid}` }), {})).includes('' + f.billinggroup))\r\n                    && (f.twofactorauthentication === undefined || Object.keys(domains.value?.genericstatus?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.twofactorauthentication))\r\n                    && (f.status === undefined || Object.keys(domains.value?.userstatus?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.status))\r\n                    && (f.pwdchangefirstlogin === undefined || [\"true\", \"false\"].includes('' + f.pwdchangefirstlogin))\r\n                    && (f.role === undefined || Object.keys(domains.value?.roles?.reduce((a: any, d) => ({ ...a, [d.roleid]: `${d.roleid}` }), {})).includes('' + f.role))\r\n            });\r\n\r\n            const messageerrors = datainit.filter((f: any) => {\r\n                return !(f.company === undefined || Object.keys(domains.value?.company?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.company))\r\n                    || !(f.doctype === undefined || Object.keys(domains.value?.docTypes?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.doctype))\r\n                    || !(f.billinggroup === undefined || Object.keys(domains.value?.billinggroups?.reduce((a: any, d) => ({ ...a, [d.domainid]: `${d.domainid}` }), {})).includes('' + f.billinggroup))\r\n                    || !(f.twofactorauthentication === undefined || Object.keys(domains.value?.genericstatus?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.twofactorauthentication))\r\n                    || !(f.status === undefined || Object.keys(domains.value?.userstatus?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.status))\r\n                    || !(f.pwdchangefirstlogin === undefined || [\"true\", \"false\"].includes('' + f.pwdchangefirstlogin))\r\n                    || !(f.role === undefined || Object.keys(domains.value?.roles?.reduce((a: any, d) => ({ ...a, [d.roleid]: `${d.roleid}` }), {})).includes('' + f.role))\r\n            }).reduce((acc, x) => acc + t(langKeys.error_estructure_user, { email: x.email }) + `\\n`, '');\r\n\r\n            setMessageError(messageerrors)\r\n\r\n            if (data.length > 0) {\r\n                if (data.length > useravailable) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.userlimit, { limit }) }))\r\n                }\r\n                else {\r\n                    dispatch(showBackdrop(true));\r\n                    setImportCount(data.length);\r\n                    let table: Dictionary = data.reduce((a: any, d) => ({\r\n                        ...a,\r\n                        [`${d.user}_${d.docnum}`]: {\r\n                            id: 0,\r\n                            usr: String(d.user||d.email),\r\n                            doctype: d.doctype,\r\n                            docnum: String(d.docnum),\r\n                            password: String(d.password),\r\n                            firstname: String(d.firstname),\r\n                            lastname: String(d.lastname),\r\n                            email: String(d.email),\r\n                            pwdchangefirstlogin: Boolean(d.pwdchangefirstlogin),\r\n                            type: \"NINGUNO\",\r\n                            status: d.status,\r\n                            operation: \"INSERT\",\r\n                            company: d.company,\r\n                            twofactorauthentication: d.twofactorauthentication === \"ACTIVO\",\r\n                            registercode: String(d.registercode),\r\n                            billinggroupid: d.billinggroup,\r\n                            image: d?.image || \"\",\r\n                            detail: {\r\n                                roleid: d.role,\r\n                                orgid: user?.orgid,\r\n                                bydefault: true,\r\n                                labels: \"\",\r\n                                groups: d.groups || \"\",\r\n                                channels: d.channels || \"\",\r\n                                status: \"DESCONECTADO\",\r\n                                type: (domains?.value?.roles?.filter(x=>x.roleid===d.role)?.[0]?.roldesc||\"\").slice(0,6) === 'ASESOR' ? 'ASESOR' : 'SUPERVISOR',\r\n                                supervisor: \"\",\r\n                                operation: \"INSERT\",\r\n                                redirect: \"/usersettings\"\r\n                            }\r\n                        }\r\n                    }), {});\r\n                    Object.values(table).forEach((p) => {\r\n                        dispatch(saveUser({\r\n                            header: insUser({ ...p, key: p.usr }),\r\n                            detail: [insOrgUser({ ...p.detail })]\r\n                        }, true));\r\n                    })\r\n                    setWaitImport(true)\r\n                }\r\n\r\n            }\r\n            else {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: messageerrors }));\r\n            }\r\n        }\r\n    }\r\n    const handleDropUsers = async (files: any) => {\r\n        const file = files?.item(0);\r\n        if (file) {\r\n            let excel: any = await uploadExcel(file, undefined);\r\n            let data = array_trimmer(excel);\r\n            data = data.filter((f: any) =>\r\n                (f.status === undefined || Object.keys(domains.value?.userstatus?.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.status))\r\n                && (f.delete === undefined || [0, 1].includes(Number(f.delete)))\r\n            );\r\n            if (data.length > 0) {\r\n                dispatch(showBackdrop(true));\r\n                let table: Dictionary = data.reduce((a: any, d) => ({\r\n                    ...a,\r\n                    [`${d.username}_${d.status}`]: {\r\n                        ...dataUsers.filter(x => x.usr === d.username)[0],\r\n                        status: d.delete === 0 ? \"ELIMINADO\" : d.status,\r\n                        operation: d.delete === 0 ? \"DELETE\" : \"UPDATE\",\r\n                    }\r\n                }), {});\r\n                Object.values(table).forEach((p) => {\r\n                    dispatch(delUser({\r\n                        header: null,\r\n                        detail: [insUser({ ...p, id: p.userid, pwdchangefirstlogin: false })]\r\n                    }, false));\r\n                    // dispatch(execute(insUser({ ...p, id: p.userid, pwdchangefirstlogin: false })));\r\n                });\r\n                setwaitChanges(true)\r\n            }\r\n            else {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_records_valid) }));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n    const handleDuplicate = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(delUser({\r\n                header: null,\r\n                detail: [insUser({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.userid, pwdchangefirstlogin: false })]\r\n            }, false));\r\n            // dispatch(execute(insUser({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.userid, pwdchangefirstlogin: false })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    const checkLimit = (operation: string) => {\r\n        setOperation(operation);\r\n        dispatch(getCollectionAux(checkUserPaymentPlan()));\r\n        setWaitCheck(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitCheck) {\r\n            if (!mainAuxResult.loading && !mainAuxResult.error) {\r\n                if (mainAuxResult.data.length > 0) {\r\n                    dispatch(showBackdrop(false));\r\n                    setWaitCheck(false);\r\n                    if (!(mainAuxResult.data[0].usernumber < mainAuxResult.data[0].userscontracted)) {\r\n                        \r\n                        dispatch(showSnackbar({\r\n                            show: true, severity: \"error\", message: t(langKeys.userlimit, {\r\n                                limit: mainAuxResult.data[0].userscontracted\r\n                            })\r\n                        }))\r\n                    }\r\n                    else {\r\n                        if (operation === 'REGISTER') {\r\n                            handleRegister();\r\n                        }\r\n                        if (operation === 'UPLOAD') {\r\n                            handleUpload(fileToUpload, mainAuxResult.data[0].userscontracted - mainAuxResult.data[0].usernumber, mainAuxResult.data[0].userscontracted);\r\n                        }\r\n                    }\r\n                }\r\n            } else if (mainAuxResult.error) {\r\n                const errormessage = t(mainAuxResult.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitCheck(false);\r\n            }\r\n        }\r\n    }, [mainAuxResult, waitCheck]);\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        if (mainResult.error) {\r\n            return <h1>ERROR</h1>;\r\n        }\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <div style={{ display: 'flex',  justifyContent: 'space-between',  alignItems: 'center'}}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={redirectFunc}\r\n                    />\r\n                </div>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.user, { count: 2 })}\r\n                    data={dataUsers}\r\n                    download={true}\r\n                    loading={mainResult.loading}\r\n                    register={true}\r\n                    hoverShadow={true}\r\n                    handleRegister={() => checkLimit('REGISTER')}\r\n                    importCSV={(file) => {\r\n                        setFileToUpload(file);\r\n                        checkLimit('UPLOAD');\r\n                    }}\r\n                    onClickRow={handleEdit}\r\n                    ButtonsElement={() => (\r\n                        <>\r\n                            <Button\r\n                                disabled={mainResult.loading}\r\n                                variant=\"contained\"\r\n                                type=\"button\"\r\n                                color=\"primary\"\r\n                                startIcon={<ClearIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#FB5F5F\" }}\r\n                                onClick={() => history.push(paths.CONFIGURATION)}\r\n                            >{t(langKeys.back)}</Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={mainResult.loading}\r\n                                startIcon={<ListAltIcon color=\"secondary\" />}\r\n                                onClick={handleTemplateDrop}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >\r\n                                {`${t(langKeys.template)}  ${t(langKeys.dropusers)}`}\r\n                            </Button>\r\n                            <>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.csv\"\r\n                                    id=\"laraigo-dropusers-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => handleDropUsers(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-dropusers-csv-file\">\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        component=\"span\"\r\n                                        color=\"primary\"\r\n                                        disabled={mainResult.loading}\r\n                                        startIcon={<ClearIcon color=\"secondary\" />}\r\n                                        //onClick={handleTemplate}\r\n                                        style={{ backgroundColor: \"#fb5f5f\" }}>\r\n                                        <Trans i18nKey={langKeys.dropusers} />\r\n                                    </Button>\r\n                                </label>\r\n                            </>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={mainResult.loading}\r\n                                startIcon={<ListAltIcon color=\"secondary\" />}\r\n                                onClick={handleTemplate}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >\r\n                                {`${t(langKeys.template)}  ${t(langKeys.import)}`}\r\n                            </Button>\r\n                        </>\r\n                    )}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <DetailUsers\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainMultiResult.data}\r\n                fetchData={fetchData}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n}\r\n\r\nexport default Users;","import { IActionCall, IRequestBody, IRequestBodyPaginated, ITransaction } from \"@types\";\r\nimport { getValuesFromDomain, adviserSel, getMessageTemplateLst, getCommChannelLst, getRolesByOrg, getPropertySelByName } from \"common/helpers\";\r\nimport { CommonService, PersonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON,\r\n        failure: actionTypes.GET_PERSON_FAILURE,\r\n        success: actionTypes.GET_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPerson = () => ({ type: actionTypes.GET_PERSON_RESET });\r\n\r\nexport const getPersonListPaginated = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_LIST,\r\n        failure: actionTypes.GET_PERSON_LIST_FAILURE,\r\n        success: actionTypes.GET_PERSON_LIST_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonListPaginated = () => ({ type: actionTypes.GET_PERSON_LIST_RESET });\r\n\r\n\r\n\r\nexport const getPersonLinkListPaginated = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_LINK,\r\n        failure: actionTypes.GET_PERSON_LINK_FAILURE,\r\n        success: actionTypes.GET_PERSON_LINK_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonLinkListPaginated = () => ({ type: actionTypes.GET_PERSON_LINK_RESET });\r\n\r\n\r\n\r\nexport const getTicketListByPerson = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_TICKET_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_TICKET_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_TICKET_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetTicketListByPerson = () => ({ type: actionTypes.GET_TICKET_LIST_BY_PERSON_RESET });\r\n\r\nexport const getReferrerListByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_REFERRER_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_REFERRER_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_REFERRER_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetReferrerListByPerson = () => ({ type: actionTypes.GET_REFERRER_LIST_BY_PERSON_RESET });\r\n\r\nexport const getChannelListByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_CHANNEL_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_CHANNEL_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_CHANNEL_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelListByPerson = () => ({ type: actionTypes.GET_CHANNEL_LIST_BY_PERSON_RESET });\r\n\r\nexport const getAdditionalInfoByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON,\r\n        failure: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetgetAdditionalInfoByPerson = () => ({ type: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_RESET });\r\n\r\nexport const getLeadsByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => PersonService.getLeadsByPerson(payload),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_LEAD_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_LEAD_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadsByPerson = () => ({ type: actionTypes.GET_LEAD_LIST_BY_PERSON_RESET });\r\n\r\n/**\r\n * Managed domain types\r\n * \r\n * GENERO, TIPODOCUMENTO, OCUPACION, ESTADOCIVIL, NIVELEDUCATIVO\r\n */\r\nexport const getDomainsByTypename = (): IActionCall => ({\r\n    callAPI: async () => CommonService.multiMain([\r\n        getValuesFromDomain(\"GENERO\"),\r\n        getValuesFromDomain(\"TIPODOCUMENTO\"),\r\n        getValuesFromDomain(\"OCUPACION\"),\r\n        getValuesFromDomain(\"ESTADOCIVIL\"),\r\n        getValuesFromDomain(\"NIVELEDUCATIVO\"),\r\n        getValuesFromDomain(\"TIPOPERSONA\"),\r\n        getValuesFromDomain(\"GRUPOPERSONA\"),\r\n        getValuesFromDomain(\"TIPOPERSONAGEN\"),\r\n        getValuesFromDomain(\"TIPOCANAL\"),\r\n        adviserSel(),\r\n        getMessageTemplateLst(''),\r\n        getCommChannelLst(),\r\n        getValuesFromDomain(\"EMPRESA\"),\r\n        getValuesFromDomain(\"GRUPOFACTURACION\"),\r\n        getValuesFromDomain(\"ESTADOGENERICO\"),\r\n        getValuesFromDomain(\"ESTADOUSUARIO\"),\r\n        getRolesByOrg(),\r\n        getValuesFromDomain(\"GRUPOS\"),\r\n        getPropertySelByName(\"OCUPACION\"),\r\n    ]),\r\n    types: {\r\n        loading: actionTypes.GET_DOMAINS_BY_TYPENAME,\r\n        failure: actionTypes.GET_DOMAINS_BY_TYPENAME_FAILURE,\r\n        success: actionTypes.GET_DOMAINS_BY_TYPENAME_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetDomainsByTypename = () => ({ type: actionTypes.GET_DOMAINS_BY_TYPENAME_RESET });\r\n\r\n// dispatch(execute({\r\n//     header: insPersonBody({ ...p }),\r\n//     detail: [\r\n//         ...p.pcc.map((x: IPersonCommunicationChannel) => insPersonCommunicationChannel({ ...x })),\r\n//     ]\r\n// }, true));\r\nexport const editPerson = (payload: IRequestBody | ITransaction, insert: boolean = false): IActionCall => {\r\n    if (insert) {\r\n        // dispatch(execute({\r\n        //     header: insPersonBody({ ...p }),\r\n        //     detail: [\r\n        //         ...p.pcc.map((x: IPersonCommunicationChannel) => insPersonCommunicationChannel({ ...x })),\r\n        //     ]\r\n        // }, true));\r\n    }\r\n    return {\r\n        callAPI: async () => CommonService.main(payload, insert),\r\n        types: {\r\n            loading: actionTypes.EDIT_PERSON,\r\n            failure: actionTypes.EDIT_PERSON_FAILURE,\r\n            success: actionTypes.EDIT_PERSON_SUCCESS,\r\n        },\r\n        type: null,\r\n    }\r\n};\r\n\r\nexport const resetEditPerson = () => ({ type: actionTypes.EDIT_PERSON_RESET });\r\n","import { IActionCall, ITransaction } from \"@types\";\r\nimport { ActivationUserService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const sendActivation = (token: string): IActionCall => ({\r\n    callAPI: () => ActivationUserService.postActivationUser(token),\r\n    types: {\r\n        loading: actionTypes.ACTIVATIONUSER_SEND,\r\n        success: actionTypes.ACTIVATIONUSER_SUCCESS,\r\n        failure: actionTypes.ACTIVATIONUSER_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetActivation = (): IActionCall => ({type: actionTypes.ACTIVATIONUSER_RESET});\r\n\r\n\r\n/**Action type = EXECUTE_MAIN */\r\nexport const saveUser = (requestBody: ITransaction, transaction: boolean = false): IActionCall => ({\r\n    callAPI: () => ActivationUserService.postSaveUser(requestBody),\r\n    types: {\r\n        loading: actionTypes.EXECUTE_MAIN,\r\n        success: actionTypes.EXECUTE_MAIN_SUCCESS,\r\n        failure: actionTypes.EXECUTE_MAIN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSaveUser = (): IActionCall => ({ type: actionTypes.EXECUTE_MAIN_RESET });\r\n\r\nexport const delUser = (requestBody: ITransaction, transaction: boolean = false): IActionCall => ({\r\n    callAPI: () => ActivationUserService.delUser(requestBody),\r\n    types: {\r\n        loading: actionTypes.DELUSER_SEND,\r\n        success: actionTypes.DELUSER_SUCCESS,\r\n        failure: actionTypes.DELUSER_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDelUser = (): IActionCall => ({type: actionTypes.DELUSER_RESET});"],"sourceRoot":""}