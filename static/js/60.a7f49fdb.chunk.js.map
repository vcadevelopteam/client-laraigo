{"version":3,"sources":["../node_modules/country-list/country-list.js","../node_modules/@material-ui/icons/Call.js","pages/channels/ChannelAddPhone.tsx","store/channel/actions.ts"],"names":["data","require","nameMap","codeMap","mapCodeAndName","country","name","toLowerCase","code","forEach","exports","overwrite","countries","length","foundIndex","findIndex","item","getCode","getName","getNames","map","getCodes","getCodeList","getNameList","getData","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","useChannelAddStyles","makeStyles","theme","button","fontSize","fontWeight","padding","textTransform","width","containerDetail","background","borderRadius","boxShadow","marginBottom","marginLeft","marginRight","marginTop","spacing","containerCapacities","paddingLeft","paddingRight","height","display","alignItems","justifyContent","flexDirection","flexWrap","containerItem","ChannelAddPhone","dispatch","useDispatch","t","useTranslation","dataRecordingStorage","text","langKeys","voicechannel_recordingmonth3","voicechannel_recordingmonth6","voicechannel_recordingyear1","voicechannel_recordingyear2","voicechannel_recordingyear3","dataRecordingQuality","voicechannel_recordingdefault","voicechannel_recordinghd","voicechannel_recordinglossless","categoriesResult","useSelector","state","voximplant","requestGetCategories","classes","countryStatesResult","requestGetCountryStates","executeResult","channel","successinsert","multiResult","main","multiData","history","useHistory","location","useLocation","regionsResult","requestGetRegions","mainResult","channelList","whatsAppData","useState","checkedRecording","setCheckedRecording","checkedSms","setCheckedSms","checkedOutbound","setCheckedOutbound","checkedCallSupervision","setCheckedCallSupervision","dataPaymentPlan","setDataPaymentPlan","categoryList","setCategoryList","countryList","setCountryList","channelreg","setChannelreg","coloricon","setcoloricon","fields","setFields","hasStates","setHasStates","hasNumber","setHasNumber","hasRegions","setHasRegions","nextButton","setNextButton","phoneBackup","setPhoneBackup","phoneNumber","setPhoneNumber","phonePrice","setPhonePrice","phoneInstallation","setPhoneInstallation","phoneInstallationBackup","setPhoneInstallationBackup","phoneTax","setPhoneTax","regionList","setRegionList","setInsert","setSetInsert","stateList","setStateList","viewSelected","setViewSelected","waitCategories","setWaitCategories","waitSave","setWaitSave","waitPlan","setWaitPlan","waitRegions","setWaitRegions","waitStates","setWaitStates","useEffect","getCategories","getMultiCollection","getPhoneTax","disableNextButton","service","category","region","recording","recordingquality","recordingstorage","loading","success","vcacomissionpervoicechannel","partialFields","cost","toString","costinstallation","costvca","formatNumber","showBackdrop","showSnackbar","show","severity","message","successful_register","integrationId","module","property","toLocaleLowerCase","temporalData","element","country_name","country_code","filter","phone_count","regulation_address_type","a","insertChannel","style","color","href","onClick","e","preventDefault","push","paths","CHANNELS_ADD","previoustext","className","textAlign","voximplant_buynumber","verticalAlign","voicechannel_capacities","control","checked","onChange","target","handleSwitchRecording","label","voicechannel_recording","title","voicechannel_recordingtooltip","placement","sms","handleSwitchSms","voicechannel_sms","voicechannel_smstooltip","outbound","handleSwitchOutbound","voicechannel_outbound","voicechannel_outboundtooltip","parameters","voximplantcallsupervision","handleSwitchCallSupervison","voicechannel_callsupervisor","voicechannel_callsupervisortooltip","phone_categories","categoryname","countryname","regionname","statename","handleCountry","optionDesc","optionValue","orderbylabel","variant","valueDefault","country_has_states","phone_price","phone_installation_price","getCountryStates","phone_category_name","getRegions","handleCategory","uset","prefixTranslation","voximplant_state","country_state","country_state_name","handleState","voximplant_region","phone_region_id","phone_region_name","handleRegion","handleSwitchRecordingStorage","voicechannel_recordingquality","handleSwitchRecordingQuality","voximplant_pricealert","voximplant_tooltip","alignContent","float","flexFlow","voicechannel_recordingalert","cursor","window","open","rel","disabled","next","maxWidth","commchannelfinishreg","description","setNameField","givechannelname","lineHeight","mb","givechannelcolor","fill","hex","prev","finishRegister","finishreg","CHANNELS","border","pageBreakInside","fontFamily","overflow","wordWrap","voximplant_numberbought","close","getChannelsList","accessToken","appId","callAPI","ChannelsService","getPagelist","types","actionTypes","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","type","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","activateChannel","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deleteChannel","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","insertChannel2","payload","chatIconFile","interface","iconbutton","headerIconFile","iconheader","botIconFile","iconbot","bubbleIconFile","bubble","iconbubble","chatIcon","headerIcon","botIcon","bubbleIcon","fd","FormData","append","CommonService","uploadFile","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","resetInsertChannel","INSERT_CHANNEL_RESET","editChannel","channelType","editchnl","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","resetEditChannel","EDIT_CHANNEL_RESET","getFacebookPages","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","resetGetFacebookPages","FACEBOOK_PAGES_RESET","getMessengerPages","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","resetGetMessengerPages","MESSENGER_PAGES_RESET","getInstagramPages","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","resetGetInstagramPages","INSTAGRAM_PAGES_RESET","getInstagramDMPages","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","resetGetInstagramDMPages","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE"],"mappings":"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","file":"static/js/60.a7f49fdb.chunk.js","sourcesContent":["'use strict'\n\nvar data = require('./data.json')\n\n/** Precompute name and code lookups. */\nvar nameMap = {}\nvar codeMap = {}\ndata.forEach(mapCodeAndName)\n\nfunction mapCodeAndName (country) {\n  nameMap[country.name.toLowerCase()] = country.code\n  codeMap[country.code.toLowerCase()] = country.name\n}\n\nexports.overwrite = function overwrite (countries) {\n  if (!countries || !countries.length) return\n  countries.forEach(function (country) {\n    var foundIndex = data.findIndex(function (item) {\n      return item.code === country.code\n    })\n    data[foundIndex] = country\n    mapCodeAndName(country)\n  })\n}\n\nexports.getCode = function getCode (name) {\n  return nameMap[name.toLowerCase()]\n}\n\nexports.getName = function getName (code) {\n  return codeMap[code.toLowerCase()]\n}\n\nexports.getNames = function getNames () {\n  return data.map(function (country) {\n    return country.name\n  })\n}\n\nexports.getCodes = function getCodes () {\n  return data.map(function (country) {\n    return country.code\n  })\n}\n\nexports.getCodeList = function getCodeList () {\n  return codeMap\n}\n\nexports.getNameList = function getNameList () {\n  return nameMap\n}\n\nexports.getData = function getData () {\n  return data\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.01 15.38c-1.23 0-2.42-.2-3.53-.56-.35-.12-.74-.03-1.01.24l-1.57 1.97c-2.83-1.35-5.48-3.9-6.89-6.83l1.95-1.66c.27-.28.35-.67.24-1.02-.37-1.11-.56-2.3-.56-3.53 0-.54-.45-.99-.99-.99H4.19C3.65 3 3 3.24 3 3.99 3 13.28 10.73 21 20.01 21c.71 0 .99-.63.99-1.18v-3.45c0-.54-.45-.99-.99-.99z\"\n}), 'Call');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Box, Breadcrumbs, Button, makeStyles, FormControlLabel } from \"@material-ui/core\";\r\nimport { ColorInput, FieldEdit, FieldSelect, FieldView, IOSSwitchPurple } from \"components\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { formatNumber, getPhoneTax } from \"common/helpers\";\r\nimport { getCategories, getCountryStates, getRegions } from \"store/voximplant/actions\";\r\nimport { getMultiCollection } from \"store/main/actions\";\r\nimport { getName } from \"country-list\";\r\nimport { insertChannel } from \"store/channel/actions\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport paths from \"common/constants/paths\";\r\nimport PhoneIcon from \"@material-ui/icons/Call\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\ninterface whatsAppData {\r\n    row?: any;\r\n    typeWhatsApp?: string;\r\n}\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        padding: 12,\r\n        textTransform: \"initial\",\r\n        width: \"180px\",\r\n    },\r\n    containerDetail: {\r\n        background: \"#fff\",\r\n        borderRadius: \"6px\",\r\n        boxShadow: \"0px 5px 10px 0px rgba(0, 0, 0, 0.5)\",\r\n        marginBottom: \"40px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        width: \"50%\",\r\n    },\r\n    containerCapacities: {\r\n        background: \"#EFEFF4\",\r\n        borderRadius: \"6px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        paddingLeft: \"10px\",\r\n        paddingRight: \"10px\",\r\n        padding: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    containerItem: {\r\n        display: \"flex\",\r\n        marginLeft: 0,\r\n        paddingLeft: 50,\r\n        marginRight: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: 120,\r\n    },\r\n}));\r\n\r\nexport const ChannelAddPhone: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const dataRecordingStorage = [{ value: \"month3\", text: t(langKeys.voicechannel_recordingmonth3) }, { value: \"month6\", text: t(langKeys.voicechannel_recordingmonth6) }, { value: \"year1\", text: t(langKeys.voicechannel_recordingyear1) }, { value: \"year2\", text: t(langKeys.voicechannel_recordingyear2) }, { value: \"year3\", text: t(langKeys.voicechannel_recordingyear3) }];\r\n    const dataRecordingQuality = [{ value: \"default\", text: t(langKeys.voicechannel_recordingdefault) }, { value: \"hd\", text: t(langKeys.voicechannel_recordinghd) }, { value: \"lossless\", text: t(langKeys.voicechannel_recordinglossless) }];\r\n\r\n    const categoriesResult = useSelector(state => state.voximplant.requestGetCategories);\r\n    const classes = useChannelAddStyles();\r\n    const countryStatesResult = useSelector(state => state.voximplant.requestGetCountryStates);\r\n    const executeResult = useSelector(state => state.channel.successinsert);\r\n    const multiResult = useSelector(state => state.main.multiData);\r\n    const history = useHistory();\r\n    const location = useLocation<whatsAppData>();\r\n    const regionsResult = useSelector(state => state.voximplant.requestGetRegions);\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const whatsAppData = location.state as whatsAppData | null;\r\n\r\n    const [checkedRecording, setCheckedRecording] = useState(false);\r\n    const [checkedSms, setCheckedSms] = useState(false);\r\n    const [checkedOutbound, setCheckedOutbound] = useState(false);\r\n    const [checkedCallSupervision, setCheckedCallSupervision] = useState(false);\r\n    const [dataPaymentPlan, setDataPaymentPlan] = useState<any>([]);\r\n    const [categoryList, setCategoryList] = useState<any>([]);\r\n    const [countryList, setCountryList] = useState<any>([]);\r\n    const [channelreg, setChannelreg] = useState(true);\r\n    const [coloricon, setcoloricon] = useState(\"#1A0E40\");\r\n    const [fields, setFields] = useState({\r\n        \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n        \"parameters\": {\r\n            \"apikey\": \"\",\r\n            \"chatflowenabled\": true,\r\n            \"color\": \"\",\r\n            \"coloricon\": \"#1A0E40\",\r\n            \"communicationchannelowner\": \"\",\r\n            \"communicationchannelsite\": \"\",\r\n            \"description\": \"\",\r\n            \"form\": \"\",\r\n            \"icons\": \"\",\r\n            \"id\": 0,\r\n            \"integrationid\": \"\",\r\n            \"other\": \"\",\r\n            \"type\": \"\",\r\n            \"voximplantcallsupervision\": false\r\n        },\r\n        \"service\": {\r\n            \"category\": \"\",\r\n            \"categoryname\": \"\",\r\n            \"country\": \"\",\r\n            \"countryname\": \"\",\r\n            \"region\": \"\",\r\n            \"regionname\": \"\",\r\n            \"state\": \"\",\r\n            \"statename\": \"\",\r\n            \"cost\": \"\",\r\n            \"costvca\": \"\",\r\n            \"costinstallation\": \"\",\r\n            \"recording\": false,\r\n            \"sms\": false,\r\n            \"outbound\": false,\r\n            \"callsupervision\": false,\r\n            \"recordingstorage\": \"\",\r\n            \"recordingquality\": \"\",\r\n        },\r\n        \"type\": \"VOXIMPLANTPHONE\",\r\n    });\r\n    const [hasStates, setHasStates] = useState(false);\r\n    const [hasNumber, setHasNumber] = useState(false);\r\n    const [hasRegions, setHasRegions] = useState(false);\r\n    const [nextButton, setNextButton] = useState(true);\r\n    const [phoneBackup, setPhoneBackup] = useState(0.00);\r\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n    const [phonePrice, setPhonePrice] = useState(0.00);\r\n    const [phoneInstallation, setPhoneInstallation] = useState(0.00);\r\n    const [phoneInstallationBackup, setPhoneInstallationBackup] = useState(0.00);\r\n    const [phoneTax, setPhoneTax] = useState(0.00);\r\n    const [regionList, setRegionList] = useState<any>([]);\r\n    const [setInsert, setSetInsert] = useState(false);\r\n    const [stateList, setStateList] = useState<any>([]);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitCategories, setWaitCategories] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [waitPlan, setWaitPlan] = useState(false);\r\n    const [waitRegions, setWaitRegions] = useState(false);\r\n    const [waitStates, setWaitStates] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories({}));\r\n        dispatch(getMultiCollection([\r\n            getPhoneTax(),\r\n        ]));\r\n        setWaitCategories(true);\r\n        setWaitPlan(true);\r\n    }, [])\r\n\r\n    const openPricingPage = () => {\r\n        window.open(\"https://laraigo.com/en/pricing/\", '_blank');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!multiResult.loading && waitPlan) {\r\n            setWaitPlan(false);\r\n            setDataPaymentPlan(multiResult.data[0] && multiResult.data[0].success ? multiResult.data[0].data : []);\r\n        }\r\n    }, [multiResult])\r\n\r\n    useEffect(() => {\r\n        setPhoneTax(0.00);\r\n        if (dataPaymentPlan) {\r\n            if (dataPaymentPlan.length > 0) {\r\n                setPhoneTax(dataPaymentPlan[0].vcacomissionpervoicechannel || 0);\r\n            }\r\n        }\r\n    }, [dataPaymentPlan])\r\n\r\n    useEffect(() => {\r\n        if (phonePrice) {\r\n            let partialFields = fields;\r\n            partialFields.service.cost = (phonePrice || 0).toString();\r\n            partialFields.service.costinstallation = (phoneInstallation || 0).toString();\r\n            partialFields.service.costvca = (formatNumber((phonePrice || 0) * (1 + (phoneTax || 0)))).toString();\r\n            setFields(partialFields);\r\n        }\r\n        else {\r\n            let partialFields = fields;\r\n            partialFields.service.cost = \"0\";\r\n            partialFields.service.costinstallation = \"0\";\r\n            partialFields.service.costvca = \"0\";\r\n            setFields(partialFields);\r\n        }\r\n    }, [phonePrice, phoneInstallation])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    useEffect(() => {\r\n        if (!mainResult.loading && setInsert) {\r\n            if (executeResult) {\r\n                setSetInsert(false);\r\n                setWaitSave(false);\r\n\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }));\r\n                dispatch(showBackdrop(false));\r\n\r\n                if (mainResult.data) {\r\n                    if (mainResult.data[0]) {\r\n                        setHasNumber(true);\r\n                        setPhoneNumber(mainResult.data[0].integrationId);\r\n                    }\r\n                }\r\n            } else if (!executeResult) {\r\n                setWaitSave(false);\r\n\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(mainResult.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() }) }))\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [mainResult])\r\n\r\n    useEffect(() => {\r\n        disableNextButton();\r\n    }, [regionList])\r\n\r\n    useEffect(() => {\r\n        if (waitCategories) {\r\n            if (!categoriesResult.loading) {\r\n                if (categoriesResult.data) {\r\n                    var temporalData = categoriesResult.data;\r\n                    temporalData.forEach(function (element: any) {\r\n                        element.country_name = getName(element.country_code);\r\n                    });\r\n                    setCountryList(temporalData);\r\n                }\r\n                setWaitCategories(false);\r\n            }\r\n        }\r\n    }, [categoriesResult, waitCategories])\r\n\r\n    useEffect(() => {\r\n        if (waitStates) {\r\n            if (!countryStatesResult.loading) {\r\n                if (countryStatesResult.data) {\r\n                    setStateList(countryStatesResult.data);\r\n                }\r\n                setWaitStates(false);\r\n            }\r\n        }\r\n    }, [countryStatesResult, waitStates])\r\n\r\n    useEffect(() => {\r\n        if (waitRegions) {\r\n            if (!regionsResult.loading) {\r\n                if (regionsResult.data) {\r\n                    setRegionList(regionsResult.data.filter((data: { phone_count: number; regulation_address_type: string; }) => data.phone_count > 0 && !data.regulation_address_type));\r\n                }\r\n                setWaitRegions(false);\r\n            }\r\n        }\r\n    }, [regionsResult, waitRegions])\r\n\r\n    function disableNextButton() {\r\n        setNextButton(true);\r\n        if (fields) {\r\n            if (fields.service) {\r\n                if (fields.service.category && fields.service.country) {\r\n                    if (fields.service.region) {\r\n                        if (hasStates) {\r\n                            if (fields.service.state) {\r\n                                if (fields.service.recording) {\r\n                                    if (fields.service.recordingquality && fields.service.recordingstorage) {\r\n                                        setNextButton(false);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    setNextButton(false);\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (fields.service.recording) {\r\n                                if (fields.service.recordingquality && fields.service.recordingstorage) {\r\n                                    setNextButton(false);\r\n                                }\r\n                            }\r\n                            else {\r\n                                setNextButton(false);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSwitchRecordingQuality = (value: any) => {\r\n        let partialFields = fields;\r\n        partialFields.service.recordingquality = value;\r\n        setFields(partialFields);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchRecordingStorage = (value: any) => {\r\n        let partialFields = fields;\r\n        partialFields.service.recordingstorage = value;\r\n        setFields(partialFields);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchRecording = (value: boolean) => {\r\n        let partialFields = fields;\r\n        partialFields.service.recording = value;\r\n\r\n        if (!value) {\r\n            partialFields.service.recordingquality = '';\r\n            partialFields.service.recordingstorage = '';\r\n        }\r\n\r\n        setFields(partialFields);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchSms = (value: boolean) => {\r\n        let partialFields = fields;\r\n        partialFields.service.sms = value;\r\n        setFields(partialFields);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchOutbound = (value: boolean) => {\r\n        let partialFields = fields;\r\n        partialFields.service.outbound = value;\r\n        setFields(partialFields);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchCallSupervison = (value: boolean) => {\r\n        let partialFields = fields;\r\n        partialFields.parameters.voximplantcallsupervision = value;\r\n        setFields(partialFields);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleCountry = (value: any) => {\r\n        if (value) {\r\n            setCategoryList(value.phone_categories || []);\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.category = \"\";\r\n            partialFields.service.country = value.country_code;\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.state = \"\";\r\n\r\n            partialFields.service.categoryname = \"\";\r\n            partialFields.service.countryname = value.country_name;\r\n            partialFields.service.regionname = \"\";\r\n            partialFields.service.statename = \"\";\r\n            setFields(partialFields);\r\n        }\r\n        else {\r\n            setHasRegions(false);\r\n            setHasStates(false);\r\n            setPhoneBackup(0.00);\r\n            setPhonePrice(0.00);\r\n            setPhoneInstallation(0.00);\r\n            setPhoneInstallationBackup(0.00);\r\n            setCategoryList([]);\r\n            setRegionList([]);\r\n            setStateList([]);\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.category = \"\";\r\n            partialFields.service.country = \"\";\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.state = \"\";\r\n\r\n            partialFields.service.categoryname = \"\";\r\n            partialFields.service.countryname = \"\";\r\n            partialFields.service.regionname = \"\";\r\n            partialFields.service.statename = \"\";\r\n            setFields(partialFields);\r\n        }\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleCategory = (value: any) => {\r\n        if (value) {\r\n            setHasStates(value.country_has_states || false);\r\n            setPhoneBackup(value.phone_price || 0.00);\r\n            setPhonePrice(value.phone_price || 0.00);\r\n            setPhoneInstallation(value.phone_installation_price || 0.00);\r\n            setPhoneInstallationBackup(value.phone_installation_price || 0.00);\r\n\r\n            if (value.country_has_states) {\r\n                dispatch(getCountryStates({ country_code: fields.service.country, phone_category_name: value.phone_category_name }));\r\n\r\n                setHasRegions(false);\r\n                setRegionList([]);\r\n                setWaitStates(true);\r\n            }\r\n            else {\r\n                setHasRegions(true);\r\n                setStateList([]);\r\n\r\n                dispatch(getRegions({ country_code: fields.service.country, phone_category_name: value.phone_category_name }));\r\n                setWaitRegions(true);\r\n            }\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.category = value.phone_category_name;\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.state = \"\";\r\n\r\n            partialFields.service.categoryname = value.phone_category_name;\r\n            partialFields.service.regionname = \"\";\r\n            partialFields.service.statename = \"\";\r\n            setFields(partialFields);\r\n        }\r\n        else {\r\n            setHasRegions(false);\r\n            setHasStates(false);\r\n            setPhoneBackup(0.00);\r\n            setPhonePrice(0.00);\r\n            setPhoneInstallation(0.00);\r\n            setPhoneInstallationBackup(0.00);\r\n            setRegionList([]);\r\n            setStateList([]);\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.category = \"\";\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.state = \"\";\r\n\r\n            partialFields.service.categoryname = \"\";\r\n            partialFields.service.regionname = \"\";\r\n            partialFields.service.statename = \"\";\r\n            setFields(partialFields);\r\n        }\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleState = (value: any) => {\r\n        if (value) {\r\n            let partialFields = fields;\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.state = value.country_state;\r\n\r\n            partialFields.service.regionname = \"\";\r\n            partialFields.service.statename = value.country_state_name;\r\n            setFields(partialFields);\r\n\r\n            setHasRegions(true);\r\n\r\n            dispatch(getRegions({ country_code: fields.service.country, phone_category_name: fields.service.category, country_state: value.country_state }));\r\n            setWaitRegions(true);\r\n        }\r\n        else {\r\n            setHasRegions(false);\r\n            setRegionList([]);\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.state = \"\";\r\n\r\n            partialFields.service.regionname = \"\";\r\n            partialFields.service.statename = \"\";\r\n            setFields(partialFields);\r\n        }\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleRegion = (value: any) => {\r\n        if (value) {\r\n            setPhonePrice((value.phone_price || phoneBackup) || 0.00);\r\n            setPhoneInstallation((value.phone_installation_price || phoneInstallationBackup) || 0.00);\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.region = value.phone_region_id;\r\n            partialFields.service.regionname = value.phone_region_name;\r\n            setFields(partialFields);\r\n        }\r\n        else {\r\n            setPhonePrice(phoneBackup || 0.00);\r\n            setPhoneInstallation(phoneInstallationBackup || 0.00);\r\n\r\n            let partialFields = fields;\r\n            partialFields.service.region = \"\";\r\n            partialFields.service.regionname = \"\";\r\n            setFields(partialFields);\r\n        }\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    async function finishRegister() {\r\n        dispatch(insertChannel(fields));\r\n\r\n        setSetInsert(true);\r\n        setWaitSave(true);\r\n    }\r\n\r\n    function setNameField(value: any) {\r\n        setChannelreg(value === \"\");\r\n        let partialFields = fields;\r\n        partialFields.parameters.description = value;\r\n        setFields(partialFields);\r\n    }\r\n\r\n    if (viewSelected === \"view1\") {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                        {t(langKeys.previoustext)}\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div className={classes.containerDetail}>\r\n                        <div style={{ textAlign: \"left\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.voximplant_buynumber)}</div>\r\n                        <div className={classes.containerCapacities}>\r\n                            <div style={{ verticalAlign: \"middle\", marginRight: \"30px\" }}>\r\n                                <b>{t(langKeys.voicechannel_capacities)}</b>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedRecording} onChange={(e) => { setCheckedRecording(e.target.checked); handleSwitchRecording(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_recording)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_recordingtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedSms} onChange={(e) => { setCheckedSms(e.target.checked); handleSwitchSms(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_sms)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_smstooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedOutbound} onChange={(e) => { setCheckedOutbound(e.target.checked); handleSwitchOutbound(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_outbound)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_outboundtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedCallSupervision} onChange={(e) => { setCheckedCallSupervision(e.target.checked); handleSwitchCallSupervison(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_callsupervisor)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_callsupervisortooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={countryList}\r\n                                label={t(langKeys.country)}\r\n                                loading={categoriesResult.loading}\r\n                                onChange={(value: any) => { handleCountry(value); }}\r\n                                optionDesc=\"country_name\"\r\n                                optionValue=\"country_code\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={fields?.service?.country || \"\"}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={categoryList}\r\n                                label={t(langKeys.category)}\r\n                                loading={categoriesResult.loading}\r\n                                onChange={(value: any) => { handleCategory(value); }}\r\n                                optionDesc=\"phone_category_name\"\r\n                                optionValue=\"phone_category_name\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={fields?.service?.category || \"\"}\r\n                                uset={true}\r\n                                prefixTranslation=\"voximplantcategory_\"\r\n                            />\r\n                        </div>\r\n                        {hasStates && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={stateList}\r\n                                label={t(langKeys.voximplant_state)}\r\n                                loading={countryStatesResult.loading}\r\n                                onChange={(value: any) => { handleState(value); }}\r\n                                optionDesc=\"country_state_name\"\r\n                                optionValue=\"country_state\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={fields?.service?.state || \"\"}\r\n                            />\r\n                        </div>}\r\n                        {hasRegions && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={regionList}\r\n                                label={t(langKeys.voximplant_region)}\r\n                                loading={regionsResult.loading}\r\n                                onChange={(value: any) => { handleRegion(value); }}\r\n                                optionDesc=\"phone_region_name\"\r\n                                optionValue=\"phone_region_id\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={fields?.service?.region || \"\"}\r\n                            />\r\n                        </div>}\r\n                        {checkedRecording && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={dataRecordingStorage}\r\n                                label={t(langKeys.voicechannel_recording)}\r\n                                onChange={(value: any) => { handleSwitchRecordingStorage(value); }}\r\n                                optionDesc=\"text\"\r\n                                optionValue=\"value\"\r\n                                variant=\"outlined\"\r\n                                valueDefault={fields?.service?.recordingstorage || \"\"}\r\n                            />\r\n                        </div>}\r\n                        {checkedRecording && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={dataRecordingQuality}\r\n                                label={t(langKeys.voicechannel_recordingquality)}\r\n                                onChange={(value: any) => { handleSwitchRecordingQuality(value); }}\r\n                                optionDesc=\"text\"\r\n                                optionValue=\"value\"\r\n                                variant=\"outlined\"\r\n                                valueDefault={fields?.service?.recordingquality || \"\"}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"row-zyx\">\r\n                            <div style={{ display: \"inline-block\" }}>\r\n                                <div>\r\n                                    <b style={{ paddingLeft: \"6px\" }}>{t(langKeys.voximplant_pricealert)}</b>\r\n                                    <Tooltip title={`${t(langKeys.voximplant_tooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                    </Tooltip>\r\n                                    <b style={{ paddingRight: \"20px\", textAlign: \"right\", alignContent: \"right\", float: \"right\" }}>{`$${formatNumber(phonePrice * (1 + (phoneTax || 0)))}`}</b>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {(checkedRecording || checkedSms || checkedOutbound) && <div className=\"row-zyx\">\r\n                            <div style={{ display: \"flex\", flexFlow: \"row\", flexWrap: \"wrap\" }}>\r\n                                <p><b style={{ color: \"#762AA9\" }}>{t(langKeys.voicechannel_recordingalert)}</b><a style={{ fontWeight: 'bold', cursor: 'pointer' }} onClick={openPricingPage} rel=\"noopener noreferrer\">https://laraigo.com/en/pricing/</a></p>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"64%\" }}>\r\n                        <Button\r\n                            disabled={nextButton || regionsResult.loading}\r\n                            onClick={() => { setViewSelected(\"view2\") }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >{t(langKeys.next)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                {hasNumber === false && <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setViewSelected(\"view1\") }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.commchannelfinishreg)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={(value) => setNameField(value)}\r\n                                label={t(langKeys.givechannelname)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <div className=\"col-6\">\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                                    {t(langKeys.givechannelcolor)}\r\n                                </Box>\r\n                                <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                                    <PhoneIcon style={{ fill: `${coloricon}`, width: \"100px\", height: \"100px\" }} />\r\n                                    <ColorInput\r\n                                        hex={fields.parameters.coloricon}\r\n                                        onChange={e => {\r\n                                            setFields(prev => ({\r\n                                                ...prev,\r\n                                                parameters: { ...prev.parameters, coloricon: e.hex, color: e.hex },\r\n                                            }));\r\n                                            setcoloricon(e.hex)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ paddingLeft: \"80%\" }}>\r\n                            <Button\r\n                                onClick={() => { finishRegister() }}\r\n                                className={classes.button}\r\n                                disabled={channelreg || mainResult.loading}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.finishreg)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {hasNumber === true && <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS); }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.commchannelfinishreg)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldView\r\n                                label={t(langKeys.givechannelname)}\r\n                                value={fields?.parameters?.description}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <div className=\"col-6\">\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                                    {t(langKeys.givechannelcolor)}\r\n                                </Box>\r\n                                <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                                    <PhoneIcon style={{ fill: `${coloricon}`, width: \"100px\", height: \"100px\" }} />\r\n                                    <ColorInput\r\n                                        hex={fields.parameters.coloricon}\r\n                                        onChange={e => {\r\n                                            setFields(prev => ({\r\n                                                ...prev,\r\n                                                parameters: { ...prev.parameters, coloricon: e.hex, color: e.hex },\r\n                                            }));\r\n                                            setcoloricon(e.hex)\r\n                                        }}\r\n                                        disabled={true}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ display: \"flex\", flexDirection: \"column\", marginLeft: 200, marginRight: 200, marginBottom: 20 }}>\r\n                            <pre style={{ background: \"#f4f4f4\", border: \"1px solid #ddd\", color: \"#666\", pageBreakInside: \"avoid\", fontFamily: \"monospace\", lineHeight: 1.6, maxWidth: \"100%\", overflow: \"auto\", padding: \"1em 1.5em\", display: \"block\", wordWrap: \"break-word\" }}>\r\n                                <code>\r\n                                    {`${t(langKeys.voximplant_numberbought)}${phoneNumber}`}\r\n                                </code>\r\n                            </pre>\r\n                        </div>\r\n                        <div style={{ paddingLeft: \"80%\" }}>\r\n                            <Button\r\n                                onClick={() => { history.push(paths.CHANNELS); }}\r\n                                className={classes.button}\r\n                                disabled={channelreg}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.close)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ChannelAddPhone","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });"],"sourceRoot":""}