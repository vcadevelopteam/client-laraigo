{"version":3,"sources":["components/fields/table-simple.tsx"],"names":["useStyles","makeStyles","theme","footerTable","display","breakpoints","up","justifyContent","textAlign","alignItems","trdynamic","boxShadow","visibility","containerSearch","width","containerFilterGeneral","backgroundColor","padding","spacing","containerfloat","borderBottom","marginTop","position","zIndex","left","iconOrder","height","color","palette","text","primary","button","fontWeight","fontSize","textTransform","title","containerButtons","gridGap","gridAutoFlow","containerHeader","flexWrap","gap","containerHeaderColumn","iconHelpText","cursor","stringOptionsMenu","key","value","numberOptionsMenu","dateOptionsMenu","booleanOptionsMenu","BooleanOptionsMenuComponent","handleClickItemMenu","t","useTranslation","onChange","e","target","map","option","SelectFilterTmp","data","langKeys","all","DateOptionsMenuComponent","useState","value2","setvalue2","useEffect","utils","DateFnsUtils","locale","localesLaraigo","navigator","language","split","invalidDateMessage","invalid_date_format","format","getLocaleDateString","style","minWidth","TimeOptionsMenuComponent","ampm","views","error","helperText","OptionsMenuComponent","type","operator","selected","onClick","TableZyx","React","memo","titlemodule","columns","fetchData","download","register","handleRegister","calculate","handleCalculate","HeadComponent","ButtonsElement","triggerExportPersonalized","exportPersonalized","pageSizeDefault","importCSV","handleTemplate","filterGeneral","loading","useSelection","selectionKey","initialSelectedRows","setSelectedRows","allRowsSelected","setAllRowsSelected","onClickRow","toolsFooter","initialPageIndex","initialStateFilter","registertext","setDataFiltered","useFooter","heightWithCheck","checkHistoryCenter","classes","dispatch","useDispatch","initial","setInitial","filterCellValue","useCallback","rows","id","filterValue","filter","row","cellvalue","values","undefined","includes","Number","toLowerCase","defaultColumn","useMemo","Filter","props","column","header","$setFilter","setFilter","listSelectFilter","iSF","x","setValue","anchorEl","setAnchorEl","open","Boolean","setoperator","setMemoryTable","op","keyPress","keyCode","flexDirection","Fragment","date","Date","isNaN","valueOf","toISOString","toLocaleTimeString","fullWidth","onKeyDown","event","currentTarget","size","onClose","PaperProps","maxHeight","DefaultColumnFilter","useTable","initialState","pageSize","selectedRowIds","filters","getRowId","relativeIndex","parent","join","useFilters","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","push","Header","getToggleAllPageRowsSelectedProps","Cell","checked","isSelected","toggleRowSelected","NoFilter","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","globalFilteredRows","setGlobalFilter","state","pageIndex","toggleAllRowsSelected","original","RenderRow","index","getRowProps","hover","cells","cell","_","getCellProps","flex","maxWidth","overflow","textOverflow","whiteSpace","render","className","mb","arrow","placement","flexGrow","disabled","marginLeft","name","accept","files","htmlFor","variant","component","startIcon","i18nKey","import","template","exportExcel","String","isComponent","activeOnHover","colorPlaceHolder","handleChangeOther","lazy","headerGroup","getHeaderGroupProps","headers","ii","getHeaderProps","getSortByToggleProps","wordWrap","isSorted","isSortedDesc","helpText","LoadingSkeleton","length","overflowX","direction","window","innerHeight","itemCount","itemSize","i","group","getFooterGroupProps","getFooterProps","tablePageOf","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","totalItems","disableUnderline","marginRight","recordPerPage","count","items"],"mappings":"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","file":"static/js/1.3303d02b.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { exportExcel, getLocaleDateString, localesLaraigo } from 'common/helpers';\r\nimport { setMemoryTable } from 'store/main/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    MoreVert as MoreVertIcon,\r\n    Refresh as RefreshIcon,\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Dictionary, TableConfig } from '@types'\r\nimport { SearchField } from 'components';\r\nimport { DownloadIcon } from 'icons';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect\r\n} from 'react-table'\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { FixedSizeList } from 'react-window';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { TableFooter } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerSearch: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%',\r\n        },\r\n    },\r\n    containerFilterGeneral: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#FFF',\r\n        padding: `${theme.spacing(1)}px`,\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        gridGap: theme.spacing(1),\r\n        display: 'grid',\r\n        gridAutoFlow: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        flexWrap: 'wrap',\r\n        gap: 8,\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        }\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nexport const stringOptionsMenu = [\r\n    { key: 'equals', value: 'equals' },\r\n    { key: 'notequals', value: 'notequals' },\r\n    { key: 'contains', value: 'contains' },\r\n    { key: 'notcontains', value: 'notcontains' },\r\n    { key: 'isempty', value: 'isempty' },\r\n    { key: 'isnotempty', value: 'isnotempty' },\r\n    // { key: 'isnull', value: 'isnull' },\r\n    // { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const numberOptionsMenu = [\r\n    { key: 'equals', value: 'equals' },\r\n    { key: 'notequals', value: 'notequals' },\r\n    { key: 'greater', value: 'greater' },\r\n    { key: 'greaterorequals', value: 'greaterorequals' },\r\n    { key: 'less', value: 'less' },\r\n    { key: 'lessorequals', value: 'lessorequals' },\r\n    { key: 'isempty', value: 'isempty' },\r\n    { key: 'isnotempty', value: 'isnotempty' },\r\n    // { key: 'isnull', value: 'isnull' },\r\n    // { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const dateOptionsMenu = [\r\n    { key: 'equals', value: 'equals' },\r\n    { key: 'notequals', value: 'notequals' },\r\n    { key: 'after', value: 'after' },\r\n    { key: 'afterequals', value: 'afterequals' },\r\n    { key: 'before', value: 'before' },\r\n    { key: 'beforeequals', value: 'beforeequals' },\r\n    // { key: 'isnull', value: 'isnull' },\r\n    // { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const booleanOptionsMenu = [\r\n    { key: 'all', value: 'all' },\r\n    { key: 'istrue', value: 'istrue' },\r\n    { key: 'isfalse', value: 'isfalse' },\r\n    { key: 'isnull', value: 'isnull' },\r\n    { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const BooleanOptionsMenuComponent: React.FC<{ value: any; handleClickItemMenu: (key: any) => void }> = ({ value, handleClickItemMenu }) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Select\r\n            value={value || 'all'}\r\n            onChange={(e) => handleClickItemMenu(e.target.value)}\r\n        >\r\n            {booleanOptionsMenu.map((option) => (\r\n                <MenuItem key={option.key} value={option.key}>\r\n                    {t(option.value)}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport const SelectFilterTmp: React.FC<{ value: any; data: any[]; handleClickItemMenu: (key: any) => void }> = ({ value, data, handleClickItemMenu }) => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <Select\r\n            value={value || '_ALL'}\r\n            onChange={(e) => handleClickItemMenu(e.target.value)}\r\n        >\r\n            <MenuItem value='_ALL'>\r\n                {t(langKeys.all)}\r\n            </MenuItem>\r\n            {data.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                    {t(option.key)}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport const DateOptionsMenuComponent = (value: any, handleClickItemMenu: (key: any) => void) => {\r\n    const { t } = useTranslation();\r\n    const [value2, setvalue2] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (value === 'isnull' || value === 'isnotnull') {\r\n            setvalue2(null)\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={(localesLaraigo() as any)[navigator.language.split('-')[0]]}>\r\n            <KeyboardDatePicker\r\n                invalidDateMessage={t(langKeys.invalid_date_format)}\r\n                format={getLocaleDateString()}\r\n                value={value2}\r\n                onChange={(e: any) => {\r\n                    handleClickItemMenu(e);\r\n                    setvalue2(e)\r\n                }}\r\n                style={{ minWidth: '150px' }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport const TimeOptionsMenuComponent = (value: any, handleClickItemMenu: (key: any) => void) => {\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={(localesLaraigo())[navigator.language.split('-')[0]]}>\r\n            <KeyboardTimePicker\r\n                ampm={false}\r\n                views={['hours', 'minutes', 'seconds']}\r\n                format=\"HH:mm:ss\"\r\n                error={false}\r\n                helperText={''}\r\n                value={value === '' ? null : value}\r\n                onChange={(e: any) => handleClickItemMenu(e)}\r\n                style={{ minWidth: '150px' }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n\r\n    )\r\n}\r\n\r\nexport const OptionsMenuComponent = (type: string, operator: string, handleClickItemMenu: (key: any) => void) => {\r\n    const { t } = useTranslation();\r\n    switch (type) {\r\n        case \"number\": case \"number-centered\":\r\n            return (\r\n                numberOptionsMenu.map((option) => (\r\n                    <MenuItem key={option.key} selected={option.key === operator} onClick={() => handleClickItemMenu(option.key)}>\r\n                        {t(option.value)}\r\n                    </MenuItem>\r\n                ))\r\n            )\r\n        case \"date\": case \"datetime-local\": case \"time\":\r\n            return (\r\n                dateOptionsMenu.map((option) => (\r\n                    <MenuItem key={option.key} selected={option.key === operator} onClick={() => handleClickItemMenu(option.key)}>\r\n                        {t(option.value)}\r\n                    </MenuItem>\r\n                ))\r\n            )\r\n        case \"string\": case \"color\":\r\n        default:\r\n            return (\r\n                stringOptionsMenu.map((option) => (\r\n                    <MenuItem key={option.key} selected={option.key === operator} onClick={() => handleClickItemMenu(option.key)}>\r\n                        {t(option.value)}\r\n                    </MenuItem>\r\n                ))\r\n            )\r\n    }\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    download = true,\r\n    register,\r\n    handleRegister,\r\n    calculate = false,\r\n    handleCalculate,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    triggerExportPersonalized,\r\n    exportPersonalized,\r\n    pageSizeDefault = 20,\r\n    importCSV,\r\n    handleTemplate,\r\n    filterGeneral = true,\r\n    loading = false,\r\n    useSelection,\r\n    selectionKey,\r\n    initialSelectedRows,\r\n    setSelectedRows,\r\n    allRowsSelected,\r\n    setAllRowsSelected,\r\n    onClickRow,\r\n    toolsFooter = true,\r\n    initialPageIndex = 0,\r\n    helperText = \"\",\r\n    initialStateFilter,\r\n    registertext,\r\n    setDataFiltered,\r\n    useFooter = false,\r\n    heightWithCheck = 43,\r\n    checkHistoryCenter = false\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [initial, setInitial] = useState(true);\r\n\r\n    const DefaultColumnFilter = ({\r\n        column: { id: header, setFilter: $setFilter, listSelectFilter = [], type = \"string\" },\r\n    }: any) => {\r\n        const iSF = initialStateFilter?.filter(x => x.id === header)[0];\r\n        const [value, setValue] = useState(iSF?.value.value || '');\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n        const open = Boolean(anchorEl);\r\n        const [operator, setoperator] = useState(iSF?.value.operator || \"contains\");\r\n\r\n        const setFilter = (filter: any) => {\r\n            $setFilter(filter);\r\n\r\n            dispatch(setMemoryTable({\r\n                filter: {\r\n                    [header]: {\r\n                        value: filter.value,\r\n                        operator: filter.operator,\r\n                        type: filter.type\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n\r\n        const handleCloseMenu = () => {\r\n            setAnchorEl(null);\r\n        };\r\n        const handleClickItemMenu = (op: any) => {\r\n            setAnchorEl(null);\r\n            if (type === 'boolean') {\r\n                setoperator(op)\r\n                setValue(op);\r\n                setFilter({ value: op, operator: op, type });\r\n            } else if (type === \"select\") {\r\n                setValue(op);\r\n                setFilter({ value: op, operator: op, type });\r\n            } else {\r\n                if (['isempty', 'isnotempty', 'isnull', 'isnotnull'].includes(op) || !!value) {\r\n                    setFilter({ value, operator: op, type });\r\n                }\r\n                setoperator(op)\r\n            }\r\n        };\r\n        const handleClickMenu = (event: any) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n        const keyPress = React.useCallback((e) => {\r\n            if (e.keyCode === 13) {\r\n                setFilter({ value, operator, type });\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [value, operator])\r\n        const handleDate = (date: Date) => {\r\n            if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n                setValue(date?.toISOString() || '');\r\n                setFilter({\r\n                    value: date?.toISOString().split('T')[0] || '',\r\n                    operator,\r\n                    type\r\n                })\r\n            }\r\n        }\r\n        const handleTime = (date: Date) => {\r\n            if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n                setValue(date?.toISOString() || '');\r\n                setFilter({\r\n                    value: date?.toLocaleTimeString(),\r\n                    operator,\r\n                    type\r\n                })\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (!initialStateFilter?.filter(x => x.id === header)[0]) {\r\n                switch (type) {\r\n                    case \"number\": case \"number-centered\":\r\n                    case \"date\":\r\n                    case \"datetime-local\":\r\n                    case \"time\":\r\n                    case \"select\":\r\n                        setoperator(\"equals\");\r\n                        break;\r\n                    case \"boolean\":\r\n                        setoperator(\"all\");\r\n                        break;\r\n                    case \"string\": case \"color\":\r\n                    default:\r\n                        setoperator(\"contains\");\r\n                        break;\r\n                }\r\n            }\r\n        }, [type]);\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {type === 'boolean' ? (\r\n                    <BooleanOptionsMenuComponent\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                    />)\r\n                    : (type === \"select\" ?\r\n                        <SelectFilterTmp\r\n                            value={value}\r\n                            handleClickItemMenu={handleClickItemMenu}\r\n                            data={listSelectFilter}\r\n                        /> :\r\n                        <React.Fragment>\r\n                            {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                            {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                            {!['date', 'time'].includes(type) &&\r\n                                <Input\r\n                                    // disabled={loading}\r\n                                    type={type}\r\n                                    style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                    fullWidth\r\n                                    value={value}\r\n                                    onKeyDown={keyPress}\r\n                                    onChange={e => {\r\n                                        setValue(e.target.value || '');\r\n                                        if (['date'].includes(type)) {\r\n                                            setFilter({ value: e.target.value, operator, type });\r\n                                        }\r\n                                    }}\r\n                                />}\r\n                            <IconButton\r\n                                onClick={handleClickMenu}\r\n                                size=\"small\"\r\n                            >\r\n                                <MoreVertIcon\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    aria-label=\"more\"\r\n                                    aria-controls=\"long-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    color=\"action\"\r\n                                    fontSize=\"small\"\r\n                                />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleCloseMenu}\r\n                                PaperProps={{\r\n                                    style: {\r\n                                        maxHeight: 48 * 4.5,\r\n                                        width: '20ch',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {OptionsMenuComponent(type, operator, handleClickItemMenu)}\r\n                            </Menu>\r\n                        </React.Fragment>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const filterCellValue = React.useCallback((rows, id, filterValue) => {\r\n        const { value, operator, type } = filterValue;\r\n        return rows.filter((row: any) => {\r\n            const cellvalue = row.values[id] === null || row.values[id] === undefined ? \"\" : row.values[id];\r\n            // if (cellvalue === undefined)\r\n            //     return false;\r\n\r\n            // if (!(['isempty', 'isnotempty', 'isnull', 'isnotnull'].includes(operator) || type === 'boolean') && (value || '') === '')\r\n            //     return true;\r\n\r\n            if (value === '' && !['isempty', 'isnotempty', 'isnull', 'isnotnull'].includes(operator))\r\n                return true;\r\n\r\n            switch (type) {\r\n                case \"number\": case \"number-centered\":\r\n                    switch (operator) {\r\n                        case 'greater':\r\n                            return cellvalue > Number(value);\r\n                        case 'greaterorequals':\r\n                            return cellvalue >= Number(value);\r\n                        case 'less':\r\n                            return cellvalue < Number(value);\r\n                        case 'lessorequals':\r\n                            return cellvalue <= Number(value);\r\n                        case 'isnull':\r\n                            return cellvalue === \"\";\r\n                        case 'isnotnull':\r\n                            return cellvalue !== \"\";\r\n                        case 'notequals':\r\n                            return cellvalue !== Number(value);\r\n                        case 'equals':\r\n                        default:\r\n                            return cellvalue === Number(value);\r\n                    }\r\n                case \"date\": case \"datetime-local\": case \"time\":\r\n                    switch (operator) {\r\n                        case 'after':\r\n                            return cellvalue > value;\r\n                        case 'afterequals':\r\n                            return cellvalue >= value;\r\n                        case 'before':\r\n                            return cellvalue < value;\r\n                        case 'beforeequals':\r\n                            return cellvalue <= value;\r\n                        case 'isnull':\r\n                            return cellvalue === \"\";\r\n                        case 'isnotnull':\r\n                            return cellvalue !== \"\";\r\n                        case 'notequals':\r\n                            return cellvalue !== value;\r\n                        case 'equals':\r\n                        default:\r\n                            return cellvalue === value;\r\n                    }\r\n                case \"boolean\":\r\n                    switch (operator) {\r\n                        case 'istrue':\r\n                            return typeof (cellvalue) === 'string' ? cellvalue === 'true' : cellvalue === true;\r\n                        case 'isfalse':\r\n                            return typeof (cellvalue) === 'string' ? cellvalue === 'false' : cellvalue === false;\r\n                        case 'isnull':\r\n                            return cellvalue === \"\";\r\n                        case 'isnotnull':\r\n                            return cellvalue !== \"\";\r\n                        case 'all':\r\n                        default:\r\n                            return true;\r\n                    }\r\n                case \"select\":\r\n                    switch (operator) {\r\n                        default:\r\n                            return value === '_ALL' ? true : cellvalue === value;\r\n                    }\r\n                case \"string\":\r\n                default:\r\n                    switch (operator) {\r\n                        case 'equals':\r\n                            return cellvalue === value;\r\n                        case 'notequals':\r\n                            return cellvalue !== value;\r\n                        case 'isempty':\r\n                            return cellvalue === '';\r\n                        case 'isnotempty':\r\n                            return cellvalue !== '';\r\n                        case 'isnull':\r\n                            return cellvalue == null;\r\n                        case 'isnotnull':\r\n                            return cellvalue != null;\r\n                        case 'notcontains':\r\n                            return !(cellvalue + \"\").toLowerCase().includes(value.toLowerCase());\r\n                        case 'contains':\r\n                        default:\r\n                            return (cellvalue + \"\").toLowerCase().includes(value.toLowerCase());\r\n                    }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default Filter UI\r\n            Filter: (props: any) => DefaultColumnFilter({ ...props, data }),\r\n            filter: filterCellValue,\r\n        }),\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        footerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        globalFilteredRows,\r\n        setGlobalFilter,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n        toggleAllRowsSelected\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageSize: pageSizeDefault, selectedRowIds: initialSelectedRows || {}, filters: initialStateFilter || [] },\r\n        defaultColumn,\r\n        getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n            ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n            : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n    },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\r\n                        <div>\r\n                            <Checkbox\r\n                                color=\"primary\"\r\n                                style={{ padding: '0 24px 0 16px' }}\r\n                                {...getToggleAllPageRowsSelectedProps()}\r\n                            />\r\n                        </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n\r\n                        <div>\r\n                            {checkHistoryCenter === true ? <Checkbox\r\n                                color=\"primary\"\r\n                                style={{ padding: '0 24px 0 16px', height: 68 }}\r\n                                checked={row.isSelected}\r\n                                onChange={(e) => row.toggleRowSelected()}\r\n                            /> :\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: '0 24px 0 16px' }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />}\r\n                        </div>\r\n                    ),\r\n                    NoFilter: true,\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        setDataFiltered && setDataFiltered(globalFilteredRows.map(x => x.original));\r\n    }, [globalFilteredRows])\r\n\r\n\r\n    useEffect(() => {\r\n        if (initialStateFilter) {\r\n            if (initial) {\r\n                gotoPage(initialPageIndex);\r\n                setInitial(false)\r\n            } else {\r\n                dispatch(setMemoryTable({\r\n                    page: 0\r\n                }));\r\n            }\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        let next = true;\r\n        if (fetchData && next) {\r\n            fetchData();\r\n        }\r\n    }, [fetchData])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        if (allRowsSelected) {\r\n            toggleAllRowsSelected(true);\r\n            setAllRowsSelected && setAllRowsSelected(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [allRowsSelected])\r\n\r\n    const RenderRow = React.useCallback(\r\n        ({ index, style }) => {\r\n            style = { ...style, display: 'flex', alignItems: 'flex-end', cursor: onClickRow ? 'pointer' : 'default' }\r\n            const row = page[index]\r\n            prepareRow(row);\r\n            return (\r\n                <TableRow\r\n                    {...row.getRowProps({ style })}\r\n                    hover\r\n                >\r\n                    {row.cells.map((cell, _) =>\r\n                        <TableCell\r\n                            {...cell.getCellProps({\r\n                                style: {\r\n                                    ...(cell.column.width === 'auto' ? {\r\n                                        flex: 1,\r\n                                    } : {\r\n                                        minWidth: cell.column.minWidth,\r\n                                        width: cell.column.width,\r\n                                        maxWidth: cell.column.maxWidth,\r\n                                    }),\r\n                                    overflow: 'hidden',\r\n                                    textOverflow: 'ellipsis',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                },\r\n                            })}\r\n                            onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original, cell?.column?.id) : null}\r\n                        >\r\n                            {cell.render('Cell')}\r\n                        </TableCell>\r\n                    )}\r\n                </TableRow>\r\n            )\r\n        },\r\n        [headerGroups, prepareRow, page]\r\n    )\r\n\r\n    return (\r\n        <Box width={1} >\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                {titlemodule ? <span className={classes.title}>\r\n                    {titlemodule}\r\n                    {helperText !== \"\" ? <Tooltip title={<div style={{ fontSize: 12 }}>{helperText}</div>} arrow placement=\"top\" >\r\n                        <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                    </Tooltip> : \"\"}\r\n                </span> : (<div style={{ flexGrow: 1 }}>\r\n                    {ButtonsElement && <ButtonsElement />}\r\n                </div>)}\r\n                <span className={classes.containerButtons}>\r\n                    {fetchData && (\r\n                        <Tooltip title=\"Refresh\">\r\n                            <Fab\r\n                                size=\"small\"\r\n                                aria-label=\"add\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                style={{ marginLeft: '1rem' }}\r\n                                onClick={() => fetchData && fetchData({})}\r\n                            >\r\n                                <RefreshIcon />\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    )}\r\n                    {(ButtonsElement && !!titlemodule) && <ButtonsElement />}\r\n                    {importCSV && (\r\n                        <>\r\n                            <input\r\n                                name=\"file\"\r\n                                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.csv\"\r\n                                id=\"laraigo-upload-csv-file\"\r\n                                type=\"file\"\r\n                                style={{ display: 'none' }}\r\n                                onChange={(e) => importCSV(e.target.files)}\r\n                            />\r\n                            <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    component=\"span\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    startIcon={<BackupIcon color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                ><Trans i18nKey={langKeys.import} />\r\n                                </Button>\r\n                            </label>\r\n                            {\r\n                                handleTemplate &&\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    component=\"span\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    startIcon={<ListAltIcon color=\"secondary\" />}\r\n                                    onClick={handleTemplate}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                ><Trans i18nKey={langKeys.template} />\r\n                                </Button>\r\n                            }\r\n                        </>\r\n                    )}\r\n                    {register && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            startIcon={<AddIcon color=\"secondary\" />}\r\n                            onClick={handleRegister}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        ><Trans i18nKey={registertext || langKeys.register} />\r\n                        </Button>\r\n                    )}\r\n                    {calculate && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            startIcon={<RefreshIcon color=\"secondary\" />}\r\n                            onClick={handleCalculate}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        ><Trans i18nKey={langKeys.calculate} />\r\n                        </Button>\r\n                    )}\r\n                    {download && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            onClick={() => triggerExportPersonalized ? exportPersonalized && exportPersonalized() : exportExcel(String(titlemodule || '') + \"Report\", globalFilteredRows.map(x => x.original), columns.filter((x: any) => (!x.isComponent && !x.activeOnHover)))}\r\n                            startIcon={<DownloadIcon />}\r\n                        ><Trans i18nKey={langKeys.download} />\r\n                        </Button>\r\n                    )}\r\n                </span>\r\n            </Box>\r\n            {filterGeneral && (\r\n                <Box className={classes.containerFilterGeneral}>\r\n                    <span></span>\r\n                    <div className={classes.containerSearch}>\r\n                        <SearchField\r\n                            disabled={loading}\r\n                            colorPlaceHolder='#FFF'\r\n                            handleChangeOther={setGlobalFilter}\r\n                            lazy\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            )}\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\" >\r\n                    <Table size=\"small\" {...getTableProps()} aria-label=\"enhanced table\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead style={{ display: 'table-header-group' }}>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow  {...headerGroup.getHeaderGroupProps()} style={useSelection ? { display: 'flex' } : {}}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell key={ii} style={useSelection ? {\r\n                                                ...(column.width === 'auto' ? {\r\n                                                    flex: 1,\r\n                                                } : {\r\n                                                    minWidth: column.minWidth,\r\n                                                    width: column.width,\r\n                                                    maxWidth: column.maxWidth,\r\n                                                })\r\n                                            } : {}}>\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header') :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n\r\n                                                                {...column.getHeaderProps(column.getSortByToggleProps({ title: 'ordenar' }))}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {column.isSorted && (\r\n                                                                    column.isSortedDesc ?\r\n                                                                        <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                        :\r\n                                                                        <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                )}\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12 }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <div>{!column.NoFilter && column.render('Filter')}</div>\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody\r\n                            {...getTableBodyProps()}\r\n                            style={{ backgroundColor: 'white' }}\r\n                        >\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                useSelection ?\r\n                                    <FixedSizeList\r\n                                        style={{ overflowX: 'hidden' }}\r\n                                        direction=\"vertical\"\r\n                                        width=\"auto\"\r\n                                        height={window.innerHeight - 470}\r\n                                        itemCount={page.length}\r\n                                        itemSize={heightWithCheck}\r\n                                    >\r\n                                        {RenderRow}\r\n                                    </FixedSizeList>\r\n                                    :\r\n                                    page.map(row => {\r\n                                        prepareRow(row);\r\n                                        return (\r\n                                            <TableRow\r\n                                                {...row.getRowProps()}\r\n                                                hover\r\n                                                style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                            >\r\n                                                {row.cells.map((cell, i) =>\r\n                                                    <TableCell\r\n                                                        {...cell.getCellProps({\r\n                                                            style: {\r\n                                                                minWidth: cell.column.minWidth,\r\n                                                                width: cell.column.width,\r\n                                                                maxWidth: cell.column.maxWidth,\r\n                                                                overflow: 'hidden',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                ...(toolsFooter ? {} : { padding: '0px' }),\r\n                                                                textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                            },\r\n                                                        })}\r\n                                                        onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original, cell?.column?.id) : null}\r\n                                                    >\r\n                                                        {cell.render('Cell')}\r\n                                                    </TableCell>\r\n                                                )}\r\n                                            </TableRow>\r\n                                        )\r\n                                    })\r\n                            }\r\n                        </TableBody>\r\n                        {useFooter && <TableFooter>\r\n                            {footerGroups.map(group => (\r\n                                <TableRow {...group.getFooterGroupProps()}>\r\n                                    {group.headers.map(column => (\r\n                                        <TableCell {...column.getFooterProps({\r\n                                            style: {\r\n                                                fontWeight: \"bold\",\r\n                                                color: \"black\",\r\n                                                textAlign: column.type === \"number\" ? \"right\" : (column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                            }\r\n                                        })}>\r\n                                            {column.render('Footer')}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableFooter>}\r\n                    </Table>\r\n                </Box>\r\n                {toolsFooter && (\r\n                    <Box className={classes.footerTable}>\r\n                        <Box>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    gotoPage(0);\r\n                                    dispatch(setMemoryTable({\r\n                                        page: 0\r\n                                    }));\r\n                                }}\r\n                                disabled={!canPreviousPage || loading}\r\n                            >\r\n                                <FirstPage />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    previousPage();\r\n                                    dispatch(setMemoryTable({\r\n                                        page: pageIndex - 1\r\n                                    }));\r\n                                }}\r\n                                disabled={!canPreviousPage || loading}\r\n                            >\r\n                                <NavigateBefore />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    nextPage();\r\n                                    dispatch(setMemoryTable({\r\n                                        page: pageIndex + 1\r\n                                    }));\r\n                                }}\r\n                                disabled={!canNextPage || loading}\r\n                            >\r\n                                <NavigateNext />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    gotoPage(pageCount - 1);\r\n                                    dispatch(setMemoryTable({\r\n                                        page: pageCount - 1\r\n                                    }));\r\n                                }}\r\n                                disabled={!canNextPage || loading}\r\n                            >\r\n                                <LastPage />\r\n                            </IconButton>\r\n                            <Box component=\"span\" fontSize={14}>\r\n                                <Trans\r\n                                    i18nKey={langKeys.tablePageOf}\r\n                                    values={{ currentPage: (pageOptions.length === 0 ? 0 : pageIndex + 1), totalPages: pageOptions.length }}\r\n                                    components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            <Trans\r\n                                i18nKey={(globalFilteredRows || []).length === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                                values={{ itemCount: page.length, totalItems: globalFilteredRows.length }}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <Select\r\n                                disableUnderline\r\n                                style={{ display: 'inline-flex' }}\r\n                                value={pageSize}\r\n                                disabled={loading}\r\n                                onChange={e => {\r\n                                    setPageSize(Number(e.target.value));\r\n                                    dispatch(setMemoryTable({\r\n                                        pageSize: Number(e.target.value)\r\n                                    }));\r\n                                }}\r\n                            >\r\n                                {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                    <MenuItem key={pageSize} value={pageSize}>\r\n                                        {pageSize}\r\n                                    </MenuItem >\r\n                                ))}\r\n                            </Select>\r\n                            <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                                <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n});\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};"],"sourceRoot":""}