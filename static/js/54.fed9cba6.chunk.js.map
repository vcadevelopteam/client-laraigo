{"version":3,"sources":["../node_modules/@material-ui/icons/Email.js","pages/channels/ChannelAddEmail.tsx","store/channel/actions.ts","../node_modules/@react-oauth/google/dist/index.esm.js","store/google/actions.ts","pages/channels/GoogleLogInFrame.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useChannelAddStyles","makeStyles","theme","button","padding","fontWeight","fontSize","textTransform","width","button2","buttonGoogle","justifyContent","ChannelAddEmail","dispatch","useDispatch","t","useTranslation","classes","exchangeCodeResult","useSelector","state","google","requestExchangeCode","executeResult","channel","successinsert","history","useHistory","location","useLocation","mainResult","channelList","whatsAppData","useState","channelreg","setChannelreg","coloricon","setcoloricon","fields","setFields","nextbutton","setNextbutton","registerInfobip","setRegisterInfobip","registerGmail","setRegisterGmail","setins","setsetins","viewSelected","setViewSelected","waitExchange","setWaitExchange","waitSave","setWaitSave","a","insertChannel","useEffect","loading","error","showSnackbar","show","severity","message","msg","code","langKeys","success","data","partialFields","service","accesstoken","access_token","idtoken","id_token","refreshtoken","refresh_token","scope","tokentype","token_type","showBackdrop","successful_register","push","paths","CHANNELS","errormessage","module","property","toLocaleLowerCase","style","color","href","onClick","e","preventDefault","previoustext","textAlign","emailtitle","emailtitle2","className","onChange","emittername","url","test","partialf","apikey","valueDefault","label","emitteremail","paddingLeft","disabled","variant","next","name","content","apiUrls","GOOGLECLIENTID_CHANNEL","src","async","defer","channel_gmailtitle","channel_gmailalert1","channel_gmailalert2","display","alignContent","alignItems","clientId","paddingTop","fontStyle","connectface4","paddingBottom","cursor","window","open","rel","privacypoliciestitle","CHANNELS_ADD","marginTop","flex","margin","partialField","type","registerinfobip","registergmail","marginLeft","marginRight","maxWidth","commchannelfinishreg","parameters","description","setnameField","givechannelname","lineHeight","mb","givechannelcolor","fill","height","hex","prev","finishreg","getChannelsList","accessToken","appId","callAPI","ChannelsService","getPagelist","types","actionTypes","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","activateChannel","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deleteChannel","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","insertChannel2","payload","chatIconFile","interface","iconbutton","headerIconFile","iconheader","botIconFile","iconbot","bubbleIconFile","bubble","iconbubble","chatIcon","headerIcon","botIcon","bubbleIcon","fd","FormData","append","CommonService","uploadFile","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","resetInsertChannel","INSERT_CHANNEL_RESET","editChannel","channelType","editchnl","main","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","resetEditChannel","EDIT_CHANNEL_RESET","getFacebookPages","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","resetGetFacebookPages","FACEBOOK_PAGES_RESET","getMessengerPages","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","resetGetMessengerPages","MESSENGER_PAGES_RESET","getInstagramPages","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","resetGetInstagramPages","INSTAGRAM_PAGES_RESET","getInstagramDMPages","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","resetGetInstagramDMPages","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE","GoogleOAuthContext","createContext","GoogleOAuthProvider","onScriptLoadSuccess","onScriptLoadError","children","scriptLoadedSuccessfully","options","setScriptLoadedSuccessfully","onScriptLoadSuccessRef","useRef","current","onScriptLoadErrorRef","scriptTag","document","onload","_a","call","onerror","body","appendChild","removeChild","useLoadGsiScript","contextValue","useMemo","Provider","useGoogleOAuth","context","useContext","Error","useGoogleLogin","flow","onSuccess","onError","props","clientRef","onSuccessRef","onErrorRef","clientMethod","client","accounts","oauth2","client_id","callback","response","_b","loginImplicitFlow","useCallback","overrideConfig","requestAccessToken","loginAuthCodeFlow","requestCode","exchangeCode","GoogleService","EXCHANGE_CODE","EXCHANGE_CODE_SUCCESS","EXCHANGE_CODE_FAILURE","listBlogger","LIST_BLOGGER","LIST_BLOGGER_SUCCESS","LIST_BLOGGER_FAILURE","listYouTube","LIST_YOUTUBE","LIST_YOUTUBE_SUCCESS","LIST_YOUTUBE_FAILURE","useStyles","GoogleLogInFrame","login","tokenResponse","onGoogleLoginSucess","onGoogleLoginFailure","event","googlecode","console","log","JSON","stringify","login_with_google"],"mappings":"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","file":"static/js/54.fed9cba6.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-useless-escape */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Link from '@material-ui/core/Link';\r\nimport paths from \"common/constants/paths\";\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nimport { apiUrls } from 'common/constants';\r\nimport { Breadcrumbs, Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ColorInput, FieldEdit } from \"components\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { insertChannel } from \"store/channel/actions\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport GoogleLogInFrame from './GoogleLogInFrame';\r\n\r\ninterface whatsAppData {\r\n    typeWhatsApp?: string;\r\n    row?: any;\r\n}\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    button2: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"100%\",\r\n    },\r\n    buttonGoogle: {\r\n        \"& button\": {\r\n            width: \"200px\",\r\n            justifyContent: \"center\",\r\n        }\r\n    },\r\n}));\r\n\r\nexport const ChannelAddEmail: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const classes = useChannelAddStyles();\r\n    const exchangeCodeResult = useSelector(state => state.google.requestExchangeCode);\r\n    const executeResult = useSelector(state => state.channel.successinsert);\r\n    const history = useHistory();\r\n    const location = useLocation<whatsAppData>();\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const whatsAppData = location.state as whatsAppData | null;\r\n\r\n    const [channelreg, setChannelreg] = useState(true);\r\n    const [coloricon, setcoloricon] = useState(\"#1D9BF0\");\r\n    const [fields, setFields] = useState({\r\n        \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n        \"parameters\": {\r\n            \"id\": 0,\r\n            \"description\": \"\",\r\n            \"type\": \"\",\r\n            \"communicationchannelsite\": \"\",\r\n            \"communicationchannelowner\": \"\",\r\n            \"chatflowenabled\": true,\r\n            \"integrationid\": \"\",\r\n            \"color\": \"\",\r\n            \"icons\": \"\",\r\n            \"other\": \"\",\r\n            \"form\": \"\",\r\n            \"apikey\": \"\",\r\n            \"coloricon\": \"#1D9BF0\",\r\n            \"voximplantcallsupervision\": false\r\n        },\r\n        \"type\": \"INFOBIPEMAIL\",\r\n        \"service\": {\r\n            \"apikey\": \"\",\r\n            \"url\": \"\",\r\n            \"emittername\": \"\",\r\n            \"accesstoken\": \"\",\r\n            \"refreshtoken\": \"\",\r\n            \"scope\": \"\",\r\n            \"tokentype\": \"\",\r\n            \"idtoken\": \"\",\r\n        }\r\n    })\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [registerInfobip, setRegisterInfobip] = useState(false);\r\n    const [registerGmail, setRegisterGmail] = useState(false);\r\n    const [setins, setsetins] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitExchange, setWaitExchange] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const openprivacypolicies = () => {\r\n        window.open(\"/privacy\", \"_blank\");\r\n    }\r\n\r\n    async function finishreg() {\r\n        setsetins(true);\r\n        dispatch(insertChannel(fields));\r\n        setWaitSave(true);\r\n        setViewSelected(\"main\");\r\n    }\r\n\r\n    function setnameField(value: any) {\r\n        setChannelreg(value === \"\");\r\n        let partialf = fields;\r\n        partialf.parameters.description = value;\r\n        setFields(partialf);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitExchange) {\r\n            if (!exchangeCodeResult.loading) {\r\n                if (!exchangeCodeResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (exchangeCodeResult.data) {\r\n                        let partialFields = fields;\r\n                        partialFields.service.accesstoken = exchangeCodeResult.data.access_token;\r\n                        partialFields.service.idtoken = exchangeCodeResult.data.id_token;\r\n                        partialFields.service.refreshtoken = exchangeCodeResult.data.refresh_token;\r\n                        partialFields.service.scope = exchangeCodeResult.data.scope;\r\n                        partialFields.service.tokentype = exchangeCodeResult.data.token_type;\r\n                        setFields(partialFields);\r\n\r\n                        setViewSelected(\"view2\");\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((exchangeCodeResult.msg || exchangeCodeResult.message) || exchangeCodeResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitExchange(false);\r\n            }\r\n        }\r\n    }, [exchangeCodeResult, waitExchange])\r\n\r\n    useEffect(() => {\r\n        if (!mainResult.loading && setins) {\r\n            if (executeResult) {\r\n                setsetins(false)\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n                history.push(paths.CHANNELS);\r\n            } else if (!executeResult) {\r\n                const errormessage = t(mainResult.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [mainResult])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    if (viewSelected === \"view1\") {\r\n        if (registerInfobip) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setRegisterInfobip(false); setRegisterGmail(false); }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.emailtitle)}</div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.emailtitle2)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={(value) => {\r\n                                    setNextbutton(value === \"\" || fields.service.emittername === \"\" || fields.service.url === \"\" || !/\\S+@\\S+\\.\\S+/.test(fields.service.emittername) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(fields.service.url))\r\n                                    let partialf = fields;\r\n                                    partialf.service.apikey = value\r\n                                    setFields(partialf)\r\n                                }}\r\n                                valueDefault={fields.service.apikey}\r\n                                label={t(langKeys.apikey)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={(value) => {\r\n                                    setNextbutton(value === \"\" || fields.service.emittername === \"\" || fields.service.apikey === \"\" || !/\\S+@\\S+\\.\\S+/.test(fields.service.emittername) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(value))\r\n                                    let partialf = fields;\r\n                                    partialf.service.url = value\r\n                                    setFields(partialf)\r\n                                }}\r\n                                valueDefault={fields.service.url}\r\n                                label={t(langKeys.url)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={(value) => {\r\n                                    setNextbutton(value === \"\" || fields.service.apikey === \"\" || fields.service.url === \"\" || !/\\S+@\\S+\\.\\S+/.test(value) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(fields.service.url))\r\n                                    let partialf = fields;\r\n                                    partialf.service.emittername = value\r\n                                    setFields(partialf)\r\n                                }}\r\n                                valueDefault={fields.service.emittername}\r\n                                label={t(langKeys.emitteremail)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                        <div style={{ paddingLeft: \"80%\" }}>\r\n                            <Button\r\n                                disabled={nextbutton}\r\n                                onClick={() => { setViewSelected(\"view2\") }}\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.next)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (registerGmail) {\r\n            return (\r\n                <>\r\n                    <meta name=\"google-signin-client_id\" content={apiUrls.GOOGLECLIENTID_CHANNEL} />\r\n                    <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n                    <div style={{ width: '100%' }}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setRegisterInfobip(false); setRegisterGmail(false); }}>\r\n                                {t(langKeys.previoustext)}\r\n                            </Link>\r\n                        </Breadcrumbs>\r\n                        <div>\r\n                            <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_gmailtitle)}</div>\r\n                            <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px\" }}>{t(langKeys.channel_gmailalert1)}</div>\r\n                            <div style={{ textAlign: \"center\", padding: \"20px\", color: \"#969ea5\" }}>{t(langKeys.channel_gmailalert2)}</div>\r\n                            <div style={{ display: \"flex\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                                <GoogleOAuthProvider clientId={apiUrls.GOOGLECLIENTID_CHANNEL}>\r\n                                    <GoogleLogInFrame\r\n                                        setWaitExchange={setWaitExchange}\r\n                                    />\r\n                                </GoogleOAuthProvider>\r\n                            </div>\r\n                            <div style={{ textAlign: \"center\", paddingTop: \"20px\", color: \"#969ea5\", fontStyle: \"italic\" }}>{t(langKeys.connectface4)}</div>\r\n                            <div style={{ textAlign: \"center\", paddingBottom: \"80px\", color: \"#969ea5\" }}><a style={{ fontWeight: \"bold\", color: \"#6F1FA1\", cursor: \"pointer\" }} onClick={openprivacypolicies} rel=\"noopener noreferrer\">{t(langKeys.privacypoliciestitle)}</a></div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <div style={{ width: '100%' }}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                                {t(langKeys.previoustext)}\r\n                            </Link>\r\n                        </Breadcrumbs>\r\n                    </div>\r\n                    <div style={{ width: \"100%\", marginTop: \"20px\", alignItems: \"center\", display: \"flex\" }}>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setRegisterInfobip(true);\r\n                                    let partialField = fields;\r\n                                    partialField.type = \"INFOBIPEMAIL\";\r\n                                    setFields(partialField);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.registerinfobip)}\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setRegisterGmail(true);\r\n                                    let partialField = fields;\r\n                                    partialField.type = \"GMAIL\";\r\n                                    setFields(partialField);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.registergmail)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setViewSelected(\"view1\") }}>\r\n                        {t(langKeys.previoustext)}\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.commchannelfinishreg)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={(value) => setnameField(value)}\r\n                            label={t(langKeys.givechannelname)}\r\n                            className=\"col-6\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"col-6\">\r\n                            <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                                {t(langKeys.givechannelcolor)}\r\n                            </Box>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                                <EmailIcon style={{ fill: `${coloricon}`, width: \"100px\", height: \"100px\" }} />\r\n                                <ColorInput\r\n                                    hex={fields.parameters.coloricon}\r\n                                    onChange={e => {\r\n                                        setFields(prev => ({\r\n                                            ...prev,\r\n                                            parameters: { ...prev.parameters, coloricon: e.hex, color: e.hex },\r\n                                        }));\r\n                                        setcoloricon(e.hex)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={() => { finishreg() }}\r\n                            className={classes.button}\r\n                            disabled={channelreg || mainResult.loading}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >{t(langKeys.finishreg)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChannelAddEmail;","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });","import React, { useState, useRef, useEffect, createContext, useMemo, useContext, useCallback } from 'react';\n\nfunction useLoadGsiScript(options = {}) {\r\n    const { onScriptLoadSuccess, onScriptLoadError } = options;\r\n    const [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = useState(false);\r\n    const onScriptLoadSuccessRef = useRef(onScriptLoadSuccess);\r\n    onScriptLoadSuccessRef.current = onScriptLoadSuccess;\r\n    const onScriptLoadErrorRef = useRef(onScriptLoadError);\r\n    onScriptLoadErrorRef.current = onScriptLoadError;\r\n    useEffect(() => {\r\n        const scriptTag = document.createElement('script');\r\n        scriptTag.src = 'https://accounts.google.com/gsi/client';\r\n        scriptTag.async = true;\r\n        scriptTag.defer = true;\r\n        scriptTag.onload = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(true);\r\n            (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadSuccessRef);\r\n        };\r\n        scriptTag.onerror = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(false);\r\n            (_a = onScriptLoadErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadErrorRef);\r\n        };\r\n        document.body.appendChild(scriptTag);\r\n        return () => {\r\n            document.body.removeChild(scriptTag);\r\n        };\r\n    }, []);\r\n    return scriptLoadedSuccessfully;\r\n}\n\nconst GoogleOAuthContext = createContext(null);\r\nfunction GoogleOAuthProvider({ clientId, onScriptLoadSuccess, onScriptLoadError, children, }) {\r\n    const scriptLoadedSuccessfully = useLoadGsiScript({\r\n        onScriptLoadSuccess,\r\n        onScriptLoadError,\r\n    });\r\n    const contextValue = useMemo(() => ({\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n    }), [clientId, scriptLoadedSuccessfully]);\r\n    return (React.createElement(GoogleOAuthContext.Provider, { value: contextValue }, children));\r\n}\r\nfunction useGoogleOAuth() {\r\n    const context = useContext(GoogleOAuthContext);\r\n    if (!context) {\r\n        throw new Error('Google OAuth components must be used within GoogleOAuthProvider');\r\n    }\r\n    return context;\r\n}\n\nconst containerHeightMap = { large: 40, medium: 32, small: 20 };\r\nfunction GoogleLogin({ onSuccess, onError, useOneTap, promptMomentNotification, type = 'standard', theme = 'outline', size = 'large', text, shape, logo_alignment, width, locale, ...props }) {\r\n    const btnContainerRef = useRef(null);\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!credentialResponse.clientId || !credentialResponse.credential) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                onSuccessRef.current(credentialResponse);\r\n            },\r\n            ...props,\r\n        });\r\n        (_b = window.google) === null || _b === void 0 ? void 0 : _b.accounts.id.renderButton(btnContainerRef.current, {\r\n            type,\r\n            theme,\r\n            size,\r\n            text,\r\n            shape,\r\n            logo_alignment,\r\n            width,\r\n            locale,\r\n        });\r\n        if (useOneTap)\r\n            (_c = window.google) === null || _c === void 0 ? void 0 : _c.accounts.id.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a;\r\n            if (useOneTap)\r\n                (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.cancel();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        useOneTap,\r\n        type,\r\n        theme,\r\n        size,\r\n        text,\r\n        shape,\r\n        logo_alignment,\r\n        width,\r\n        locale,\r\n    ]);\r\n    return (React.createElement(\"div\", { ref: btnContainerRef, style: { height: containerHeightMap[size] } }));\r\n}\n\nfunction googleLogout() {\r\n    var _a;\r\n    (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.disableAutoSelect();\r\n}\n\n/* eslint-disable import/export */\r\nfunction useGoogleLogin({ flow = 'implicit', scope = '', onSuccess, onError, ...props }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const clientRef = useRef();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    useEffect(() => {\r\n        var _a;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        const clientMethod = flow === 'implicit' ? 'initTokenClient' : 'initCodeClient';\r\n        const client = (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.oauth2[clientMethod]({\r\n            client_id: clientId,\r\n            scope: `openid profile email ${scope}`,\r\n            callback: (response) => {\r\n                var _a, _b;\r\n                if (response.error)\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef, response);\r\n                (_b = onSuccessRef.current) === null || _b === void 0 ? void 0 : _b.call(onSuccessRef, response);\r\n            },\r\n            ...props,\r\n        });\r\n        clientRef.current = client;\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [clientId, scriptLoadedSuccessfully, flow, scope]);\r\n    const loginImplicitFlow = useCallback((overrideConfig) => clientRef.current.requestAccessToken(overrideConfig), []);\r\n    const loginAuthCodeFlow = useCallback(() => clientRef.current.requestCode(), []);\r\n    return flow === 'implicit' ? loginImplicitFlow : loginAuthCodeFlow;\r\n}\n\nfunction useGoogleOneTapLogin({ onSuccess, onError, promptMomentNotification, cancel_on_tap_outside, hosted_domain, }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!credentialResponse.clientId || !credentialResponse.credential) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                onSuccessRef.current(credentialResponse);\r\n            },\r\n            hosted_domain,\r\n            cancel_on_tap_outside,\r\n        });\r\n        (_b = window.google) === null || _b === void 0 ? void 0 : _b.accounts.id.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a;\r\n            (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.cancel();\r\n        };\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        cancel_on_tap_outside,\r\n        hosted_domain,\r\n    ]);\r\n}\n\n/**\r\n * Checks if the user granted all the specified scope or scopes\r\n * @returns True if all the scopes are granted\r\n */\r\nfunction hasGrantedAllScopesGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    if (!window.google)\r\n        return false;\r\n    return window.google.accounts.oauth2.hasGrantedAllScopes(tokenResponse, firstScope, ...restScopes);\r\n}\n\n/**\r\n * Checks if the user granted any of the specified scope or scopes.\r\n * @returns True if any of the scopes are granted\r\n */\r\nfunction hasGrantedAnyScopeGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    if (!window.google)\r\n        return false;\r\n    return window.google.accounts.oauth2.hasGrantedAnyScope(tokenResponse, firstScope, ...restScopes);\r\n}\n\nexport { GoogleLogin, GoogleOAuthProvider, googleLogout, hasGrantedAllScopesGoogle, hasGrantedAnyScopeGoogle, useGoogleLogin, useGoogleOneTapLogin };\n","import { IActionCall } from \"@types\";\r\nimport { GoogleService } from \"network\";\r\n\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const exchangeCode = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.exchangeCode(request),\r\n    types: {\r\n        loading: actionTypes.EXCHANGE_CODE,\r\n        success: actionTypes.EXCHANGE_CODE_SUCCESS,\r\n        failure: actionTypes.EXCHANGE_CODE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetExchangeCode = (): IActionCall => ({ type: actionTypes.EXCHANGE_CODE_RESET });\r\n\r\nexport const listBlogger = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.listBlogger(request),\r\n    types: {\r\n        loading: actionTypes.LIST_BLOGGER,\r\n        success: actionTypes.LIST_BLOGGER_SUCCESS,\r\n        failure: actionTypes.LIST_BLOGGER_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetListBlogger = (): IActionCall => ({ type: actionTypes.LIST_BLOGGER_RESET });\r\n\r\nexport const listYouTube = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.listYouTube(request),\r\n    types: {\r\n        loading: actionTypes.LIST_YOUTUBE,\r\n        success: actionTypes.LIST_YOUTUBE_SUCCESS,\r\n        failure: actionTypes.LIST_YOUTUBE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetListYouTube = (): IActionCall => ({ type: actionTypes.LIST_YOUTUBE_RESET });","import { FC } from \"react\";\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { exchangeCode } from \"store/google/actions\";\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\ninterface GoogleLogInFrameProps {\r\n    setWaitExchange: (value: boolean) => void;\r\n}\r\n\r\nexport const GoogleLogInFrame: FC<GoogleLogInFrameProps> = ({ setWaitExchange }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    \r\n    const login = useGoogleLogin({\r\n        onSuccess: tokenResponse => onGoogleLoginSucess(tokenResponse),\r\n        onError: error => onGoogleLoginFailure(error),\r\n        flow: 'auth-code',\r\n        scope: 'https://www.googleapis.com/auth/gmail.compose \\\r\n        https://www.googleapis.com/auth/youtube.readonly \\\r\n        https://www.googleapis.com/auth/youtube.upload \\\r\n        https://www.googleapis.com/auth/youtube.force-ssl \\\r\n        https://www.googleapis.com/auth/drive.file \\\r\n        https://www.googleapis.com/auth/gmail.readonly \\\r\n        https://www.googleapis.com/auth/blogger \\\r\n        https://www.googleapis.com/auth/blogger.readonly \\\r\n        https://www.googleapis.com/auth/drive.readonly',\r\n    });\r\n\r\n    const onGoogleLoginSucess = (event: any) => {\r\n        if (event) {\r\n            if (event.code) {\r\n                dispatch(exchangeCode({ googlecode: event.code }));\r\n                dispatch(showBackdrop(true));\r\n                setWaitExchange(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onGoogleLoginFailure = (event: any) => {\r\n        console.log('GOOGLE LOGIN FAILURE: ' + JSON.stringify(event));\r\n    }\r\n\r\n    return <Button\r\n        onClick={() => { login() }}\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n    >\r\n        {t(langKeys.login_with_google)}\r\n    </Button>\r\n};\r\n\r\nexport default GoogleLogInFrame"],"sourceRoot":""}