{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Clear.js","../node_modules/@material-ui/icons/esm/Save.js","../node_modules/@material-ui/core/esm/Zoom/Zoom.js","components/fields/table-editable.tsx","../node_modules/@material-ui/icons/esm/Publish.js","pages/VariableConfiguration.tsx","../node_modules/@material-ui/icons/esm/GetApp.js","store/botdesigner/actions.ts"],"names":["createSvgIcon","React","d","styles","entering","transform","entered","defaultTimeout","enter","duration","enteringScreen","exit","leavingScreen","Zoom","props","ref","children","_props$disableStrictM","disableStrictModeCompat","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","style","_props$timeout","timeout","_props$TransitionComp","TransitionComponent","Transition","other","_objectWithoutProperties","theme","useTheme","enableStrictModeCompat","unstable_strictMode","nodeRef","foreignRef","useForkRef","handleRef","undefined","normalizedTransitionCallback","callback","nodeOrAppearing","maybeAppearing","_ref","current","_ref2","_slicedToArray","node","isAppearing","handleEntering","handleEnter","reflow","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","transition","handleEntered","handleExiting","handleExit","handleExited","_extends","appear","state","childProps","visibility","useStyles","makeStyles","footerTable","display","breakpoints","up","justifyContent","textAlign","alignItems","trdynamic","boxShadow","containerSearch","width","containerFilterGeneral","backgroundColor","padding","spacing","containerfloat","borderBottom","marginTop","position","zIndex","left","iconOrder","height","color","palette","text","primary","button","fontWeight","fontSize","textTransform","title","lineHeight","containerButtons","gridGap","gridAutoFlow","containerHeader","TableZyxEditable","memo","columns","titlemodule","fetchData","data","download","register","handleRegister","HeadComponent","ButtonsElement","pageSizeDefault","filterGeneral","loading","updateCell","updateColumn","skipAutoReset","classes","DefaultColumnFilter","column","columnid","id","setFilter","type","page","useState","value","setValue","anchorEl","setAnchorEl","open","Boolean","operator","setoperator","handleClickItemMenu","keyPress","useCallback","e","keyCode","useEffect","allBoolean","setAllBoolean","effectBoolean","map","p","values","includes","flexDirection","Fragment","label","valueDefault","disabled","onChange","index","setColumnBoolean","BooleanOptionsMenuComponent","DateOptionsMenuComponent","date","Date","isNaN","valueOf","toISOString","split","TimeOptionsMenuComponent","toLocaleTimeString","Input","minWidth","fullWidth","onKeyDown","target","IconButton","onClick","event","currentTarget","size","MoreVert","cursor","Menu","keepMounted","onClose","PaperProps","maxHeight","OptionsMenuComponent","EditableCell","initialValue","row","onBlur","onChecked","colorValue","setColorValue","editable","length","Tooltip","Box","m","whiteSpace","overflow","textOverflow","TextField","flex","RegExp","test","inputProps","flexGrow","border","background","min","step","filterCellValue","rows","filterValue","filter","cellvalue","Number","toLowerCase","defaultColumn","useMemo","Filter","Cell","useTable","initialState","pageIndex","pageSize","autoResetFilters","autoResetGlobalFilter","autoResetSortBy","autoResetPage","autoResetRowState","useFlexLayout","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","preGlobalFilteredRows","setGlobalFilter","RenderRow","TableRow","component","getRowProps","hover","cells","cell","i","TableCell","getCellProps","maxWidth","headers","isComponent","render","className","mb","Fab","marginLeft","Refresh","Button","variant","startIcon","Add","Trans","i18nKey","langKeys","exportExcel","String","x","activeOnHover","colorPlaceHolder","handleChangeOther","lazy","TableContainer","overflowY","Table","stickyHeader","TableHead","headerGroup","getHeaderGroupProps","ii","getHeaderProps","getSortByToggleProps","wordWrap","isSorted","isSortedDesc","NoFilter","TableBody","overflowX","direction","window","innerHeight","itemCount","itemSize","FirstPage","NavigateBefore","NavigateNext","LastPage","tablePageOf","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","totalItems","Select","disableUnderline","MenuItem","marginRight","recordPerPage","count","LoadingSkeleton","items","push","Skeleton","containerDetail","DetailVariableConfiguration","edit","setViewSelected","multiData","dispatch","useDispatch","t","useTranslation","detailResult","useSelector","main","mainAux","executeRes","execute","waitSave","setWaitSave","dataTable","setDataTable","setSkipAutoReset","chatblockid","getCollectionAux","getVariableConfigurationSel","resetMainAux","error","errormessage","code","module","variableconfiguration","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","arrayBread","name","variableconfigurationdetail","Header","variable","accessor","sortType","bold","order","updatingDataTable","setUpdatingDataTable","breadcrumbs","handleClick","variableconfiguration_plural","gap","Clear","back","Save","manageConfirmation","visible","question","confirmation_save","insarrayVariableConfiguration","save","rowIndex","columnId","old","rowIndexs","TemplateIcons","VariableConfiguration","mainResult","executeResult","botdesignerResult","botdesigner","chatblock","viewSelected","rowSelected","setRowSelected","waitDownload","setWaitDownload","valuefile","setvaluefile","original","layoutKey","exportFn","stopPropagation","handleDownload","importFn","handleUpload","files","flow","channel_plural","getCollection","getVariableConfigurationLst","getMultiCollection","getValuesFromDomain","resetAllMain","successful_import","handleEdit","chatblock_reset","downloadData","mapdata","description","fontcolor","fontbold","priority","filename","downloadCSV","file","owner","corpid","orgid","uploadCSV","uploadData","mainData","onClickRow","handleClose","accept","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ListItemIcon","GetApp","fill","ListItemText","htmlFor","Publish","import","chatblock_set","payload","actionTypes","CHATBLOCK_SET","CHATBLOCK_RESET"],"mappings":"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","file":"static/js/52.4ec1b68d.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { duration } from '../styles/transitions';\nimport useTheme from '../styles/useTheme';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport useForkRef from '../utils/useForkRef';\nvar styles = {\n  entering: {\n    transform: 'none'\n  },\n  entered: {\n    transform: 'none'\n  }\n};\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Zoom transition can be used for the floating variant of the\n * [Button](/components/buttons/#floating-action-buttons) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Zoom = /*#__PURE__*/React.forwardRef(function Zoom(props, ref) {\n  var children = props.children,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var foreignRef = useForkRef(children.ref, ref);\n  var handleRef = useForkRef(enableStrictModeCompat ? nodeRef : undefined, foreignRef);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEntering = normalizedTransitionCallback(onEntering);\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    reflow(node); // So the animation always start from the start.\n\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('transform', transitionProps);\n    node.style.transition = theme.transitions.create('transform', transitionProps);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      style: _extends({\n        transform: 'scale(0)',\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, styles[state], style, children.props.style),\n      ref: handleRef\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Zoom.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the child component.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Zoom;","import React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { exportExcel } from 'common/helpers';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    MoreVert as MoreVertIcon,\r\n    Refresh as RefreshIcon,\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport { Dictionary, TableConfig } from '@types'\r\nimport { OnlyCheckbox, SearchField } from 'components';\r\nimport { DownloadIcon } from 'icons';\r\n\r\nimport {\r\n    useTable,\r\n    useFlexLayout,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n} from 'react-table'\r\nimport { FixedSizeList } from 'react-window';\r\nimport { Trans } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { TextField } from '@material-ui/core';\r\nimport { BooleanOptionsMenuComponent, DateOptionsMenuComponent, OptionsMenuComponent, TimeOptionsMenuComponent } from './table-simple';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerSearch: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%',\r\n        },\r\n    },\r\n    containerFilterGeneral: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(2),\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        lineHeight: '48px',\r\n        fontWeight: 'bold',\r\n        height: '48px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        gridGap: theme.spacing(1),\r\n        display: 'grid',\r\n        gridAutoFlow: 'column',\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    }\r\n}));\r\n\r\nconst TableZyxEditable = React.memo(({\r\n    columns,\r\n    titlemodule,\r\n    fetchData,\r\n    data,\r\n    download = true,\r\n    register,\r\n    handleRegister,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    pageSizeDefault = 20,\r\n    filterGeneral = true,\r\n    loading = false,\r\n    updateCell,\r\n    updateColumn,\r\n    skipAutoReset = false,\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n\r\n    const DefaultColumnFilter = (\r\n    {\r\n        column: { id: columnid, setFilter, type = \"string\" },\r\n        page,\r\n    }: any\r\n    ) => {\r\n        const [value, setValue] = useState<any>('');\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n        const open = Boolean(anchorEl);\r\n        const [operator, setoperator] = useState<string>('contains');\r\n        \r\n        const handleCloseMenu = () => {\r\n            setAnchorEl(null);\r\n        };\r\n        const handleClickItemMenu = (operator: any) => {\r\n            setAnchorEl(null);\r\n            setoperator(operator)\r\n            if (type === 'boolean') {\r\n                setValue(operator);\r\n            }\r\n            setFilter({ value, operator, type });\r\n        };\r\n        const handleClickMenu = (event: any) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n        const keyPress = React.useCallback((e) => {\r\n            if (e.keyCode === 13) {\r\n                setFilter({ value, operator, type });\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [value])\r\n        const handleDate = (date: Date) => {\r\n            if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n                setValue(date?.toISOString() || '');\r\n                setFilter({\r\n                    value: date?.toISOString().split('T')[0] || '',\r\n                    operator,\r\n                    type\r\n                })\r\n            }\r\n        }\r\n        const handleTime = (date: Date) => {\r\n            if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n                setValue(date?.toISOString() || '');\r\n                setFilter({\r\n                    value: date?.toLocaleTimeString(),\r\n                    operator,\r\n                    type\r\n                })    \r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            switch (type) {\r\n                case \"number\": case \"date\": case \"datetime-local\": case \"time\":\r\n                    setoperator(\"equals\");\r\n                    break;\r\n                case \"boolean\":\r\n                    setoperator(\"all\");\r\n                    break;\r\n                case \"string\": case \"color\":\r\n                default:\r\n                    setoperator(\"contains\");\r\n                    break;\r\n            }\r\n        }, [type]);\r\n\r\n        const [allBoolean, setAllBoolean] = useState<any>(false);\r\n        const hasFalse = page.map((p: Dictionary) => p.values[columnid]).includes(false);\r\n        const effectBoolean = hasFalse && type === 'boolean';\r\n        \r\n        useEffect(() => {\r\n            setAllBoolean(!effectBoolean);\r\n        }, [effectBoolean]);\r\n\r\n        const setColumnBoolean = (value: boolean, columnid: string) => {\r\n            updateColumn && updateColumn(page.map((p: Dictionary) => p.index), columnid, value);\r\n        };\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {type === 'boolean' ?\r\n                <React.Fragment>\r\n                    <OnlyCheckbox\r\n                        label=\"\"\r\n                        valueDefault={allBoolean}\r\n                        disabled={loading}\r\n                        onChange={(value) => {\r\n                            setColumnBoolean(value, columnid);\r\n                        }}\r\n                    />\r\n                    {BooleanOptionsMenuComponent(value, handleClickItemMenu)}\r\n                </React.Fragment>\r\n                :\r\n                <React.Fragment>\r\n                    {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                    {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                    {!['date','time'].includes(type) &&\r\n                    <Input\r\n                        // disabled={loading}\r\n                        type={type === 'color' ? 'text' : type}\r\n                        style={{ fontSize: '15px', minWidth: '100px' }}\r\n                        fullWidth\r\n                        value={value}\r\n                        onKeyDown={keyPress}\r\n                        onChange={e => {\r\n                            setValue(e.target.value || '');\r\n                        }}\r\n                    />}\r\n                    <IconButton\r\n                        onClick={handleClickMenu}\r\n                        size=\"small\"\r\n                    >\r\n                        <MoreVertIcon\r\n                            style={{ cursor: 'pointer' }}\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            color=\"action\"\r\n                            fontSize=\"small\"\r\n                        />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"long-menu\"\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={open}\r\n                        onClose={handleCloseMenu}\r\n                        PaperProps={{\r\n                            style: {\r\n                                maxHeight: 48 * 4.5,\r\n                                width: '20ch',\r\n                            },\r\n                        }}\r\n                    >\r\n                        {OptionsMenuComponent(type, operator, handleClickItemMenu)}\r\n                    </Menu>\r\n                </React.Fragment>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // Create an editable cell renderer\r\n    const EditableCell = ({\r\n        value: initialValue,\r\n        row,\r\n        column,\r\n        updateCell, // This is a custom function that we supplied to our table instance\r\n    }: {\r\n        value: any,\r\n        row: any,\r\n        column: any,\r\n        updateCell: (index: number, id: any, value: any) => void\r\n    }) => {\r\n        // We need to keep and update the state of the cell normally\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const [value, setValue] = React.useState(initialValue)\r\n        \r\n        const onChange = (e: any) => {\r\n            setValue(e.target.value)\r\n        }\r\n        \r\n        // We'll only update the external data when the input is blurred\r\n        const onBlur = () => {\r\n            updateCell(row.index, column.id, value)\r\n        }\r\n\r\n        const onChecked = (value: any) => {\r\n            updateCell(row.index, column.id, value)\r\n        }\r\n\r\n        const onBlurColor = () => {\r\n            const rex = new RegExp(/#[0-9A-Fa-f]{6}/, 'g');\r\n            if (rex.test(value)) {\r\n                setColorValue(value)\r\n                updateCell(row.index, column.id, value)\r\n            }\r\n            else {\r\n                setColorValue('#000000')\r\n                updateCell(row.index, column.id, '#000000')\r\n            }\r\n        }\r\n\r\n        const [colorValue, setColorValue] = React.useState<any>(initialValue)\r\n\r\n        // If the initialValue is changed external, sync it up with our state\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        React.useEffect(() => {\r\n            setValue(initialValue)\r\n        }, [initialValue])\r\n\r\n        if (column.editable) {\r\n            switch (column.type) {\r\n                case 'color':\r\n                    return (\r\n                        <div style={{display: 'flex'}}>\r\n                            <TextField\r\n                                style={{flex: 1}}\r\n                                value={value}\r\n                                onChange={onChange}\r\n                                onBlur={onBlurColor}\r\n                                inputProps={{ style: {fontSize: '14px'} }}\r\n                            >\r\n                            </TextField>\r\n                            <div\r\n                                style={{flexGrow: 0}}\r\n                                onBlur={() => {onChecked(colorValue)}}\r\n                            >\r\n                                <input\r\n                                    type=\"color\"\r\n                                    value={colorValue}\r\n                                    style={{border: 'none', background: 'transparent'}}\r\n                                    onChange={(e) => setColorValue(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                case 'number':\r\n                    return <TextField\r\n                        type=\"number\"\r\n                        style={{fontSize: '14px'}}\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        inputProps={{ style: {fontSize: '14px'}, min: 0, step: 1 }}\r\n                    />\r\n                case 'boolean':\r\n                    return <OnlyCheckbox\r\n                        style={{ width: '100%', textAlign: 'center' }}    \r\n                        label=\"\"\r\n                        valueDefault={value}\r\n                        onChange={(value) => onChecked(value)}\r\n                    />\r\n                default:\r\n                    return <TextField\r\n                        fullWidth\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        onBlur={onBlur}\r\n                        inputProps={{ style: {fontSize: '14px'} }}\r\n                    >\r\n                    </TextField>\r\n            }\r\n        }\r\n        else {\r\n            return (value?.length > 100 ?\r\n                <Tooltip TransitionComponent={Zoom} title={value}>\r\n                    <Box m={0} whiteSpace=\"nowrap\" overflow=\"hidden\" textOverflow=\"ellipsis\" width={200}>\r\n                        {value}\r\n                    </Box>\r\n                </Tooltip>\r\n                :\r\n                <Box m={0} overflow=\"hidden\" textOverflow=\"ellipsis\" width={1}>\r\n                    {value}\r\n                </Box>\r\n            )\r\n        }\r\n    }\r\n\r\n    const filterCellValue = React.useCallback((rows, id, filterValue) => {\r\n        const { value, operator, type } = filterValue;\r\n        \r\n        return rows.filter((row: any) => {\r\n            const cellvalue = row.values[id];\r\n            if (cellvalue === null || cellvalue === undefined) {\r\n                return false;\r\n            }\r\n            if (!(['isempty','isnotempty','isnull','isnotnull'].includes(operator) || type === 'boolean')\r\n                && (value || '') === '')\r\n                return true;\r\n            switch (type) {\r\n                case \"number\":\r\n                    switch (operator) {\r\n                        case 'greater':\r\n                            return cellvalue > Number(value);\r\n                        case 'greaterorequals':\r\n                            return cellvalue >= Number(value);\r\n                        case 'less':\r\n                            return cellvalue < Number(value);\r\n                        case 'lessorequals':\r\n                            return cellvalue <= Number(value);\r\n                        case 'isnull':\r\n                            return cellvalue == null;\r\n                        case 'isnotnull':\r\n                            return cellvalue != null;\r\n                        case 'notequals':\r\n                            return cellvalue !== Number(value);\r\n                        case 'equals':\r\n                        default:\r\n                            return cellvalue === Number(value);\r\n                    }\r\n                case \"date\": case \"datetime-local\":\r\n                    switch (operator) {\r\n                        case 'after':\r\n                            return cellvalue > value;\r\n                        case 'afterequals':\r\n                            return cellvalue >= value;\r\n                        case 'before':\r\n                            return cellvalue < value;\r\n                        case 'beforeequals':\r\n                            return cellvalue <= value;\r\n                        case 'isnull':\r\n                            return cellvalue == null;\r\n                        case 'isnotnull':\r\n                            return cellvalue != null;\r\n                        case 'notequals':\r\n                            return cellvalue !== value;\r\n                        case 'equals':\r\n                        default:\r\n                            return cellvalue === value;\r\n                    }\r\n                case \"boolean\":\r\n                    switch (operator) {\r\n                        case 'istrue':\r\n                            return typeof(cellvalue) === 'string' ? cellvalue === 'true' : cellvalue === true;\r\n                        case 'isfalse':\r\n                            return typeof(cellvalue) === 'string' ? cellvalue === 'false' : cellvalue === false;\r\n                        case 'isnull':\r\n                            return cellvalue == null;\r\n                        case 'isnotnull':\r\n                            return cellvalue != null;\r\n                        case 'all':\r\n                        default:\r\n                            return true;\r\n                    }\r\n                case \"string\":\r\n                default:\r\n                    switch (operator) {\r\n                        case 'equals':\r\n                            return cellvalue === value;\r\n                        case 'notequals':\r\n                            return cellvalue !== value;\r\n                        case 'isempty':\r\n                            return cellvalue === '';\r\n                        case 'isnotempty':\r\n                            return cellvalue !== '';\r\n                        case 'isnull':\r\n                            return cellvalue == null;\r\n                        case 'isnotnull':\r\n                            return cellvalue != null;\r\n                        case 'notcontains':\r\n                            return !cellvalue.toLowerCase().includes(value.toLowerCase());\r\n                        case 'contains':\r\n                        default:\r\n                            return cellvalue.toLowerCase().includes(value.toLowerCase());\r\n                    }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default Filter UI\r\n            Filter: (props: any) => DefaultColumnFilter({ ...props, data }),\r\n            filter: filterCellValue,\r\n            Cell: EditableCell\r\n        }),\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        preGlobalFilteredRows,\r\n        setGlobalFilter,\r\n        state: { pageIndex, pageSize },\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageIndex: 0, pageSize: pageSizeDefault },\r\n        defaultColumn,\r\n        autoResetFilters: !skipAutoReset,\r\n        autoResetGlobalFilter: !skipAutoReset,\r\n        autoResetSortBy: !skipAutoReset,\r\n        autoResetPage: !skipAutoReset,\r\n        autoResetRowState: !skipAutoReset,\r\n        updateCell,\r\n        updateColumn\r\n    },\r\n        useFlexLayout,    \r\n        useFilters,\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        usePagination\r\n    )\r\n\r\n    // const currentPage = React.useRef(pageIndex + 1);\r\n    // const totalPages = React.useRef(pageOptions.length);\r\n\r\n    useEffect(() => {\r\n        let next = true;\r\n        if (fetchData && next) {\r\n            fetchData();\r\n        }\r\n    }, [fetchData])\r\n\r\n    const RenderRow = React.useCallback(\r\n        ({ index, style }) => {\r\n            const row = page[index]\r\n            prepareRow(row);\r\n            return (\r\n                <TableRow\r\n                    component=\"div\"\r\n                    {...row.getRowProps({ style })}\r\n                    hover\r\n                >\r\n                    {row.cells.map((cell, i) =>\r\n                        <TableCell\r\n                            component=\"div\"\r\n                            {...cell.getCellProps({\r\n                                style: {\r\n                                    minWidth: cell.column.minWidth,\r\n                                    width: cell.column.width,\r\n                                    maxWidth: cell.column.maxWidth,\r\n                                },\r\n                            })}\r\n                        >\r\n                            {headerGroups[0].headers[i].isComponent ?\r\n                                cell.render('Cell')\r\n                                :\r\n                                (cell.value?.length > 20 ?\r\n                                    <Tooltip TransitionComponent={Zoom} title={cell.value}>\r\n                                        <div style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n                                            {cell.render('Cell')}\r\n                                        </div>\r\n                                    </Tooltip>\r\n                                    :\r\n                                    <div style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n                                        {cell.render('Cell')}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </TableCell>\r\n                    )}\r\n                </TableRow>\r\n            )\r\n        },\r\n        [headerGroups, prepareRow, page]\r\n    )\r\n\r\n    return (\r\n        <Box width={1} style={{ height: '100%' }}>\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\" mb=\"30px\">\r\n                {titlemodule ? <span className={classes.title}>{titlemodule}</span> : <span></span>}\r\n                <span className={classes.containerButtons}>\r\n                    {fetchData && (\r\n                        <Tooltip title=\"Refrescar\">\r\n                            <Fab\r\n                                size=\"small\"\r\n                                aria-label=\"add\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                style={{ marginLeft: '1rem' }}\r\n                                onClick={() => fetchData && fetchData({})}\r\n                            >\r\n                                <RefreshIcon />\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    )}\r\n                    {ButtonsElement && <ButtonsElement />}\r\n                    {register && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            startIcon={<AddIcon color=\"secondary\" />}\r\n                            onClick={handleRegister}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        ><Trans i18nKey={langKeys.register} />\r\n                        </Button>\r\n                    )}\r\n                    {download && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            onClick={() => exportExcel(String(titlemodule) + \"Report\", data, columns.filter((x: any) => (!x.isComponent && !x.activeOnHover)))}\r\n                            startIcon={<DownloadIcon />}\r\n                        ><Trans i18nKey={langKeys.download} />\r\n                        </Button>\r\n                    )}\r\n                </span>\r\n            </Box>\r\n            {filterGeneral && (\r\n                <Box className={classes.containerFilterGeneral}>\r\n                    <span></span>\r\n                    <div className={classes.containerSearch}>\r\n                        <SearchField\r\n                            disabled={loading}\r\n                            colorPlaceHolder='#FFF'\r\n                            handleChangeOther={setGlobalFilter}\r\n                            lazy\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            )}\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer component=\"div\" style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\" style={{height: 'calc(100vh - 365px)', overflowY: 'hidden'}}>\r\n                    <Table component=\"div\" stickyHeader size=\"small\" {...getTableProps()} aria-label=\"enhanced table\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead component=\"div\">\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow component=\"div\" {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell component=\"div\" key={ii} style={{flex: `${column.width} 0 auto`, minWidth: 0, width: `${column.width}px`, maxWidth: `${column.maxWidth}px`}}>\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header') :\r\n                                                    (<>\r\n                                                        <Box\r\n                                                            component=\"div\"\r\n                                                            {...column.getHeaderProps(column.getSortByToggleProps({ title: 'ordenar' }))}\r\n                                                            style={{\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                wordWrap: 'break-word',\r\n                                                                display: 'flex',\r\n                                                                alignItems: 'center',\r\n                                                                cursor: 'pointer'\r\n                                                            }}\r\n                                                        >\r\n                                                            {column.render('Header')}\r\n                                                            {column.isSorted ? (\r\n                                                                column.isSortedDesc ?\r\n                                                                    <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                    :\r\n                                                                    <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                            )\r\n                                                                :\r\n                                                                null\r\n                                                            }\r\n                                                        </Box>\r\n                                                        <div>{!column.NoFilter && column.render('Filter')}</div>\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody\r\n                            component=\"div\"\r\n                            {...getTableBodyProps()}\r\n                            style={{ backgroundColor: 'white' }}\r\n                        >\r\n                            {loading ?\r\n                            <LoadingSkeleton columns={headerGroups[0].headers.length} />\r\n                            :    \r\n                            <FixedSizeList\r\n                                style={{overflowX: 'hidden'}}\r\n                                direction=\"vertical\"\r\n                                width=\"auto\"\r\n                                height={window.innerHeight - 470}\r\n                                itemCount={page.length}\r\n                                itemSize={43}\r\n                                >\r\n                                {RenderRow}\r\n                            </FixedSizeList>\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </Box>\r\n                <Box className={classes.footerTable}>\r\n                    <Box>\r\n                        <IconButton\r\n                            onClick={() => gotoPage(0)}\r\n                            disabled={!canPreviousPage || loading}\r\n                        >\r\n                            <FirstPage />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={() => previousPage()}\r\n                            disabled={!canPreviousPage || loading}\r\n                        >\r\n                            <NavigateBefore />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={() => nextPage()}\r\n                            disabled={!canNextPage || loading}\r\n                        >\r\n                            <NavigateNext />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            onClick={() => gotoPage(pageCount - 1)}\r\n                            disabled={!canNextPage || loading}\r\n                        >\r\n                            <LastPage />\r\n                        </IconButton>\r\n                        <Box component=\"span\" fontSize={14}>\r\n                            <Trans\r\n                                i18nKey={langKeys.tablePageOf}\r\n                                values={{ currentPage: pageIndex + 1, totalPages: pageOptions.length }}\r\n                                components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                            />\r\n                        </Box>\r\n                    </Box>\r\n                    <Box>\r\n                        <Trans\r\n                            i18nKey={(preGlobalFilteredRows || []).length === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                            values={{ itemCount: page.length, totalItems: preGlobalFilteredRows.length }}\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <Select\r\n                            disableUnderline\r\n                            style={{ display: 'inline-flex' }}\r\n                            value={pageSize}\r\n                            disabled={loading}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                        >\r\n                            {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                <MenuItem key={pageSize} value={pageSize}>\r\n                                    {pageSize}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                        <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                            <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n});\r\n\r\nexport default TableZyxEditable;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell component=\"div\" key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow component=\"div\" key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow component=\"div\" key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow component=\"div\" key=\"3aux3\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow component=\"div\" key=\"4aux4\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow component=\"div\" key=\"5aux5\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Publish');","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useMemo, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TemplateBreadcrumbs } from 'components';\r\nimport { getValuesFromDomain, getVariableConfigurationLst, getVariableConfigurationSel, downloadCSV, uploadCSV, insarrayVariableConfiguration } from 'common/helpers';\r\nimport { Dictionary, MultiData } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport TableZyxEditable from 'components/fields/table-editable';\r\nimport { Menu, Button, IconButton, makeStyles, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { getCollection, getMultiCollection, execute, getCollectionAux, resetMainAux, resetAllMain } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport { MoreVert as MoreVertIcon, GetApp as GetAppIcon, Publish as PublishIcon, Save as SaveIcon, Clear as ClearIcon } from '@material-ui/icons';\r\nimport { chatblock_reset } from 'store/botdesigner/actions';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\n\r\ninterface DetailProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        maxWidth: '80%',\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    }\r\n}));\r\n\r\nconst VariableConfiguration: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const detailResult = useSelector(state => state.main.mainAux);\r\n    const botdesignerResult = useSelector(state => state.botdesigner.chatblock);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitDownload, setWaitDownload] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const [valuefile, setvaluefile] = useState('');\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            // {\r\n            //     accessor: 'chatblockid',\r\n            //     NoFilter: true,\r\n            //     isComponent: true,\r\n            //     Cell: (props: any) => {\r\n            //         const row = props.cell.row.original;\r\n            //         const id = props.cell.row.id;\r\n            //         return (\r\n            //             <React.Fragment>\r\n            //                 <IconButton\r\n            //                     aria-label=\"more\"\r\n            //                     aria-controls=\"long-menu\"\r\n            //                     aria-haspopup=\"true\"    \r\n            //                     size=\"small\"\r\n            //                     onClick={(e) => {\r\n            //                         e.stopPropagation();\r\n            //                         handleDownload(row);\r\n            //                     }}>\r\n            //                     <GetAppIcon\r\n            //                         titleAccess={t(langKeys.download)}\r\n            //                         style={{ color: '#B6B4BA' }} />\r\n            //                 </IconButton>\r\n            //                 <input\r\n            //                     id={`upload-file${id}`}\r\n            //                     name=\"file\"\r\n            //                     type=\"file\"\r\n            //                     accept=\"text/csv\"\r\n            //                     value={valuefile}\r\n            //                     style={{ display: 'none' }}\r\n            //                     onChange={(e) => {\r\n            //                         handleUpload(row, e.target.files);\r\n            //                     }}\r\n            //                     onClick={(e) => {\r\n            //                         e.stopPropagation();\r\n            //                     }}\r\n            //                 />\r\n            //                 <label htmlFor={`upload-file${id}`}>\r\n            //                     <IconButton\r\n            //                         size=\"small\"\r\n            //                         component=\"span\"\r\n            //                         onClick={(e: any) => {\r\n            //                             e.stopPropagation();\r\n            //                         }}>\r\n            //                         <PublishIcon\r\n            //                             titleAccess={t(langKeys.import)}\r\n            //                             style={{ color: '#B6B4BA' }}/>\r\n            //                     </IconButton>\r\n            //                 </label> \r\n            //             </React.Fragment>\r\n            //         )\r\n            //     }\r\n            // },\r\n            {\r\n                accessor: 'chatblockid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 20,\r\n                maxWidth: 20,\r\n                width: 20,\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    const id = props.cell.row.id;\r\n                    return (\r\n                        <TemplateIcons\r\n                            layoutKey={id}\r\n                            valuefile={valuefile}\r\n                            exportFn={e => {\r\n                                e.stopPropagation();\r\n                                handleDownload(row);\r\n                            }}\r\n                            importFn={e => handleUpload(row, e.target.files)}\r\n                        />\r\n                    );\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.flow),\r\n                accessor: 'title',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.channel_plural),\r\n                accessor: 'channels',\r\n                NoFilter: true\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    const fetchData = () => dispatch(getCollection(getVariableConfigurationLst()));\r\n    const fetchDetailData = (id: string) => dispatch(getCollectionAux(getVariableConfigurationSel(id)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"ESTADOGENERICO\"),\r\n        ]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_import) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.variableconfiguration).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave]);\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (botdesignerResult) {\r\n            handleEdit(botdesignerResult);\r\n            dispatch(chatblock_reset());\r\n        }\r\n    }, [botdesignerResult])\r\n\r\n    const handleDownload = (row: Dictionary) => {\r\n        setWaitDownload(true);\r\n        dispatch(showBackdrop(true));\r\n        fetchDetailData(row.chatblockid);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!detailResult.loading && !detailResult.error) {\r\n            if (waitDownload) {\r\n                downloadData(detailResult.data);\r\n                dispatch(showBackdrop(false));\r\n                setWaitDownload(false);\r\n                dispatch(resetMainAux());\r\n            }\r\n        }\r\n    }, [detailResult]);\r\n\r\n    const downloadData = (data: Dictionary[]) => {\r\n        if (data.length > 0) {\r\n            let mapdata = data.map(({ variable, description, fontcolor, fontbold, priority, visible }) => {\r\n                    return { variable, description, fontcolor, fontbold, priority, visible }\r\n            });\r\n            let filename = `variableconfiguration_${rowSelected.row?.title}.csv`;\r\n            downloadCSV(filename, mapdata);\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (row: Dictionary, files: any) => {\r\n        const file = files[0];\r\n        const owner = (({ corpid, orgid, chatblockid }) => ({ corpid, orgid, chatblockid }))(row);\r\n        const data = await uploadCSV(file, owner);\r\n        setvaluefile('')\r\n        if (data) {\r\n            uploadData(data);\r\n        }\r\n    }\r\n\r\n    const uploadData = (data: any) => {\r\n        dispatch(showBackdrop(true));\r\n        dispatch(execute(insarrayVariableConfiguration(data)));\r\n        setWaitSave(true)\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        if (mainResult.mainData.error) {\r\n            return <h1>ERROR</h1>;\r\n        }\r\n\r\n        return (\r\n            <TableZyx\r\n                onClickRow={handleEdit}\r\n                columns={columns}\r\n                titlemodule={t(langKeys.variableconfiguration_plural, { count: 2 })}\r\n                data={mainResult.mainData.data}\r\n                download={false}\r\n                loading={mainResult.mainData.loading}\r\n                register={false}\r\n            />\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <DetailVariableConfiguration\r\n                data={rowSelected}\r\n                setViewSelected={setViewSelected}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n            />\r\n        )\r\n}\r\n\r\nconst DetailVariableConfiguration: React.FC<DetailProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const detailResult = useSelector(state => state.main.mainAux);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    \r\n    const [waitSave, setWaitSave] = useState(false);\r\n    \r\n    const [dataTable, setDataTable] = useState<any[]>([]);\r\n    const [skipAutoReset, setSkipAutoReset] = useState(false)\r\n\r\n    const fetchDetailData = (id: string) => dispatch(getCollectionAux(getVariableConfigurationSel(id)));\r\n\r\n    useEffect(() => {\r\n        fetchDetailData(row?.chatblockid);\r\n        return () => {\r\n            dispatch(resetMainAux());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!detailResult.loading && !detailResult.error) {\r\n            setDataTable(detailResult.data);\r\n        }\r\n    }, [detailResult]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.variableconfiguration).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    const onSubmit = () => {\r\n        const callback = () => {\r\n            dispatch(execute(insarrayVariableConfiguration(dataTable)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    };\r\n\r\n    const arrayBread = useMemo(() => ([\r\n        { id: \"view-1\", name: t(langKeys.variableconfiguration, { count: 2 }) },\r\n        { id: \"view-2\", name: t(langKeys.variableconfigurationdetail) },\r\n    ]), [t]);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: t(langKeys.variable),\r\n                accessor: 'variable',\r\n                NoFilter: false,\r\n                sortType: 'string'\r\n            },\r\n            {\r\n                Header: t(langKeys.label),\r\n                accessor: 'description',\r\n                NoFilter: false,\r\n                sortType: 'string',\r\n                editable: true,\r\n            },\r\n            {\r\n                Header: t(langKeys.color),\r\n                accessor: 'fontcolor',\r\n                NoFilter: false,\r\n                type: 'color',\r\n                editable: true,\r\n                width: 160,\r\n                maxWidth: 160\r\n            },\r\n            {\r\n                Header: t(langKeys.bold),\r\n                accessor: 'fontbold',\r\n                NoFilter: false,\r\n                type: 'boolean',\r\n                sortType: 'basic',\r\n                editable: true,\r\n                width: 180,\r\n                maxWidth: 180\r\n            },\r\n            {\r\n                Header: t(langKeys.order),\r\n                accessor: 'priority',\r\n                NoFilter: false,\r\n                type: 'number',\r\n                sortType: 'number',\r\n                editable: true,\r\n                width: 150,\r\n                maxWidth: 150,\r\n            },\r\n            {\r\n                Header: t(langKeys.show),\r\n                accessor: 'visible',\r\n                NoFilter: false,\r\n                type: 'boolean',\r\n                sortType: 'basic',\r\n                editable: true,\r\n                width: 180,\r\n                maxWidth: 180\r\n            }\r\n        ],\r\n        []\r\n    )\r\n\r\n    const [updatingDataTable, setUpdatingDataTable] = useState(false);\r\n    const updateCell = (rowIndex: number, columnId: any, value: any) => {\r\n        // We also turn on the flag to not reset the page\r\n        setSkipAutoReset(true);\r\n        setDataTable((old: any) =>\r\n        old.map((row: any, index: number) => {\r\n            if (index === rowIndex) {\r\n                return {\r\n                    ...old[rowIndex],\r\n                    [columnId]: value,\r\n                }\r\n            }\r\n            return row\r\n        })\r\n        )\r\n        setUpdatingDataTable(!updatingDataTable);\r\n    }\r\n\r\n    const updateColumn = (rowIndexs: number[], columnId: any, value: any) => {\r\n        // We also turn on the flag to not reset the page\r\n        setSkipAutoReset(true);\r\n        setDataTable((old: any) =>\r\n        old.map((row: any, index: number) => {\r\n            if (rowIndexs.includes(index)) {\r\n                return {\r\n                    ...old[index],\r\n                    [columnId]: value,\r\n                }\r\n            }\r\n            return row\r\n        })\r\n        )\r\n        setUpdatingDataTable(!updatingDataTable);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSkipAutoReset(false)\r\n    }, [updatingDataTable])\r\n\r\n    const ButtonsElement = () => {\r\n        return (\r\n            <div style={{ display: 'flex', gap: '10px', justifyContent: 'flex-end' }}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                    startIcon={<ClearIcon color=\"secondary\" />}\r\n                    style={{ backgroundColor: \"#FB5F5F\" }}\r\n                    onClick={() => setViewSelected(\"view-1\")}\r\n                >{t(langKeys.back)}</Button>\r\n                {edit &&\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        startIcon={<SaveIcon color=\"secondary\" />}\r\n                        style={{ backgroundColor: \"#55BD84\" }}\r\n                        onClick={() => onSubmit()}\r\n                    >{t(langKeys.save)}\r\n                    </Button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <TemplateBreadcrumbs\r\n                breadcrumbs={arrayBread}\r\n                handleClick={setViewSelected}\r\n            />\r\n            <TableZyxEditable\r\n                columns={columns}\r\n                titlemodule={`${t(langKeys.variableconfiguration_plural, { count: 2 })}${row ? ` (${row.title})` : ''}`}\r\n                data={dataTable}\r\n                ButtonsElement={ButtonsElement}\r\n                download={false}\r\n                loading={detailResult.loading}\r\n                register={false}\r\n                filterGeneral={false}\r\n                updateCell={updateCell}\r\n                updateColumn={updateColumn}\r\n                skipAutoReset={skipAutoReset}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VariableConfiguration;\r\n\r\ninterface TemplateIconsProps {\r\n    layoutKey: string;\r\n    valuefile: string;\r\n    exportFn: (event: React.MouseEvent<HTMLLIElement>) => void;\r\n    importFn: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const TemplateIcons: React.FC<TemplateIconsProps> = ({ layoutKey, valuefile, exportFn, importFn }) => {\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const handleClose = (e: React.MouseEvent) => {\r\n        e.stopPropagation();\r\n        setAnchorEl(null);\r\n    };\r\n    \r\n    return (\r\n        <div style={{ whiteSpace: 'nowrap', display: 'flex' }}>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                size=\"small\"\r\n\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setAnchorEl(e.currentTarget);\r\n                }}\r\n            >\r\n                <MoreVertIcon style={{ color: '#B6B4BA' }} />\r\n            </IconButton>\r\n            <input\r\n                id={`${layoutKey}-import-input`}\r\n                name=\"file\"\r\n                type=\"file\"\r\n                accept=\"text/csv\"\r\n                value={valuefile}\r\n                style={{ display: 'none' }}\r\n                onChange={importFn}\r\n                onClick={e => e.stopPropagation()}\r\n            />\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem\r\n                    onClick={e => {\r\n                        exportFn(e);\r\n                        handleClose(e);\r\n                    }}\r\n                >\r\n                    <ListItemIcon color=\"inherit\">\r\n                        <GetAppIcon width={22} style={{ fill: '#7721AD' }} />\r\n                    </ListItemIcon>\r\n                    <ListItemText>\r\n                        <Trans i18nKey={langKeys.download} />\r\n                    </ListItemText>\r\n                </MenuItem>\r\n                <label htmlFor={`${layoutKey}-import-input`}>\r\n                    <MenuItem onClick={handleClose}>\r\n                        <ListItemIcon color=\"inherit\">\r\n                            <PublishIcon width={18} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        <ListItemText>\r\n                            <Trans i18nKey={langKeys.import} />\r\n                        </ListItemText>\r\n                    </MenuItem>\r\n                </label>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');","import { IActionCall } from \"@types\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const chatblock_set = (data: any): IActionCall => ({\r\n    payload: data,\r\n    type: actionTypes.CHATBLOCK_SET\r\n});\r\n\r\nexport const chatblock_reset = (): IActionCall => ({type: actionTypes.CHATBLOCK_RESET});"],"sourceRoot":""}