{"version":3,"sources":["../node_modules/@material-ui/core/styles/makeStyles.js","pages/Tickets.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","components/fields/table-paginated.tsx","components/inbox/Interaction.tsx","components/inbox/DialogInteractions.tsx","../node_modules/@material-ui/core/Box/Box.js","../node_modules/@material-ui/core/styles/styled.js","../node_modules/@material-ui/icons/Publish.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_extends2","_styles","_defaultTheme","_default","stylesOrCreator","options","arguments","length","undefined","makeStyles","defaultTheme","useStyles","theme","container","display","flexDirection","gap","width","title","fontSize","fontWeight","color","palette","text","primary","containerFilter","marginBottom","spacing","flexWrap","filterComponent","filterComponentVirtualized","button","padding","textTransform","labellink","textDecoration","cursor","filterStatus","filterStatusActive","main","flex_1","flex","DialogCloseticket","setOpenModal","openModal","rowWithDataSelected","fetchData","t","useTranslation","dispatch","useDispatch","useState","waitClose","setWaitClose","multiData","useSelector","state","closingRes","inbox","triggerMassiveCloseTicket","useForm","register","handleSubmit","setValue","getValues","reset","errors","formState","useEffect","loading","error","showSnackbar","show","severity","message","langKeys","error_unexpected_error","showBackdrop","successful_close_ticket","motive","observation","validate","field_required","onSubmit","data","listTicketsToClose","map","row","conversationid","asesoridfinal","numeroticket","communicationchannelsite","personcommunicationchanneltype","personcommunicationchannel","communicationchannelid","massiveCloseTicket","listTickets","open","close_ticket","buttonText1","cancel","buttonText2","save","handleClickButton1","handleClickButton2","button2Type","className","label","closing_reason","valueDefault","onChange","domainvalue","optionDesc","optionValue","maxLength","DialogReassignticket","waitReassign","setWaitReassign","userList","mainAux","reassigningRes","triggerReassignTicket","groupsList","setGroupsList","user","login","validateToken","touserid","successful_reasign_ticket","ticket","ticketnum","displayname","name","lastmessage","personid","interactionid","communicationchanneltype","imageurldef","lastuserid","firstconversationdate","fechainicio","userid","status","countnewmessages","coloricon","newConversation","postexternalid","commentexternalid","replyexternalid","tdatime","isAnswered","forEach","emitEvent","event","wasanswered","newuserid","newUserGroup","firstname","lastname","newUserId","ticketgroup","filter","group","getCollectionAux","getListUsers","resetMainAux","listConversation","x","join","execute","reassignMassiveTicket","least_user_or_group","reassign_ticket","reassign","agent_plural","group_plural","DialogTipifications","waitTipify","setWaitTipify","tipificationLevel2","tipificationsLevel2","tipificationLevel3","tipificationsLevel3","tipifyRes","code","module","tipification","toLocaleLowerCase","successful_tipify_ticket","resetGetTipificationLevel2","resetGetTipificationLevel3","classificationid1","path1","classificationid2","path2","classificationid3","path3","insConversationClassificationMassive","tipify_ticket","level","classificationid","path","getTipificationLevel2","getTipificationLevel3","IconOptions","onHandlerReassign","onHandlerClassify","onHandlerClose","onHandlerShowHistory","disabled","onHandlerCallRecord","React","anchorEl","setAnchorEl","size","onClick","e","currentTarget","id","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","style","fill","status_history","DialogHistoryStatus","resultHistory","getHistoryStatusConversation","columns","useMemo","Header","accessor","changeDate","type","sortType","Cell","props","cell","original","convertLocalDate","createdate","toLocaleString","person_who_modified","maxWidth","filterGeneral","download","DialogLoadTickets","classes","waitUpload","setWaitUpload","mainResult","importRes","triggerImportTicket","channelsite","setChannelsite","fileList","setFileList","successful_import","a","fd","FormData","append","i","importTicket","no_files_selected","no_channel_selected","handleUpload","files","Array","from","max_limit_file_per_upload","n","upload_conversation_plural","buttonText0","template","import","handleClickButton0","exportExcel","templateMaker","justifyContent","channel","variant","sort","b","communicationchanneldesc","localeCompare","accept","target","multiple","htmlFor","component","backgroundColor","select","marginTop","Tickets","allParameters","setAllParameters","openDialogTipify","setOpenDialogTipify","openDialogClose","setOpenDialogClose","openDialogReassign","setOpenDialogReassign","openDialogShowHistory","setOpenDialogShowHistory","setRowWithDataSelected","selectedRows","setSelectedRows","rowSelected","setRowSelected","mainPaginated","resExportData","exportData","rowToSend","setRowToSend","waitSave","setWaitSave","pageCount","setPageCount","totalrow","settotalrow","setUserList","pageSize","pageIndex","filters","sorts","daterange","fetchDataAux","setfetchDataAux","openUploadTickets","setOpenUploadTickets","waitDownloadRecord","setWaitDownloadRecord","getCallRecordRes","voximplant","requestGetCallRecord","parameterName","keys","p","find","y","parseInt","downloadCallRecord","VoximplantService","getCallRecord","call_session_history_id","axios_result","buff","Buffer","blob","Blob","headers","split","includes","objectUrl","window","URL","createObjectURL","document","createElement","href","click","errormessage","response","ticket_plural","isComponent","minWidth","estadoconversacion","callanswereddate","download_record","ticket_numeroticket","openDialogInteractions","ticket_communicationchanneldescription","ticket_name","origin","ticket_firstusergroup","ticket_ticketgroup","ticket_phone","ticket_fechainicio","ticket_fechafin","fechafin","ticket_tipocierre","helpText","report_productivity_closetype_help","ticket_duracionreal","ticket_help_duracionreal","ticket_duracionpausa","ticket_duracionpausa_help","ticket_duraciontotal","ticket_duraciontotal_help","ticket_fechahandoff","ticket_fechahandoff_help","fechahandoff","ticket_fechaultimaconversacion","ticket_fechaultimaconversacion_help","fechaultimaconversacion","ticket_asesorinicial","ticket_asesorfinal","ticket_supervisor","ticket_agentrol","ticket_empresa","campaign","ticket_tmoasesor","ticket_tmoasesor_help","ticket_tiempopromediorespuesta","ticket_tiempopromediorespuesta_help","ticket_tiempopromediorespuestaasesor","ticket_tiempopromediorespuestaasesor_help","ticket_tiempoprimerarespuestaasesor","ticket_tiempoprimerarespuestaasesor_help","ticket_tiempopromediorespuestapersona","ticket_tiempopromediorespuestapersona_help","ticket_tiempoprimeraasignacion","ticket_tiempoprimeraasignacion_help","ticket_tdatime","ticket_tdatime_help","ticket_holdingwaitingtime","ticket_holdingwaitingtime_help","supervisionduration","ticket_classification","ticket_tipification_help","ticket_documenttype","documentnumber","ticket_email","ticket_balancetimes","ticket_abandoned","abandoned","affirmative","negative","ticket_labels","ticket_labels_help","useCallback","getCollectionPaginated","getPaginatedTicket","startdate","startDate","enddate","endDate","take","skip","fetchDataAux2","getMultiCollection","getCommChannelLst","getValuesFromDomainLight","getComunicationChannelDelegate","getClassificationLevel1","getUserSel","getCampaignLst","getPropertySelByName","resetAllMain","Math","ceil","count","property","url","fullname","alignItems","startIcon","ticket_typify","close","filterrange","ButtonsElement","roledesc","propertyvalue","exportPersonalized","columnsExport","key","alias","getTicketExport","useSelection","selectionFilter","selectionKey","filterRangeDate","FiltersElement","o","agent","_classCallCheck","instance","Constructor","TypeError","footerTable","breakpoints","up","textAlign","trdynamic","boxShadow","visibility","containerfloat","borderBottom","position","zIndex","left","containerButtons","containerButtonsNoFilters","iconOrder","height","containerHeader","containerHeaderColumn","iconHelpText","DefaultColumnFilter","header","setFilters","listSelectFilter","operator","setoperator","handleClickItemMenu","op","Fragment","DateOptionsMenuComponent","date","Date","isNaN","valueOf","toISOString","TimeOptionsMenuComponent","toLocaleTimeString","fullWidth","onKeyDown","keyCode","PaperProps","maxHeight","OptionsMenuComponent","TableZyx","memo","titlemodule","controlledPageCount","handleRegister","HeadComponent","importCSV","autotrigger","autoRefresh","initialSelectedRows","cleanSelection","setCleanSelection","onClickRow","onFilterChange","initialEndDate","initialStartDate","initialFilters","initialPageIndex","pagination","setPagination","openDateRangeModal","setOpenDateRangeModal","triggerSearch","setTriggerSearch","page","tFilters","setTFilters","useTable","initialState","selectedRowIds","manualPagination","useControlledState","autoResetSelectedRows","getRowId","relativeIndex","parent","stateReducer","newState","action","useFilters","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","push","getToggleAllPageRowsSelectedProps","filteredRows","checked","every","isSelected","toggleRowSelected","NoFilter","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","setPageSize","toggleAllRowsSelected","setPageIndex","prev","trigger","getFirstDayMonth","getDateToday","getLastDayMonth","dateRange","setdateRange","triggertmp","fromButton","setHours","substring","getTime","callback","clsx","setOpen","range","onSelect","border","borderRadius","getDateCleaned","i18nKey","search","overflow","headerGroup","getHeaderGroupProps","column","ii","activeOnHover","render","getHeaderProps","NoSort","newsorts","handleClickSort","whiteSpace","wordWrap","arrow","placement","LoadingSkeleton","getRowProps","hover","cells","getCellProps","textOverflow","tablePageOf","values","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","itemCount","totalItems","disableUnderline","Number","marginRight","recordPerPage","items","useQueryParams","query","ignore","get","buildQueryFilters","init","params","URLSearchParams","set","String","colFilters","useStylesInteraction","containerCarousel","imageCardCarousel","objectFit","buttonCarousel","buttonLeft","top","buttonRight","right","containerTime","float","marginLeft","paddingRight","lineHeight","timeSeen","timeInteraction","bottom","timeInteractionWithBackground","ShoppingCart","interactiontext","userType","onlyTime","handleClickOpen","jsonIntt","JSON","parse","Product_items","interactionText","interactionTextAgent","alt","src","ImageReference","paddingLeft","elements","reduce","acc","item","parseFloat","Item_price","Quantity","toFixed","Currency","Text","borderTop","show_shopping_cart","TimerInteraction","interactiontype","time","anchor","onOpen","cart_sent","index","Title","quantity","CatalogProduct","Type","firstimage","SectionList","ProductList","totalitems","Body","Footer","show_items","index11","itemProduct","index22","wordBreak","Description","Price","Product","InteractiveList","sections","headertype","body","footer","buttons","background","Carousel","carousel","pageSelected","setPageSelected","mediaUrl","crossOrigin","description","actions","ticketSelected","isSeen","setIsSeen","lastseendate","lastSeenDate","interactionDate","PickerInteraction","viewBox","transform","fillRule","d","ItemInteraction","interaction","listImage","indexImage","ref","useRef","showfulltext","setshowfulltext","isLoaded","useJsApiLoader","googleMapsApiKey","setHeight","onLoad","current","contentWindow","scrollHeight","trim","dangerouslySetInnerHTML","__html","validateIsUrl","showmore","srcDoc","subject","file","hreffile","extension","pop","rel","overflowX","decodeURI","interactionImage","imageCard","manageLightBox","visible","images","json","jj","stringsmooch","listButtons","containerQuickreply","buttonQuickreply","containerPostback","headerPostback","buttonPostback","listItems","controls","filename","textres","ishtml","coordinates","mapContainerStyle","center","lat","lng","zoom","ItemGroupInteraction","groupInteraction","usertype","interactions","interactionAgent","interactionFromPost","avatar","containerPanel","titleTicketChat","groupInteractionAgent","containerTickets","borderRight","headChat","containerInteractions","fontStyle","borderTopLeftRadius","borderTopRightRadius","itemSelected","dark","borderBottomLeftRadius","borderBottomRightRadius","containerResponse","containerChat","collapseInfo","infoOpen","infoClose","containerProfile","iconResponse","poisition","iconSend","iconSendDisabled","containerButtonsChat","buttonCloseticket","boxSizing","fontFamily","buttonIcon","containerItemTicket","containerNewMessages","containerQuickReply","headerQuickReply","itemQuickReply","paddingTop","paddingBottom","DialogInteractions","showAllInteraction","setShowAllInteraction","interactionExtraList","interactionsToShow","setinteractionsToShow","el","getInteractions","GenericPdfDownloader","downloadFileName","then","jsPDF","gg","innerHTML","querySelectorAll","remove","appendChild","DomToImage","toPng","imgData","imgHeight","heightLeft","doc","addImage","addPage","getElementById","isHide","show_all","imageClient","clientName","styleFunction","_system","_styled","styleFunctionSx","compose","borders","flexbox","grid","positions","shadows","sizing","typography","Component","componentCreator","styled","_interopRequireWildcard"],"mappings":"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","file":"static/js/39.2d08720a.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _defaultTheme = _interopRequireDefault(require(\"./defaultTheme\"));\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return (0, _styles.makeStyles)(stylesOrCreator, (0, _extends2.default)({\n    defaultTheme: _defaultTheme.default\n  }, options));\n}\n\nvar _default = makeStyles;\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\nimport { convertLocalDate, getListUsers, getClassificationLevel1, getCommChannelLst, getComunicationChannelDelegate, getPaginatedTicket, getTicketExport, getValuesFromDomainLight, insConversationClassificationMassive, reassignMassiveTicket, getUserSel, getHistoryStatusConversation, getCampaignLst, getPropertySelByName, exportExcel, templateMaker } from 'common/helpers';\r\nimport { getCollectionPaginated, exportData, getMultiCollection, resetAllMain, execute, getCollectionAux, resetMainAux } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop } from 'store/popus/actions';\r\nimport TablePaginated from 'components/fields/table-paginated';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'hooks';\r\nimport { Dictionary, IFetchData } from '@types'\r\nimport { langKeys } from 'lang/keys';\r\nimport { useTranslation } from 'react-i18next';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport Box from '@material-ui/core/Box/Box';\r\nimport { DialogZyx, FieldMultiSelect, FieldSelect, FieldEditMulti, FieldMultiSelectVirtualized } from 'components';\r\nimport TableZyx from 'components/fields/table-simple';\r\nimport { useForm } from 'react-hook-form';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { CloseTicketIcon, HistoryIcon, TipifyIcon, ReassignIcon, CallRecordIcon } from 'icons';\r\nimport { massiveCloseTicket, getTipificationLevel2, resetGetTipificationLevel2, resetGetTipificationLevel3, getTipificationLevel3, emitEvent, importTicket } from 'store/inbox/actions';\r\nimport { Button, ListItemIcon, Tooltip } from '@material-ui/core';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport { VoximplantService } from 'network';\r\nimport DialogInteractions from 'components/inbox/DialogInteractions';\r\n\r\nconst selectionKey = 'conversationid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 8,\r\n        width: '100%',\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n\r\n    containerFilter: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        gap: 16,\r\n        flexWrap: 'wrap'\r\n    },\r\n    filterComponent: {\r\n        width: '250px'\r\n    },\r\n    filterComponentVirtualized: {\r\n        width: '300px'\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    labellink: {\r\n        color: '#7721ad',\r\n        textDecoration: 'underline',\r\n        cursor: 'pointer'\r\n    },\r\n    filterStatus: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        cursor: 'pointer'\r\n    },\r\n    filterStatusActive: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    flex_1: {\r\n        flex: 1\r\n    }\r\n}));\r\n\r\nconst DialogCloseticket: React.FC<{ fetchData: () => void, setOpenModal: (param: any) => void, openModal: boolean, rowWithDataSelected: Dictionary[] }> = ({ setOpenModal, openModal, rowWithDataSelected, fetchData }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [waitClose, setWaitClose] = useState(false);\r\n    const multiData = useSelector(state => state.main.multiData);\r\n    const closingRes = useSelector(state => state.inbox.triggerMassiveCloseTicket);\r\n\r\n    const { register, handleSubmit, setValue, getValues, reset, formState: { errors } } = useForm();\r\n\r\n    useEffect(() => {\r\n        if (waitClose) {\r\n            if (!closingRes.loading && !closingRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_close_ticket) }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                fetchData()\r\n                setWaitClose(false);\r\n            } else if (closingRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.error_unexpected_error) }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitClose(false);\r\n            }\r\n        }\r\n    }, [closingRes, waitClose])\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            reset({\r\n                motive: '',\r\n                observation: ''\r\n            })\r\n            register('motive', { validate: (value) => ((value && value.length) || t(langKeys.field_required)) });\r\n            register('observation');\r\n        }\r\n    }, [openModal])\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        // rowWithDataSelected\r\n        const listTicketsToClose = rowWithDataSelected.map(row => ({\r\n            conversationid: row.conversationid,\r\n            asesoridfinal: row.asesoridfinal,\r\n            numeroticket: row.numeroticket,\r\n            communicationchannelsite: row.communicationchannelsite,\r\n            personcommunicationchanneltype: row.personcommunicationchanneltype,\r\n            personcommunicationchannel: row.personcommunicationchannel,\r\n            communicationchannelid: row.communicationchannelid,\r\n        }));\r\n        dispatch(massiveCloseTicket({\r\n            motive: data.motive,\r\n            observation: data.observation,\r\n            listTickets: listTicketsToClose,\r\n        }))\r\n        dispatch(showBackdrop(true));\r\n        setWaitClose(true);\r\n    });\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.close_ticket)}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.save)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={onSubmit}\r\n            button2Type=\"submit\"\r\n        >\r\n            <div className=\"row-zyx\">\r\n                <FieldSelect\r\n                    label={t(langKeys.closing_reason)}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('motive')}\r\n                    onChange={(value) => setValue('motive', value ? value.domainvalue : '')}\r\n                    error={errors?.motive?.message}\r\n                    data={multiData?.data[2] && multiData?.data[2].data}\r\n                    optionDesc=\"domaindesc\"\r\n                    optionValue=\"domainvalue\"\r\n                />\r\n                <FieldEditMulti\r\n                    label={t(langKeys.observation)}\r\n                    valueDefault={getValues('observation')}\r\n                    className=\"col-12\"\r\n                    onChange={(value) => setValue('observation', value)}\r\n                    maxLength={1024}\r\n                />\r\n            </div>\r\n        </DialogZyx>)\r\n}\r\n\r\nconst DialogReassignticket: React.FC<{ fetchData: () => void, setOpenModal: (param: any) => void, openModal: boolean, rowWithDataSelected: Dictionary[] }> = ({ setOpenModal, openModal, rowWithDataSelected, fetchData }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [waitReassign, setWaitReassign] = useState(false);\r\n    const multiData = useSelector(state => state.main.multiData);\r\n    const userList = useSelector(state => state.main.mainAux);\r\n    const reassigningRes = useSelector(state => state.inbox.triggerReassignTicket);\r\n    const [groupsList, setGroupsList] = useState<Dictionary[]>([]);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n\r\n    const { register, handleSubmit, setValue, getValues, reset, formState: { errors } } = useForm<{\r\n        newUserId: number;\r\n        observation: string;\r\n        newUserGroup: string;\r\n    }>();\r\n\r\n    useEffect(() => {\r\n        if (waitReassign) {\r\n            if (!reassigningRes.loading && !reassigningRes.error) {\r\n                const touserid = getValues('newUserGroup') !== \"\" && getValues('newUserId') === 0 ? 3 : getValues('newUserId');\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_reasign_ticket) }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                setWaitReassign(false);\r\n\r\n                rowWithDataSelected.map(ticket => ({\r\n                    ticketnum: ticket.numeroticket,\r\n                    displayname: ticket.name,\r\n                    lastmessage: \"\",\r\n                    personcommunicationchannel: ticket.personcommunicationchannel,\r\n                    conversationid: ticket.conversationid,\r\n                    personid: ticket.personid,\r\n                    communicationchannelid: ticket.communicationchannelid,\r\n                    interactionid: 0,\r\n                    communicationchanneltype: ticket.personcommunicationchanneltype,\r\n                    imageurldef: ticket.imageurldef,\r\n                    communicationchannelsite: ticket.communicationchannelsite,\r\n                    lastuserid: ticket.asesoridfinal,\r\n                    firstconversationdate: ticket.fechainicio,\r\n                    userid: ticket.asesoridfinal,\r\n                    status: \"ASIGNADO\",\r\n                    countnewmessages: 0,\r\n                    // channelicon: ticket.channelicon,\r\n                    coloricon: ticket.coloricon,\r\n                    newConversation: true,\r\n                    postexternalid: ticket.postexternalid,\r\n                    commentexternalid: ticket.commentexternalid,\r\n                    replyexternalid: ticket.replyexternalid,\r\n                    tdatime: ticket.tdatime,\r\n                    isAnswered: false,\r\n                })).forEach(ticket => dispatch(emitEvent({\r\n                    event: 'reassignTicket',\r\n                    data: {\r\n                        ...ticket,\r\n                        wasanswered: true,\r\n                        newuserid: touserid,\r\n                        newUserGroup: getValues('newUserGroup'),\r\n                        lastmessage: `${user?.firstname} ${user?.lastname} reasignó este ticket ${touserid === 3 ? 'HOLDING(' + getValues('newUserGroup') + \")\" : ''}`\r\n                    }\r\n                })))\r\n                fetchData();\r\n            } else if (reassigningRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.error_unexpected_error) }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitReassign(false);\r\n            }\r\n        }\r\n    }, [reassigningRes, waitReassign])\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            reset({\r\n                newUserId: 0,\r\n                observation: '',\r\n                newUserGroup: '',\r\n            })\r\n            register('newUserId');\r\n            register('observation');\r\n            register('newUserGroup');\r\n\r\n            const groupsList = multiData?.data[6]?.data || [];\r\n            if (rowWithDataSelected.length === 1) {\r\n                const { ticketgroup } = rowWithDataSelected[0];\r\n                setGroupsList(ticketgroup ? groupsList.filter(group => group.domainvalue !== ticketgroup) : groupsList);\r\n            } else {\r\n                setGroupsList(groupsList);\r\n            }\r\n            dispatch(getCollectionAux(getListUsers()));\r\n        } else {\r\n            dispatch(resetMainAux());\r\n        }\r\n    }, [openModal])\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (data.newUserId === 0 && !data.newUserGroup) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.least_user_or_group) }))\r\n            return;\r\n        }\r\n        const listConversation = rowWithDataSelected.map(x => x.conversationid).join();\r\n\r\n        dispatch(execute(reassignMassiveTicket(listConversation, data.newUserId, data.observation, data.newUserGroup)));\r\n        dispatch(showBackdrop(true));\r\n        setWaitReassign(true);\r\n\r\n    });\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.reassign_ticket)}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.reassign)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={onSubmit}\r\n            button2Type=\"submit\"\r\n        >\r\n            <div className=\"row-zyx\">\r\n                <FieldSelect\r\n                    label={t(langKeys.agent_plural)}\r\n                    className=\"col-12\"\r\n                    valueDefault={\"\" + getValues('newUserId')}\r\n                    onChange={(value) => setValue('newUserId', value ? value.userid : 0)}\r\n                    error={errors?.newUserId?.message}\r\n                    data={userList.data.filter(x => x.status === 'ACTIVO')}\r\n                    loading={userList.loading}\r\n                    optionDesc=\"displayname\"\r\n                    optionValue=\"userid\"\r\n                />\r\n                <FieldSelect\r\n                    label={t(langKeys.group_plural)}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('newUserGroup')}\r\n                    onChange={(value) => setValue('newUserGroup', value ? value.domainvalue : '')}\r\n                    error={errors?.newUserGroup?.message}\r\n                    data={groupsList}\r\n                    optionDesc=\"domaindesc\"\r\n                    optionValue=\"domainvalue\"\r\n                />\r\n                <FieldEditMulti\r\n                    label={t(langKeys.observation)}\r\n                    valueDefault={getValues('observation')}\r\n                    className=\"col-12\"\r\n                    onChange={(value) => setValue('observation', value)}\r\n                    maxLength={1024}\r\n                />\r\n            </div>\r\n        </DialogZyx>)\r\n}\r\n\r\nconst DialogTipifications: React.FC<{ fetchData: () => void, setOpenModal: (param: any) => void, openModal: boolean, rowWithDataSelected: Dictionary[] }> = ({ setOpenModal, openModal, rowWithDataSelected, fetchData }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [waitTipify, setWaitTipify] = useState(false);\r\n    const multiData = useSelector(state => state.main.multiData);\r\n    const tipificationLevel2 = useSelector(state => state.inbox.tipificationsLevel2);\r\n    const tipificationLevel3 = useSelector(state => state.inbox.tipificationsLevel3);\r\n\r\n    const tipifyRes = useSelector(state => state.main.execute);\r\n\r\n    const { register, handleSubmit, setValue, getValues, reset, formState: { errors } } = useForm();\r\n\r\n    useEffect(() => {\r\n        if (waitTipify) {\r\n            if (!tipifyRes.loading && !tipifyRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_tipify_ticket) }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                setWaitTipify(false);\r\n                fetchData()\r\n            } else if (tipifyRes.error) {\r\n                const message = t(tipifyRes.code || \"error_unexpected_error\", { module: t(langKeys.tipification).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitTipify(false);\r\n            }\r\n        }\r\n    }, [tipifyRes, waitTipify])\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            dispatch(resetGetTipificationLevel2())\r\n            dispatch(resetGetTipificationLevel3())\r\n            reset({\r\n                classificationid1: 0,\r\n                path1: '',\r\n                classificationid2: 0,\r\n                path2: '',\r\n                classificationid3: 0,\r\n                path3: '',\r\n            })\r\n            register('path1');\r\n            register('classificationid1', { validate: (value) => ((value && value > 0) || t(langKeys.field_required)) });\r\n            register('path2');\r\n            register('classificationid2');\r\n            register('path3');\r\n            register('classificationid3');\r\n\r\n        }\r\n    }, [openModal])\r\n\r\n    const onChangeTipificationLevel1 = (value: Dictionary) => {\r\n        setValue('classificationid1', value ? value.classificationid : '');\r\n        setValue('path1', value ? value.path : '');\r\n        setValue('classificationid2', 0);\r\n        setValue('path2', '');\r\n        setValue('classificationid3', 0);\r\n        setValue('path3', '');\r\n\r\n        if (value)\r\n            dispatch(getTipificationLevel2(value.classificationid))\r\n        else\r\n            dispatch(resetGetTipificationLevel2())\r\n    }\r\n\r\n    const onChangeTipificationLevel2 = (value: Dictionary) => {\r\n        setValue('classificationid2', value ? value.classificationid : '');\r\n        setValue('path2', value ? value.path : '');\r\n        setValue('classificationid3', 0);\r\n        setValue('path3', '');\r\n        if (value)\r\n            dispatch(getTipificationLevel3(value.classificationid))\r\n        else\r\n            dispatch(resetGetTipificationLevel3())\r\n    }\r\n\r\n    const onChangeTipificationLevel3 = (value: Dictionary) => {\r\n        setValue('classificationid2', value ? value.classificationid : '')\r\n        setValue('path2', value ? value.path : '')\r\n    }\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        dispatch(showBackdrop(true));\r\n        dispatch(execute(insConversationClassificationMassive(rowWithDataSelected.map(x => x.conversationid).join(), data.classificationid3 || data.classificationid2 || data.classificationid1)))\r\n        setWaitTipify(true)\r\n    });\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.tipify_ticket) + \"s\"}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.save)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={onSubmit}\r\n            button2Type=\"submit\"\r\n        >\r\n            <div className=\"row-zyx\">\r\n                <FieldSelect\r\n                    label={`${t(langKeys.tipification)} ${t(langKeys.level)} 1`}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('classificationid1')}\r\n                    onChange={onChangeTipificationLevel1}\r\n                    error={errors?.classificationid1?.message}\r\n                    data={multiData?.data[4] && multiData?.data[4].data}\r\n                    optionDesc=\"path\"\r\n                    optionValue=\"classificationid\"\r\n                />\r\n                <FieldSelect\r\n                    label={`${t(langKeys.tipification)} ${t(langKeys.level)} 2`}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('classificationid2')}\r\n                    onChange={onChangeTipificationLevel2}\r\n                    loading={tipificationLevel2.loading}\r\n                    error={errors?.classificationid2?.message}\r\n                    data={tipificationLevel2.data}\r\n                    optionDesc=\"path\"\r\n                    optionValue=\"classificationid\"\r\n                />\r\n                <FieldSelect\r\n                    label={`${t(langKeys.tipification)} ${t(langKeys.level)} 3`}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('classificationid3')}\r\n                    onChange={onChangeTipificationLevel3}\r\n                    loading={tipificationLevel3.loading}\r\n                    error={errors?.classificationid3?.message}\r\n                    data={tipificationLevel3.data}\r\n                    optionDesc=\"path\"\r\n                    optionValue=\"classificationid\"\r\n                />\r\n            </div>\r\n        </DialogZyx>)\r\n}\r\n\r\nconst IconOptions: React.FC<{\r\n    disabled?: boolean,\r\n    onHandlerReassign?: (e?: any) => void;\r\n    onHandlerClassify?: (e?: any) => void;\r\n    onHandlerClose?: (e?: any) => void;\r\n    onHandlerShowHistory?: (e?: any) => void;\r\n    onHandlerCallRecord?: (e?: any) => void;\r\n}> = ({ onHandlerReassign, onHandlerClassify, onHandlerClose, onHandlerShowHistory, onHandlerCallRecord, disabled }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const { t } = useTranslation();\r\n\r\n    const handleClose = () => setAnchorEl(null);\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                size=\"small\"\r\n                disabled={disabled}\r\n                onClick={(e) => setAnchorEl(e.currentTarget)}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {onHandlerReassign &&\r\n                    <MenuItem onClick={() => {\r\n                        setAnchorEl(null);\r\n                        onHandlerReassign();\r\n                    }}>\r\n                        <ListItemIcon color=\"inherit\">\r\n                            <ReassignIcon width={18} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        {t(langKeys.reassign_ticket)}\r\n                    </MenuItem>\r\n                }\r\n                {onHandlerClassify &&\r\n                    <MenuItem onClick={() => {\r\n                        setAnchorEl(null);\r\n                        onHandlerClassify();\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <TipifyIcon width={18} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        {t(langKeys.tipify_ticket)}\r\n                    </MenuItem>\r\n                }\r\n                {onHandlerClose &&\r\n                    <MenuItem onClick={() => {\r\n                        setAnchorEl(null);\r\n                        onHandlerClose();\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <CloseTicketIcon width={18} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        {t(langKeys.close_ticket)}\r\n                    </MenuItem>\r\n                }\r\n                {onHandlerShowHistory &&\r\n                    <MenuItem onClick={() => {\r\n                        setAnchorEl(null);\r\n                        onHandlerShowHistory();\r\n                    }}>\r\n                        <ListItemIcon>\r\n                            <HistoryIcon width={22} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        {t(langKeys.status_history)}\r\n                    </MenuItem>\r\n                }\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nconst DialogHistoryStatus: React.FC<{ ticket: Dictionary | null, openModal: boolean, setOpenModal: (param: any) => void }> = ({ ticket, openModal, setOpenModal }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const resultHistory = useSelector(state => state.main.mainAux);\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            if (ticket) {\r\n                dispatch(getCollectionAux(getHistoryStatusConversation(ticket.personid, ticket.conversationid, ticket.communicationchannelid)))\r\n            }\r\n        }\r\n    }, [ticket, openModal])\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n            },\r\n            {\r\n                Header: t(langKeys.changeDate),\r\n                accessor: 'createdate',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return convertLocalDate(row.createdate).toLocaleString()\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.person_who_modified),\r\n                accessor: 'fullname',\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            maxWidth=\"md\"\r\n            title={`${t(langKeys.status_history)} ticket ${ticket?.numeroticket}`}\r\n            buttonText1={t(langKeys.cancel)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n        >\r\n            <TableZyx\r\n                columns={columns}\r\n                // titlemodule={t(langKeys.hi, { count: 2 })}\r\n                data={resultHistory.data}\r\n                filterGeneral={false}\r\n                download={false}\r\n                loading={resultHistory.loading}\r\n                register={false}\r\n            />\r\n        </DialogZyx>\r\n    )\r\n}\r\n\r\nconst DialogLoadTickets: React.FC<{\r\n    setOpenModal: (param: any) => void,\r\n    openModal: boolean,\r\n    fetchData: () => void\r\n}> = ({ setOpenModal, openModal, fetchData }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [waitUpload, setWaitUpload] = useState(false);\r\n    const mainResult = useSelector(state => state.main);\r\n    const importRes = useSelector(state => state.inbox.triggerImportTicket)\r\n\r\n    const [channelsite, setChannelsite] = useState<string>('');\r\n    const [fileList, setFileList] = useState<File[]>([])\r\n\r\n    const { handleSubmit } = useForm<{\r\n        filename: string;\r\n    }>();\r\n\r\n    useEffect(() => {\r\n        if (waitUpload) {\r\n            if (!importRes.loading && !importRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_import) }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                setWaitUpload(false);\r\n                fetchData();\r\n            } else if (importRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(importRes.code || \"error_unexpected_error\") }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitUpload(false);\r\n            }\r\n        }\r\n    }, [importRes, waitUpload])\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            setChannelsite('');\r\n            setFileList([]);\r\n        }\r\n    }, [openModal])\r\n\r\n    const onSubmit = handleSubmit(async () => {\r\n        if (!!channelsite) {\r\n            if (!!fileList && fileList?.length > 0) {\r\n                const fd = new FormData();\r\n                fd.append('channelsite', channelsite);\r\n                for (let i = 0; i < fileList.length; i++) {\r\n                    fd.append(fileList[i].name, fileList[i], fileList[i].name);\r\n                }\r\n                dispatch(importTicket(fd));\r\n                dispatch(showBackdrop(true));\r\n                setWaitUpload(true);\r\n            }\r\n            else {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_files_selected) }))\r\n            }\r\n        }\r\n        else {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_channel_selected) }))\r\n        }\r\n        \r\n    });\r\n    \r\n    const handleUpload = async (files: any) => {\r\n        if (Array.from<File>(files).length > 10) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.max_limit_file_per_upload, {n: 10}) }))\r\n        }\r\n        else {\r\n            setFileList(Array.from<File>(files));\r\n        }\r\n    }\r\n\r\n    const handleTemplate = () => {\r\n        const data = [\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {'CLIENT': 'CLIENT', 'BOT': 'BOT'}\r\n        ];\r\n        const header = [\r\n            'date',\r\n            'personname',\r\n            'personphone',\r\n            'interactiontext',\r\n            'interactionfrom'\r\n        ];\r\n        exportExcel(`${t(langKeys.template)} ${t(langKeys.ticket)}`, templateMaker(data, header));\r\n    }\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.upload_conversation_plural)}\r\n            buttonText0={t(langKeys.template)}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.import)}\r\n            handleClickButton0={() => handleTemplate()}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={onSubmit}\r\n            button2Type=\"submit\"\r\n        >\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    gap: '10px'\r\n                }}\r\n            >\r\n                <FieldSelect\r\n                    label={t(langKeys.channel)}\r\n                    className={classes.flex_1}\r\n                    valueDefault={channelsite}\r\n                    onChange={(value) => setChannelsite(value?.communicationchannelsite)}\r\n                    variant=\"outlined\"\r\n                    data={mainResult?.multiData?.data[0]?.data.sort((a, b) => (a.communicationchanneldesc || \"\").localeCompare(b.communicationchanneldesc)) || []}\r\n                    optionDesc=\"communicationchanneldesc\"\r\n                    optionValue=\"communicationchannelid\"\r\n                />\r\n                <input\r\n                    name=\"file\"\r\n                    accept=\"text/csv,.zip,.rar,.xls,.xlsx\"\r\n                    id=\"laraigo-upload-csv-file\"\r\n                    type=\"file\"\r\n                    style={{ display: 'none' }}\r\n                    onChange={(e) => handleUpload(e.target.files)}\r\n                    multiple\r\n                />\r\n                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        component=\"span\"\r\n                        color=\"primary\"\r\n                        style={{ backgroundColor: \"#55BD84\" }}\r\n                    >{t(langKeys.select)}\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                gap: \"5px\",\r\n                marginTop: \"10px\"\r\n            }}>\r\n                {fileList && fileList?.map((x, i) => (\r\n                        <div>{i + 1}. {x.name}</div>\r\n                    )\r\n                )}\r\n            </div>\r\n        </DialogZyx>)\r\n}\r\n\r\nconst Tickets = () => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const mainResult = useSelector(state => state.main);\r\n    const dispatch = useDispatch();\r\n\r\n    const [allParameters, setAllParameters] = useState<Dictionary>({});\r\n    const [openDialogTipify, setOpenDialogTipify] = useState(false);\r\n    const [openDialogClose, setOpenDialogClose] = useState(false);\r\n    const [openDialogReassign, setOpenDialogReassign] = useState(false);\r\n    const [openDialogShowHistory, setOpenDialogShowHistory] = useState(false);\r\n\r\n    const [rowWithDataSelected, setRowWithDataSelected] = useState<Dictionary[]>([]);\r\n    const [selectedRows, setSelectedRows] = useState<any>({});\r\n    const [rowSelected, setRowSelected] = useState<Dictionary | null>(null);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const mainPaginated = useSelector(state => state.main.mainPaginated);\r\n    const resExportData = useSelector(state => state.main.exportData);\r\n    const [rowToSend, setRowToSend] = useState<Dictionary[]>([]);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [totalrow, settotalrow] = useState(0);\r\n    const [userList, setUserList] = useState<Dictionary[]>([])\r\n    const [fetchDataAux, setfetchDataAux] = useState<IFetchData>({ pageSize: 0, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const [openUploadTickets, setOpenUploadTickets] = useState(false);\r\n\r\n    const [waitDownloadRecord, setWaitDownloadRecord] = useState(false);\r\n    const getCallRecordRes = useSelector(state => state.voximplant.requestGetCallRecord);\r\n\r\n    const setValue = (parameterName: any, value: any) => {\r\n        setAllParameters({ ...allParameters, [parameterName]: value });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!(Object.keys(selectedRows).length === 0 && rowWithDataSelected.length === 0)) {\r\n            setRowWithDataSelected(p => Object.keys(selectedRows).map(x => mainPaginated.data.find(y => y.conversationid === parseInt(x)) || p.find(y => y.conversationid === parseInt(x)) || {}))\r\n        }\r\n    }, [selectedRows])\r\n\r\n    const downloadCallRecord = async (ticket: Dictionary) => {\r\n        // dispatch(getCallRecord({call_session_history_id: ticket.postexternalid}));\r\n        // setWaitDownloadRecord(true);\r\n        try {\r\n            const axios_result = await VoximplantService.getCallRecord({call_session_history_id: ticket.postexternalid});\r\n            if (axios_result.status === 200) {\r\n                let buff = Buffer.from(axios_result.data, 'base64');\r\n                const blob = new Blob([buff], {type: axios_result.headers['content-type'].split(';').find((x: string) => x.includes('audio'))});\r\n                const objectUrl = window.URL.createObjectURL(blob);\r\n                let a = document.createElement('a');\r\n                a.href = objectUrl;\r\n                a.download = ticket.numeroticket;\r\n                a.click();\r\n            }\r\n        }\r\n        catch (error: any) {\r\n            const errormessage = t(error?.response?.data?.code || \"error_unexpected_error\")\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitDownloadRecord) {\r\n            if (!getCallRecordRes.loading && !getCallRecordRes.error ) {\r\n                if (getCallRecordRes.data) {\r\n                    window.open(getCallRecordRes.data)\r\n                }\r\n                setWaitDownloadRecord(false)\r\n            } else if (getCallRecordRes.error) {\r\n                const errormessage = t(resExportData.code || \"error_unexpected_error\", { module: t(langKeys.ticket_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitDownloadRecord(false)\r\n            }\r\n        }\r\n    }, [getCallRecordRes, waitDownloadRecord])\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'leadid',\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const ticket = props.cell.row.original;\r\n\r\n                    return (\r\n                        <IconOptions\r\n                            onHandlerReassign={ticket.estadoconversacion === \"CERRADO\" ? undefined : () => {\r\n                                setRowToSend([ticket]);\r\n                                setOpenDialogReassign(true);\r\n                            }}\r\n                            onHandlerClassify={ticket.estadoconversacion === \"CERRADO\" ? undefined : () => {\r\n                                setRowToSend([ticket]);\r\n                                setOpenDialogTipify(true);\r\n                            }}\r\n                            onHandlerClose={ticket.estadoconversacion === \"CERRADO\" ? undefined : () => {\r\n                                setRowToSend([ticket]);\r\n                                setOpenDialogClose(true);\r\n                            }}\r\n                            onHandlerShowHistory={() => {\r\n                                setOpenDialogShowHistory(true);\r\n                                setRowSelected(ticket);\r\n                                setRowToSend([ticket]);\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                accessor: 'voxiid',\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        row.communicationchanneltype === 'VOXI'\r\n                        && row.postexternalid\r\n                        && row.callanswereddate ?\r\n                        <Tooltip title={t(langKeys.download_record) || \"\"}>\r\n                            <IconButton size=\"small\" onClick={() => downloadCallRecord(row)}\r\n                            >\r\n                                <CallRecordIcon style={{ fill: '#7721AD' }} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        : null\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_numeroticket),\r\n                accessor: 'numeroticket',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <label\r\n                            className={classes.labellink}\r\n                            onClick={() => openDialogInteractions(row)}\r\n                        >\r\n                            {row.numeroticket}\r\n                        </label>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_communicationchanneldescription),\r\n                accessor: 'communicationchanneldescription'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_name),\r\n                accessor: 'name',\r\n            },\r\n            {\r\n                Header: t(langKeys.origin),\r\n                accessor: 'origin'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_firstusergroup),\r\n                accessor: 'firstusergroup'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_ticketgroup),\r\n                accessor: 'ticketgroup'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_phone),\r\n                accessor: 'phone'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_fechainicio),\r\n                accessor: 'fechainicio',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return convertLocalDate(row.fechainicio).toLocaleString()\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_fechafin),\r\n                accessor: 'fechafin',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return row.fechafin ? convertLocalDate(row.fechafin).toLocaleString() : ''\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'estadoconversacion'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tipocierre),\r\n                accessor: 'tipocierre',\r\n                helpText: t(langKeys.report_productivity_closetype_help)\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_duracionreal),\r\n                accessor: 'duracionreal',\r\n                helpText: t(langKeys.ticket_help_duracionreal),\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_duracionpausa),\r\n                accessor: 'duracionpausa',\r\n                helpText: t(langKeys.ticket_duracionpausa_help),\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_duraciontotal),\r\n                helpText: t(langKeys.ticket_duraciontotal_help),\r\n                accessor: 'duraciontotal',\r\n\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_fechahandoff),\r\n                helpText: t(langKeys.ticket_fechahandoff_help),\r\n                accessor: 'fechahandoff',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return row.fechahandoff ? convertLocalDate(row.fechahandoff).toLocaleString() : ''\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_fechaultimaconversacion),\r\n                helpText: t(langKeys.ticket_fechaultimaconversacion_help),\r\n                accessor: 'fechaultimaconversacion',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return row.fechaultimaconversacion ? convertLocalDate(row.fechaultimaconversacion).toLocaleString() : ''\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_asesorinicial),\r\n                accessor: 'asesorinicial'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_asesorfinal),\r\n                accessor: 'asesorfinal'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_supervisor),\r\n                accessor: 'supervisor'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_agentrol),\r\n                accessor: 'rolasesor'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_empresa),\r\n                accessor: 'empresa'\r\n            },\r\n            {\r\n                Header: t(langKeys.campaign),\r\n                accessor: 'campaign'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tmoasesor),\r\n                helpText: t(langKeys.ticket_tmoasesor_help),\r\n                accessor: 'tmoasesor',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tiempopromediorespuesta),\r\n                helpText: t(langKeys.ticket_tiempopromediorespuesta_help),\r\n                accessor: 'tiempopromediorespuesta',\r\n                type: 'time',\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tiempopromediorespuestaasesor),\r\n                helpText: t(langKeys.ticket_tiempopromediorespuestaasesor_help),\r\n                accessor: 'tiempopromediorespuestaasesor',\r\n                type: 'time',\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tiempoprimerarespuestaasesor),\r\n                helpText: t(langKeys.ticket_tiempoprimerarespuestaasesor_help),\r\n                accessor: 'tiempoprimerarespuestaasesor',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tiempopromediorespuestapersona),\r\n                helpText: t(langKeys.ticket_tiempopromediorespuestapersona_help),\r\n                accessor: 'tiempopromediorespuestapersona',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tiempoprimeraasignacion),\r\n                helpText: t(langKeys.ticket_tiempoprimeraasignacion_help),\r\n                accessor: 'tiempoprimeraasignacion',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_tdatime),\r\n                helpText: t(langKeys.ticket_tdatime_help),\r\n                accessor: 'tdatime',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_holdingwaitingtime),\r\n                helpText: t(langKeys.ticket_holdingwaitingtime_help),\r\n                accessor: 'holdingwaitingtime',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.supervisionduration ),\r\n                accessor: 'supervisionduration',\r\n                type: 'time'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_classification),\r\n                helpText: t(langKeys.ticket_tipification_help),\r\n                accessor: 'tipification'\r\n            },\r\n\r\n            {\r\n                Header: t(langKeys.ticket_documenttype),\r\n                accessor: 'documenttype'\r\n            },\r\n            {\r\n                Header: t(langKeys.documentnumber),\r\n                accessor: 'dni'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_email),\r\n                accessor: 'email'\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_balancetimes),\r\n                accessor: 'balancetimes',\r\n                type: 'number',\r\n                sortType: 'number',\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_abandoned),\r\n                accessor: 'abandoned',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return row.abandoned ? t(langKeys.affirmative) : t(langKeys.negative)\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ticket_labels),\r\n                helpText: t(langKeys.ticket_labels_help),\r\n                accessor: 'labels'\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const openDialogInteractions = useCallback((row: any) => {\r\n        setOpenModal(true);\r\n        setRowSelected({ ...row, displayname: row.name, ticketnum: row.numeroticket })\r\n    }, [mainResult]);\r\n\r\n    const triggerExportData = ({ filters, sorts, daterange }: IFetchData) => {\r\n        const columnsExport = columns.filter(x => !x.isComponent).map(x => ({\r\n            key: x.accessor,\r\n            alias: x.Header\r\n        }))\r\n        dispatch(exportData(getTicketExport({\r\n            filters: {\r\n                ...filters,\r\n            },\r\n            sorts,\r\n            startdate: daterange.startDate!,\r\n            enddate: daterange.endDate!,\r\n            ...allParameters\r\n        }), \"\", \"excel\", false, columnsExport));\r\n        dispatch(showBackdrop(true));\r\n        setWaitSave(true);\r\n    };\r\n\r\n    const fetchData = ({ pageSize, pageIndex, filters, sorts, daterange }: IFetchData) => {\r\n        setfetchDataAux({ pageSize, pageIndex, filters, sorts, daterange })\r\n        dispatch(getCollectionPaginated(getPaginatedTicket({\r\n            startdate: daterange.startDate!,\r\n            enddate: daterange.endDate!,\r\n            take: pageSize,\r\n            skip: pageIndex * pageSize,\r\n            sorts: sorts,\r\n            filters: {\r\n                ...filters,\r\n            },\r\n            ...allParameters\r\n        })))\r\n    };\r\n\r\n    const fetchDataAux2 = () => {\r\n        if (fetchDataAux.daterange) {\r\n            fetchData(fetchDataAux);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(getMultiCollection([\r\n            getCommChannelLst(),\r\n            getValuesFromDomainLight(\"GRUPOS\"),\r\n            getValuesFromDomainLight(\"MOTIVOCIERRE\"),\r\n            getComunicationChannelDelegate(\"\"),\r\n            getClassificationLevel1(\"TIPIFICACION\"),\r\n            getUserSel(0),\r\n            getValuesFromDomainLight(\"GRUPOS\"),\r\n            getCampaignLst(),\r\n            getPropertySelByName('CARGARCONVERSACIONES')\r\n        ]));\r\n\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!mainPaginated.loading && !mainPaginated.error) {\r\n            setPageCount(fetchDataAux.pageSize ? Math.ceil(mainPaginated.count / fetchDataAux.pageSize) : 0);\r\n            settotalrow(mainPaginated.count);\r\n        }\r\n    }, [mainPaginated])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!resExportData.loading && !resExportData.error) {\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n                resExportData.url?.split(\",\").forEach(x => window.open(x, '_blank'))\r\n            } else if (resExportData.error) {\r\n                const errormessage = t(resExportData.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [resExportData, waitSave])\r\n\r\n    useEffect(() => {\r\n        if (!mainResult?.multiData.loading && !mainResult?.multiData.error) {\r\n            setUserList((mainResult?.multiData?.data[5]?.data || []).map(x => ({\r\n                ...x,\r\n                fullname: `${x.firstname} ${x.lastname}`\r\n            })).sort((a, b) => a.fullname.localeCompare(b.fullname)))\r\n        }\r\n    }, [mainResult?.multiData])\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" flexWrap=\"wrap\" style={{ gap: 8 }}>\r\n                <div className={classes.title}>\r\n                    {t(langKeys.ticket_plural)}\r\n                </div>\r\n                <div style={{ display: 'flex', gap: 8 }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={mainPaginated.loading || Object.keys(selectedRows).length === 0}\r\n                        startIcon={<ReassignIcon width={24} style={{ fill: '#FFF' }} />}\r\n                        onClick={() => {\r\n                            setRowToSend(rowWithDataSelected);\r\n                            setOpenDialogReassign(true);\r\n                        }}\r\n                    >\r\n                        {t(langKeys.reassign)}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={mainPaginated.loading || Object.keys(selectedRows).length === 0}\r\n                        startIcon={<TipifyIcon width={24} style={{ fill: '#FFF' }} />}\r\n                        onClick={() => {\r\n                            setRowToSend(rowWithDataSelected);\r\n                            setOpenDialogTipify(true);\r\n                        }}\r\n                    >\r\n                        {t(langKeys.ticket_typify)}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={mainPaginated.loading || Object.keys(selectedRows).length === 0}\r\n                        startIcon={<CloseTicketIcon width={24} style={{ fill: '#FFF' }} />}\r\n                        onClick={() => {\r\n                            setRowToSend(rowWithDataSelected);\r\n                            setOpenDialogClose(true);\r\n                        }}\r\n                    >\r\n                        {t(langKeys.close)}\r\n                    </Button>\r\n                </div>\r\n            </Box>\r\n            <TablePaginated\r\n                columns={columns}\r\n                data={mainPaginated.data}\r\n                totalrow={totalrow}\r\n                loading={mainPaginated.loading}\r\n                pageCount={pageCount}\r\n                filterrange={true}\r\n                download={true}\r\n                ButtonsElement={() => (\r\n                    <>\r\n                        {\r\n                            ['SUPERADMIN','ADMINISTRADOR','ADMINISTRADOR P'].includes(user?.roledesc || '')\r\n                            && mainResult?.multiData?.data?.[8]?.data?.[0]?.propertyvalue === '1'\r\n                            && <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={mainPaginated.loading}\r\n                                onClick={() => setOpenUploadTickets(true)}\r\n                                startIcon={<PublishIcon />}\r\n                            >\r\n                                {t(langKeys.upload_conversation_plural)}\r\n                            </Button>\r\n                        }\r\n                    </>\r\n                )}\r\n                fetchData={fetchData}\r\n                exportPersonalized={triggerExportData}\r\n                useSelection={true}\r\n                selectionFilter={{ key: 'estadoconversacion', value: 'ASIGNADO' }}\r\n                selectionKey={selectionKey}\r\n                setSelectedRows={setSelectedRows}\r\n                filterRangeDate=\"today\"\r\n                FiltersElement={React.useMemo(() => (\r\n                    <>\r\n                        <FieldMultiSelect\r\n                            label={t(langKeys.channel)}\r\n                            className={classes.filterComponent}\r\n                            key=\"fieldMultiSelect_channel\"\r\n                            valueDefault={allParameters[\"channel\"] || \"\"}\r\n                            onChange={(value) => setValue(\"channel\", value ? value.map((o: Dictionary) => o.communicationchannelid).join() : '')}\r\n                            variant=\"outlined\"\r\n                            data={mainResult?.multiData?.data[0]?.data.sort((a, b) => (a.communicationchanneldesc || \"\").localeCompare(b.communicationchanneldesc)) || []}\r\n                            optionDesc=\"communicationchanneldesc\"\r\n                            optionValue=\"communicationchannelid\"\r\n                            disabled={mainPaginated.loading}\r\n                        />\r\n                        <FieldMultiSelect\r\n                            label={t(langKeys.group)}\r\n                            className={classes.filterComponent}\r\n                            key=\"fieldMultiSelect_group\"\r\n                            valueDefault={allParameters[\"usergroup\"] || \"\"}\r\n                            onChange={(value) => setValue(\"usergroup\", value ? value.map((o: Dictionary) => o.domainvalue).join() : '')}\r\n                            variant=\"outlined\"\r\n                            data={mainResult?.multiData?.data[1]?.data || []}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                            disabled={mainPaginated.loading}\r\n                        />\r\n                        <FieldMultiSelect\r\n                            label={t(langKeys.agent)}\r\n                            className={classes.filterComponent}\r\n                            key=\"fieldMultiSelect_user\"\r\n                            valueDefault={allParameters[\"lastuserid\"] || \"\"}\r\n                            onChange={(value) => setValue(\"lastuserid\", value ? value.map((o: Dictionary) => o.userid).join() : '')}\r\n                            variant=\"outlined\"\r\n                            data={userList}\r\n                            optionDesc=\"fullname\"\r\n                            optionValue=\"userid\"\r\n                            disabled={mainPaginated.loading}\r\n                        />\r\n                        <FieldMultiSelectVirtualized\r\n                            label={t(langKeys.campaign)}\r\n                            className={classes.filterComponentVirtualized}\r\n                            key=\"fieldMultiSelect_campaign\"\r\n                            valueDefault={allParameters[\"campaignid\"] || \"\"}\r\n                            onChange={(value) => setValue(\"campaignid\", value ? value.map((o: Dictionary) => o.id).join() : '')}\r\n                            variant=\"outlined\"\r\n                            data={mainResult?.multiData?.data[7]?.data || []}\r\n                            optionDesc=\"title\"\r\n                            optionValue=\"id\"\r\n                            disabled={mainPaginated.loading}\r\n                        />\r\n                    </>\r\n                ), [allParameters, mainResult.multiData, mainPaginated, userList])}\r\n            />\r\n            <DialogInteractions\r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n                ticket={rowSelected}\r\n            />\r\n            <DialogHistoryStatus\r\n                openModal={openDialogShowHistory}\r\n                setOpenModal={setOpenDialogShowHistory}\r\n                ticket={rowSelected}\r\n            />\r\n            <DialogTipifications\r\n                fetchData={fetchDataAux2}\r\n                rowWithDataSelected={rowToSend}\r\n                openModal={openDialogTipify}\r\n                setOpenModal={setOpenDialogTipify}\r\n            />\r\n            <DialogCloseticket\r\n                fetchData={fetchDataAux2}\r\n                rowWithDataSelected={rowToSend}\r\n                openModal={openDialogClose}\r\n                setOpenModal={setOpenDialogClose}\r\n            />\r\n            <DialogReassignticket\r\n                fetchData={fetchDataAux2}\r\n                rowWithDataSelected={rowToSend}\r\n                openModal={openDialogReassign}\r\n                setOpenModal={setOpenDialogReassign}\r\n            />\r\n            <DialogLoadTickets\r\n                fetchData={fetchDataAux2}\r\n                openModal={openUploadTickets}\r\n                setOpenModal={setOpenUploadTickets}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tickets;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React, { useState, useEffect, useMemo } from 'react';\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TableConfig, Pagination, Dictionary, ITablePaginatedFilter } from '@types'\r\nimport { Trans } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { langKeys } from 'lang/keys';\r\nimport { DownloadIcon, CalendarIcon } from 'icons';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport clsx from 'clsx';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Search as SearchIcon,\r\n    Add as AddIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n} from 'react-table'\r\nimport { Range } from 'react-date-range';\r\nimport { DateRangePicker } from 'components';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { BooleanOptionsMenuComponent, DateOptionsMenuComponent, SelectFilterTmp, OptionsMenuComponent, TimeOptionsMenuComponent } from './table-simple';\r\nimport { getDateToday, getFirstDayMonth, getLastDayMonth, getDateCleaned } from 'common/helpers';\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        padding: '4px 24px 4px 16px',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    containerButtonsNoFilters: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'end',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\n\r\nconst DefaultColumnFilter = ({ header, type, setFilters, filters, listSelectFilter }: any) => {\r\n    const [value, setValue] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [operator, setoperator] = useState(\"contains\");\r\n\r\n    useEffect(() => {\r\n        switch (type) {\r\n            case \"number\": case \"number-centered\": case \"date\": case \"datetime-local\": case \"time\": case \"select\":\r\n                setoperator(\"equals\");\r\n                break;\r\n            case \"boolean\":\r\n                setoperator(\"all\");\r\n                break;\r\n            case \"string\": case \"color\":\r\n            default:\r\n                setoperator(\"contains\");\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    useEffect(() => {\r\n        if (['number', 'number-centered'].includes(type))\r\n            setoperator(\"equals\");\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [type])\r\n\r\n    const keyPress = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            if (value || operator === \"noempty\" || operator === \"empty\")\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value,\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            else\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n        }\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickItemMenu = (op: any) => {\r\n        setAnchorEl(null);\r\n        setoperator(op)\r\n        if (type === 'boolean') {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: {\r\n                    value: op,\r\n                    operator: op\r\n                },\r\n            }, 0)\r\n        } else if (type === \"select\") {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: op === \"_ALL\" ? undefined : {\r\n                    value: op,\r\n                    operator: \"equals\"\r\n                },\r\n            }, 0)\r\n        } else if (type === \"text\" || !type) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else if (['number', 'number-centered'].includes(type)) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value !== '') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        }\r\n    };\r\n    const handleClickMenu = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDate = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toISOString().split('T')[0] || '',\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTime = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toLocaleTimeString(),\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(filters).length === 0) setValue('');\r\n        else if (header in filters) {\r\n            setValue(filters?.[header]?.value || '');\r\n            if (filters?.[header]) setoperator(filters[header].operator);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters]);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {type === 'boolean' ?\r\n                <BooleanOptionsMenuComponent\r\n                    value={value}\r\n                    handleClickItemMenu={handleClickItemMenu}\r\n                />\r\n                :\r\n                (type === \"select\" ?\r\n                    <SelectFilterTmp\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                        data={listSelectFilter || []}\r\n                    /> :\r\n\r\n                    <React.Fragment>\r\n                        {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                        {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                        {!['date', 'time'].includes(type) &&\r\n                            <Input\r\n                                style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                type={['number', 'number-centered'].includes(type) ? \"number\" : \"text\"}\r\n                                fullWidth\r\n                                value={value}\r\n                                onKeyDown={keyPress}\r\n                                onChange={e => setValue(e.target.value)}\r\n                            />}\r\n                        <IconButton\r\n                            onClick={handleClickMenu}\r\n                            size=\"small\"\r\n                        >\r\n                            <MoreVertIcon\r\n                                style={{ cursor: 'pointer' }}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"action\"\r\n                                fontSize=\"small\"\r\n                            />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleCloseMenu}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {OptionsMenuComponent(type || 'string', operator, handleClickItemMenu)}\r\n                        </Menu>\r\n                    </React.Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    filterrange,\r\n    totalrow,\r\n    pageCount: controlledPageCount,\r\n    download,\r\n    register,\r\n    handleRegister,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    exportPersonalized,\r\n    loading,\r\n    importCSV,\r\n    autotrigger = false,\r\n    autoRefresh,\r\n    useSelection,\r\n    selectionKey,\r\n    selectionFilter,\r\n    initialSelectedRows,\r\n    cleanSelection,\r\n    setCleanSelection,\r\n    setSelectedRows,\r\n    onClickRow,\r\n    FiltersElement,\r\n    filterRangeDate = \"month\",\r\n    onFilterChange,\r\n    initialEndDate = null,\r\n    initialStartDate = null,\r\n    initialFilters = {},\r\n    initialPageIndex = 0,\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const [pagination, setPagination] = useState<Pagination>({ sorts: {}, filters: initialFilters, pageIndex: initialPageIndex });\r\n    const [openDateRangeModal, setOpenDateRangeModal] = useState(false);\r\n    const [triggerSearch, setTriggerSearch] = useState(autotrigger);\r\n    const [tFilters, setTFilters] = useState<ITablePaginatedFilter>({\r\n        startDate: initialStartDate,\r\n        endDate: initialEndDate,\r\n        page: initialPageIndex,\r\n        filters: initialFilters,\r\n    });\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        setPageSize,\r\n        toggleAllRowsSelected,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: initialPageIndex, pageSize: 20, selectedRowIds: initialSelectedRows || {} },\r\n            manualPagination: true, // Tell the usePagination\r\n            pageCount: controlledPageCount,\r\n            useControlledState: (state: any) => {\r\n                return useMemo(() => ({\r\n                    ...state,\r\n                    pageIndex: pagination.pageIndex,\r\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                }), [state, pagination.pageIndex])\r\n            },\r\n            autoResetSelectedRows: false,\r\n            getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n                ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n                : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n            stateReducer: (newState, action) => {\r\n                switch (action.type) {\r\n                    case 'toggleAllRowsSelected':\r\n                        return {\r\n                            ...newState,\r\n                            selectedRowIds: {},\r\n                        };\r\n                    default:\r\n                        return newState;\r\n                }\r\n            }\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps, filteredRows }: any) => (\r\n                        !selectionFilter\r\n                            ?\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    {...getToggleAllPageRowsSelectedProps()}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={filteredRows\r\n                                        .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                        .every((p: any) => p.isSelected)\r\n                                    }\r\n                                    onChange={() => {\r\n                                        filteredRows\r\n                                            .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                            .forEach((p: any) => {\r\n                                                p.toggleRowSelected();\r\n                                            })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n                        !selectionFilter || row.original[selectionFilter?.key] === selectionFilter?.value\r\n                            ? <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />\r\n                            </div>\r\n                            : null\r\n                    ),\r\n                    NoFilter: true,\r\n                    isComponent: true\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    const setFilters = (filters: any, page: number) => {\r\n        setPagination(prev => {\r\n            // const pageIndex = !page ? prev.pageIndex : page;\r\n            return { ...prev, filters, pageIndex: 0, trigger: true }\r\n        });\r\n    };\r\n    const setPageIndex = (page: number) => {\r\n        setPagination(prev => ({ ...prev, pageIndex: page, trigger: true }));\r\n        setTFilters(prev => ({ ...prev, page }));\r\n    }\r\n    const handleClickSort = (column: string) => {\r\n        let newsorts: any = {};\r\n        if (Object.keys(pagination.sorts).includes(column)) {\r\n            newsorts = {\r\n                ...pagination.sorts\r\n            }\r\n        }\r\n\r\n        if (newsorts[column] === \"desc\") {\r\n            delete newsorts[column]\r\n        }\r\n        else {\r\n            if (newsorts[column] === \"asc\") {\r\n                newsorts[column] = \"desc\";\r\n            }\r\n            else {\r\n                newsorts[column] = \"asc\";\r\n            }\r\n        }\r\n\r\n        setPagination(prev => ({ ...prev, sorts: newsorts, trigger: true }))\r\n    }\r\n\r\n    const [dateRange, setdateRange] = useState<Range>({\r\n        startDate: initialStartDate ? new Date(initialStartDate) : filterRangeDate === \"month\" ? getFirstDayMonth() : getDateToday(),\r\n        endDate: initialEndDate ? new Date(initialEndDate) : filterRangeDate === \"month\" ? getLastDayMonth() : getDateToday(),\r\n        key: 'selection'\r\n    });\r\n\r\n    const triggertmp = (fromButton: boolean = false) => {\r\n        if (fromButton)\r\n            setPagination(prev => ({ ...prev, pageIndex: initialPageIndex, trigger: false }));\r\n\r\n        if (!fetchData) return;\r\n        fetchData({\r\n            ...pagination,\r\n            pageSize,\r\n            pageIndex: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n            }\r\n        });\r\n        setTFilters(prev => ({\r\n            ...prev,\r\n            page: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            startDate: dateRange.startDate ? (new Date(dateRange.startDate.setHours(10))).getTime() : null,\r\n            endDate: dateRange.endDate ? (new Date(dateRange.endDate.setHours(10))).getTime() : null,\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cleanSelection) {\r\n            toggleAllRowsSelected(false)\r\n            setSelectedRows && setSelectedRows({})\r\n            setCleanSelection && setCleanSelection(false)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cleanSelection])\r\n\r\n    useEffect(() => {\r\n        if (pagination?.trigger) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pagination, triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pageSize])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggerSearch && triggertmp(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (autoRefresh?.value) {\r\n            triggertmp();\r\n            autoRefresh?.callback(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoRefresh])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        onFilterChange?.(tFilters);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tFilters]);\r\n\r\n    const exportData = () => {\r\n        exportPersonalized && exportPersonalized({\r\n            ...pagination,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box width={1}>\r\n            {titlemodule && <div className={classes.title}>{titlemodule}</div>}\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\">\r\n                <div className={clsx({\r\n                    [classes.containerButtons]: !!FiltersElement,\r\n                    [classes.containerButtonsNoFilters]: !FiltersElement\r\n                })}>\r\n                    {filterrange && (\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                            <DateRangePicker\r\n                                open={openDateRangeModal}\r\n                                setOpen={setOpenDateRangeModal}\r\n                                range={dateRange}\r\n                                onSelect={setdateRange}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    style={{ border: '1px solid #bfbfc0', borderRadius: 4, color: 'rgb(143, 146, 161)' }}\r\n                                    startIcon={<CalendarIcon />}\r\n                                    onClick={() => setOpenDateRangeModal(!openDateRangeModal)}\r\n                                >\r\n                                    {getDateCleaned(dateRange.startDate!) + \" - \" + getDateCleaned(dateRange.endDate!)}\r\n                                </Button>\r\n                            </DateRangePicker>\r\n                            {FiltersElement && FiltersElement}\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<SearchIcon style={{ color: 'white' }} />}\r\n                                style={{ backgroundColor: '#55BD84', width: 120 }}\r\n                                onClick={() => {\r\n                                    if (triggerSearch)\r\n                                        triggertmp(true)\r\n                                    setTriggerSearch(true)\r\n                                }}\r\n                            >\r\n                                <Trans i18nKey={langKeys.search} />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                        {ButtonsElement && <ButtonsElement />}\r\n                        {importCSV && (\r\n                            <>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    id=\"laraigo-upload-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => importCSV(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        component=\"span\"\r\n                                        color=\"primary\"\r\n                                        disabled={loading}\r\n                                        startIcon={<BackupIcon color=\"secondary\" />}\r\n                                        style={{ backgroundColor: \"#55BD84\" }}\r\n                                    ><Trans i18nKey={langKeys.import} />\r\n                                    </Button>\r\n                                </label>\r\n                            </>\r\n                        )}\r\n                        {register && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                startIcon={<AddIcon color=\"secondary\" />}\r\n                                onClick={handleRegister}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            ><Trans i18nKey={langKeys.register} />\r\n                            </Button>\r\n                        )}\r\n                        {download && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                onClick={exportData}\r\n                                // exportPersonalized\r\n                                startIcon={<DownloadIcon />}\r\n                            ><Trans i18nKey={langKeys.download} />\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\">\r\n                    <MaUTable {...getTableProps()} aria-label=\"enhanced table\" size=\"small\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell\r\n                                                key={ii}\r\n                                            >\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header')\r\n                                                    :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n                                                                component=\"div\"\r\n                                                                {...column.getHeaderProps()}\r\n                                                                onClick={() => !column.NoSort && handleClickSort(column.id)}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {pagination.sorts[column.id] && (pagination.sorts[column.id] === \"asc\" ?\r\n                                                                    <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                    : <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />)\r\n                                                                }\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12, whiteSpace: 'break-spaces' }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        {!column.NoFilter &&\r\n                                                            <DefaultColumnFilter\r\n                                                                header={column.id}\r\n                                                                listSelectFilter={column.listSelectFilter || []}\r\n                                                                type={column.type}\r\n                                                                filters={pagination.filters}\r\n                                                                setFilters={(filters: any, page: number) => {\r\n                                                                    setFilters(filters, page);\r\n                                                                    setTFilters(prev => ({\r\n                                                                        ...prev,\r\n                                                                        filters,\r\n                                                                        page,\r\n                                                                    }));\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody {...getTableBodyProps()} style={{ backgroundColor: 'white' }}>\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                page.map((row: any) => {\r\n                                    prepareRow(row);\r\n                                    return (\r\n                                        <TableRow\r\n                                            {...row.getRowProps()}\r\n                                            hover\r\n                                            style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                        >\r\n                                            {row.cells.map((cell: any, i: number) =>\r\n                                                <TableCell\r\n                                                    {...cell.getCellProps({\r\n                                                        style: {\r\n                                                            minWidth: cell.column.minWidth,\r\n                                                            width: cell.column.width,\r\n                                                            overflow: 'hidden',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                        },\r\n                                                    })}\r\n                                                    onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original) : null}\r\n                                                >\r\n                                                    {cell.render('Cell')}\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </MaUTable>\r\n\r\n                </Box>\r\n                <Box className={classes.footerTable}>\r\n                    <Box>\r\n                        <IconButton onClick={() => setPageIndex(0)} disabled={!canPreviousPage} >\r\n                            <FirstPage />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex - 1)} disabled={!canPreviousPage} >\r\n                            <NavigateBefore />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex + 1)} disabled={!canNextPage} >\r\n                            <NavigateNext />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pageCount - 1)} disabled={!canNextPage} >\r\n                            <LastPage />\r\n                        </IconButton>\r\n                        <Box component=\"span\" fontSize={14}>\r\n                            <Trans\r\n                                i18nKey={langKeys.tablePageOf}\r\n                                values={{ currentPage: pageOptions.length === 0 ? 0 : pageIndex + 1, totalPages: pageOptions.length }}\r\n                                components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                            />\r\n                        </Box >\r\n\r\n                    </Box>\r\n                    <Box>\r\n                        <Trans\r\n                            i18nKey={(totalrow || 0) === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                            values={{ itemCount: page.length, totalItems: totalrow }}\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <Select\r\n                            disableUnderline\r\n                            style={{ display: 'inline-flex' }}\r\n                            value={pageSize}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                        >\r\n                            {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                <MenuItem key={pageSize} value={pageSize}>\r\n                                    {pageSize}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                        <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                            <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface IQueryMap {\r\n    [key: string]: {\r\n        value: string;\r\n        operator: string;\r\n    }\r\n}\r\n\r\ninterface IFilters {\r\n    startDate: number;\r\n    endDate: number;\r\n    page: number;\r\n    filters: IQueryMap;\r\n}\r\n\r\ninterface IOptions {\r\n    ignore?: string[];\r\n}\r\n\r\nexport function useQueryParams(query: URLSearchParams, options: IOptions = { ignore: [] }) {\r\n    return useMemo(() => {\r\n        const map: IFilters = {\r\n            endDate: Number(query.get('endDate')),\r\n            startDate: Number(query.get('startDate')),\r\n            page: Number(query.get('page')),\r\n            filters: {},\r\n        };\r\n        const { ignore } = options;\r\n\r\n        query.forEach((value, key) => {\r\n            if (key === \"endDate\" ||\r\n                key === \"startDate\" ||\r\n                key === \"page\" ||\r\n                key.includes('-operator') ||\r\n                (ignore || []).includes(key)) {\r\n                return;\r\n            }\r\n\r\n            const name = `${key}-operator`;\r\n            map.filters[key] = { value, operator: query.get(name)! };\r\n        });\r\n\r\n        return map;\r\n    }, [options, query]);\r\n}\r\n\r\nexport function buildQueryFilters(\r\n    filters: ITablePaginatedFilter,\r\n    init?: string | string[][] | Record<string, string>,\r\n) {\r\n    const params = new URLSearchParams(init);\r\n\r\n    for (const key in filters) {\r\n        const value = (filters as any)[key];\r\n        if (key === 'filters' || value === undefined || value === null) continue;\r\n        params.set(key, String(value));\r\n    }\r\n\r\n    const colFilters = filters.filters;\r\n    for (const key in colFilters) {\r\n        if (typeof colFilters[key] === 'object' && 'value' in colFilters[key] && 'operator' in colFilters[key]) {\r\n            params.set(key, String(colFilters[key].value));\r\n            params.set(`${key}-operator`, String(colFilters[key].operator));\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n","/* eslint-disable jsx-a11y/iframe-has-title */\r\nimport React, { useState } from 'react'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { IInteraction, IGroupInteraction, Dictionary } from \"@types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BotIcon, AgentIcon, DownloadIcon2, InteractiveListIcon, SeenIcon, DocIcon, FileIcon1 as FileIcon, PdfIcon, PptIcon, TxtIcon, XlsIcon, ZipIcon } from 'icons';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useSelector } from 'hooks';\r\nimport { manageLightBox } from 'store/popus/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { convertLocalDate, validateIsUrl } from 'common/helpers';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\n\r\nconst useStylesInteraction = makeStyles((theme) => ({\r\n    containerCarousel: {\r\n        width: 230,\r\n        backgroundColor: '#f0f2f5',\r\n        borderRadius: 18,\r\n        position: 'relative',\r\n    },\r\n    imageCardCarousel: {\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n        height: '100%'\r\n    },\r\n    buttonCarousel: {\r\n        backgroundColor: '#e4e6eb',\r\n        textAlign: 'center',\r\n        borderRadius: 6,\r\n        height: 36,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontWeight: 600,\r\n        cursor: 'pointer',\r\n    },\r\n    buttonLeft: {\r\n        position: 'absolute',\r\n        top: '45%',\r\n        left: -20,\r\n        backgroundColor: 'white'\r\n    },\r\n    buttonRight: {\r\n        position: 'absolute',\r\n        top: '45%',\r\n        right: -20,\r\n        backgroundColor: 'white'\r\n    },\r\n    containerTime: {\r\n        visibility: 'hidden',\r\n        fontSize: 12,\r\n        float: 'right',\r\n        marginLeft: 4,\r\n        paddingRight: 6,\r\n        lineHeight: 1,\r\n        width: 50\r\n    },\r\n    timeSeen: {\r\n        color: '#4fc3f7'\r\n    },\r\n    timeInteraction: {\r\n        position: 'absolute',\r\n        bottom: 1.5,\r\n        height: 16,\r\n        right: 0,\r\n        visibility: 'visible',\r\n        color: '#757377',\r\n        padding: 'inherit',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: 4\r\n    },\r\n    timeInteractionWithBackground: {\r\n        position: 'absolute',\r\n        bottom: 3,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 13,\r\n        right: 0,\r\n        visibility: 'visible',\r\n        backgroundColor: '#00000059',\r\n        color: '#fff',\r\n        padding: '3px 2px 3px 3px',\r\n        borderRadius: 4,\r\n        marginRight: 4,\r\n        gap: 4\r\n    }\r\n}));\r\n\r\nconst ShoppingCart: React.FC<{ onlyTime?: string, interactiontext: string, createdate: string, classes: any, userType: string }> = ({ interactiontext, createdate, classes, userType, onlyTime }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const { t } = useTranslation();\r\n\r\n    const handleClickOpen = () => setOpen(true);\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const jsonIntt = JSON.parse(interactiontext);\r\n\r\n    // const firstimage = jsonIntt.SectionList?.[0]?.ProductList?.[0]?.ImageReference || \"\";\r\n    // const totalitems = jsonIntt.SectionList.reduce((a: number, i: Dictionary) => a + i.ProductList.length, 0)\r\n    if ((jsonIntt.Product_items?.length || 0) === 0)\r\n        return <div></div>\r\n\r\n    return (\r\n        <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            <div style={{ width: 300 }}>\r\n                <div style={{ display: 'flex', backgroundColor: \"#f5f6f6\" }}>\r\n                    <img width=\"70px\" height=\"70px\" alt=\"reference\" src={jsonIntt.Product_items[0].ImageReference} />\r\n                    <div style={{ display: 'flex', alignItems: 'center', paddingLeft: 8 }}>\r\n                        <div>\r\n                            <div style={{ fontWeight: 'bold' }}>{jsonIntt.Product_items.length} {t(langKeys.elements)}</div>\r\n                            <div style={{ fontWeight: 'bold' }}>{jsonIntt.Product_items.reduce((acc: number, item: Dictionary) => acc + parseFloat(item.Item_price) * parseFloat(item.Quantity), 0).toFixed(2)} {jsonIntt.Product_items[0].Currency}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {jsonIntt.Text}\r\n                </div>\r\n                <div style={{ height: 2, borderTop: '1px solid rgb(235, 234, 237)', marginTop: 4 }}></div>\r\n                <div\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#00a5f4', cursor: 'pointer' }}\r\n                    onClick={handleClickOpen}\r\n                >{t(langKeys.show_shopping_cart)}</div>\r\n                <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n            <SwipeableDrawer\r\n                anchor='right'\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleClickOpen}\r\n            >\r\n                <div style={{ width: 400, padding: 16 }}>\r\n                    <h4 >{t(langKeys.cart_sent)}</h4>\r\n                    <div>\r\n                        <div style={{ fontWeight: 500 }}>{jsonIntt.Product_items.length} {t(langKeys.elements)}</div>\r\n                        <div style={{ color: '#8696a0' }}>{jsonIntt.Product_items.reduce((acc: number, item: Dictionary) => acc + parseFloat(item.Item_price) * parseFloat(item.Quantity), 0).toFixed(2)} {jsonIntt.Product_items[0].Currency}</div>\r\n                        <div style={{ marginTop: 16 }}>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {jsonIntt.Product_items.map((item: Dictionary, index: number) => (\r\n                            <div key={index}>\r\n                                <div style={{ display: 'flex', gap: 16, marginBottom: 8 }}>\r\n                                    <img width=\"80px\" alt=\"reference\" height=\"80px\" src={item.ImageReference} />\r\n                                    <div style={{ display: 'flex', alignItems: 'center', width: '75%', borderTop: '1px solid #ebebeb' }}>\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <div style={{ fontWeight: 500 }}>{item.Title}</div>\r\n                                            <div style={{ color: '#8696a0' }}>{item.Currency} {parseFloat(item.Item_price).toFixed(2)} • {t(langKeys.quantity)}: {item.Quantity}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </SwipeableDrawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CatalogProduct: React.FC<{ onlyTime?: string, interactiontext: string, createdate: string, classes: any, userType: string }> = ({ interactiontext, createdate, classes, userType, onlyTime }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const { t } = useTranslation();\r\n    const handleClickOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const jsonIntt = JSON.parse(interactiontext);\r\n\r\n    if (jsonIntt.Type === \"product_list\" || jsonIntt.Type === \"dynamic\") {\r\n        const firstimage = jsonIntt.SectionList?.[0]?.ProductList?.[0]?.ImageReference || \"\";\r\n        const totalitems = jsonIntt.SectionList.reduce((a: number, i: Dictionary) => a + i.ProductList.length, 0)\r\n\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                <div style={{ display: 'flex', gap: '4px', backgroundColor: \"#f5f6f6\" }}>\r\n                    {firstimage && <img width=\"70px\" height=\"70px\" src={firstimage} alt=\"fist\" />}\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <div>\r\n                            <div style={{ fontWeight: 500 }}>{jsonIntt.Header}</div>\r\n                            <div style={{ color: '#8696a0' }}>{totalitems} {t(langKeys.elements)}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ padding: 8 }}>\r\n                    <div style={{ fontWeight: 500 }}>{jsonIntt.Body}</div>\r\n                    <div style={{ color: '#8696a0' }}>{jsonIntt.Footer}</div>\r\n                </div>\r\n                <div style={{ height: 2, borderTop: '1px solid rgb(235, 234, 237)', marginTop: 4 }}></div>\r\n                <div\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#00a5f4', cursor: 'pointer' }}\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <InteractiveListIcon /> {t(langKeys.show_items)}\r\n                </div>\r\n                <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                <SwipeableDrawer\r\n                    anchor='right'\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleClickOpen}\r\n                >\r\n                    <div style={{ width: 400, padding: 16 }}>\r\n                        <div style={{ marginBottom: 16 }}>{jsonIntt.Body}</div>\r\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: 16, }}>\r\n                            {jsonIntt.SectionList.map((item: Dictionary, index11: number) => (\r\n                                <div key={index11} style={{ cursor: 'pointer' }}>\r\n                                    <div style={{ color: \"#008069\", marginBottom: 16 }}>{item.Title}</div>\r\n                                    {item.ProductList.map((itemProduct: Dictionary, index22: number) => (\r\n                                        <div key={index22}>\r\n                                            <div style={{ display: 'flex', gap: 16, marginBottom: 8 }}>\r\n                                                <img width=\"80px\" alt=\"reference\" height=\"80px\" src={itemProduct.ImageReference} />\r\n                                                <div style={{ display: 'flex', alignItems: 'center', width: '75%', borderTop: '1px solid #ebebeb' }}>\r\n                                                    <div style={{ width: '100%' }}>\r\n                                                        <div style={{ fontWeight: 500 }}>{itemProduct.Title}</div>\r\n                                                        <div style={{ color: '#8696a0', overflow: \"hidden\", wordBreak: \"break-word\", fontWeight: 500, whiteSpace: \"nowrap\", textOverflow: \"ellipsis\" }}>{itemProduct.Description}</div>\r\n                                                        <div style={{ color: '#8696a0' }}>{itemProduct.Currency} {itemProduct.Price || 10.0}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </SwipeableDrawer>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                <div style={{ width: 300, display: 'flex', flexDirection: 'column' }}>\r\n                    <img width=\"100%\" src={jsonIntt?.Product?.ImageReference} height=\"320px\" alt=\"reference\" />\r\n                    <div style={{ backgroundColor: \"#f5f6f6\", padding: 8 }}>\r\n                        <div>{jsonIntt?.Product?.Title}</div>\r\n                        <div style={{ color: '#dff3cc' }}>{jsonIntt?.Product?.Price} {jsonIntt?.Product?.Currency}</div>\r\n                    </div>\r\n                    <div style={{ padding: 8 }}>\r\n                        <div style={{ fontWeight: 'bold' }}>{jsonIntt?.Body}</div>\r\n                        <div style={{ color: '#8696a0' }}>{jsonIntt?.Footer}</div>\r\n                    </div>\r\n                </div>\r\n                <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst InteractiveList: React.FC<{ onlyTime?: string, interactiontext: string, createdate: string, classes: any, userType: string }> = ({ interactiontext, createdate, classes, userType, onlyTime }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const { t } = useTranslation();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const jsonIntt = JSON.parse(interactiontext);\r\n\r\n    if (jsonIntt.sections.length === 0) {\r\n        return <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            INTERACTIVE LIST WITHOUT OPTIONS\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            {(jsonIntt.headertype === \"text\" || !jsonIntt.headertype) ? (\r\n                <div style={{ fontWeight: 500 }}>{jsonIntt.header}</div>\r\n            ) : jsonIntt.header}\r\n            <div>\r\n                {jsonIntt.body}\r\n            </div>\r\n            {jsonIntt.footer && (\r\n                <div style={{ color: 'rgb(0,0,0,0.45)', fontSize: 12 }}>{jsonIntt.footer}</div>\r\n            )}\r\n            <div style={{ height: 2, borderTop: '1px solid rgb(235, 234, 237)', marginTop: 4 }}></div>\r\n            <div\r\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#00a5f4', cursor: 'pointer' }}\r\n                onClick={handleClickOpen}\r\n            >\r\n                <InteractiveListIcon />{t(langKeys.options)}\r\n            </div>\r\n            <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-dialog-title\"\r\n                open={open}\r\n                fullWidth\r\n                maxWidth=\"xs\"\r\n            >\r\n                <DialogTitle>{t(langKeys.options)}</DialogTitle>\r\n                <DialogContent>\r\n                    {jsonIntt.sections[0].buttons.map((button: any, i: number) => (\r\n                        <div\r\n                            key={i}\r\n                            style={{\r\n                                background: '#FFF',\r\n                                borderRadius: 4,\r\n                                padding: '12px 8px',\r\n                                textTransform: 'uppercase',\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between'\r\n                            }}>\r\n                            {button.title}\r\n                            <RadioButtonUncheckedIcon />\r\n                        </div>\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nconst Carousel: React.FC<{ carousel: Dictionary[] }> = ({ carousel }) => {\r\n    const classes = useStylesInteraction();\r\n    const [pageSelected, setPageSelected] = useState(0);\r\n\r\n    if (carousel.length === 0) return null;\r\n    return (\r\n        <div className={classes.containerCarousel}>\r\n            <div style={{ height: 157 }}>\r\n                <img\r\n                    src={carousel[pageSelected].mediaUrl}\r\n                    className={classes.imageCardCarousel}\r\n                    alt=\"logocarousel\"\r\n                    crossOrigin={carousel[pageSelected].mediaUrl.includes('cloud-object-storage') ? 'anonymous' : undefined}\r\n                />\r\n            </div>\r\n            <div style={{ padding: '12px', wordBreak: 'break-word' }}>\r\n                <div>\r\n                    <div style={{ fontWeight: 600 }}>{carousel[pageSelected].title}</div>\r\n                    <div>{carousel[pageSelected].description}</div>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px', marginTop: 8 }}>\r\n                    {(carousel[pageSelected].actions as Dictionary[]).map((action: Dictionary, index: number) => {\r\n                        return <div className={classes.buttonCarousel} key={index}>{action.text}</div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            {pageSelected > 0 &&\r\n                <Fab\r\n                    className={classes.buttonLeft}\r\n                    size=\"small\"\r\n                    onClick={() => setPageSelected(pageSelected - 1)}\r\n                >\r\n                    <NavigateBeforeIcon style={{ color: '#2E2C34' }} />\r\n                </Fab>\r\n            }\r\n            {pageSelected < carousel.length - 1 &&\r\n                <Fab\r\n                    className={classes.buttonRight}\r\n                    onClick={() => setPageSelected(pageSelected + 1)}\r\n                    size=\"small\"\r\n                >\r\n                    <NavigateNextIcon style={{ color: '#2E2C34' }} />\r\n                </Fab>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst TimerInteraction: React.FC<{ interactiontype: string, time: string, createdate: string, background?: boolean, userType?: string }> = ({ time, background, userType, createdate, interactiontype }) => {\r\n    const classes = useStylesInteraction();\r\n    const ticketSelected = useSelector(state => state.inbox.ticketSelected);\r\n    const [isSeen, setIsSeen] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (ticketSelected?.lastseendate && interactiontype !== \"LOG\") {\r\n            const lastSeenDate = new Date(ticketSelected?.lastseendate);\r\n            const interactionDate = new Date(createdate!!);\r\n\r\n            setIsSeen(interactionDate <= lastSeenDate);\r\n        }\r\n    }, [createdate, interactiontype, ticketSelected?.lastseendate])\r\n\r\n    return (\r\n        <span className={classes.containerTime}>\r\n            {time}\r\n            {!background ?\r\n                <div className={classes.timeInteraction}>\r\n                    {time}\r\n                    {userType !== \"client\" && <SeenIcon className={clsx({\r\n                        [classes.timeSeen]: isSeen,\r\n                    })} />}\r\n                </div> :\r\n                <div className={classes.timeInteractionWithBackground}>\r\n                    {time}\r\n                    {userType !== \"client\" && <SeenIcon className={clsx({\r\n                        [classes.timeSeen]: isSeen,\r\n                    })} />}\r\n                </div>\r\n            }\r\n        </span>\r\n    )\r\n}\r\n\r\nconst PickerInteraction: React.FC<{ userType: string, fill?: string }> = ({ userType, fill = '#FFF' }) => {\r\n    if (userType === 'client')\r\n        return (\r\n            <svg viewBox=\"0 0 11 20\" width=\"11\" height=\"20\" style={{ position: 'absolute', bottom: -1, left: -9, fill }}>\r\n                <svg id=\"message-tail-filled\" viewBox=\"0 0 11 20\"><g transform=\"translate(9 -14)\" fill=\"inherit\" fillRule=\"evenodd\"><path d=\"M-6 16h6v17c-.193-2.84-.876-5.767-2.05-8.782-.904-2.325-2.446-4.485-4.625-6.48A1 1 0 01-6 16z\" transform=\"matrix(1 0 0 -1 0 49)\" id=\"corner-fill\" fill=\"inherit\"></path></g></svg>\r\n\r\n            </svg>\r\n        )\r\n    else\r\n        return (\r\n            <svg viewBox=\"0 0 11 20\" width=\"11\" height=\"20\" style={{ position: 'absolute', bottom: 0, right: -9, transform: 'translateY(1px) scaleX(-1)', fill }}>\r\n                <svg id=\"message-tail-filled\" viewBox=\"0 0 11 20\"><g transform=\"translate(9 -14)\" fill=\"inherit\" fillRule=\"evenodd\"><path d=\"M-6 16h6v17c-.193-2.84-.876-5.767-2.05-8.782-.904-2.325-2.446-4.485-4.625-6.48A1 1 0 01-6 16z\" transform=\"matrix(1 0 0 -1 0 49)\" id=\"corner-fill\" fill=\"inherit\"></path></g></svg>\r\n            </svg>\r\n        )\r\n}\r\n\r\nconst ItemInteraction: React.FC<{ classes: any, interaction: IInteraction, userType: string }> = ({ interaction: { interactionid, interactiontype, interactiontext, listImage, indexImage, createdate, onlyTime }, classes, userType }) => {\r\n    const ref = React.useRef<HTMLIFrameElement>(null);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [showfulltext, setshowfulltext] = useState(interactiontext.length <= 450)\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: \"AIzaSyAqrFCH95Tbqwo6opvVPcdtrVd-1fnBLr4\" /*\"AIzaSyCBij6DbsB8SQC_RRKm3-X07RLmvQEnP9w\"*/,\r\n    });\r\n\r\n    const [height, setHeight] = React.useState(\"0px\");\r\n    const onLoad = () => {\r\n        setHeight(((ref as any)?.current.contentWindow.document.body.scrollHeight + 20) + \"px\");\r\n    };\r\n\r\n    if (!interactiontext.trim() || interactiontype === \"typing\")\r\n        return null;\r\n    if (interactiontype === \"text\")\r\n        return (\r\n            <div\r\n                title={convertLocalDate(createdate).toLocaleString()}\r\n                className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })}\r\n            >\r\n                <span dangerouslySetInnerHTML={{ __html: validateIsUrl(showfulltext ? interactiontext : interactiontext.substring(0, 450) + \"... \") }}></span>\r\n                {!showfulltext && (\r\n                    <div style={{ color: \"#53bdeb\", display: \"contents\", cursor: \"pointer\" }} onClick={() => setshowfulltext(true)}>{t(langKeys.showmore)}</div>\r\n                )\r\n                }\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    else if (interactiontype === \"html\")\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                <iframe\r\n                    ref={ref}\r\n                    srcDoc={interactiontext}\r\n                    id={`frame-${interactionid}`}\r\n                    width=\"100%\"\r\n                    height={height}\r\n                    title=\"frame1\"\r\n                    onLoad={onLoad}\r\n                    style={{ border: 'none' }}\r\n                >\r\n                </iframe>\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    else if (interactiontype === \"email\") {\r\n        try {\r\n            const [subject, body, files] = interactiontext.split(\"&%MAIL%&\")\r\n            return (\r\n                <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} >\r\n                    <div>RE-LARAIGO: {subject}</div>\r\n                    <iframe\r\n                        ref={ref}\r\n                        srcDoc={body}\r\n                        id={`frame-${interactionid}`}\r\n                        width=\"100%\"\r\n                        title=\"frame2\"\r\n                        height={height}\r\n                        onLoad={onLoad}\r\n                        style={{ border: 'none' }}\r\n                    >\r\n                    </iframe>\r\n                    {(files && files !== \"{}\") &&\r\n                        Object.keys(JSON.parse(files)).map((file: any) => {\r\n                            let hreffile = JSON.parse(files)[file]\r\n                            let extension = file.split('.').pop()\r\n                            return (\r\n                                <a key={file} download rel=\"noreferrer\" target=\"_blank\" href={hreffile} style={{ textDecoration: 'none', display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: 4, maxWidth: 200, border: \"1px solid #e1e1e1\", borderRadius: 5, marginBottom: 5, paddingRight: 5 }}>\r\n                                    {extension === \"pdf\" ? (\r\n                                        <PdfIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"doc\" || extension === \"docx\") ? (\r\n                                        <DocIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"xls\" || extension === \"xlsx\" || extension === \"csv\") ? (\r\n                                        <XlsIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"ppt\" || extension === \"pptx\") ? (\r\n                                        <PptIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"text\" || extension === \"txt\") ? (\r\n                                        <TxtIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"zip\" || extension === \"rar\") ? (\r\n                                        <ZipIcon width=\"30\" height=\"30\" />\r\n                                    ) : <FileIcon width=\"30\" height=\"30\" />\r\n                                    }\r\n                                    <div style={{ color: '#171717', textOverflow: 'ellipsis', overflowX: 'hidden', flex: 1, whiteSpace: 'nowrap' }}>{decodeURI(file)}</div>\r\n                                    <DownloadIcon2 width=\"20\" height=\"20\" color=\"primary\" />\r\n                                </a>)\r\n                        })\r\n                    }\r\n                    <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                    <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                </div>\r\n            );\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"image\" || interactiontype === \"comment-image\")\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={classes.interactionImage}>\r\n                <img\r\n                    className={classes.imageCard}\r\n                    src={interactiontext}\r\n                    alt=\"\"\r\n                    crossOrigin={interactiontext.includes('cloud-object-storage') ? 'anonymous' : undefined}\r\n                    onClick={() => {\r\n                        dispatch(manageLightBox({ visible: true, images: listImage!!, index: indexImage!! }))\r\n                    }}\r\n                />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} background={true} />\r\n            </div>\r\n        );\r\n    else if (interactiontype === \"quickreply\") {\r\n        try {\r\n            let text, json;\r\n\r\n            if (interactiontext.substring(0, 1) === \"{\") {\r\n                const jj = JSON.parse(interactiontext);\r\n                return (\r\n                    <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                        [classes.interactionTextAgent]: userType !== 'client',\r\n                    })}>\r\n                        {jj.stringsmooch}\r\n                        <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                        <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                    </div>\r\n                );\r\n            } else {\r\n                text = interactiontext.split(\"&&&\")[0];\r\n                json = interactiontext.split(\"&&&\")[1]\r\n            }\r\n            const listButtons: Dictionary[] = JSON.parse(`[${json}]`);\r\n            return (\r\n                <div className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} style={{ display: 'inline-block' }}>\r\n                    {text}\r\n                    <div className={classes.containerQuickreply} style={{ justifyContent: 'space-evenly', display: \"flex\" }}>\r\n                        {listButtons.map((item: Dictionary, index: number) => {\r\n                            return <div key={index} className={classes.buttonQuickreply}>{item.text || item.title}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                    <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"postback\") {\r\n        try {\r\n            const [text, json] = interactiontext.split(\"&&&\");\r\n            const listButtons: Dictionary[] = JSON.parse(`[${json}]`);\r\n            return (\r\n                <div className={classes.containerPostback} style={{ backgroundColor: 'white' }}>\r\n                    <div className={classes.headerPostback}>\r\n                        {text}\r\n                    </div>\r\n                    <div >\r\n                        {listButtons.map((item: Dictionary, index: number) => {\r\n                            return <div key={index} className={classes.buttonPostback}>{item.text}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"LOG\") {\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })} style={{ backgroundColor: '#84818A', color: 'white' }}>\r\n                {showfulltext ? interactiontext : interactiontext.substring(0, 450) + \"... \"}\r\n                {!showfulltext && (\r\n                    <div style={{ color: \"#53bdeb\", display: \"contents\", cursor: \"pointer\" }} onClick={() => setshowfulltext(true)}>{t(langKeys.showmore)}</div>\r\n                )\r\n                }\r\n                <PickerInteraction userType={userType!!} fill=\"#84818A\" />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} background={true} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    } else if (interactiontype === \"carousel\") {\r\n        try {\r\n            const listItems: Dictionary[] = JSON.parse(`[${interactiontext}]`);\r\n            return (<Carousel carousel={listItems} />)\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"audio\" || (interactiontype === \"video\" && interactiontext.includes(\".oga\"))) {\r\n        return (\r\n            <div className={classes.interactionImage} style={{ borderRadius: 0, height: 50, backgroundColor: 'transparent' }}>\r\n                <audio controls src={interactiontext} className={classes.imageCard} style={{}}></audio>\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} background={true} time={onlyTime || \"\"} />\r\n            </div>\r\n        )\r\n    } else if (interactiontype === \"video\") {\r\n        return (\r\n            <div className={classes.interactionImage}>\r\n                <video className={classes.imageCard} width=\"200\" controls src={interactiontext} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} background={true} />\r\n            </div>\r\n        )\r\n    } else if (interactiontype === \"file\") {\r\n        const filename = interactiontext.split(\"/\").pop() || \"\";\r\n        const extension = (filename || \"\").split(\".\").pop();\r\n\r\n        return (\r\n            <div style={{ width: 200, backgroundColor: 'white', padding: '12px 13px', borderRadius: 4, position: 'relative' }}>\r\n                <a download rel=\"noreferrer\" target=\"_blank\" href={interactiontext} style={{ textDecoration: 'none', display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: 4 }}>\r\n                    {extension === \"pdf\" ? (\r\n                        <PdfIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"doc\" || extension === \"docx\") ? (\r\n                        <DocIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"xls\" || extension === \"xlsx\" || extension === \"csv\") ? (\r\n                        <XlsIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"ppt\" || extension === \"pptx\") ? (\r\n                        <PptIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"text\" || extension === \"txt\") ? (\r\n                        <TxtIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"zip\" || extension === \"rar\") ? (\r\n                        <ZipIcon width=\"30\" height=\"30\" />\r\n                    ) : <FileIcon width=\"30\" height=\"30\" />\r\n                    }\r\n                    <div style={{ color: '#171717', textOverflow: 'ellipsis', overflowX: 'hidden', flex: 1, whiteSpace: 'nowrap' }}>{filename}</div>\r\n                    <DownloadIcon2 width=\"20\" height=\"20\" color=\"primary\" />\r\n                </a>\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} background={true} time={onlyTime || \"\"} />\r\n            </div>\r\n        )\r\n    } else if (interactiontype === \"interactivebutton\") {\r\n        try {\r\n            const jsonIntt = JSON.parse(interactiontext);\r\n            jsonIntt.headertype = jsonIntt.headertype || \"text\";\r\n            return (\r\n                <div style={{ display: 'flex', gap: 4, flexDirection: 'column' }}>\r\n                    <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                        [classes.interactionTextAgent]: userType !== 'client',\r\n                    })}>\r\n                        {jsonIntt.headertype === \"text\" ? (\r\n                            <div style={{ fontWeight: 500 }}>{jsonIntt.header}</div>\r\n                        ) : jsonIntt.header}\r\n                        {jsonIntt.body}\r\n                        {jsonIntt.footer && (\r\n                            <div style={{ color: 'rgb(0,0,0,0.45)', fontSize: 12 }}>{jsonIntt.footer}</div>\r\n                        )}\r\n                        <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                    </div>\r\n                    {jsonIntt.buttons.map((button: any, i: number) => (\r\n                        <div key={i} style={{ background: '#FFF', color: '#00a5f4', borderRadius: 4, padding: '6px 8px', textAlign: 'center', textTransform: 'uppercase' }}>\r\n                            {button.title}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"reply-text\") {\r\n        const textres = interactiontext.split(\"###\")[1];\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                {textres}\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    } else if (interactiontype === \"interactivelist\") {\r\n        try {\r\n            return (\r\n                <InteractiveList\r\n                    interactiontext={interactiontext}\r\n                    createdate={createdate}\r\n                    classes={classes}\r\n                    userType={userType}\r\n                    onlyTime={onlyTime}\r\n                />\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"post-image\") {\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={classes.interactionImage} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <img\r\n                    className={classes.imageCard}\r\n                    src={interactiontext} alt=\"\"\r\n                    onClick={() => {\r\n                        dispatch(manageLightBox({ visible: true, images: listImage!!, index: indexImage!! }))\r\n                    }}\r\n                />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} background={true} />\r\n            </div>\r\n        );\r\n    } else if (interactiontype === \"post-text\") {\r\n\r\n        const ishtml = interactiontext.includes(\"###HTML###\");\r\n        const text = ishtml ? interactiontext.split(\"###HTML###\")[1] : interactiontext;\r\n\r\n        if (ishtml) {\r\n            return (\r\n                <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} style={{ marginLeft: 'auto', marginRight: 'auto' }} dangerouslySetInnerHTML={{ __html: text }}>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                    {text}\r\n                </div>\r\n            );\r\n        }\r\n    } else if (interactiontype === \"whatsappcatalog\") {\r\n        return (\r\n            <CatalogProduct\r\n                interactiontext={interactiontext}\r\n                createdate={createdate}\r\n                classes={classes}\r\n                userType={userType}\r\n                onlyTime={onlyTime}\r\n            />\r\n        )\r\n    } else if (interactiontype === \"shoppingcart\") {\r\n        return (\r\n            <ShoppingCart\r\n                interactiontext={interactiontext}\r\n                createdate={createdate}\r\n                classes={classes}\r\n                userType={userType}\r\n                onlyTime={onlyTime}\r\n            />\r\n        )\r\n    } else if (interactiontype === \"location\") {\r\n\r\n        const coordinates = interactiontext.split(\"=\").pop()?.split(\",\") || [\"\", \"\"];\r\n\r\n        return isLoaded ? (\r\n            <div\r\n                title={convertLocalDate(createdate).toLocaleString()}\r\n                className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })}\r\n            >\r\n                <div style={{ width: \"300px\" }} className=\"interaction-gmap\">\r\n                    <GoogleMap\r\n                        mapContainerStyle={{\r\n                            width: '100%',\r\n                            height: \"200px\"\r\n                        }}\r\n                        center={{ lat: parseFloat(coordinates[0]), lng: parseFloat(coordinates[1]) }}\r\n                        zoom={10}\r\n                    >\r\n                        <Marker\r\n                            position={{ lat: parseFloat(coordinates[0]), lng: parseFloat(coordinates[1]) }}\r\n                        />\r\n                    </GoogleMap>\r\n                </div>\r\n                <div style={{ display: \"none\" }} className=\"interaction-gmap-text\">\r\n                    {interactiontext}\r\n                </div>\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        ) : null\r\n    }\r\n    return (\r\n        <div className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            {interactiontext}\r\n            <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n            <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ItemGroupInteraction: React.FC<{ classes: any, groupInteraction: IGroupInteraction, clientName: string, imageClient: string | null }> = ({ classes, groupInteraction: { usertype, interactions } }) => {\r\n\r\n    const ticketSelected = useSelector(state => state.inbox.ticketSelected);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: 8 }}>\r\n            <div style={{ flex: 1 }}>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                    {interactions.map((item: IInteraction, index: number) => (\r\n                        <div key={index} id={`interaction-${item.interactionid}`} className={clsx({\r\n                            [classes.interactionAgent]: usertype !== \"client\",\r\n                            [classes.interactionFromPost]: ticketSelected?.communicationchanneltype === \"FBWA\"\r\n                        })}>\r\n                            {!item.interactiontype.includes(\"post-\") && ticketSelected?.communicationchanneltype === \"FBWA\" && usertype === \"client\" && (\r\n                                <Avatar src={item.avatar + \"\" || undefined} />\r\n                            )}\r\n                            <ItemInteraction interaction={item} classes={classes} userType={usertype!!} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {usertype === \"agent\" ?\r\n                <div style={{ marginTop: 'auto' }}><AgentIcon style={{ width: 40, height: 40 }} /></div> :\r\n                (usertype === \"BOT\" && <div style={{ marginTop: 'auto' }}><BotIcon style={{ width: 40, height: 40 }} /></div>)\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemGroupInteraction;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { DialogZyx, SkeletonInteraction } from 'components'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getInteractions } from 'store/inbox/actions'\r\nimport { Dictionary, IGroupInteraction } from '@types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport ItemGroupInteraction from './Interaction';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Trans } from 'react-i18next';\r\nimport { DownloadIcon } from 'icons';\r\nimport DomToImage from 'dom-to-image';\r\nimport IOSSwitch from \"components/fields/IOSSwitch\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerPanel: {\r\n        flex: '1',\r\n        display: 'flex'\r\n    },\r\n    titleTicketChat: {\r\n        fontWeight: 'bold',\r\n        fontSize: 15,\r\n        // '&:hover': {\r\n        //     cursor: 'pointer',\r\n        //     borderBottom: '1px solid #2E2C34'\r\n        // }\r\n    },\r\n    interactionAgent: {\r\n        marginLeft: 'auto'\r\n    },\r\n    groupInteractionAgent: {\r\n        marginLeft: 'auto',\r\n        display: 'flex'\r\n    },\r\n    containerTickets: {\r\n        flex: '0 0 300px',\r\n        maxWidth: 300,\r\n        backgroundColor: '#FFF',\r\n        flexDirection: 'column',\r\n        display: 'flex',\r\n        borderRight: '1px solid #84818a1a'\r\n    },\r\n    headChat: {\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        borderBottom: '1px solid #84818a1a',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        cursor: 'pointer'\r\n    },\r\n    containerInteractions: {\r\n        padding: theme.spacing(2),\r\n        flex: 1,\r\n        // overflowY: 'auto',\r\n        // backgroundColor: '#e0e0e0',\r\n        background: 'linear-gradient(90deg, rgba(119,33,173,0.7203256302521008) 35%, rgba(189,240,249,1) 100%)'\r\n    },\r\n    containerQuickreply: {\r\n        whiteSpace: 'break-spaces',\r\n        flexWrap: 'wrap',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        display: 'flex',\r\n        gap: theme.spacing(1),\r\n    },\r\n    containerPostback: {\r\n        width: 200,\r\n        padding: 0,\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '14px',\r\n        lineHeight: 2,\r\n        borderRadius: 25\r\n    },\r\n    headerPostback: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgb(132 129 138 / 0.4);',\r\n        borderTopLeftRadius: 25,\r\n        borderTopRightRadius: 25,\r\n    },\r\n    itemSelected: {\r\n        backgroundColor: 'rgb(235, 234, 237, 0.50)'\r\n    },\r\n    buttonPostback: {\r\n        color: theme.palette.primary.main,\r\n        cursor: 'pointer',\r\n        textAlign: 'center',\r\n        borderTop: '1px solid #EBEAED',\r\n        '&:hover': {\r\n            color: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    buttonQuickreply: {\r\n        padding: `0 ${theme.spacing(1)}px`,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: '6px',\r\n        color: '#FFF',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    interactionText: {\r\n        whiteSpace: 'break-spaces',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '14px',\r\n        lineHeight: 2,\r\n        color: '#2E2C34',\r\n        wordBreak: 'break-word',\r\n        width: 'fit-content',\r\n        borderRadius: 12,\r\n        borderBottomLeftRadius: 0,\r\n        padding: `${theme.spacing(.5)}px ${theme.spacing(1)}px ${theme.spacing(.7)}px ${theme.spacing(1)}px`,\r\n        position: 'relative',\r\n        maxWidth: 480,\r\n        backgroundColor: '#FFF',\r\n        border: '1px solid #EBEAED',\r\n        // boxShadow: '0 1px 2px 0 rgb(16 35 47 / 15%)'\r\n    },\r\n    interactionTextAgent: {\r\n        borderBottomLeftRadius: 12,\r\n        borderBottomRightRadius: 0,\r\n        backgroundColor: \"#eeffde\",\r\n    },\r\n    interactionImage: {\r\n        borderRadius: theme.spacing(1.5),\r\n        backgroundColor: '#FFF',\r\n        position: 'relative',\r\n        width: '328px',\r\n        height: '340px',\r\n    },\r\n    imageCard: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        cursor: 'pointer',\r\n        objectFit: 'cover',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        borderRadius: 'inherit'\r\n    },\r\n    timeInteraction: {\r\n        color: '#84818A',\r\n        fontSize: 13,\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        lineHeight: 2,\r\n    },\r\n    containerResponse: {\r\n        padding: theme.spacing(2),\r\n        background: '#FFF',\r\n        position: 'relative',\r\n        borderTop: '1px solid #84818a1a'\r\n    },\r\n    containerChat: {\r\n        flex: '1',\r\n        flexDirection: 'column',\r\n        display: 'flex',\r\n\r\n    },\r\n    collapseInfo: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - 20px)'\r\n    },\r\n    infoOpen: {\r\n        right: -20,\r\n    },\r\n    infoClose: {\r\n        right: 0,\r\n    },\r\n    containerProfile: {\r\n        flex: '0 0 300px',\r\n        display: 'none'\r\n    },\r\n    iconResponse: {\r\n        cursor: 'pointer',\r\n        poisition: 'relative',\r\n        color: '#2E2C34',\r\n        '&:hover': {\r\n            // color: theme.palette.primary.main,\r\n            backgroundColor: '#EBEAED',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    iconSend: {\r\n        background: \"#5542F6\",\r\n        width: 32,\r\n        height: 32,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n    },\r\n    iconSendDisabled: {\r\n        backgroundColor: \"#EBEAED\",\r\n        cursor: 'not-allowed',\r\n    },\r\n    containerButtonsChat: {\r\n        display: 'flex',\r\n    },\r\n    buttonCloseticket: {\r\n        background: '#F9F9FA',\r\n        border: '1px solid #EBEAED',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '4px',\r\n        width: '150px',\r\n        height: '42px',\r\n        fontFamily: 'Manrope',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: '14px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: '#ececec'\r\n        }\r\n    },\r\n    interactionFromPost: {\r\n        display: 'flex',\r\n        gap: 8\r\n    },\r\n    buttonIcon: {\r\n        width: 48,\r\n        height: 42,\r\n        border: '1px solid #EBEAED',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: '#ececec'\r\n        }\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        gap: theme.spacing(2),\r\n        width: '100%'\r\n    },\r\n    containerItemTicket: {\r\n        display: 'flex',\r\n        gap: theme.spacing(1),\r\n        alignItems: 'center',\r\n        padding: theme.spacing(1),\r\n        borderBottom: '1px solid #EBEAED',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(235, 234, 237, 0.18)'\r\n        }\r\n    },\r\n    containerNewMessages: {\r\n        minWidth: '22px',\r\n        padding: '0px 4px',\r\n        borderRadius: 12,\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n        textAlign: 'center'\r\n    },\r\n    name: {\r\n        flex: 1,\r\n        fontWeight: 500,\r\n        fontSize: '16px',\r\n        lineHeight: '22px',\r\n        wordBreak: 'break-word',\r\n\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: 200\r\n    },\r\n    containerQuickReply: {\r\n        boxShadow: '0px 3px 6px rgb(0 0 0 / 10%)',\r\n        backgroundColor: '#FFF',\r\n        width: 250,\r\n    },\r\n    headerQuickReply: {\r\n        fontSize: 13,\r\n        fontWeight: 500,\r\n        padding: theme.spacing(1.5),\r\n        borderBottom: '1px solid #EBEAED'\r\n    },\r\n    itemQuickReply: {\r\n        fontSize: 13,\r\n        paddingTop: theme.spacing(.7),\r\n        paddingBottom: theme.spacing(.7),\r\n        paddingLeft: theme.spacing(1.5),\r\n        paddingRight: theme.spacing(1.5),\r\n        '&:hover': {\r\n            backgroundColor: '#EBEAED',\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nconst DialogInteractions: React.FC<{ ticket: Dictionary | null, openModal: boolean, setOpenModal: (param: any) => void }> = ({ ticket, openModal, setOpenModal }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [showAllInteraction, setShowAllInteraction] = React.useState(false)\r\n    const interactionExtraList = useSelector(state => state.inbox.interactionExtraList);\r\n    const [interactionsToShow, setinteractionsToShow] = React.useState<IGroupInteraction[]>([])\r\n    const el = React.useRef<null | HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (ticket && openModal)\r\n            dispatch(getInteractions(ticket?.conversationid, false, 0));\r\n    }, [ticket])\r\n\r\n    const GenericPdfDownloader: React.FC<{ downloadFileName: string }> = ({ downloadFileName }) => {\r\n        const downloadPdfDocument = () => {\r\n            import('jspdf').then(jsPDF => {\r\n                if (el.current) {\r\n                    const gg = document.createElement('div');\r\n                    gg.style.display = 'flex';\r\n                    gg.style.flexDirection = 'column';\r\n                    gg.style.gap = '8px';\r\n                    gg.style.width = '190mm';\r\n                    gg.id = \"newexportcontainer\"\r\n\r\n                    gg.innerHTML = el.current.innerHTML;\r\n\r\n                    gg.querySelectorAll(\".interaction-gmap\").forEach(x => x.remove())\r\n                    gg.querySelectorAll(\".interaction-gmap-text\").forEach(x => (x as HTMLDivElement).style.display = \"\")\r\n\r\n                    document.body.appendChild(gg);\r\n                    const pdf = new jsPDF.jsPDF('p', 'mm');\r\n                    if (pdf) {\r\n                        DomToImage.toPng(gg)\r\n                            .then(imgData => {\r\n                                var imgWidth = 200;\r\n                                var pageHeight = 297;\r\n                                var imgHeight = Math.ceil(gg.scrollHeight * 0.2645833333);\r\n                                var heightLeft = imgHeight;\r\n                                var doc = new jsPDF.jsPDF('p', 'mm');\r\n                                var topPadding = 10;\r\n                                var position = topPadding; // give some top padding to first page\r\n\r\n                                doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\r\n                                heightLeft -= pageHeight;\r\n\r\n                                while (heightLeft >= 0) {\r\n                                    position = heightLeft - imgHeight + topPadding; // top padding for other pages\r\n                                    doc.addPage();\r\n                                    doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\r\n                                    heightLeft -= pageHeight;\r\n                                }\r\n                                doc.save(`ticket${ticket?.ticketnum}.pdf`);\r\n                                document.getElementById('newexportcontainer')?.remove();\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={downloadPdfDocument}\r\n                startIcon={<DownloadIcon />}\r\n                style={{ position: 'absolute', right: 16, top: 16 }}\r\n            ><Trans i18nKey={langKeys.download} />\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showAllInteraction) {\r\n            setinteractionsToShow(interactionExtraList.data)\r\n        } else {\r\n            setinteractionsToShow(interactionExtraList.data.map(x => ({\r\n                ...x,\r\n                interactions: x.interactions.filter(y => !y.isHide)\r\n            })))\r\n        }\r\n    }, [showAllInteraction, interactionExtraList.loading])\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={ticket?.displayname + \" - \" + ticket?.ticketnum}\r\n            buttonText1={t(langKeys.cancel)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n        >\r\n            <GenericPdfDownloader\r\n                downloadFileName={`ticket-` + ticket?.ticketnum}\r\n            />\r\n            <div style={{ position: 'absolute', left: 16, bottom: 16 }}>\r\n                <Tooltip title={t(langKeys.show_all) || \"\"} arrow >\r\n                    <div>\r\n                        <IOSSwitch checked={showAllInteraction} onChange={(e) => setShowAllInteraction(e.target.checked)} name=\"checkedB\" />\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n            {interactionExtraList.loading ? <SkeletonInteraction /> :\r\n                <div ref={el} className=\"scroll-style-go\" style={{ display: 'flex', flexDirection: 'column', gap: 8, height: '60vh' }}>\r\n                    {interactionsToShow.map((groupInteraction) => (\r\n                        <ItemGroupInteraction\r\n                            imageClient={ticket?.imageurldef}\r\n                            clientName={ticket?.displayname}\r\n                            classes={classes}\r\n                            groupInteraction={groupInteraction}\r\n                            key={groupInteraction.interactionid} />\r\n                    ))}\r\n                </div>\r\n            }\r\n        </DialogZyx>\r\n    )\r\n}\r\n\r\nexport default DialogInteractions;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styleFunction = void 0;\n\nvar _system = require(\"@material-ui/system\");\n\nvar _styled = _interopRequireDefault(require(\"../styles/styled\"));\n\nvar styleFunction = (0, _system.styleFunctionSx)((0, _system.compose)(_system.borders, _system.display, _system.flexbox, _system.grid, _system.positions, _system.palette, _system.shadows, _system.sizing, _system.spacing, _system.typography));\n/**\n * @ignore - do not document.\n */\n\nexports.styleFunction = styleFunction;\nvar Box = (0, _styled.default)('div')(styleFunction, {\n  name: 'MuiBox'\n});\nvar _default = Box;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _defaultTheme = _interopRequireDefault(require(\"./defaultTheme\"));\n\nvar styled = function styled(Component) {\n  var componentCreator = (0, _styles.styled)(Component);\n  return function (style, options) {\n    return componentCreator(style, (0, _extends2.default)({\n      defaultTheme: _defaultTheme.default\n    }, options));\n  };\n};\n\nvar _default = styled;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Publish');\n\nexports.default = _default;"],"sourceRoot":""}