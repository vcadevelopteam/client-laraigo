{"version":3,"sources":["pages/MapLocation.js","pages/Location.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","components/fields/table-paginated.tsx","../node_modules/@material-ui/icons/esm/Search.js","../node_modules/@material-ui/icons/esm/ArrowUpward.js","../node_modules/@material-ui/icons/esm/ArrowDownward.js"],"names":["libraries","mapContainerStyle","height","width","options","disableDefaultUI","zoomControl","Map","directionData","setDirectionData","useLoadScript","googleMapsApiKey","isLoaded","loadError","React","useState","lat","lng","time","Date","center","setcenter","marker","setMarker","showPosition","position","coords","latitude","longitude","prev","urltosearch","apiUrls","GETGEOCODE","fetch","method","response","ok","json","r","status","results","Array","length","cleanDataAddres","address_components","movedmarker","searchLocation","formatted_address","street_number","find","x","types","includes","postal_code","route","administrative_area_level_1","administrative_area_level_2","locality","sublocality_level_1","department","long_name","province","district","zone","zipcode","street","streetNumber","e","latLng","useEffect","navigator","geolocation","getCurrentPosition","console","error","mapRef","useRef","onMapLoad","useCallback","map","current","id","zoom","onLoad","onClick","useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","labellink","color","textDecoration","cursor","DetailLocation","data","row","edit","setViewSelected","fetchData","multiData","arrayBread","classes","waitSave","setWaitSave","executeRes","useSelector","state","main","execute","dispatch","useDispatch","t","useTranslation","user","login","validateToken","country","city","address","useForm","defaultValues","operation","locationid","googleurl","name","phone","alternativephone","email","alternativeemail","type","description","schedule","username","usr","register","handleSubmit","setValue","errors","formState","validate","value","langKeys","field_required","isNaN","loading","errormessage","code","module","locations","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","pageSize","pageIndex","filters","sorts","daterange","onSubmit","manageConfirmation","visible","question","confirmation_save","callback","locationIns","style","display","justifyContent","breadcrumbs","detail","handleClick","title","new","location","gap","alignItems","Button","variant","startIcon","backgroundColor","back","className","save","label","onChange","valueDefault","alternativeEmail","Location","history","useHistory","mainResult","viewSelected","mainPaginated","pageCount","setPageCount","waitSaveExport","setWaitSaveExport","totalrow","settotalrow","resExportData","exportData","waitImport","setWaitImport","executeResult","rowSelected","setRowSelected","fetchDataAux","setfetchDataAux","configuration_plural","redirectFunc","view","push","paths","CONFIGURATION","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","confirmation_delete","handleDelete","editFunction","handleEdit","Header","window","open","focus","seeonthemap","Math","ceil","count","resetAllMain","property","successful_delete","url","split","forEach","quickreplies","getCollectionPaginated","getPaginatedLocation","take","skip","handleTemplate","exportExcel","template","templateMaker","handleUpload","files","file","item","uploadExcel","undefined","excel","array_trimmer","filter","f","table","reduce","a","d","Object","values","p","header","no_records_valid","invalidformat","flexDirection","marginBottom","flexGrow","Trans","i18nKey","filterGeneral","download","exportPersonalized","columnsExport","key","alias","getLocationExport","onClickRow","ButtonsElement","disabled","marginLeft","importCSV","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","_classCallCheck","instance","Constructor","TypeError","footerTable","breakpoints","up","textAlign","trdynamic","boxShadow","visibility","containerfloat","borderBottom","zIndex","left","palette","text","primary","containerButtons","flexWrap","containerButtonsNoFilters","iconOrder","containerHeader","containerHeaderColumn","iconHelpText","DefaultColumnFilter","setFilters","listSelectFilter","anchorEl","setAnchorEl","Boolean","operator","setoperator","handleClickItemMenu","op","keys","Fragment","DateOptionsMenuComponent","date","valueOf","toISOString","TimeOptionsMenuComponent","toLocaleTimeString","fullWidth","onKeyDown","keyCode","target","event","currentTarget","size","onClose","PaperProps","maxHeight","OptionsMenuComponent","TableZyx","memo","titlemodule","filterrange","controlledPageCount","HeadComponent","autotrigger","autoRefresh","useSelection","selectionKey","selectionFilter","initialSelectedRows","cleanSelection","setCleanSelection","setSelectedRows","FiltersElement","filterRangeDate","onFilterChange","initialEndDate","initialStartDate","initialFilters","initialPageIndex","pagination","setPagination","openDateRangeModal","setOpenDateRangeModal","triggerSearch","setTriggerSearch","startDate","endDate","page","tFilters","setTFilters","useTable","initialState","selectedRowIds","manualPagination","useControlledState","autoResetSelectedRows","getRowId","relativeIndex","parent","join","stateReducer","newState","action","useFilters","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","getToggleAllPageRowsSelectedProps","filteredRows","checked","every","isSelected","toggleRowSelected","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","setPageSize","toggleAllRowsSelected","setPageIndex","trigger","getFirstDayMonth","getDateToday","getLastDayMonth","dateRange","setdateRange","triggertmp","fromButton","setHours","substring","getTime","clsx","setOpen","range","onSelect","border","borderRadius","getDateCleaned","search","accept","htmlFor","component","import","overflow","headerGroup","getHeaderGroupProps","headers","column","ii","activeOnHover","render","getHeaderProps","NoSort","newsorts","handleClickSort","whiteSpace","wordWrap","helpText","arrow","placement","LoadingSkeleton","getRowProps","hover","cells","i","getCellProps","textOverflow","tablePageOf","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","itemCount","totalItems","disableUnderline","Number","marginRight","recordPerPage","items","useQueryParams","query","ignore","get","buildQueryFilters","init","params","URLSearchParams","set","String","colFilters","createSvgIcon"],"mappings":"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","file":"static/js/36.9df4998a.chunk.js","sourcesContent":["import React,{useEffect} from \"react\";\r\nimport {GoogleMap,useLoadScript,Marker\r\n} from \"@react-google-maps/api\";\r\nimport { apiUrls } from \"common/constants\";\r\n\r\nimport \"@reach/combobox/styles.css\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  height: \"400px\",\r\n  width: \"100%\",\r\n};\r\nconst options = {\r\n  disableDefaultUI: true,\r\n  zoomControl: true,\r\n};\r\n\r\nexport default function Map({directionData,setDirectionData}) {\r\n  \r\n  const { isLoaded, loadError } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyAqrFCH95Tbqwo6opvVPcdtrVd-1fnBLr4\" /*\"AIzaSyCBij6DbsB8SQC_RRKm3-X07RLmvQEnP9w\"*/,\r\n    libraries,\r\n  });\r\n  const [center, setcenter] = React.useState({\r\n    lat: directionData.lat,\r\n    lng: directionData.lng,\r\n    time: new Date(),\r\n  });\r\n  const [marker, setMarker] = React.useState({\r\n    lat: directionData.lat,\r\n    lng: directionData.lng,\r\n    time: new Date(),\r\n  });\r\n  \r\n  useEffect(() => {\r\n    getLocation();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  function getLocation(){\r\n    if(navigator.geolocation){\r\n      navigator.geolocation.getCurrentPosition(showPosition)\r\n    }else{\r\n      console.error('Geolocation not supported by this browser')\r\n    }\r\n  }\r\n  async function showPosition(position) {\r\n    if(directionData.lat === 0 && directionData.lng === 0){\r\n      const lat = position.coords.latitude;\r\n      const lng = position.coords.longitude;\r\n      setDirectionData((prev)=>({...prev, \r\n        lat: lat,\r\n        lng: lng,\r\n      }))\r\n      \r\n      setMarker({\r\n        lat: lat,\r\n        lng: lng,\r\n        time: new Date(),\r\n      });\r\n      setcenter({\r\n        lat: lat,\r\n        lng: lng,\r\n      });\r\n  \r\n      const urltosearch = `${apiUrls.GETGEOCODE}?lat=${lat}&lng=${lng}`;\r\n      const response = await fetch(urltosearch, {\r\n          method: 'GET',\r\n      });\r\n      if (response.ok) {\r\n          try {\r\n              const r = await response.json();\r\n              if (r.status === \"OK\" && r.results && r.results instanceof Array && r.results.length > 0) {\r\n                  cleanDataAddres(r.results[0].address_components);\r\n                  setDirectionData((prev)=>({...prev, \r\n                    movedmarker: true,\r\n                    searchLocation: r.results[0].formatted_address\r\n                  }))\r\n              }\r\n          } catch (e) { }\r\n      }\r\n    }\r\n  }\r\n  \r\n  function cleanDataAddres(r) {\r\n    const street_number = r.find(x => x.types.includes(\"street_number\"));\r\n    const postal_code = r.find(x => x.types.includes(\"postal_code\"));\r\n    const route = r.find(x => x.types.includes(\"route\"));\r\n    const administrative_area_level_1 = r.find(x => x.types.includes(\"administrative_area_level_1\"));\r\n    const administrative_area_level_2 = r.find(x => x.types.includes(\"administrative_area_level_2\"));\r\n    const locality = r.find(x => x.types.includes(\"locality\"));\r\n    const sublocality_level_1 = r.find(x => x.types.includes(\"sublocality_level_1\"));\r\n\r\n    setDirectionData((prev)=>({...prev, \r\n      department: administrative_area_level_1 ? administrative_area_level_1.long_name : \"\", \r\n      province: administrative_area_level_2 ? administrative_area_level_2.long_name : \"\", \r\n      district: locality ? locality.long_name : \"\", \r\n      zone: sublocality_level_1 ? sublocality_level_1.long_name : \"\", \r\n      zipcode: postal_code ? postal_code.long_name : \"\",\r\n      street: route ? route.long_name : \"\", \r\n      streetNumber: street_number ? street_number.long_name : \"\",\r\n    }))\r\n  }\r\n  async function onMapClick(e){\r\n    const urltosearch = `${apiUrls.GETGEOCODE}?lat=${e.latLng.lat()}&lng=${e.latLng.lng()}`;\r\n    const response = await fetch(urltosearch, {\r\n        method: 'GET',\r\n    });\r\n    if (response.ok) {\r\n        try {\r\n            const r = await response.json();\r\n            if (r.status === \"OK\" && r.results && r.results instanceof Array && r.results.length > 0) {\r\n                cleanDataAddres(r.results[0].address_components);\r\n                setDirectionData((prev)=>({...prev, \r\n                  movedmarker: true,\r\n                  searchLocation: r.results[0].formatted_address\r\n                }))\r\n            }\r\n        } catch (e) { }\r\n    }\r\n    setDirectionData((prev)=>({...prev, \r\n      lat: e.latLng.lat(),\r\n      lng: e.latLng.lng(),\r\n    }))\r\n    setMarker({\r\n        lat: e.latLng.lat(),\r\n        lng: e.latLng.lng(),\r\n        time: new Date(),\r\n      });\r\n  }\r\n\r\n  const mapRef = React.useRef();\r\n  const onMapLoad = React.useCallback((map) => {\r\n    mapRef.current = map;\r\n  }, []);\r\n\r\n  if (loadError) return <div>\"Error\"</div>;\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n  \r\n  return (\r\n    <div>\r\n      <GoogleMap\r\n        id=\"map\"\r\n        mapContainerStyle={mapContainerStyle}\r\n        zoom={11}\r\n        center={center}\r\n        options={options}\r\n        onLoad={onMapLoad}\r\n        onClick={onMapClick}\r\n      >\r\n        <Marker\r\n          key={`${marker.lat}-${marker.lng}`}\r\n          position={{ lat: marker.lat, lng: marker.lng }}\r\n        />\r\n      </GoogleMap>\t  \r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateBreadcrumbs, TitleDetail, FieldEdit, Title, TemplateIcons } from 'components';\r\nimport { array_trimmer, exportExcel, getLocationExport, getPaginatedLocation, locationIns, templateMaker, uploadExcel } from 'common/helpers';\r\nimport { Dictionary, IFetchData } from \"@types\";\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n    resetAllMain,\r\n    execute,\r\n    getCollectionPaginated,\r\n    exportData\r\n} from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { useHistory } from 'react-router-dom';\r\nimport paths from 'common/constants/paths';\r\nimport TablePaginated from 'components/fields/table-paginated';\r\nimport Map from './MapLocation.js'\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\ninterface DetailLocationProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: (arg0: IFetchData) => void;\r\n    arrayBread: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    labellink: {\r\n        color: '#7721ad',\r\n        textDecoration: 'underline',\r\n        cursor: 'pointer'\r\n    },\r\n}));\r\n\r\ninterface ILocation {\r\n    phone: string,\r\n    alternativephone: string,\r\n    email: string,\r\n    alternativeemail: string,\r\n    type: string,\r\n    name: string,\r\n    country: string,\r\n    city: string,\r\n    district: string,\r\n    address: string,\r\n    schedule: string,\r\n    latitude: number,\r\n    longitude: number,\r\n}\r\n\r\nconst DetailLocation: React.FC<DetailLocationProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData,arrayBread }) => {\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const [directionData, setDirectionData] = React.useState({\r\n        country: row?.country||\"\",\r\n        city: row?.city||\"\",\r\n        district: row?.district||\"\",\r\n        address: row?.address||\"\",\r\n        lat: row?.latitude||0,\r\n        lng: row?.longitude||0,\r\n        movedmarker: false,\r\n        searchLocation: \"\",\r\n    });\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n\r\n            operation: row && row.locationid ? \"EDIT\" : \"INSERT\",\r\n            googleurl: row?.googleurl||\"\",\r\n            id: row?.locationid|| 0,\r\n            name: row?.name||\"\",\r\n            country: row?.country||\"\",\r\n            city: row?.city||\"\",\r\n            district: row?.district||\"\",\r\n            address: row?.address||\"\",\r\n            phone: row?.phone||\"\",\r\n            alternativephone: row?.alternativephone||\"\",\r\n            email: row?.email||\"\",\r\n            alternativeemail: row?.alternativeemail||\"\",\r\n            type: row?.type||\"\",\r\n            description: \"\",\r\n            status: \"ACTIVO\",\r\n            schedule: row?.schedule||\"\",\r\n            latitude: row?.latitude||0,\r\n            longitude: row?.longitude||0,\r\n            username: user?.usr||\"\"\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        register('id');\r\n        register('phone');\r\n        register('alternativephone');\r\n        register('email');\r\n        register('alternativeemail');\r\n        register('googleurl');\r\n        register('type', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('name', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('country', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('city', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('district', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('address', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('schedule', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('latitude', { validate: (value) => (value && !isNaN(value)) || t(langKeys.field_required) });\r\n        register('longitude', { validate: (value) => (value && !isNaN(value)) || t(langKeys.field_required) });\r\n    }, [edit, register]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null });\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.locations).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n    useEffect(() => {\r\n        setValue(\"latitude\",directionData.lat)\r\n        setValue(\"longitude\",directionData.lng)\r\n        setValue(\"country\",directionData.country)\r\n        setValue(\"city\",directionData.city)\r\n        setValue(\"district\",directionData.district)\r\n        setValue(\"address\",directionData.address)\r\n        setValue(\"googleurl\",`https://www.google.com/maps?q=${directionData.lat},${directionData.lng}`)\r\n    }, [directionData])\r\n    \r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(locationIns(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread,{ id: \"view-2\", name: `${t(langKeys.locations)} ${t(langKeys.detail)}` }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.name}` : `${t(langKeys.new)} ${t(langKeys.location)}`}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center'}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            startIcon={<SaveIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        >{t(langKeys.save)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.name)} \r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('name', value)}\r\n                            valueDefault={row ? (row.name || \"\") : \"\"}\r\n                            error={errors?.name?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.country)} \r\n                            className=\"col-6\"\r\n                            onChange={(e) => setDirectionData((prev)=>({...prev, country: e}))}\r\n                            valueDefault={directionData.country}\r\n                            error={errors?.country?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.city)} \r\n                            className=\"col-6\"\r\n                            onChange={(e) => setDirectionData((prev)=>({...prev, city: e}))}\r\n                            valueDefault={directionData.city}\r\n                            error={errors?.city?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.district)} \r\n                            className=\"col-6\"\r\n                            onChange={(e) => setDirectionData((prev)=>({...prev, district: e}))}\r\n                            valueDefault={directionData.district}\r\n                            error={errors?.district?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.address)} \r\n                            className=\"col-6\"\r\n                            onChange={(e) => setDirectionData((prev)=>({...prev, address: e}))}\r\n                            valueDefault={directionData.address}\r\n                            error={errors?.address?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.phone)} \r\n                            className=\"col-6\"\r\n                            type=\"number\"\r\n                            onChange={(value) => setValue('phone', value)}\r\n                            valueDefault={row ? (row.phone || \"\") : \"\"}\r\n                            error={errors?.phone?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.alternativephone)} \r\n                            className=\"col-6\"\r\n                            type=\"number\"\r\n                            onChange={(value) => setValue('alternativephone', value)}\r\n                            valueDefault={row ? (row.alternativephone || \"\") : \"\"}\r\n                            error={errors?.alternativephone?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.email)} \r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('email', value)}\r\n                            valueDefault={row ? (row.email || \"\") : \"\"}\r\n                            error={errors?.email?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.alternativeEmail)} \r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('alternativeemail', value)}\r\n                            valueDefault={row ? (row.alternativeemail || \"\") : \"\"}\r\n                            error={errors?.alternativeemail?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.type)} \r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('type', value)}\r\n                            valueDefault={row ? (row.type || \"\") : \"\"}\r\n                            error={errors?.type?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.schedule)} \r\n                            className=\"col-12\"\r\n                            onChange={(value) => setValue('schedule', value)}\r\n                            valueDefault={row ? (row.schedule || \"\") : \"\"}\r\n                            error={errors?.schedule?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.latitude)} \r\n                            className=\"col-6\"\r\n                            type=\"number\"\r\n                            onChange={(e) => setDirectionData((prev)=>({...prev, lat: e}))}\r\n                            valueDefault={directionData.lat}\r\n                            error={errors?.latitude?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.longitude)} \r\n                            className=\"col-6\"\r\n                            type=\"number\"\r\n                            onChange={(e) => setDirectionData((prev)=>({...prev, lng: e}))}\r\n                            valueDefault={directionData.lng}\r\n                            error={errors?.longitude?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div>\r\n                            <div style={{ width: \"100%\" }}>\r\n                                <Map directionData={directionData} setDirectionData={setDirectionData}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Location: FC = () => {\r\n    // const history = useHistory();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const mainPaginated = useSelector(state => state.main.mainPaginated);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [waitSaveExport, setWaitSaveExport] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [totalrow, settotalrow] = useState(0);\r\n    const resExportData = useSelector(state => state.main.exportData);\r\n    const [waitImport, setWaitImport] = useState(false);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [fetchDataAux, setfetchDataAux] = useState<IFetchData>({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    \r\n    const classes = useStyles();\r\n\r\n    const arrayBread = [\r\n        { id: \"view-0\", name: t(langKeys.configuration_plural) },\r\n        { id: \"view-1\", name: t(langKeys.locations) },\r\n    ];\r\n    function redirectFunc(view:string){\r\n        if(view ===\"view-0\"){\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(locationIns({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.locationid, username: user?.usr||\"\" })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'locationid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.name),\r\n                accessor: 'name',\r\n            },\r\n            {\r\n                Header: t(langKeys.phone),\r\n                accessor: 'phone',\r\n            },\r\n            {\r\n                Header: t(langKeys.alternativephone),\r\n                accessor: 'alternativephone',\r\n            },\r\n            {\r\n                Header: t(langKeys.address),\r\n                accessor: 'address',\r\n            },\r\n            {\r\n                Header: t(langKeys.city),\r\n                accessor: 'city',\r\n            },\r\n            {\r\n                Header: t(langKeys.country),\r\n                accessor: 'country',\r\n            },\r\n            {\r\n                Header: t(langKeys.latitude),\r\n                accessor: 'latitude',\r\n            },\r\n            {\r\n                Header: t(langKeys.longitude),\r\n                accessor: 'longitude',\r\n            },\r\n            {\r\n                Header: t(langKeys.type),\r\n                accessor: 'type',\r\n            },\r\n            {\r\n                Header: t(langKeys.schedule),\r\n                accessor: 'schedule',\r\n            },\r\n            {\r\n                Header: \"\",\r\n                accessor: 'googleurl',\r\n                NoFilter: true,\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <label\r\n                            className={classes.labellink}\r\n                            onClick={() => {window.open(`https://www.google.com/maps?q=${row.latitude},${row.longitude}`, '_blank')?.focus()}}\r\n                        >\r\n                            {t(langKeys.seeonthemap)}\r\n                        </label>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n            },\r\n            \r\n        ],\r\n        [t]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!mainPaginated.loading && !mainPaginated.error) {\r\n            setPageCount(fetchDataAux.pageSize ? Math.ceil(mainPaginated.count / fetchDataAux.pageSize) : 0);\r\n            settotalrow(mainPaginated.count);\r\n        }\r\n    }, [mainPaginated])\r\n\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n    \r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                dispatch(showBackdrop(false));\r\n                fetchData(fetchDataAux)\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n    useEffect(() => {\r\n        if (waitSaveExport) {\r\n            if (!resExportData.loading && !resExportData.error) {\r\n                dispatch(showBackdrop(false));\r\n                resExportData.url?.split(\",\").forEach(x => window.open(x, '_blank'))\r\n                setWaitSaveExport(false);\r\n            } else if (resExportData.error) {\r\n                const errormessage = t(resExportData.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSaveExport(false);\r\n            }\r\n        }\r\n    }, [resExportData, waitSaveExport])\r\n\r\n    useEffect(() => {\r\n        if (waitImport) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }))\r\n                fetchData(fetchDataAux);\r\n                dispatch(showBackdrop(false));\r\n                setWaitImport(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitImport(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitImport])\r\n\r\n    const fetchData = ({ pageSize, pageIndex, filters, sorts, daterange }: IFetchData) => {\r\n        setfetchDataAux({ pageSize, pageIndex, filters, sorts, daterange })\r\n        dispatch(getCollectionPaginated(getPaginatedLocation({\r\n            take: pageSize,\r\n            skip: pageIndex * pageSize,\r\n            sorts: sorts,\r\n            filters: {\r\n                ...filters,\r\n            },\r\n        })))\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        fetchData(fetchDataAux)\r\n    }, [])\r\n\r\n    const triggerExportData = ({ filters, sorts, daterange }: IFetchData) => {\r\n        const columnsExport = columns.filter(x => !x.isComponent).map(x => ({\r\n            key: x.accessor,\r\n            alias: x.Header\r\n        }))\r\n        dispatch(exportData(getLocationExport({\r\n            filters: {\r\n                ...filters,\r\n            },\r\n            sorts,\r\n        }), \"\", \"excel\", false, columnsExport));\r\n        dispatch(showBackdrop(true));\r\n        setWaitSaveExport(true);\r\n    };\r\n\r\n    const handleTemplate = () => {\r\n        const data = [\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n        ];\r\n        const header = [\r\n            'name',\r\n            'address',\r\n            'district',\r\n            'city',\r\n            'country',\r\n            'schedule',\r\n            'phone',\r\n            'alternativephone',\r\n            'email',\r\n            'alternativeemail',\r\n            'latitude',\r\n            'longitude',\r\n            'type',\r\n        ];\r\n        exportExcel(t(langKeys.template), templateMaker(data, header));\r\n    }\r\n    \r\n    const handleUpload = async (files: any) => {\r\n        const file = files?.item(0);\r\n        if (file && file.name.split('.')[file.name.split('.').length-1]===\"xlsx\") {\r\n\r\n            let excel: any = await uploadExcel(file, undefined);\r\n            let data: ILocation[] = array_trimmer(excel);\r\n            data = data.filter((f: ILocation) =>\r\n                (f.type === undefined || f.type !== \"\") &&\r\n                (f.name === undefined || f.name !== \"\") &&\r\n                (f.country === undefined || f.country !== \"\") &&\r\n                (f.city === undefined || f.city !== \"\") &&\r\n                (f.district === undefined || f.district !== \"\") &&\r\n                (f.address === undefined || f.address !== \"\") &&\r\n                (f.schedule === undefined || f.schedule !== \"\") &&\r\n                (f.latitude === undefined || !isNaN(f.latitude)) &&\r\n                (f.longitude === undefined || !isNaN(f.longitude))\r\n            );\r\n            if (data.length > 0) {\r\n                dispatch(showBackdrop(true));\r\n                let table: Dictionary = data.reduce((a: any, d: ILocation) => ({\r\n                    ...a,\r\n                    [`location_${d.latitude}_${d.longitude}`]: {\r\n                        id: 0, \r\n                        name: d.name || '',\r\n                        address: d.address || '',\r\n                        district: d.district || '',\r\n                        city: d.city|| '',\r\n                        country: d.country || '',\r\n                        schedule: d.schedule || '',\r\n                        phone: d.phone || '',\r\n                        alternativephone: d.alternativephone || '',\r\n                        email: d.email || '',\r\n                        alternativeemail: d.alternativeemail || '',\r\n                        type: d.type || '',\r\n                        username: user?.usr,\r\n                        latitude: d.latitude || 0,\r\n                        longitude: d.longitude || 0,\r\n                        status: \"ACTIVO\",\r\n                        description: '',\r\n                        googleurl: `https://www.google.com/maps?q=${d.latitude},${d.longitude}`,\r\n                        operation: 'INSERT',\r\n                    }\r\n                }), {});\r\n                Object.values(table).forEach((p: ILocation) => {\r\n                    dispatch(execute({\r\n                        header: locationIns({ ...p }),\r\n                        detail: [ ]\r\n                    }, true));\r\n                });\r\n                setWaitImport(true)\r\n            }\r\n            else {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_records_valid) }));\r\n            }\r\n        }\r\n        if(file.name.split('.')[file.name.split('.').length-1]!==\"xlsx\"){\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.invalidformat) }))\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            \r\n            \r\n            <div style={{ height: '100%', width: 'inherit' }}>\r\n\r\n            <div style={{ display: 'flex',  justifyContent: 'space-between',  alignItems: 'center'}}>\r\n                <TemplateBreadcrumbs\r\n                    breadcrumbs={arrayBread}\r\n                    handleClick={redirectFunc}\r\n                />\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 8, flexDirection: 'row', marginBottom: 12, marginTop: 4 }}>\r\n                <div style={{ flexGrow: 1 }} >\r\n                    <Title><Trans i18nKey={langKeys.location} count={2} /></Title>\r\n                </div>\r\n            </div>\r\n            <TablePaginated\r\n                columns={columns}\r\n                data={mainPaginated.data}\r\n                pageCount={pageCount}\r\n                totalrow={totalrow}\r\n                filterGeneral={true}\r\n                loading={mainPaginated.loading}\r\n                download={true}\r\n                exportPersonalized={triggerExportData}\r\n                fetchData={fetchData}\r\n                onClickRow={(row)=>{setRowSelected({ row: row, edit: false });setViewSelected(\"view-2\")}}\r\n                register={true}\r\n                ButtonsElement={() => (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={mainPaginated.loading}\r\n                        startIcon={<ListAltIcon color=\"secondary\" />}\r\n                        onClick={handleTemplate}\r\n                        style={{ backgroundColor: \"#55BD84\", marginLeft: \"auto\" }}\r\n                    >\r\n                        <Trans i18nKey={langKeys.template} />\r\n                    </Button>\r\n                )}\r\n                importCSV={handleUpload}\r\n                handleRegister={() => {\r\n                    setRowSelected({ row: null, edit: false })\r\n                    setViewSelected(\"view-2\");\r\n                }}\r\n            />\r\n        </div>\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailLocation\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default Location;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React, { useState, useEffect, useMemo } from 'react';\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TableConfig, Pagination, Dictionary, ITablePaginatedFilter } from '@types'\r\nimport { Trans } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { langKeys } from 'lang/keys';\r\nimport { DownloadIcon, CalendarIcon } from 'icons';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport clsx from 'clsx';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Search as SearchIcon,\r\n    Add as AddIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n} from 'react-table'\r\nimport { Range } from 'react-date-range';\r\nimport { DateRangePicker } from 'components';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { BooleanOptionsMenuComponent, DateOptionsMenuComponent, SelectFilterTmp, OptionsMenuComponent, TimeOptionsMenuComponent } from './table-simple';\r\nimport { getDateToday, getFirstDayMonth, getLastDayMonth, getDateCleaned } from 'common/helpers';\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        padding: '4px 24px 4px 16px',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    containerButtonsNoFilters: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'end',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\n\r\nconst DefaultColumnFilter = ({ header, type, setFilters, filters, listSelectFilter }: any) => {\r\n    const [value, setValue] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [operator, setoperator] = useState(\"contains\");\r\n\r\n    useEffect(() => {\r\n        switch (type) {\r\n            case \"number\": case \"number-centered\": case \"date\": case \"datetime-local\": case \"time\": case \"select\":\r\n                setoperator(\"equals\");\r\n                break;\r\n            case \"boolean\":\r\n                setoperator(\"all\");\r\n                break;\r\n            case \"string\": case \"color\":\r\n            default:\r\n                setoperator(\"contains\");\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    useEffect(() => {\r\n        if (['number', 'number-centered'].includes(type))\r\n            setoperator(\"equals\");\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [type])\r\n\r\n    const keyPress = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            if (value || operator === \"noempty\" || operator === \"empty\")\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value,\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            else\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n        }\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickItemMenu = (op: any) => {\r\n        setAnchorEl(null);\r\n        setoperator(op)\r\n        if (type === 'boolean') {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: {\r\n                    value: op,\r\n                    operator: op\r\n                },\r\n            }, 0)\r\n        } else if (type === \"select\") {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: op === \"_ALL\" ? undefined : {\r\n                    value: op,\r\n                    operator: \"equals\"\r\n                },\r\n            }, 0)\r\n        } else if (type === \"text\" || !type) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else if (['number', 'number-centered'].includes(type)) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value !== '') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        }\r\n    };\r\n    const handleClickMenu = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDate = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toISOString().split('T')[0] || '',\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTime = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toLocaleTimeString(),\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(filters).length === 0) setValue('');\r\n        else if (header in filters) {\r\n            setValue(filters?.[header]?.value || '');\r\n            if (filters?.[header]) setoperator(filters[header].operator);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters]);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {type === 'boolean' ?\r\n                <BooleanOptionsMenuComponent\r\n                    value={value}\r\n                    handleClickItemMenu={handleClickItemMenu}\r\n                />\r\n                :\r\n                (type === \"select\" ?\r\n                    <SelectFilterTmp\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                        data={listSelectFilter || []}\r\n                    /> :\r\n\r\n                    <React.Fragment>\r\n                        {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                        {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                        {!['date', 'time'].includes(type) &&\r\n                            <Input\r\n                                style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                type={['number', 'number-centered'].includes(type) ? \"number\" : \"text\"}\r\n                                fullWidth\r\n                                value={value}\r\n                                onKeyDown={keyPress}\r\n                                onChange={e => setValue(e.target.value)}\r\n                            />}\r\n                        <IconButton\r\n                            onClick={handleClickMenu}\r\n                            size=\"small\"\r\n                        >\r\n                            <MoreVertIcon\r\n                                style={{ cursor: 'pointer' }}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"action\"\r\n                                fontSize=\"small\"\r\n                            />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleCloseMenu}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {OptionsMenuComponent(type || 'string', operator, handleClickItemMenu)}\r\n                        </Menu>\r\n                    </React.Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    filterrange,\r\n    totalrow,\r\n    pageCount: controlledPageCount,\r\n    download,\r\n    register,\r\n    handleRegister,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    exportPersonalized,\r\n    loading,\r\n    importCSV,\r\n    autotrigger = false,\r\n    autoRefresh,\r\n    useSelection,\r\n    selectionKey,\r\n    selectionFilter,\r\n    initialSelectedRows,\r\n    cleanSelection,\r\n    setCleanSelection,\r\n    setSelectedRows,\r\n    onClickRow,\r\n    FiltersElement,\r\n    filterRangeDate = \"month\",\r\n    onFilterChange,\r\n    initialEndDate = null,\r\n    initialStartDate = null,\r\n    initialFilters = {},\r\n    initialPageIndex = 0,\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const [pagination, setPagination] = useState<Pagination>({ sorts: {}, filters: initialFilters, pageIndex: initialPageIndex });\r\n    const [openDateRangeModal, setOpenDateRangeModal] = useState(false);\r\n    const [triggerSearch, setTriggerSearch] = useState(autotrigger);\r\n    const [tFilters, setTFilters] = useState<ITablePaginatedFilter>({\r\n        startDate: initialStartDate,\r\n        endDate: initialEndDate,\r\n        page: initialPageIndex,\r\n        filters: initialFilters,\r\n    });\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        setPageSize,\r\n        toggleAllRowsSelected,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: initialPageIndex, pageSize: 20, selectedRowIds: initialSelectedRows || {} },\r\n            manualPagination: true, // Tell the usePagination\r\n            pageCount: controlledPageCount,\r\n            useControlledState: (state: any) => {\r\n                return useMemo(() => ({\r\n                    ...state,\r\n                    pageIndex: pagination.pageIndex,\r\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                }), [state, pagination.pageIndex])\r\n            },\r\n            autoResetSelectedRows: false,\r\n            getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n                ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n                : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n            stateReducer: (newState, action) => {\r\n                switch (action.type) {\r\n                    case 'toggleAllRowsSelected':\r\n                        return {\r\n                            ...newState,\r\n                            selectedRowIds: {},\r\n                        };\r\n                    default:\r\n                        return newState;\r\n                }\r\n            }\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps, filteredRows }: any) => (\r\n                        !selectionFilter\r\n                            ?\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    {...getToggleAllPageRowsSelectedProps()}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={filteredRows\r\n                                        .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                        .every((p: any) => p.isSelected)\r\n                                    }\r\n                                    onChange={() => {\r\n                                        filteredRows\r\n                                            .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                            .forEach((p: any) => {\r\n                                                p.toggleRowSelected();\r\n                                            })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n                        !selectionFilter || row.original[selectionFilter?.key] === selectionFilter?.value\r\n                            ? <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />\r\n                            </div>\r\n                            : null\r\n                    ),\r\n                    NoFilter: true,\r\n                    isComponent: true\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    const setFilters = (filters: any, page: number) => {\r\n        setPagination(prev => {\r\n            // const pageIndex = !page ? prev.pageIndex : page;\r\n            return { ...prev, filters, pageIndex: 0, trigger: true }\r\n        });\r\n    };\r\n    const setPageIndex = (page: number) => {\r\n        setPagination(prev => ({ ...prev, pageIndex: page, trigger: true }));\r\n        setTFilters(prev => ({ ...prev, page }));\r\n    }\r\n    const handleClickSort = (column: string) => {\r\n        let newsorts: any = {};\r\n        if (Object.keys(pagination.sorts).includes(column)) {\r\n            newsorts = {\r\n                ...pagination.sorts\r\n            }\r\n        }\r\n\r\n        if (newsorts[column] === \"desc\") {\r\n            delete newsorts[column]\r\n        }\r\n        else {\r\n            if (newsorts[column] === \"asc\") {\r\n                newsorts[column] = \"desc\";\r\n            }\r\n            else {\r\n                newsorts[column] = \"asc\";\r\n            }\r\n        }\r\n\r\n        setPagination(prev => ({ ...prev, sorts: newsorts, trigger: true }))\r\n    }\r\n\r\n    const [dateRange, setdateRange] = useState<Range>({\r\n        startDate: initialStartDate ? new Date(initialStartDate) : filterRangeDate === \"month\" ? getFirstDayMonth() : getDateToday(),\r\n        endDate: initialEndDate ? new Date(initialEndDate) : filterRangeDate === \"month\" ? getLastDayMonth() : getDateToday(),\r\n        key: 'selection'\r\n    });\r\n\r\n    const triggertmp = (fromButton: boolean = false) => {\r\n        if (fromButton)\r\n            setPagination(prev => ({ ...prev, pageIndex: initialPageIndex, trigger: false }));\r\n\r\n        if (!fetchData) return;\r\n        fetchData({\r\n            ...pagination,\r\n            pageSize,\r\n            pageIndex: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n            }\r\n        });\r\n        setTFilters(prev => ({\r\n            ...prev,\r\n            page: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            startDate: dateRange.startDate ? (new Date(dateRange.startDate.setHours(10))).getTime() : null,\r\n            endDate: dateRange.endDate ? (new Date(dateRange.endDate.setHours(10))).getTime() : null,\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cleanSelection) {\r\n            toggleAllRowsSelected(false)\r\n            setSelectedRows && setSelectedRows({})\r\n            setCleanSelection && setCleanSelection(false)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cleanSelection])\r\n\r\n    useEffect(() => {\r\n        if (pagination?.trigger) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pagination, triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pageSize])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggerSearch && triggertmp(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (autoRefresh?.value) {\r\n            triggertmp();\r\n            autoRefresh?.callback(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoRefresh])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        onFilterChange?.(tFilters);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tFilters]);\r\n\r\n    const exportData = () => {\r\n        exportPersonalized && exportPersonalized({\r\n            ...pagination,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box width={1}>\r\n            {titlemodule && <div className={classes.title}>{titlemodule}</div>}\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\">\r\n                <div className={clsx({\r\n                    [classes.containerButtons]: !!FiltersElement,\r\n                    [classes.containerButtonsNoFilters]: !FiltersElement\r\n                })}>\r\n                    {filterrange && (\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                            <DateRangePicker\r\n                                open={openDateRangeModal}\r\n                                setOpen={setOpenDateRangeModal}\r\n                                range={dateRange}\r\n                                onSelect={setdateRange}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    style={{ border: '1px solid #bfbfc0', borderRadius: 4, color: 'rgb(143, 146, 161)' }}\r\n                                    startIcon={<CalendarIcon />}\r\n                                    onClick={() => setOpenDateRangeModal(!openDateRangeModal)}\r\n                                >\r\n                                    {getDateCleaned(dateRange.startDate!) + \" - \" + getDateCleaned(dateRange.endDate!)}\r\n                                </Button>\r\n                            </DateRangePicker>\r\n                            {FiltersElement && FiltersElement}\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<SearchIcon style={{ color: 'white' }} />}\r\n                                style={{ backgroundColor: '#55BD84', width: 120 }}\r\n                                onClick={() => {\r\n                                    if (triggerSearch)\r\n                                        triggertmp(true)\r\n                                    setTriggerSearch(true)\r\n                                }}\r\n                            >\r\n                                <Trans i18nKey={langKeys.search} />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                        {ButtonsElement && <ButtonsElement />}\r\n                        {importCSV && (\r\n                            <>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    id=\"laraigo-upload-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => importCSV(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        component=\"span\"\r\n                                        color=\"primary\"\r\n                                        disabled={loading}\r\n                                        startIcon={<BackupIcon color=\"secondary\" />}\r\n                                        style={{ backgroundColor: \"#55BD84\" }}\r\n                                    ><Trans i18nKey={langKeys.import} />\r\n                                    </Button>\r\n                                </label>\r\n                            </>\r\n                        )}\r\n                        {register && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                startIcon={<AddIcon color=\"secondary\" />}\r\n                                onClick={handleRegister}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            ><Trans i18nKey={langKeys.register} />\r\n                            </Button>\r\n                        )}\r\n                        {download && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                onClick={exportData}\r\n                                // exportPersonalized\r\n                                startIcon={<DownloadIcon />}\r\n                            ><Trans i18nKey={langKeys.download} />\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\">\r\n                    <MaUTable {...getTableProps()} aria-label=\"enhanced table\" size=\"small\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell\r\n                                                key={ii}\r\n                                            >\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header')\r\n                                                    :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n                                                                component=\"div\"\r\n                                                                {...column.getHeaderProps()}\r\n                                                                onClick={() => !column.NoSort && handleClickSort(column.id)}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {pagination.sorts[column.id] && (pagination.sorts[column.id] === \"asc\" ?\r\n                                                                    <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                    : <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />)\r\n                                                                }\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12, whiteSpace: 'break-spaces' }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        {!column.NoFilter &&\r\n                                                            <DefaultColumnFilter\r\n                                                                header={column.id}\r\n                                                                listSelectFilter={column.listSelectFilter || []}\r\n                                                                type={column.type}\r\n                                                                filters={pagination.filters}\r\n                                                                setFilters={(filters: any, page: number) => {\r\n                                                                    setFilters(filters, page);\r\n                                                                    setTFilters(prev => ({\r\n                                                                        ...prev,\r\n                                                                        filters,\r\n                                                                        page,\r\n                                                                    }));\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody {...getTableBodyProps()} style={{ backgroundColor: 'white' }}>\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                page.map((row: any) => {\r\n                                    prepareRow(row);\r\n                                    return (\r\n                                        <TableRow\r\n                                            {...row.getRowProps()}\r\n                                            hover\r\n                                            style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                        >\r\n                                            {row.cells.map((cell: any, i: number) =>\r\n                                                <TableCell\r\n                                                    {...cell.getCellProps({\r\n                                                        style: {\r\n                                                            minWidth: cell.column.minWidth,\r\n                                                            width: cell.column.width,\r\n                                                            overflow: 'hidden',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                        },\r\n                                                    })}\r\n                                                    onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original) : null}\r\n                                                >\r\n                                                    {cell.render('Cell')}\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </MaUTable>\r\n\r\n                </Box>\r\n                <Box className={classes.footerTable}>\r\n                    <Box>\r\n                        <IconButton onClick={() => setPageIndex(0)} disabled={!canPreviousPage} >\r\n                            <FirstPage />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex - 1)} disabled={!canPreviousPage} >\r\n                            <NavigateBefore />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex + 1)} disabled={!canNextPage} >\r\n                            <NavigateNext />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pageCount - 1)} disabled={!canNextPage} >\r\n                            <LastPage />\r\n                        </IconButton>\r\n                        <Box component=\"span\" fontSize={14}>\r\n                            <Trans\r\n                                i18nKey={langKeys.tablePageOf}\r\n                                values={{ currentPage: pageOptions.length === 0 ? 0 : pageIndex + 1, totalPages: pageOptions.length }}\r\n                                components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                            />\r\n                        </Box >\r\n\r\n                    </Box>\r\n                    <Box>\r\n                        <Trans\r\n                            i18nKey={(totalrow || 0) === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                            values={{ itemCount: page.length, totalItems: totalrow }}\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <Select\r\n                            disableUnderline\r\n                            style={{ display: 'inline-flex' }}\r\n                            value={pageSize}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                        >\r\n                            {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                <MenuItem key={pageSize} value={pageSize}>\r\n                                    {pageSize}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                        <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                            <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface IQueryMap {\r\n    [key: string]: {\r\n        value: string;\r\n        operator: string;\r\n    }\r\n}\r\n\r\ninterface IFilters {\r\n    startDate: number;\r\n    endDate: number;\r\n    page: number;\r\n    filters: IQueryMap;\r\n}\r\n\r\ninterface IOptions {\r\n    ignore?: string[];\r\n}\r\n\r\nexport function useQueryParams(query: URLSearchParams, options: IOptions = { ignore: [] }) {\r\n    return useMemo(() => {\r\n        const map: IFilters = {\r\n            endDate: Number(query.get('endDate')),\r\n            startDate: Number(query.get('startDate')),\r\n            page: Number(query.get('page')),\r\n            filters: {},\r\n        };\r\n        const { ignore } = options;\r\n\r\n        query.forEach((value, key) => {\r\n            if (key === \"endDate\" ||\r\n                key === \"startDate\" ||\r\n                key === \"page\" ||\r\n                key.includes('-operator') ||\r\n                (ignore || []).includes(key)) {\r\n                return;\r\n            }\r\n\r\n            const name = `${key}-operator`;\r\n            map.filters[key] = { value, operator: query.get(name)! };\r\n        });\r\n\r\n        return map;\r\n    }, [options, query]);\r\n}\r\n\r\nexport function buildQueryFilters(\r\n    filters: ITablePaginatedFilter,\r\n    init?: string | string[][] | Record<string, string>,\r\n) {\r\n    const params = new URLSearchParams(init);\r\n\r\n    for (const key in filters) {\r\n        const value = (filters as any)[key];\r\n        if (key === 'filters' || value === undefined || value === null) continue;\r\n        params.set(key, String(value));\r\n    }\r\n\r\n    const colFilters = filters.filters;\r\n    for (const key in colFilters) {\r\n        if (typeof colFilters[key] === 'object' && 'value' in colFilters[key] && 'operator' in colFilters[key]) {\r\n            params.set(key, String(colFilters[key].value));\r\n            params.set(`${key}-operator`, String(colFilters[key].operator));\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');"],"sourceRoot":""}