{"version":3,"sources":["pages/channels/ChannelAddWhatsapp.tsx","store/channel/actions.ts"],"names":["useChannelAddStyles","makeStyles","theme","centerbutton","marginLeft","marginTop","marginBottom","button","padding","fontWeight","fontSize","textTransform","width","button2","fields1","flex","margin","fields2","fields3","CssPhonemui","styled","MuiPhoneNumber","color","borderBottomColor","borderColor","ChannelAddWhatsapp","edit","useState","channelreg","setChannelreg","coloricon","setcoloricon","viewSelected","setViewSelected","nextbutton","setNextbutton","disablebutton","setdisablebutton","disablebutton2","setdisablebutton2","disablebutton3","setdisablebutton3","setins","setsetins","set360","setset360","setsmooch","setsetsmooch","setRegisterSmooch","setSetRegisterSmooch","setRegister360","setSetRegister360","setRegisterGupshup","setSetRegisterGupshup","waitSave","setWaitSave","setParameters","setSetParameters","user","useSelector","state","login","validateToken","roledesc","executeResult","channel","successinsert","executeActivationResult","activateChannel","mainResult","channelList","classes","history","useHistory","location","useLocation","whatsAppData","dispatch","useDispatch","t","useTranslation","useEffect","row","servicecredentials","length","push","paths","CHANNELS","accesstoken","brandName","brandAddress","firstName","lastName","email","phone","customerfacebookid","phonenumberwhatsappbusiness","nameassociatednumber","errors","typeWhatsApp","fields","setFields","a","insertChannel","setService","value","field","partialf","service","parameters","communicationchannelowner","setApiKeyId","apikeyid","setApiKeySecret","apikeysecret","setAppId","appid","activateChannelfunc","showBackdrop","partialField","type","serviceField","JSON","parse","communicationchannelid","communicationchanneldesc","communicationchannelsite","chatflowenabled","integrationid","icons","other","form","apikey","brandname","brandaddress","firstname","lastname","loading","showSnackbar","show","severity","message","langKeys","successful_register","errormessage","code","module","property","toLocaleLowerCase","error","String","style","href","onClick","e","preventDefault","previoustext","textAlign","marginRight","maxWidth","whatsapptitledialog","className","variant","disabled","CHANNELS_ADD","close","registerwhats","onChange","label","enterapikey","whatsapptitlesmooch","target","smooch_apikeyid","smooch_apikeysecret","smooch_appid","whatsapptitlegupshup","appname","appnumber","gupshuppappid","setAppName","gupshuppappname","setApiKey","gupshuppapikey","setAppNumber","gupshuppappnumber","finishreg","alignItems","display","activate360dialog","activatesmooch","brandpointcontact","brandpointcontact2","fullWidth","size","defaultValue","name","helperText","disableAreaCodes","defaultCountry","emailcondition","whatsappinformation","desiredphonenumberwhatsappbusiness","whatsappinformation3","whatsappguidedownload","whatsappinformation4","whatsappsubtitle1","next","register360dialog","registersmooch","registergupshup","commchannelfinishreg","description","setnameField","givechannelname","valueDefault","lineHeight","mb","givechannelcolor","justifyContent","fill","hex","prev","paddingLeft","getChannelsList","accessToken","appId","callAPI","ChannelsService","getPagelist","types","actionTypes","success","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deleteChannel","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","insertChannel2","payload","chatIconFile","interface","iconbutton","headerIconFile","iconheader","botIconFile","iconbot","bubbleIconFile","bubble","iconbubble","chatIcon","headerIcon","botIcon","bubbleIcon","fd","FormData","append","CommonService","uploadFile","data","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","resetInsertChannel","INSERT_CHANNEL_RESET","editChannel","channelType","editchnl","main","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","resetEditChannel","EDIT_CHANNEL_RESET","getFacebookPages","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","resetGetFacebookPages","FACEBOOK_PAGES_RESET","getMessengerPages","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","resetGetMessengerPages","MESSENGER_PAGES_RESET","getInstagramPages","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","resetGetInstagramPages","INSTAGRAM_PAGES_RESET","getInstagramDMPages","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","resetGetInstagramDMPages","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE"],"mappings":"8YAkBMA,EAAsBC,aAAW,SAAAC,GAAK,MAAK,CAC7CC,aAAc,CACVC,WAAY,mBACZC,UAAW,OACXC,aAAc,QAElBC,OAAQ,CACJC,QAAS,GACTC,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,MAAO,SAEXC,QAAS,CACLL,QAAS,GACTC,WAAY,IACZC,SAAU,OACVC,cAAe,UACfC,MAAO,QAEXE,QAAS,CACLC,KAAM,EACNC,OAAQ,QAEZC,QAAS,CACLF,KAAM,GAEVG,QAAS,CACLH,KAAM,EACNX,WAAY,YAIde,EAAcC,YAAOC,IAAPD,CAAuB,CACvC,sBAAuB,CACnBE,MAAO,WAEX,8BAA+B,CAC3BC,kBAAmB,WAEvB,2BAA4B,CACxB,yBAA0B,CACtBC,YAAa,cAUZC,EAA4C,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACxD,EAAoCC,oBAAS,GAAK,mBAA3CC,EAAU,KAAEC,EAAa,KAChC,EAAkCF,mBAAS,WAAU,mBAA9CG,EAAS,KAAEC,EAAY,KAC9B,EAAwCJ,mBAAS,SAAQ,mBAAlDK,EAAY,KAAEC,EAAe,KACpC,EAAoCN,oBAAS,GAAK,mBAA3CO,EAAU,KAAEC,EAAa,KAChC,EAA0CR,oBAAS,GAAK,mBAAjDS,EAAa,KAAEC,EAAgB,KACtC,EAA4CV,oBAAS,GAAK,mBAAnDW,EAAc,KAAEC,EAAiB,KACxC,EAA4CZ,oBAAS,GAAK,mBAAnDa,EAAc,KAAEC,EAAiB,KACxC,EAA4Bd,oBAAS,GAAM,oBAApCe,GAAM,MAAEC,GAAS,MACxB,GAA4BhB,oBAAS,GAAM,qBAApCiB,GAAM,MAAEC,GAAS,MACxB,GAAkClB,oBAAS,GAAM,qBAA1CmB,GAAS,MAAEC,GAAY,MAC9B,GAAkDpB,oBAAS,GAAM,qBAA1DqB,GAAiB,MAAEC,GAAoB,MAC9C,GAA4CtB,oBAAS,GAAM,qBAApDuB,GAAc,MAAEC,GAAiB,MACxC,GAAoDxB,oBAAS,GAAM,qBAA5DyB,GAAkB,MAAEC,GAAqB,MAChD,GAAgC1B,oBAAS,GAAM,qBAAxC2B,GAAQ,MAAEC,GAAW,MAC5B,GAA0C5B,oBAAS,GAAK,qBAAjD6B,GAAa,MAAEC,GAAgB,MAEhCC,GAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,cAAcJ,QACtDK,IAAe,OAAJL,SAAI,IAAJA,QAAI,EAAJA,GAAMK,WAAY,GAC7BC,GAAgBL,aAAY,SAAAC,GAAK,OAAIA,EAAMK,QAAQC,iBACnDC,GAA0BR,aAAY,SAAAC,GAAK,OAAIA,EAAMK,QAAQG,mBAC7DC,GAAaV,aAAY,SAAAC,GAAK,OAAIA,EAAMK,QAAQK,eAEhDC,GAAUvE,IACVwE,GAAUC,cACVC,GAAWC,cAEXC,GAAeF,GAASd,MAExBiB,GAAWC,cAETC,GAAMC,cAAND,EAERE,qBAAU,YACFvD,KAAqB,OAAZkD,SAAY,IAAZA,QAAY,EAAZA,GAAcM,MAEhBxD,IAAoB,OAAZkD,SAAY,IAAZA,QAAY,EAAZA,GAAcM,MAAuD,KAApC,OAAZN,SAAY,IAAZA,QAAY,EAAZA,GAAcM,IAAIC,mBAAmBC,UADzEZ,GAAQa,KAAKC,IAAMC,YAIxB,CAACf,KAEJ,OAAiB7C,mBAAqB,CAClC6D,YAAa,GACbC,UAAW,GACXC,aAAc,GACdC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,mBAAoB,GACpBC,4BAA6B,GAC7BC,qBAAsB,KAVnBC,GAWL,kBAXW,GAab,GAA4BvE,mBAAS,CACjC,OAAU,+BACV,WAAc,CACV,GAAM,EACN,YAAe,GACf,KAAQ,GACR,yBAA4B,GAC5B,0BAA6B,GAC7B,iBAAmB,EACnB,cAAiB,GACjB,MAAS,GACT,MAAS,GACT,MAAS,GACT,KAAQ,GACR,OAAU,GACV,UAAa,UACb,2BAA6B,GAEjC,KAAuC,YAAnB,OAAZiD,SAAY,IAAZA,QAAY,EAAZA,GAAcuB,cAA4B,WAAa,iBAC/D,QAAW,CACP,YAAe,GACf,UAAa,GACb,aAAgB,GAChB,UAAa,GACb,SAAY,GACZ,MAAS,GACT,MAAS,GACT,mBAAsB,GACtB,4BAA+B,GAC/B,qBAAwB,GACxB,SAAY,GACZ,aAAgB,GAChB,MAAS,GACT,QAAW,GACX,OAAU,GACV,UAAa,MAEnB,qBArCKC,GAAM,MAAEC,GAAS,MA2CA,cAKvB,OALuB,yBAAxB,sBAAAC,EAAA,sDACI3D,IAAU,GACVkC,GAAS0B,YAAcH,KACvB7C,IAAY,GACZtB,EAAgB,QAAQ,4CAC3B,sBA8HD,SAASuE,GAAWC,EAAeC,GAC/BvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQpB,YAAciB,EAC/BE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAGd,SAASI,GAAYN,EAAeC,GAChCvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQI,SAAWP,EAC5BE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAGd,SAASM,GAAgBR,EAAeC,GACpCvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQM,aAAeT,EAChCE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAGd,SAASQ,GAASV,EAAeC,GAC7BvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQQ,MAAQX,EACzBE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAyBb,SAEcU,KAAmB,8CAGjC,OAHiC,yBAAlC,sBAAAf,EAAA,sDACIzB,GAASyC,aAAa,IACtBzC,GAAST,YAAgBgC,KAAS,4CACrC,sBAcD,MAhN+B,qBAAZ,OAAR1B,SAAQ,IAARA,QAAQ,EAARA,GAAUd,SAAkC,OAARc,SAAQ,IAARA,QAAQ,EAARA,GAAUd,QACrDY,GAAQa,KAAKC,IAAMC,UAUvBN,qBAAU,WACN,GAAiB,eAAblB,KAA8BrC,GAAuC,YAAnB,OAAZkD,SAAY,IAAZA,QAAY,EAAZA,GAAcuB,cAA2B,CAC/EhD,IAAkB,GAClBF,IAAqB,GACrBI,IAAsB,GAEtB,IAAIkE,EAAenB,GACnBmB,EAAaC,KAAO,SAEpBnB,GAAUkB,GAGd,GAAiB,eAAbxD,KAA8BrC,GAAuC,YAAnB,OAAZkD,SAAY,IAAZA,QAAY,EAAZA,GAAcuB,cAA2B,CAC/EhD,IAAkB,GAClBF,IAAqB,GACrBI,IAAsB,GAEtB,IAAIkE,EAAenB,GACnBmB,EAAaC,KAAO,uBAEpBnB,GAAUkB,GAGd,GAAiB,eAAbxD,KAA8BrC,GAAuC,aAAnB,OAAZkD,SAAY,IAAZA,QAAY,EAAZA,GAAcuB,cAA4B,CAChFhD,IAAkB,GAClBF,IAAqB,GACrBI,IAAsB,GAEtB,IAAIkE,EAAenB,GACnBmB,EAAaC,KAAO,kBAEpBnB,GAAUkB,MAEf,CAAC3C,KAEJK,qBAAU,WACN,GAAIvD,GACI8B,KACAC,IAAiB,IACD,OAAZmB,SAAY,IAAZA,QAAY,EAAZA,GAAcM,MACVN,KAA4B,OAAZA,SAAY,IAAZA,QAAY,EAAZA,GAAcM,IAAIC,mBAAmBC,QAAS,GAAG,CACjE,IAAIqC,EAAeC,KAAKC,MAAM/C,GAAaM,IAAIC,oBAE/CkB,GAAU,CACN,OAAU,+BACV,WAAc,CACV,GAAMzB,GAAaM,IAAI0C,uBACvB,YAAehD,GAAaM,IAAI2C,yBAChC,KAAQjD,GAAaM,IAAIsC,KACzB,yBAA4B5C,GAAaM,IAAI4C,yBAC7C,0BAA6BlD,GAAaM,IAAI4B,0BAC9C,gBAAmBlC,GAAaM,IAAI6C,gBACpC,cAAiBnD,GAAaM,IAAI8C,cAClC,MAASpD,GAAaM,IAAI5D,MAC1B,MAASsD,GAAaM,IAAI+C,MAC1B,MAASrD,GAAaM,IAAIgD,MAC1B,KAAQtD,GAAaM,IAAIiD,KACzB,OAAUvD,GAAaM,IAAIkD,OAC3B,UAAaxD,GAAaM,IAAIpD,UAC9B,2BAA6B,GAEjC,KAAQ,iBACR,QAAW,CACP,YAAe2F,EAAajC,YAC5B,UAAaiC,EAAaY,UAC1B,aAAgBZ,EAAaa,aAC7B,UAAab,EAAac,UAC1B,SAAYd,EAAae,SACzB,MAASf,EAAa5B,MACtB,MAAS4B,EAAa3B,MACtB,mBAAsB2B,EAAa1B,mBACnC,4BAA+B0B,EAAazB,4BAC5C,qBAAwByB,EAAaxB,qBACrC,SAAY,GACZ,aAAgB,GAChB,MAAS,GACT,QAAW,GACX,OAAU,GACV,UAAa,MAIrB5D,GAAiB,MAKlC,CAACmB,KAEJyB,qBAAU,WACN,IAAKZ,GAAWoE,SAAW/F,GACvB,GAAIsB,GACArB,IAAU,GACVkC,GAAS6D,YAAa,CAAEC,MAAM,EAAMC,SAAU,UAAWC,QAAS9D,GAAE+D,IAASC,wBAC7ElE,GAASyC,aAAa,IACtB/D,IAAY,GACZiB,GAAQa,KAAKC,IAAMC,eAChB,IAAKvB,GAAe,CACvB,IAAMgF,EAAejE,GAAEV,GAAW4E,MAAQ,yBAA0B,CAAEC,OAAQnE,GAAE+D,IAASK,UAAUC,sBACnGvE,GAAS6D,YAAa,CAAEC,MAAM,EAAMC,SAAU,QAASC,QAASG,KAChEnE,GAASyC,aAAa,IACtB/D,IAAY,MAGrB,CAACc,KAMJY,qBAAU,WACF3B,KACAuB,GAASyC,aAAa,IACtB/D,IAAY,MAEjB,CAACc,KAsEJY,qBAAU,WACDd,GAAwBsE,UAAY7F,KAAUE,KAC/C+B,GAASyC,aAAa,IAClBnD,GAAwBkF,MACxBxE,GAAS6D,YAAa,CAAEC,MAAM,EAAMC,SAAU,QAASC,QAASS,OAAOnF,GAAwB0E,aAE/FhE,GAAS6D,YAAa,CAAEC,MAAM,EAAMC,SAAU,UAAWC,QAAS,aAClErE,GAAQa,KAAKC,IAAMC,cAG5B,CAACpB,KAEiB,UAAjBnC,EACIkB,GAEI,sBAAKqG,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBxG,IAAkB,GAAQF,IAAqB,GAAQI,IAAsB,IAAU,SAC9K0B,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAASkB,uBAEjLtI,EACI,cAAC,IAAM,CACHuI,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,UAAU,EACVV,QAAS,WAAQjF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACpEG,GAAE+D,IAASuB,SAGb,cAAC,IAAM,CACHJ,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,SAAUjI,EACVuH,QAAS,WAAQxH,EAAgB,kBAAmB,SACtD8C,GAAE+D,IAASwB,iBAGrB,sBAAKL,UAAU,UAAS,UACpB,qBAAKA,UAAU,UACf,cAAC,IAAS,CACNM,SAAU,SAAC9D,GAAK,OAAKD,GAAWC,IAChC+D,MAAOzF,GAAE+D,IAAS2B,aAClBR,UAAU,mBAOzBjH,GAED,sBAAKuG,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBxG,IAAkB,GAAQF,IAAqB,GAAQI,IAAsB,IAAU,SAC9K0B,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAAS4B,uBAEjLhJ,EACI,cAAC,IAAM,CACHuI,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,UAAU,EACVV,QAAS,WAAQjF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACpEG,GAAE+D,IAASuB,SAGb,cAAC,IAAM,CACHJ,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,SAAU7H,EACVmH,QAAS,WAAQxH,EAAgB,kBAAmB,SACtD8C,GAAE+D,IAASwB,iBAGrB,sBAAKL,UAAU,UAAS,UACpB,qBAAKV,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACP3C,GAAY2C,EAAEiB,OAAOlE,OACrBlE,GAAmBmH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQM,eAAiBd,GAAOQ,QAAQQ,QAEzF8C,QAAQ,WACRM,MAAOzF,GAAE+D,IAAS8B,qBAG1B,qBAAKrB,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACPzC,GAAgByC,EAAEiB,OAAOlE,OACzBlE,GAAmBmH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQI,WAAaZ,GAAOQ,QAAQQ,QAErF8C,QAAQ,WACRM,MAAOzF,GAAE+D,IAAS+B,yBAG1B,qBAAKtB,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACPvC,GAASuC,EAAEiB,OAAOlE,OAClBlE,GAAmBmH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQI,WAAaZ,GAAOQ,QAAQM,eAErFgD,QAAQ,WACRM,MAAOzF,GAAE+D,IAASgC,2BAQrC1H,GAED,sBAAKmG,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBxG,IAAkB,GAAQF,IAAqB,GAAQI,IAAsB,IAAU,SAC9K0B,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAASiC,wBAEjLrJ,EACI,cAAC,IAAM,CACHuI,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,UAAU,EACVV,QAAS,WAAQjF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACpEG,GAAE+D,IAASuB,SAGb,cAAC,IAAM,CACHJ,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,SAAU3H,EACViH,QAAS,WAAQxH,EAAgB,kBAAmB,SACtD8C,GAAE+D,IAASwB,iBAGrB,sBAAKL,UAAU,UAAS,UACpB,qBAAKV,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACPvC,GAASuC,EAAEiB,OAAOlE,OAClBhE,GAAmBiH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQoE,UAAY5E,GAAOQ,QAAQwB,SAAWhC,GAAOQ,QAAQqE,YAE9Gf,QAAQ,WACRM,MAAOzF,GAAE+D,IAASoC,mBAG1B,qBAAK3B,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,IAtM3C,SAAoBjD,EAAeC,GAC/BvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQoE,QAAUvE,EAC3BE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAkMsBwE,CAAWzB,EAAEiB,OAAOlE,OACpBhE,GAAmB2D,GAAOQ,QAAQQ,QAAUsC,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQwB,SAAWhC,GAAOQ,QAAQqE,YAE5Gf,QAAQ,WACRM,MAAOzF,GAAE+D,IAASsC,qBAG1B,qBAAK7B,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,IAzM3C,SAAmBjD,EAAeC,GAC9BvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQwB,OAAS3B,EAC1BE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAqMsB0E,CAAU3B,EAAEiB,OAAOlE,OACnBhE,GAAmB2D,GAAOQ,QAAQQ,QAAUhB,GAAOQ,QAAQoE,UAAYtB,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQqE,YAE7Gf,QAAQ,WACRM,MAAOzF,GAAE+D,IAASwC,oBAG1B,qBAAK/B,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,IA5M3C,SAAsBjD,EAAeC,GACjCvE,EAAwB,KAAVsE,GACd,IAAIE,EAAWP,GACfO,EAASC,QAAQqE,UAAYxE,EAC7BE,EAASE,WAAWC,0BAA4B,GAChDT,GAAUM,GAwMsB4E,CAAa7B,EAAEiB,OAAOlE,OACtBhE,GAAmB2D,GAAOQ,QAAQQ,QAAUhB,GAAOQ,QAAQoE,UAAY5E,GAAOQ,QAAQwB,SAAWsB,EAAEiB,OAAOlE,QAE9GyD,QAAQ,WACRM,MAAOzF,GAAE+D,IAAS0C,mBAClBhE,KAAM,sBAQZ,eAAbzD,IAA8BrC,EAwE9BkB,GAED,sBAAK2G,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBnF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACxIG,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAASkB,uBACrL,cAAC,IAAM,CACHC,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,SAAUjI,EACVuH,QAASpC,GAAoB,SAC/BtC,GAAE+D,IAASwB,iBAEb,sBAAKL,UAAU,UAAS,UACpB,qBAAKA,UAAU,UACf,cAAC,IAAS,CACNM,SAAU,SAAC9D,GAAK,OAAKD,GAAWC,IAChC+D,MAAOzF,GAAE+D,IAAS2B,aAClBR,UAAU,mBAOzBnH,GAED,sBAAKyG,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBnF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACxIG,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAAS4B,uBACrL,sBAAKT,UAAU,UAAS,UACpB,qBAAKV,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACP3C,GAAY2C,EAAEiB,OAAOlE,OACrBlE,GAAmBmH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQM,eAAiBd,GAAOQ,QAAQQ,QAEzF8C,QAAQ,WACRM,MAAO,gBAGf,qBAAKjB,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACPzC,GAAgByC,EAAEiB,OAAOlE,OACzBlE,GAAmBmH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQI,WAAaZ,GAAOQ,QAAQQ,QAErF8C,QAAQ,WACRM,MAAO,oBAGf,qBAAKjB,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAS,CACN+I,MAAO,CAAE3I,MAAO,QAChB2J,SAAU,SAACb,GACPvC,GAASuC,EAAEiB,OAAOlE,OAClBlE,GAAmBmH,EAAEiB,OAAOlE,QAAUL,GAAOQ,QAAQI,WAAaZ,GAAOQ,QAAQM,eAErFgD,QAAQ,WACRM,MAAO,gBAInB,qBAAKjB,MAAO,CAAE3I,MAAO,OAAQJ,QAAS,YAAa,SAC/C,cAAC,IAAM,CACHiJ,QAAS,WAAQpC,MACjB4C,UAAW1F,GAAQ1D,QACnBsJ,SAAU7H,EACV4H,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAAS2C,qBAQM,YAAnB,OAAZ7G,SAAY,IAAZA,QAAY,EAAZA,GAAcuB,cAEV,sBAAKoD,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBnF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACxIG,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAASkB,uBAEjLtI,EACI,cAAC,IAAM,CACHuI,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,UAAU,EACVV,QAAS,WAAQjF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACpEG,GAAE+D,IAASuB,SAGb,cAAC,IAAM,CACHJ,UAAW1F,GAAQpE,aACnB+J,QAAQ,YACR5I,MAAM,UACN6I,SAAUjI,EACVuH,QAAS,WAAQxH,EAAgB,kBAAmB,SACtD8C,GAAE+D,IAASwB,iBAGrB,sBAAKL,UAAU,UAAS,UACpB,qBAAKA,UAAU,UACf,cAAC,IAAS,CACNM,SAAU,SAAC9D,GAAK,OAAKD,GAAWC,IAChC+D,MAAOzF,GAAE+D,IAAS2B,aAClBR,UAAU,gBAKJ,eAAblG,IAA6BrC,EAC1B,sBAAK6H,MAAO,CAAE3I,MAAO,OAAQ8K,WAAY,SAAUC,QAAS,QAAS,UACjE,qBAAKpC,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WACL5G,IAAU,GACV,IAAI8D,EAAWP,GACfO,EAASa,KAAO,WAChBnB,GAAUM,IAEdsD,UAAW1F,GAAQ1D,QACnBsJ,SAAU/H,EACV8H,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAAS8C,uBAGjB,qBAAKrC,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WAAQ1G,IAAa,IAC9BkH,UAAW1F,GAAQ1D,QACnBsJ,SAAU/H,EACV8H,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAAS+C,uBAInB,MAOd,qBAAKtC,MAAO,CAAE3I,MAAO,QAAS,SAC1B,8BACI,gCACI,qBAAK2I,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,UAAWhB,aAAc,IAAK,SAAEyE,GAAE+D,IAASgD,qBACpH,qBAAKvC,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,QAAS,SAAEyD,GAAE+D,IAASiD,sBAC/F,sBAAKxC,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,UAAWqK,QAAS,QAAS,UAClG,cAAC,IAAS,CACN1B,UAAW1F,GAAQzD,QACnBoJ,QAAQ,WACRlJ,OAAO,SACPgL,WAAS,EACTC,KAAK,QACLC,aAAc9F,GAAOQ,QAAQ2B,UAC7BiC,MAAOzF,GAAE+D,IAASP,WAClB4D,KAAK,YACL9C,QAASnD,GAAOqC,UAChB6D,WAAYlG,GAAOqC,UACnBgC,SAAU,SAACb,GACP,IAAI/C,EAAQ,eAAQP,IACpBO,EAASC,QAAQ2B,UAAYmB,EAAEiB,OAAOlE,MACtCJ,GAAUM,GACVtE,GAAmBqH,EAAEiB,OAAOlE,QAAYL,GAAOQ,QAAQyB,YAAgBjC,GAAOQ,QAAQ0B,eAAmBlC,GAAOQ,QAAQ4B,WAAepC,GAAOQ,QAAQf,QAC7IO,GAAOQ,QAAQd,QAAYM,GAAOQ,QAAQb,qBAAyBK,GAAOQ,QAAQZ,8BAAkCI,GAAOQ,QAAQX,uBAEhJQ,MAAOL,GAAOQ,QAAQ2B,UACtB4B,SAAUzI,IAEd,cAAC,IAAS,CACNuI,UAAW1F,GAAQtD,QACnBiJ,QAAQ,WACRlJ,OAAO,SACPgL,WAAS,EACTC,KAAK,QACLC,aAAc9F,GAAOQ,QAAQ4B,SAC7BgC,MAAOzF,GAAE+D,IAASN,UAClB2D,KAAK,WACL9C,QAASnD,GAAOsC,SAChB4D,WAAYlG,GAAOsC,SACnB+B,SAAU,SAACb,GACP,IAAI/C,EAAQ,eAAQP,IACpBO,EAASC,QAAQ4B,SAAWkB,EAAEiB,OAAOlE,MACrCJ,GAAUM,GACVtE,GAAmBqH,EAAEiB,OAAOlE,QAAYL,GAAOQ,QAAQyB,YAAgBjC,GAAOQ,QAAQ0B,eAAmBlC,GAAOQ,QAAQ2B,YAAgBnC,GAAOQ,QAAQf,QAC9IO,GAAOQ,QAAQd,QAAYM,GAAOQ,QAAQb,qBAAyBK,GAAOQ,QAAQZ,8BAAkCI,GAAOQ,QAAQX,uBAEhJQ,MAAOL,GAAOQ,QAAQ4B,SACtB2B,SAAUzI,OAGlB,sBAAK6H,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,UAAWqK,QAAS,QAAS,UAClG,cAAC,IAAS,CACN1B,UAAW1F,GAAQzD,QACnByI,MAAO,CAAEjJ,aAAc,GACvB4J,QAAQ,WACRlJ,OAAO,SACPgL,WAAS,EACTC,KAAK,QACLzB,MAAOzF,GAAE+D,IAASjD,OAClBsG,KAAK,QACLD,aAAc9F,GAAOQ,QAAQf,MAC7BwD,QAASnD,GAAOL,MAChBuG,WAAYlG,GAAOL,MACnB0E,SAAU,SAACb,GACP,IAAI/C,EAAQ,eAAQP,IACpBO,EAASC,QAAQf,MAAQ6D,EAAEiB,OAAOlE,MAClCJ,GAAUM,GACVtE,GAAmBqH,EAAEiB,OAAOlE,QAAYL,GAAOQ,QAAQyB,YAAgBjC,GAAOQ,QAAQ0B,eAAmBlC,GAAOQ,QAAQ2B,YAAgBnC,GAAOQ,QAAQ4B,WAC9IpC,GAAOQ,QAAQd,QAAYM,GAAOQ,QAAQb,qBAAyBK,GAAOQ,QAAQZ,8BAAkCI,GAAOQ,QAAQX,uBAEhJQ,MAAOL,GAAOQ,QAAQf,MACtBsE,SAAUzI,IAEd,cAACP,EAAW,CACR8I,UAAW1F,GAAQtD,QACnBiJ,QAAQ,WACRlJ,OAAO,SACPiL,KAAK,QACLI,kBAAkB,EAClB5F,MAAOL,GAAOQ,QAAQd,MACtBuD,QAASnD,GAAOJ,MAChBsG,WAAYlG,GAAOJ,MACnB0E,MAAOzF,GAAE+D,IAAShD,OAClBqG,KAAK,QACLH,WAAS,EACTM,eAAgB,KAChB/B,SAAU,SAACb,GACP,IAAI/C,EAAQ,eAAQP,IACpBO,EAASC,QAAQd,MAAQ4D,EACzBrD,GAAUM,GACVtE,GAAmBqH,IAAQtD,GAAOQ,QAAQyB,YAAgBjC,GAAOQ,QAAQ0B,eAAmBlC,GAAOQ,QAAQ2B,YAAgBnC,GAAOQ,QAAQ4B,WACjIpC,GAAOQ,QAAQf,QAAYO,GAAOQ,QAAQb,qBAAyBK,GAAOQ,QAAQZ,8BAAkCI,GAAOQ,QAAQX,uBAEhJkE,SAAUzI,OAGlB,qBAAK6H,MAAO,CAAEM,UAAW,OAAQpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,OAAQlB,WAAY,OAAQE,aAAc,QAAS,SAAEyE,GAAE+D,IAASyD,kBACvI,qBAAKhD,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,UAAWhB,aAAc,IAAK,SAAEyE,GAAE+D,IAAS0D,uBACpH,qBAAKjD,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,UAAWqK,QAAS,QAAS,SAClG,cAAC,IAAS,CACN1B,UAAW1F,GAAQrD,QACnBgJ,QAAQ,WACRlJ,OAAO,SACPgL,WAAS,EACTC,KAAK,QACLC,aAAc9F,GAAOQ,QAAQZ,4BAC7BwE,MAAOzF,GAAE+D,IAAS2D,oCAClBN,KAAK,8BACL9C,QAASnD,GAAOF,4BAChBoG,WAAYlG,GAAOF,4BACnBuE,SAAU,SAACb,GACP,IAAI/C,EAAQ,eAAQP,IACpBO,EAASC,QAAQZ,4BAA8B0D,EAAEiB,OAAOlE,MACxDJ,GAAUM,GACVtE,GAAmBqH,EAAEiB,OAAOlE,QAAYL,GAAOQ,QAAQyB,YAAgBjC,GAAOQ,QAAQ0B,eAAmBlC,GAAOQ,QAAQ2B,YAAgBnC,GAAOQ,QAAQ4B,WAC9IpC,GAAOQ,QAAQf,QAAYO,GAAOQ,QAAQd,QAAYM,GAAOQ,QAAQb,qBAAyBK,GAAOQ,QAAQX,uBAE1HQ,MAAOL,GAAOQ,QAAQZ,4BACtBmE,SAAUzI,MAGlB,sBAAK6H,MAAO,CAAEM,UAAW,OAAQpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,OAAQlB,WAAY,OAAQE,aAAc,QAAS,UACrHyE,GAAE+D,IAAS4D,sBAAwB,IACpC,cAAC,IAAI,CAAClD,KAAK,+CAA8C,SACpDzE,GAAE+D,IAAS6D,4BAGpB,qBAAKpD,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,UAAWqK,QAAS,QAAS,SAClG,cAAC,IAAS,CACN1B,UAAW1F,GAAQrD,QACnBgJ,QAAQ,WACRlJ,OAAO,SACPgL,WAAS,EACTC,KAAK,QACLC,aAAc9F,GAAOQ,QAAQX,qBAC7BuE,MAAOzF,GAAE+D,IAAS7C,sBAClBkG,KAAK,uBACL9C,QAASnD,GAAOD,qBAChBmG,WAAYlG,GAAOD,qBACnBsE,SAAU,SAACb,GACP,IAAI/C,EAAQ,eAAQP,IACpBO,EAASC,QAAQX,qBAAuByD,EAAEiB,OAAOlE,MACjDJ,GAAUM,GACVtE,GAAmBqH,EAAEiB,OAAOlE,QAAYL,GAAOQ,QAAQyB,YAAgBjC,GAAOQ,QAAQ0B,eAAmBlC,GAAOQ,QAAQ2B,YAAgBnC,GAAOQ,QAAQ4B,WAC9IpC,GAAOQ,QAAQf,QAAYO,GAAOQ,QAAQd,QAAYM,GAAOQ,QAAQb,qBAAyBK,GAAOQ,QAAQZ,8BAE1HS,MAAOL,GAAOQ,QAAQX,qBACtBkE,SAAUzI,MAGlB,qBAAK6H,MAAO,CAAEM,UAAW,OAAQpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,OAAQlB,WAAY,OAAQE,aAAc,QAAS,SAAEyE,GAAE+D,IAAS8D,wBACvI,qBAAKrD,MAAO,CAAEM,UAAW,OAAQpJ,WAAY,IAAKC,SAAU,GAAIY,MAAO,OAAQlB,WAAY,OAAQE,aAAc,QAAS,SAAC,kCAAKyE,GAAE+D,IAAS+D,wBAC3I,sBAAKtD,MAAO,CAAE3I,MAAO,OAAQ8K,WAAY,SAAUC,QAAS,QAAS,UACjE,qBAAKpC,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SACzCU,EACG,cAAC,IAAM,CACH+H,QAAS,WAAQjF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAClDqF,UAAW1F,GAAQ1D,QACnBsJ,UAAU,EACVD,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAASuB,SAGb,cAAC,IAAM,CACHZ,QAAS,WA5qBjDxH,EAAgB,kBA6qBwBgI,UAAW1F,GAAQ1D,QACnBsJ,SAAU/H,EACV8H,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAASgE,UAKH,eAAb/I,IAA6BrC,EAC1B,eAAC,WAAQ,WACL,qBAAK6H,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WACL5G,IAAU,GACV,IAAI8D,EAAWP,GACfO,EAASa,KAAO,WAChBnB,GAAUM,IAEdsD,UAAW1F,GAAQ1D,QACnBsJ,SAAU/H,EACV8H,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAAS8C,uBAGjB,qBAAKrC,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WAAQ1G,IAAa,IAC9BkH,UAAW1F,GAAQ1D,QACnBsJ,SAAU/H,EACV8H,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAAS+C,uBAInB,aArb9B,sBAAKtC,MAAO,CAAE3I,MAAO,QAAS,UAC1B,qBAAK2I,MAAO,CAAE3I,MAAO,QAAS,SAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkBnF,GAAQa,KAAKC,IAAM8E,aAAcxF,KAAgB,SACxIG,GAAE+D,IAASc,eADiB,gBAKzC,sBAAKL,MAAO,CAAE3I,MAAO,OAAQP,UAAW,OAAQqL,WAAY,SAAUC,QAAS,QAAS,UACpF,qBAAKpC,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WACLtG,IAAkB,GAClBF,IAAqB,GACrBI,IAAsB,GAEtB,IAAIkE,EAAenB,GACnBmB,EAAaC,KAAO,WAEpBnB,GAAUkB,IAEd0C,UAAW1F,GAAQ1D,QACnBsJ,UAAU,EACVD,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAASiE,uBAGjB,qBAAKxD,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WACLtG,IAAkB,GAClBF,IAAqB,GACrBI,IAAsB,GAEtB,IAAIkE,EAAenB,GACnBmB,EAAaC,KAAO,uBAEpBnB,GAAUkB,IAEd0C,UAAW1F,GAAQ1D,QACnBsJ,UAAU,EACVD,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAASkE,oBAGjB,qBAAKzD,MAAO,CAAExI,KAAM,IAAKC,OAAQ,YAAa,SAC1C,cAAC,IAAM,CACHyI,QAAS,WACLtG,IAAkB,GAClBF,IAAqB,GACrBI,IAAsB,GAEtB,IAAIkE,EAAenB,GACnBmB,EAAaC,KAAO,kBAEpBnB,GAAUkB,IAEd0C,UAAW1F,GAAQ1D,QACnBsJ,UAAU,EACVD,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAASmE,2BAkY7B,sBAAK1D,MAAO,CAAE3I,MAAO,QAAS,UAC1B,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAACU,MAAM,gBAAiCkI,KAAK,IAAIC,QAAS,SAACC,GAAQA,EAAEC,iBAAkB1H,EAAgB,UAAW,SAClH8C,GAAE+D,IAASc,eADiB,cAIrC,gCACI,qBAAKL,MAAO,CAAEM,UAAW,SAAUpJ,WAAY,OAAQC,SAAU,MAAOY,MAAO,UAAWd,QAAS,OAAQJ,WAAY,OAAQ0J,YAAa,OAAQC,SAAU,SAAU,SAAEhF,GAAE+D,IAASoE,wBACrL,sBAAKjD,UAAU,UAAS,UACpB,qBAAKA,UAAU,UACf,cAAC,IAAS,CACNM,SAAU,SAAC9D,GAAK,OA/tBxC,SAAsBA,GAClB5E,EAAwB,KAAV4E,GACd,IAAIE,EAAWP,GACfO,EAASE,WAAWsG,YAAc1G,EAClCJ,GAAUM,GA2tB+ByG,CAAa3G,IAClC+D,MAAOzF,GAAE+D,IAASuE,iBAClBpD,UAAU,QACVqD,aAAclH,GAAOS,WAAWsG,iBAGxC,sBAAKlD,UAAU,UAAS,UACpB,qBAAKA,UAAU,UACf,sBAAKA,UAAU,QAAO,UAClB,cAAC,IAAG,CAACxJ,WAAY,IAAK8M,WAAW,OAAO7M,SAAU,GAAI8M,GAAI,EAAGlM,MAAM,cAAa,SAC3EyD,GAAE+D,IAAS2E,oBAEhB,sBAAKlE,MAAO,CAAEoC,QAAS,OAAQ+B,eAAgB,eAAgBhC,WAAY,UAAW,UAClF,cAAC,KAAY,CAACnC,MAAO,CAAEoE,KAAK,GAAD,OAAK7L,GAAalB,MAAO,WACpD,cAAC,IAAU,CACPgN,IAAKxH,GAAOS,WAAW/E,UACvByI,SAAU,SAAAb,GACNrD,IAAU,SAAAwH,GAAI,kCACPA,GAAI,IACPhH,WAAW,2BAAMgH,EAAKhH,YAAU,IAAE/E,UAAW4H,EAAEkE,IAAKtM,MAAOoI,EAAEkE,WAEjE7L,EAAa2H,EAAEkE,iBAMnC,qBAAKrE,MAAO,CAAEuE,YAAa,OAAQ,SAC/B,cAAC,IAAM,CACHrE,QAAS,YA13BhC,WAEuB,yBAw3BiBgC,IACjBxB,UAAW1F,GAAQhE,OACnB4J,SAAUvI,GAAcyC,GAAWoE,QACnCyB,QAAQ,YACR5I,MAAM,UAAS,SACjByD,GAAE+D,IAAS2C,sBAStBhK,a,wxBCziCFsM,EAAkB,SAACC,EAAqBC,GAAa,MAAmB,CACjFC,QAAS,kBAAMC,IAAgBC,YAAYJ,EAAaC,IACxDI,MAAO,CACH5F,QAAS6F,IAAY/I,SACrBgJ,QAASD,IAAYE,iBACrBC,QAASH,IAAYI,kBAEzBlH,KAAM,OAaGjB,EAAgB,SAACoI,GAAyB,MAAmB,CACtET,QAAS,kBAAMC,IAAgBS,WAAWD,IAC1CN,MAAO,CACH5F,QAAS6F,IAAY/I,SACrBgJ,QAASD,IAAYO,uBACrBJ,QAASH,IAAYI,kBAEzBlH,KAAM,OAGGpD,EAAkB,SAACuK,GAAyB,MAAmB,CACxET,QAAS,kBAAMC,IAAgB/J,gBAAgBuK,IAC/CN,MAAO,CACH5F,QAAS6F,IAAYQ,gBACrBP,QAASD,IAAYS,wBACrBN,QAASH,IAAYU,yBAEzBxH,KAAM,OAGGyH,EAAgB,SAACN,GAAyB,MAAmB,CACtET,QAAS,kBAAMC,IAAgBe,WAAWP,IAC1CN,MAAO,CACH5F,QAAS6F,IAAY/I,SACrBgJ,QAASD,IAAYO,uBACrBJ,QAASH,IAAYI,kBAEzBlH,KAAM,OAGG2H,EAAmB,SAACR,GAAyB,MAAmB,CACzET,QAAS,kBAAMC,IAAgBgB,iBAAiBR,IAChDN,MAAO,CACH5F,QAAS6F,IAAYc,kBACrBb,QAASD,IAAYe,0BACrBZ,QAASH,IAAYgB,2BAEzB9H,KAAM,OASG+H,EAAiB,SAACC,GAAkC,MAAmB,CAChFtB,QAAQ,WAAD,4BAAE,kDAAA5H,EAAA,sDASe,GARdmJ,EAAeD,EAAQ5I,QAAS8I,UAAUC,WAC1CC,EAAiBJ,EAAQ5I,QAAS8I,UAAUG,WAC5CC,EAAcN,EAAQ5I,QAAS8I,UAAUK,QACzCC,EAAiBR,EAAQ5I,QAASqJ,OAAOC,WAE3CC,EAAW,GACXC,EAAa,GACbC,EAAU,GACVC,EAAa,IAEbb,EAAa,CAAD,gBAEuC,OAD7Cc,EAAK,IAAIC,UACZC,OAAO,OAAQhB,EAAcA,EAAatD,MAAM,UACjCuE,IAAcC,WAAWJ,GAAG,QAA9CJ,EAAQ,OAAwCS,KAAU,IAAE,KAAF,OAG1DhB,EAAe,CAAD,gBAEyC,OADjDW,EAAK,IAAIC,UACZC,OAAO,OAAQb,EAAgBA,EAAezD,MAAM,UACnCuE,IAAcC,WAAWJ,GAAG,QAAhDH,EAAU,OAAwCQ,KAAU,IAAE,KAAF,OAG5Dd,EAAY,CAAD,gBAEsC,OAD3CS,EAAK,IAAIC,UACZC,OAAO,OAAQX,EAAaA,EAAY3D,MAAM,UAChCuE,IAAcC,WAAWJ,GAAG,QAA7CF,EAAO,OAAwCO,KAAU,IAAE,KAAF,OAGzDZ,EAAe,CAAD,gBAEyC,OADjDO,EAAK,IAAIC,UACZC,OAAO,OAAQT,EAAgBA,EAAe7D,MAAM,UACnCuE,IAAcC,WAAWJ,GAAG,QAAhDD,EAAU,OAAwCM,KAAU,IAAE,KAAF,GAMhB,OAHhDpB,EAAQ5I,QAAS8I,UAAUC,WAAaQ,EACxCX,EAAQ5I,QAAS8I,UAAUG,WAAaO,EACxCZ,EAAQ5I,QAAS8I,UAAUK,QAAUM,EACrCb,EAAQ5I,QAASqJ,OAAOC,WAAaI,EAAW,kBAEzCnC,IAAgBS,WAAWY,IAAQ,4CAC7C,kDAzCO,GA0CRnB,MAAO,CACH5F,QAAS6F,IAAYuC,eACrBpC,QAASH,IAAYwC,uBACrBvC,QAASD,IAAYyC,wBAEzBvJ,KAAM,OAGGwJ,EAAqB,WAAH,MAAU,CAAExJ,KAAM8G,IAAY2C,uBAEhDC,EAAc,SAAC1B,EAA+C2B,GAAoB,MAAmB,CAC9GjD,QAAQ,WAAD,4BAAE,4CAAA5H,EAAA,yDACe,SAAhB6K,GAA0C,kBAAhBA,EAA+B,iBAKf,GAJpCvK,EAAU4I,EAAQ5I,QACpBuJ,EAAWvJ,EAAQ8I,UAAUC,WAC7BS,EAAaxJ,EAAQ8I,UAAUG,WAC/BQ,EAAUzJ,EAAQ8I,UAAUK,QAC5BO,EAAa1J,EAAQqJ,OAAOC,YAE5BC,GAAgC,kBAAbA,EAAqB,iBAEG,OADrCI,EAAK,IAAIC,UACZC,OAAO,OAAQN,EAAUA,EAAShE,MAAM,UACzBuE,IAAcC,WAAWJ,GAAG,QAA9CJ,EAAQ,OAAwCS,KAAU,gBAG1DR,GAAoC,kBAAfA,EAAuB,iBAEG,OADzCG,EAAK,IAAIC,UACZC,OAAO,OAAQL,EAAYA,EAAWjE,MAAM,UAC3BuE,IAAcC,WAAWJ,GAAG,QAAhDH,EAAU,OAAwCQ,KAAU,gBAG5DP,GAA8B,kBAAZA,EAAoB,iBAEG,OADnCE,EAAK,IAAIC,UACZC,OAAO,OAAQJ,EAASA,EAAQlE,MAAM,UACxBuE,IAAcC,WAAWJ,GAAG,QAA7CF,EAAO,OAAwCO,KAAU,gBAGzDN,GAAoC,kBAAfA,EAAuB,iBAEG,OADzCC,EAAK,IAAIC,UACZC,OAAO,OAAQH,EAAYA,EAAWnE,MAAM,UAC3BuE,IAAcC,WAAWJ,GAAG,QAAhDD,EAAU,OAAwCM,KAAU,YAMA,OAH/DpB,EAAQ5I,QAAwB8I,UAAUC,WAAaQ,EACvDX,EAAQ5I,QAAwB8I,UAAUG,WAAaO,EACvDZ,EAAQ5I,QAAwB8I,UAAUK,QAAUM,EACpDb,EAAQ5I,QAAwBqJ,OAAOC,WAAaI,EAAW,kBAEzDnC,IAAgBiD,SAAS5B,IAAQ,iCAErCkB,IAAcW,KAAK7B,IAAQ,4CACrC,kDAxCO,GAyCRnB,MAAO,CACH5F,QAAS6F,IAAYgD,aACrB7C,QAASH,IAAYiD,qBACrBhD,QAASD,IAAYkD,sBAEzBhK,KAAM,OAGGiK,EAAmB,WAAH,MAAU,CAAEjK,KAAM8G,IAAYoD,qBAE9CC,EAAmB,SAAC3D,EAAqBC,GAAa,MAAmB,CAClFC,QAAS,kBAAMC,IAAgByD,eAAe5D,EAAaC,IAC3DI,MAAO,CACH5F,QAAS6F,IAAYuD,eACrBtD,QAASD,IAAYwD,uBACrBrD,QAASH,IAAYyD,wBAEzBvK,KAAM,OAGGwK,EAAwB,WAAH,MAAU,CAAExK,KAAM8G,IAAY2D,uBAEnDC,EAAoB,SAAClE,EAAqBC,GAAa,MAAmB,CACnFC,QAAS,kBAAMC,IAAgByD,eAAe5D,EAAaC,IAC3DI,MAAO,CACH5F,QAAS6F,IAAY6D,gBACrB5D,QAASD,IAAY8D,wBACrB3D,QAASH,IAAY+D,yBAEzB7K,KAAM,OAGG8K,EAAyB,WAAH,MAAU,CAAE9K,KAAM8G,IAAYiE,wBAEpDC,EAAoB,SAACxE,EAAqBC,GAAa,MAAmB,CACnFC,QAAS,kBAAMC,IAAgByD,eAAe5D,EAAaC,IAC3DI,MAAO,CACH5F,QAAS6F,IAAYmE,gBACrBlE,QAASD,IAAYoE,wBACrBjE,QAASH,IAAYqE,yBAEzBnL,KAAM,OAGGoL,EAAyB,WAAH,MAAU,CAAEpL,KAAM8G,IAAYuE,wBAEpDC,EAAsB,SAAC9E,EAAqBC,GAAa,MAAmB,CACrFC,QAAS,kBAAMC,IAAgByD,eAAe5D,EAAaC,IAC3DI,MAAO,CACH5F,QAAS6F,IAAYyE,kBACrBxE,QAASD,IAAY0E,0BACrBvE,QAASH,IAAY2E,2BAEzBzL,KAAM,OAGG0L,EAA2B,WAAH,MAAU,CAAE1L,KAAM8G,IAAY6E,0BAEtDC,EAAsB,SAACC,GAAY,MAAmB,CAC/DnF,QAAS,kBAAMC,IAAgBiF,oBAAoBC,IACnDhF,MAAO,CACHI,QAASH,IAAYgF,6BACrB7K,QAAS6F,IAAYiF,qBACrBhF,QAASD,IAAYkF,8BAEzBhM,KAAM,OAKGiM,EAAc,SAACJ,GAAY,MAAmB,CACvDnF,QAAS,kBAAMC,IAAgBsF,YAAYJ,IAC3ChF,MAAO,CACHI,QAASH,IAAYoF,qBACrBjL,QAAS6F,IAAYqF,aACrBpF,QAASD,IAAYsF,sBAEzBpM,KAAM,OAKGqM,EAAiB,SAACR,GAAY,MAAmB,CAC1DnF,QAAS,kBAAMC,IAAgB0F,eAAeR,IAC9ChF,MAAO,CACHI,QAASH,IAAYwF,wBACrBrL,QAAS6F,IAAYyF,gBACrBxF,QAASD,IAAY0F,yBAEzBxM,KAAM,OAKGyM,EAAe,SAACZ,GAAY,MAAmB,CACxDnF,QAAS,kBAAMC,IAAgB8F,aAAaZ,IAC5ChF,MAAO,CACH5F,QAAS6F,IAAY4F,WACrB3F,QAASD,IAAY6F,mBACrB1F,QAASH,IAAY8F,oBAEzB5M,KAAM","file":"static/js/99.9ad67e22.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, Fragment, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Box, TextField } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, ColorInput } from \"components\";\r\nimport { styled } from '@material-ui/core/styles';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport paths from \"common/constants/paths\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { insertChannel, activateChannel } from \"store/channel/actions\";\r\nimport { WhatsappIcon } from \"icons\";\r\nimport { Dictionary } from \"@types\";\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    centerbutton: {\r\n        marginLeft: \"calc(50% - 96px)\",\r\n        marginTop: \"30px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    button2: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"100%\",\r\n    },\r\n    fields1: {\r\n        flex: 1,\r\n        margin: \"15px\"\r\n    },\r\n    fields2: {\r\n        flex: 1,\r\n    },\r\n    fields3: {\r\n        flex: 1,\r\n        marginLeft: \"15px\"\r\n    },\r\n}));\r\n\r\nconst CssPhonemui = styled(MuiPhoneNumber)({\r\n    '& label.Mui-focused': {\r\n        color: '#7721ad',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#7721ad',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#7721ad',\r\n        },\r\n    },\r\n});\r\n\r\ninterface whatsAppData {\r\n    typeWhatsApp?: string;\r\n    row?: any;\r\n}\r\n\r\nexport const ChannelAddWhatsapp: FC<{ edit: boolean }> = ({ edit }) => {\r\n    const [channelreg, setChannelreg] = useState(true);\r\n    const [coloricon, setcoloricon] = useState(\"#4AC959\");\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [disablebutton, setdisablebutton] = useState(true);\r\n    const [disablebutton2, setdisablebutton2] = useState(true);\r\n    const [disablebutton3, setdisablebutton3] = useState(true);\r\n    const [setins, setsetins] = useState(false);\r\n    const [set360, setset360] = useState(false);\r\n    const [setsmooch, setsetsmooch] = useState(false);\r\n    const [setRegisterSmooch, setSetRegisterSmooch] = useState(false);\r\n    const [setRegister360, setSetRegister360] = useState(false);\r\n    const [setRegisterGupshup, setSetRegisterGupshup] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [setParameters, setSetParameters] = useState(true);\r\n\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const roledesc = user?.roledesc || \"\";\r\n    const executeResult = useSelector(state => state.channel.successinsert);\r\n    const executeActivationResult = useSelector(state => state.channel.activateChannel);\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n\r\n    const classes = useChannelAddStyles();\r\n    const history = useHistory();\r\n    const location = useLocation<whatsAppData>();\r\n\r\n    const whatsAppData = location.state as whatsAppData | null;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if (edit && !whatsAppData?.row) {\r\n            history.push(paths.CHANNELS);\r\n        } else if (edit && whatsAppData?.row && whatsAppData?.row.servicecredentials.length === 0) {\r\n            history.push(paths.CHANNELS);\r\n        }\r\n    }, [history]);\r\n\r\n    const [errors] = useState<Dictionary>({\r\n        accesstoken: \"\",\r\n        brandName: \"\",\r\n        brandAddress: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        customerfacebookid: \"\",\r\n        phonenumberwhatsappbusiness: \"\",\r\n        nameassociatednumber: \"\",\r\n    });\r\n\r\n    const [fields, setFields] = useState({\r\n        \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n        \"parameters\": {\r\n            \"id\": 0,\r\n            \"description\": \"\",\r\n            \"type\": \"\",\r\n            \"communicationchannelsite\": \"\",\r\n            \"communicationchannelowner\": \"\",\r\n            \"chatflowenabled\": true,\r\n            \"integrationid\": \"\",\r\n            \"color\": \"\",\r\n            \"icons\": \"\",\r\n            \"other\": \"\",\r\n            \"form\": \"\",\r\n            \"apikey\": \"\",\r\n            \"coloricon\": \"#4AC959\",\r\n            \"voximplantcallsupervision\": false\r\n        },\r\n        \"type\": whatsAppData?.typeWhatsApp === \"DIALOG\" ? \"WHATSAPP\" : \"WHATSAPPSMOOCH\",\r\n        \"service\": {\r\n            \"accesstoken\": \"\",\r\n            \"brandname\": \"\",\r\n            \"brandaddress\": \"\",\r\n            \"firstname\": \"\",\r\n            \"lastname\": \"\",\r\n            \"email\": \"\",\r\n            \"phone\": \"\",\r\n            \"customerfacebookid\": \"\",\r\n            \"phonenumberwhatsappbusiness\": \"\",\r\n            \"nameassociatednumber\": \"\",\r\n            \"apikeyid\": \"\",\r\n            \"apikeysecret\": \"\",\r\n            \"appid\": \"\",\r\n            \"appname\": \"\",\r\n            \"apikey\": \"\",\r\n            \"appnumber\": \"\",\r\n        }\r\n    })\r\n\r\n    if (typeof location?.state === 'undefined' || !location?.state) {\r\n        history.push(paths.CHANNELS);\r\n    }\r\n\r\n    async function finishreg() {\r\n        setsetins(true);\r\n        dispatch(insertChannel(fields));\r\n        setWaitSave(true);\r\n        setViewSelected(\"main\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (roledesc !== \"SUPERADMIN\" && !edit && whatsAppData?.typeWhatsApp === \"DIALOG\") {\r\n            setSetRegister360(true);\r\n            setSetRegisterSmooch(false);\r\n            setSetRegisterGupshup(false);\r\n\r\n            let partialField = fields;\r\n            partialField.type = \"DIALOG\";\r\n\r\n            setFields(partialField);\r\n        }\r\n\r\n        if (roledesc !== \"SUPERADMIN\" && !edit && whatsAppData?.typeWhatsApp === \"SMOOCH\") {\r\n            setSetRegister360(false);\r\n            setSetRegisterSmooch(true);\r\n            setSetRegisterGupshup(false);\r\n\r\n            let partialField = fields;\r\n            partialField.type = \"WHATSAPPSMOOCHINSERT\";\r\n\r\n            setFields(partialField);\r\n        }\r\n\r\n        if (roledesc !== \"SUPERADMIN\" && !edit && whatsAppData?.typeWhatsApp === \"GUPSHUP\") {\r\n            setSetRegister360(false);\r\n            setSetRegisterSmooch(false);\r\n            setSetRegisterGupshup(true);\r\n\r\n            let partialField = fields;\r\n            partialField.type = \"WHATSAPPGUPSHUP\";\r\n\r\n            setFields(partialField);\r\n        }\r\n    }, [whatsAppData])\r\n\r\n    useEffect(() => {\r\n        if (edit) {\r\n            if (setParameters) {\r\n                setSetParameters(false);\r\n                if (whatsAppData?.row) {\r\n                    if (whatsAppData && whatsAppData?.row.servicecredentials.length > 0) {\r\n                        var serviceField = JSON.parse(whatsAppData.row.servicecredentials);\r\n\r\n                        setFields({\r\n                            \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                            \"parameters\": {\r\n                                \"id\": whatsAppData.row.communicationchannelid,\r\n                                \"description\": whatsAppData.row.communicationchanneldesc,\r\n                                \"type\": whatsAppData.row.type,\r\n                                \"communicationchannelsite\": whatsAppData.row.communicationchannelsite,\r\n                                \"communicationchannelowner\": whatsAppData.row.communicationchannelowner,\r\n                                \"chatflowenabled\": whatsAppData.row.chatflowenabled,\r\n                                \"integrationid\": whatsAppData.row.integrationid,\r\n                                \"color\": whatsAppData.row.color,\r\n                                \"icons\": whatsAppData.row.icons,\r\n                                \"other\": whatsAppData.row.other,\r\n                                \"form\": whatsAppData.row.form,\r\n                                \"apikey\": whatsAppData.row.apikey,\r\n                                \"coloricon\": whatsAppData.row.coloricon,\r\n                                \"voximplantcallsupervision\": false\r\n                            },\r\n                            \"type\": \"WHATSAPPSMOOCH\",\r\n                            \"service\": {\r\n                                \"accesstoken\": serviceField.accesstoken,\r\n                                \"brandname\": serviceField.brandname,\r\n                                \"brandaddress\": serviceField.brandaddress,\r\n                                \"firstname\": serviceField.firstname,\r\n                                \"lastname\": serviceField.lastname,\r\n                                \"email\": serviceField.email,\r\n                                \"phone\": serviceField.phone,\r\n                                \"customerfacebookid\": serviceField.customerfacebookid,\r\n                                \"phonenumberwhatsappbusiness\": serviceField.phonenumberwhatsappbusiness,\r\n                                \"nameassociatednumber\": serviceField.nameassociatednumber,\r\n                                \"apikeyid\": \"\",\r\n                                \"apikeysecret\": \"\",\r\n                                \"appid\": \"\",\r\n                                \"appname\": \"\",\r\n                                \"apikey\": \"\",\r\n                                \"appnumber\": \"\",\r\n                            }\r\n                        });\r\n\r\n                        setdisablebutton(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [setParameters])\r\n\r\n    useEffect(() => {\r\n        if (!mainResult.loading && setins) {\r\n            if (executeResult) {\r\n                setsetins(false)\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n                history.push(paths.CHANNELS);\r\n            } else if (!executeResult) {\r\n                const errormessage = t(mainResult.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [mainResult])\r\n\r\n    function checkissues() {\r\n        setViewSelected(\"viewfinishreg\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    function setnameField(value: any) {\r\n        setChannelreg(value === \"\");\r\n        let partialf = fields;\r\n        partialf.parameters.description = value;\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setService(value: string, field: string) {\r\n        setNextbutton(value === \"\");\r\n        let partialf = fields;\r\n        partialf.service.accesstoken = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setApiKeyId(value: string, field: string) {\r\n        setNextbutton(value === \"\");\r\n        let partialf = fields;\r\n        partialf.service.apikeyid = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setApiKeySecret(value: string, field: string) {\r\n        setNextbutton(value === \"\");\r\n        let partialf = fields;\r\n        partialf.service.apikeysecret = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setAppId(value: string, field: string) {\r\n        setNextbutton(value === \"\")\r\n        let partialf = fields;\r\n        partialf.service.appid = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setAppName(value: string, field: string) {\r\n        setNextbutton(value === \"\")\r\n        let partialf = fields;\r\n        partialf.service.appname = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setApiKey(value: string, field: string) {\r\n        setNextbutton(value === \"\")\r\n        let partialf = fields;\r\n        partialf.service.apikey = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setAppNumber(value: string, field: string) {\r\n        setNextbutton(value === \"\")\r\n        let partialf = fields;\r\n        partialf.service.appnumber = value;\r\n        partialf.parameters.communicationchannelowner = \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    async function activateChannelfunc() {\r\n        dispatch(showBackdrop(true));\r\n        dispatch(activateChannel(fields));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!executeActivationResult.loading && (set360 || setsmooch)) {\r\n            dispatch(showBackdrop(false));\r\n            if (executeActivationResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: String(executeActivationResult.message) }))\r\n            } else {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: \"Success\" }))\r\n                history.push(paths.CHANNELS);\r\n            }\r\n        }\r\n    }, [executeActivationResult]);\r\n\r\n    if (viewSelected === \"view1\") {\r\n        if (setRegister360) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setSetRegister360(false); setSetRegisterSmooch(false); setSetRegisterGupshup(false); }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.whatsapptitledialog)}</div>\r\n                        {\r\n                            edit ?\r\n                                <Button\r\n                                    className={classes.centerbutton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={false}\r\n                                    onClick={() => { history.push(paths.CHANNELS_ADD, whatsAppData) }}\r\n                                >{t(langKeys.close)}\r\n                                </Button>\r\n                                :\r\n                                <Button\r\n                                    className={classes.centerbutton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={nextbutton}\r\n                                    onClick={() => { setViewSelected(\"viewfinishreg\") }}\r\n                                >{t(langKeys.registerwhats)}\r\n                                </Button>\r\n                        }\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={(value) => setService(value, \"accesstoken\")}\r\n                                label={t(langKeys.enterapikey)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (setRegisterSmooch) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setSetRegister360(false); setSetRegisterSmooch(false); setSetRegisterGupshup(false); }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.whatsapptitlesmooch)}</div>\r\n                        {\r\n                            edit ?\r\n                                <Button\r\n                                    className={classes.centerbutton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={false}\r\n                                    onClick={() => { history.push(paths.CHANNELS_ADD, whatsAppData) }}\r\n                                >{t(langKeys.close)}\r\n                                </Button>\r\n                                :\r\n                                <Button\r\n                                    className={classes.centerbutton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={disablebutton2}\r\n                                    onClick={() => { setViewSelected(\"viewfinishreg\") }}\r\n                                >{t(langKeys.registerwhats)}\r\n                                </Button>\r\n                        }\r\n                        <div className=\"row-zyx\">\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setApiKeyId(e.target.value, \"apikeyid\");\r\n                                        setdisablebutton2(!e.target.value || !fields.service.apikeysecret || !fields.service.appid)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.smooch_apikeyid)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setApiKeySecret(e.target.value, \"apikeysecret\");\r\n                                        setdisablebutton2(!e.target.value || !fields.service.apikeyid || !fields.service.appid)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.smooch_apikeysecret)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setAppId(e.target.value, \"appid\");\r\n                                        setdisablebutton2(!e.target.value || !fields.service.apikeyid || !fields.service.apikeysecret)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.smooch_appid)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (setRegisterGupshup) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setSetRegister360(false); setSetRegisterSmooch(false); setSetRegisterGupshup(false); }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.whatsapptitlegupshup)}</div>\r\n                        {\r\n                            edit ?\r\n                                <Button\r\n                                    className={classes.centerbutton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={false}\r\n                                    onClick={() => { history.push(paths.CHANNELS_ADD, whatsAppData) }}\r\n                                >{t(langKeys.close)}\r\n                                </Button>\r\n                                :\r\n                                <Button\r\n                                    className={classes.centerbutton}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={disablebutton3}\r\n                                    onClick={() => { setViewSelected(\"viewfinishreg\") }}\r\n                                >{t(langKeys.registerwhats)}\r\n                                </Button>\r\n                        }\r\n                        <div className=\"row-zyx\">\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setAppId(e.target.value, \"appid\");\r\n                                        setdisablebutton3(!e.target.value || !fields.service.appname || !fields.service.apikey || !fields.service.appnumber)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.gupshuppappid)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setAppName(e.target.value, \"appname\");\r\n                                        setdisablebutton3(!fields.service.appid || !e.target.value || !fields.service.apikey || !fields.service.appnumber)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.gupshuppappname)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setApiKey(e.target.value, \"apikey\");\r\n                                        setdisablebutton3(!fields.service.appid || !fields.service.appname || !e.target.value || !fields.service.appnumber)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.gupshuppapikey)}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setAppNumber(e.target.value, \"appnumber\");\r\n                                        setdisablebutton3(!fields.service.appid || !fields.service.appname || !fields.service.apikey || !e.target.value)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={t(langKeys.gupshuppappnumber)}\r\n                                    type={\"number\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (roledesc === \"SUPERADMIN\" && !edit) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <div style={{ width: '100%' }}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                                {t(langKeys.previoustext)}\r\n                            </Link>\r\n                        </Breadcrumbs>\r\n                    </div>\r\n                    <div style={{ width: \"100%\", marginTop: \"20px\", alignItems: \"center\", display: \"flex\" }}>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setSetRegister360(true);\r\n                                    setSetRegisterSmooch(false);\r\n                                    setSetRegisterGupshup(false);\r\n\r\n                                    let partialField = fields;\r\n                                    partialField.type = \"WHATSAPP\";\r\n\r\n                                    setFields(partialField);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.register360dialog)}\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setSetRegister360(false);\r\n                                    setSetRegisterSmooch(true);\r\n                                    setSetRegisterGupshup(false);\r\n\r\n                                    let partialField = fields;\r\n                                    partialField.type = \"WHATSAPPSMOOCHINSERT\";\r\n\r\n                                    setFields(partialField);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.registersmooch)}\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setSetRegister360(false);\r\n                                    setSetRegisterSmooch(false);\r\n                                    setSetRegisterGupshup(true);\r\n\r\n                                    let partialField = fields;\r\n                                    partialField.type = \"WHATSAPPGUPSHUP\";\r\n\r\n                                    setFields(partialField);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.registergupshup)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (set360) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.whatsapptitledialog)}</div>\r\n                        <Button\r\n                            className={classes.centerbutton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={nextbutton}\r\n                            onClick={activateChannelfunc}\r\n                        >{t(langKeys.registerwhats)}\r\n                        </Button>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={(value) => setService(value, \"accesstoken\")}\r\n                                label={t(langKeys.enterapikey)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (setsmooch) {\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.whatsapptitlesmooch)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setApiKeyId(e.target.value, \"apikeyid\");\r\n                                        setdisablebutton2(!e.target.value || !fields.service.apikeysecret || !fields.service.appid)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={\"Apikey Id\"}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setApiKeySecret(e.target.value, \"apikeysecret\");\r\n                                        setdisablebutton2(!e.target.value || !fields.service.apikeyid || !fields.service.appid)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={\"Apikey Secret\"}\r\n                                />\r\n                            </div>\r\n                            <div style={{ width: \"100%\", padding: \"10px 25%\" }}>\r\n                                <TextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    onChange={(e) => {\r\n                                        setAppId(e.target.value, \"appid\");\r\n                                        setdisablebutton2(!e.target.value || !fields.service.apikeyid || !fields.service.apikeysecret)\r\n                                    }}\r\n                                    variant=\"outlined\"\r\n                                    label={\"App Id\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ width: \"100%\", padding: \"20px 25%\" }}>\r\n                            <Button\r\n                                onClick={() => { activateChannelfunc() }}\r\n                                className={classes.button2}\r\n                                disabled={disablebutton2}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.finishreg)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (whatsAppData?.typeWhatsApp === \"DIALOG\") {\r\n                return (\r\n                    <div style={{ width: '100%' }}>\r\n                        <Breadcrumbs aria-label=\"breadcrumb\">\r\n                            <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                                {t(langKeys.previoustext)}\r\n                            </Link>\r\n                        </Breadcrumbs>\r\n                        <div>\r\n                            <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.whatsapptitledialog)}</div>\r\n                            {\r\n                                edit ?\r\n                                    <Button\r\n                                        className={classes.centerbutton}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={false}\r\n                                        onClick={() => { history.push(paths.CHANNELS_ADD, whatsAppData) }}\r\n                                    >{t(langKeys.close)}\r\n                                    </Button>\r\n                                    :\r\n                                    <Button\r\n                                        className={classes.centerbutton}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        disabled={nextbutton}\r\n                                        onClick={() => { setViewSelected(\"viewfinishreg\") }}\r\n                                    >{t(langKeys.registerwhats)}\r\n                                    </Button>\r\n                            }\r\n                            <div className=\"row-zyx\">\r\n                                <div className=\"col-3\"></div>\r\n                                <FieldEdit\r\n                                    onChange={(value) => setService(value, \"accesstoken\")}\r\n                                    label={t(langKeys.enterapikey)}\r\n                                    className=\"col-6\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            (roledesc === \"SUPERADMIN\" && edit) ?\r\n                                <div style={{ width: \"100%\", alignItems: \"center\", display: \"flex\" }}>\r\n                                    <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                                        <Button\r\n                                            onClick={() => {\r\n                                                setset360(true);\r\n                                                let partialf = fields;\r\n                                                partialf.type = \"WHATSAPP\";\r\n                                                setFields(partialf);\r\n                                            }}\r\n                                            className={classes.button2}\r\n                                            disabled={disablebutton}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >{t(langKeys.activate360dialog)}\r\n                                        </Button>\r\n                                    </div>\r\n                                    <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                                        <Button\r\n                                            onClick={() => { setsetsmooch(true) }}\r\n                                            className={classes.button2}\r\n                                            disabled={disablebutton}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >{t(langKeys.activatesmooch)}\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                                : \"\"\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <div style={{ width: '100%' }}>\r\n                        <div>\r\n                            <div >\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginBottom: 10 }}>{t(langKeys.brandpointcontact)}</div>\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 16, color: \"grey\" }}>{t(langKeys.brandpointcontact2)}</div>\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\" }}>\r\n                                    <TextField\r\n                                        className={classes.fields1}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        defaultValue={fields.service.firstname}\r\n                                        label={t(langKeys.firstname)}\r\n                                        name=\"firstname\"\r\n                                        error={!!errors.firstname}\r\n                                        helperText={errors.firstname}\r\n                                        onChange={(e) => {\r\n                                            let partialf = { ...fields };\r\n                                            partialf.service.firstname = e.target.value;\r\n                                            setFields(partialf)\r\n                                            setdisablebutton(!(e.target.value) || !(fields.service.brandname) || !(fields.service.brandaddress) || !(fields.service.lastname) || !(fields.service.email)\r\n                                                || !(fields.service.phone) || !(fields.service.customerfacebookid) || !(fields.service.phonenumberwhatsappbusiness) || !(fields.service.nameassociatednumber))\r\n                                        }}\r\n                                        value={fields.service.firstname}\r\n                                        disabled={edit}\r\n                                    />\r\n                                    <TextField\r\n                                        className={classes.fields2}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        defaultValue={fields.service.lastname}\r\n                                        label={t(langKeys.lastname)}\r\n                                        name=\"lastname\"\r\n                                        error={!!errors.lastname}\r\n                                        helperText={errors.lastname}\r\n                                        onChange={(e) => {\r\n                                            let partialf = { ...fields };\r\n                                            partialf.service.lastname = e.target.value;\r\n                                            setFields(partialf)\r\n                                            setdisablebutton(!(e.target.value) || !(fields.service.brandname) || !(fields.service.brandaddress) || !(fields.service.firstname) || !(fields.service.email)\r\n                                                || !(fields.service.phone) || !(fields.service.customerfacebookid) || !(fields.service.phonenumberwhatsappbusiness) || !(fields.service.nameassociatednumber))\r\n                                        }}\r\n                                        value={fields.service.lastname}\r\n                                        disabled={edit}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\" }}>\r\n                                    <TextField\r\n                                        className={classes.fields1}\r\n                                        style={{ marginBottom: 0 }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        label={t(langKeys.email)}\r\n                                        name=\"email\"\r\n                                        defaultValue={fields.service.email}\r\n                                        error={!!errors.email}\r\n                                        helperText={errors.email}\r\n                                        onChange={(e) => {\r\n                                            let partialf = { ...fields };\r\n                                            partialf.service.email = e.target.value;\r\n                                            setFields(partialf)\r\n                                            setdisablebutton(!(e.target.value) || !(fields.service.brandname) || !(fields.service.brandaddress) || !(fields.service.firstname) || !(fields.service.lastname)\r\n                                                || !(fields.service.phone) || !(fields.service.customerfacebookid) || !(fields.service.phonenumberwhatsappbusiness) || !(fields.service.nameassociatednumber))\r\n                                        }}\r\n                                        value={fields.service.email}\r\n                                        disabled={edit}\r\n                                    />\r\n                                    <CssPhonemui\r\n                                        className={classes.fields2}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        size=\"small\"\r\n                                        disableAreaCodes={true}\r\n                                        value={fields.service.phone}\r\n                                        error={!!errors.phone}\r\n                                        helperText={errors.phone}\r\n                                        label={t(langKeys.phone)}\r\n                                        name=\"phone\"\r\n                                        fullWidth\r\n                                        defaultCountry={'pe'}\r\n                                        onChange={(e) => {\r\n                                            let partialf = { ...fields };\r\n                                            partialf.service.phone = e;\r\n                                            setFields(partialf)\r\n                                            setdisablebutton(!(e) || !(fields.service.brandname) || !(fields.service.brandaddress) || !(fields.service.firstname) || !(fields.service.lastname)\r\n                                                || !(fields.service.email) || !(fields.service.customerfacebookid) || !(fields.service.phonenumberwhatsappbusiness) || !(fields.service.nameassociatednumber))\r\n                                        }}\r\n                                        disabled={edit}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginLeft: \"15px\", marginBottom: \"15px\" }}>{t(langKeys.emailcondition)}</div>\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginBottom: 10 }}>{t(langKeys.whatsappinformation)}</div>\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\" }}>\r\n                                    <TextField\r\n                                        className={classes.fields3}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        defaultValue={fields.service.phonenumberwhatsappbusiness}\r\n                                        label={t(langKeys.desiredphonenumberwhatsappbusiness)}\r\n                                        name=\"phonenumberwhatsappbusiness\"\r\n                                        error={!!errors.phonenumberwhatsappbusiness}\r\n                                        helperText={errors.phonenumberwhatsappbusiness}\r\n                                        onChange={(e) => {\r\n                                            let partialf = { ...fields };\r\n                                            partialf.service.phonenumberwhatsappbusiness = e.target.value;\r\n                                            setFields(partialf)\r\n                                            setdisablebutton(!(e.target.value) || !(fields.service.brandname) || !(fields.service.brandaddress) || !(fields.service.firstname) || !(fields.service.lastname)\r\n                                                || !(fields.service.email) || !(fields.service.phone) || !(fields.service.customerfacebookid) || !(fields.service.nameassociatednumber))\r\n                                        }}\r\n                                        value={fields.service.phonenumberwhatsappbusiness}\r\n                                        disabled={edit}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginLeft: \"15px\", marginBottom: \"15px\" }}>\r\n                                    {t(langKeys.whatsappinformation3) + \" \"}\r\n                                    <Link href=\"http://africau.edu/images/default/sample.pdf\">\r\n                                        {t(langKeys.whatsappguidedownload)}\r\n                                    </Link>\r\n                                </div>\r\n                                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\" }}>\r\n                                    <TextField\r\n                                        className={classes.fields3}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        size=\"small\"\r\n                                        defaultValue={fields.service.nameassociatednumber}\r\n                                        label={t(langKeys.nameassociatednumber)}\r\n                                        name=\"nameassociatednumber\"\r\n                                        error={!!errors.nameassociatednumber}\r\n                                        helperText={errors.nameassociatednumber}\r\n                                        onChange={(e) => {\r\n                                            let partialf = { ...fields };\r\n                                            partialf.service.nameassociatednumber = e.target.value;\r\n                                            setFields(partialf)\r\n                                            setdisablebutton(!(e.target.value) || !(fields.service.brandname) || !(fields.service.brandaddress) || !(fields.service.firstname) || !(fields.service.lastname)\r\n                                                || !(fields.service.email) || !(fields.service.phone) || !(fields.service.customerfacebookid) || !(fields.service.phonenumberwhatsappbusiness))\r\n                                        }}\r\n                                        value={fields.service.nameassociatednumber}\r\n                                        disabled={edit}\r\n                                    />\r\n                                </div>\r\n                                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginLeft: \"15px\", marginBottom: \"15px\" }}>{t(langKeys.whatsappinformation4)}</div>\r\n                                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginLeft: \"15px\", marginBottom: \"15px\" }}><b>*{t(langKeys.whatsappsubtitle1)}</b></div>\r\n                                <div style={{ width: \"100%\", alignItems: \"center\", display: \"flex\" }}>\r\n                                    <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                                        {edit ?\r\n                                            <Button\r\n                                                onClick={() => { history.push(paths.CHANNELS_ADD, whatsAppData) }}\r\n                                                className={classes.button2}\r\n                                                disabled={false}\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                            >{t(langKeys.close)}\r\n                                            </Button>\r\n                                            :\r\n                                            <Button\r\n                                                onClick={() => { checkissues() }}\r\n                                                className={classes.button2}\r\n                                                disabled={disablebutton}\r\n                                                variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                            >{t(langKeys.next)}\r\n                                            </Button>\r\n                                        }\r\n                                    </div>\r\n                                    {\r\n                                        (roledesc === \"SUPERADMIN\" && edit) ?\r\n                                            <Fragment>\r\n                                                <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                                                    <Button\r\n                                                        onClick={() => {\r\n                                                            setset360(true);\r\n                                                            let partialf = fields;\r\n                                                            partialf.type = \"WHATSAPP\";\r\n                                                            setFields(partialf);\r\n                                                        }}\r\n                                                        className={classes.button2}\r\n                                                        disabled={disablebutton}\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                    >{t(langKeys.activate360dialog)}\r\n                                                    </Button>\r\n                                                </div>\r\n                                                <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                                                    <Button\r\n                                                        onClick={() => { setsetsmooch(true) }}\r\n                                                        className={classes.button2}\r\n                                                        disabled={disablebutton}\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                    >{t(langKeys.activatesmooch)}\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            : \"\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setViewSelected(\"view1\") }}>\r\n                        {t(langKeys.previoustext)}\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.commchannelfinishreg)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={(value) => setnameField(value)}\r\n                            label={t(langKeys.givechannelname)}\r\n                            className=\"col-6\"\r\n                            valueDefault={fields.parameters.description}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"col-6\">\r\n                            <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                                {t(langKeys.givechannelcolor)}\r\n                            </Box>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                                <WhatsappIcon style={{ fill: `${coloricon}`, width: \"100px\" }} />\r\n                                <ColorInput\r\n                                    hex={fields.parameters.coloricon}\r\n                                    onChange={e => {\r\n                                        setFields(prev => ({\r\n                                            ...prev,\r\n                                            parameters: { ...prev.parameters, coloricon: e.hex, color: e.hex },\r\n                                        }));\r\n                                        setcoloricon(e.hex)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={() => { finishreg() }}\r\n                            className={classes.button}\r\n                            disabled={channelreg || mainResult.loading}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >{t(langKeys.finishreg)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChannelAddWhatsapp","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });"],"sourceRoot":""}