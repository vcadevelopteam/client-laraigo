{"version":3,"sources":["pages/channels/ChannelEdit.tsx","store/channel/actions.ts","../node_modules/@material-ui/icons/Publish.js"],"names":["useFinalStepStyles","makeStyles","theme","title","textAlign","fontWeight","fontSize","color","padding","marginLeft","marginRight","maxWidth","button","textTransform","width","ChannelEdit","t","useTranslation","dispatch","useDispatch","classes","edit","useSelector","state","channel","editChannel","history","useHistory","useLocation","useState","name","setName","auto","setAuto","welcometoneurl","setwelcometoneurl","holdingtoneurl","setholdingtoneurl","checkedCallSupervision","setCheckedCallSupervision","checkedRecording","setCheckedRecording","hexIconColor","setHexIconColor","serviceCredentials","setServiceCredentials","waitUploadFile","setWaitUploadFile","uploadResult","main","uploadFile","useEffect","communicationchanneldesc","coloricon","servicecredentials","JSON","parse","voximplantholdtone","voximplantwelcometone","voximplantcallsupervision","voximplantrecording","includes","recording","recordingstorage","recordingquality","push","paths","CHANNELS","resetEditChannel","loading","error","String","url","showSnackbar","message","show","severity","success","langKeys","communicationchannel_editsuccess","handleSubmit","useCallback","id","communicationchannelid","recordingtosend","stringify","body","getEditChannel","type","handleGoBack","e","preventDefault","onUploadFile","files","selectedFile","size","fd","FormData","append","filetoolarge","style","display","flexDirection","href","onClick","previoustext","flex","className","communicationchannel_edit","gap","onChange","value","label","givechannelname","disabled","valueDefault","phone","countryname","country","categoryname","category","statename","voximplant_state","regionname","voximplant_region","costvca","voximplant_pricealert","formatNumber","parseFloat","siteId","lineHeight","mb","givechannelcolor","hex","welcometone","alignItems","tonestooltip","arrow","placement","height","cursor","justifyContent","split","length","replaceAll","accept","target","htmlFor","component","standbytone","voicechannel_callsupervisor","voicechannel_callsupervisortooltip","paddingLeft","control","checked","voicechannel_recording","voicechannel_recordingtooltip","marginTop","variant","i18nKey","finishreg","getChannelsList","accessToken","appId","callAPI","ChannelsService","getPagelist","types","actionTypes","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","insertChannel","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","activateChannel","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deleteChannel","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","insertChannel2","payload","a","chatIconFile","service","interface","iconbutton","headerIconFile","iconheader","botIconFile","iconbot","bubbleIconFile","bubble","iconbubble","chatIcon","headerIcon","botIcon","bubbleIcon","CommonService","data","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","resetInsertChannel","INSERT_CHANNEL_RESET","channelType","editchnl","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","EDIT_CHANNEL_RESET","getFacebookPages","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","resetGetFacebookPages","FACEBOOK_PAGES_RESET","getMessengerPages","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","resetGetMessengerPages","MESSENGER_PAGES_RESET","getInstagramPages","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","resetGetInstagramPages","INSTAGRAM_PAGES_RESET","getInstagramDMPages","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","resetGetInstagramDMPages","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d"],"mappings":"iYAsBMA,EAAqBC,aAAW,SAAAC,GAAK,MAAK,CAC5CC,MAAO,CACHC,UAAW,SACXC,WAAY,OACZC,SAAU,MACVC,MAAO,UACPC,QAAS,OACTC,WAAY,OACZC,YAAa,OACbC,SAAU,SAEdC,OAAQ,CACJJ,QAAS,GACTH,WAAY,IACZC,SAAU,OACVO,cAAe,UACfC,MAAO,aAwTAC,UApTS,WAAO,IAAD,YAClBC,EAAMC,cAAND,EAEFE,EAAWC,cAEXC,EAAUpB,IACVqB,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,eAC1CC,EAAUC,cAEVH,EADWI,cACQL,MAEzB,EAAwBM,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAAwBF,oBAAS,GAAM,mBAAhCG,EAAI,KAAEC,EAAO,KACpB,EAA4CJ,mBAAS,IAAG,mBAAjDK,EAAc,KAAEC,EAAiB,KACxC,EAA4CN,mBAAS,IAAG,mBAAjDO,EAAc,KAAEC,GAAiB,KACxC,GAA4DR,oBAAS,GAAM,qBAApES,GAAsB,MAAEC,GAAyB,MACxD,GAAgDV,oBAAS,GAAM,qBAAxDW,GAAgB,MAAEC,GAAmB,MAC5C,GAAwCZ,mBAAS,IAAG,qBAA7Ca,GAAY,MAAEC,GAAe,MACpC,GAAoDd,mBAAc,IAAG,qBAA9De,GAAkB,MAAEC,GAAqB,MAChD,GAA4ChB,mBAAS,IAAG,qBAAjDiB,GAAc,MAAEC,GAAiB,MAClCC,GAAe1B,aAAY,SAAAC,GAAK,OAAIA,EAAM0B,KAAKC,cAErDC,qBAAU,WACN,GAAK3B,GAMD,GAHAO,EAAQP,EAAQ4B,0BAChBnB,GAAQ,GACRT,EAAQ6B,WAAaV,GAAgBnB,EAAQ6B,WACzC7B,EAAQ8B,mBAAoB,CAAC,IAAD,EAC5BT,GAAsBU,KAAKC,MAAMhC,EAAQ8B,qBACzCjB,IAAyB,OAAPb,QAAO,IAAPA,OAAO,EAAPA,EAASiC,qBAAoB,IAC/CtB,GAAyB,OAAPX,QAAO,IAAPA,OAAO,EAAPA,EAASkC,wBAAuB,IAClDnB,MAAmC,OAAPf,QAAO,IAAPA,OAAO,EAAPA,EAASmC,6BAA2B,GAChE,IAAIC,EAAsB,KAEtBA,GADM,OAAPpC,QAAO,IAAPA,GAA4B,QAArB,EAAPA,EAASoC,2BAAmB,WAArB,EAAP,EAA8BC,SAAS,cACjBN,KAAKC,MAAa,OAAPhC,QAAO,IAAPA,OAAO,EAAPA,EAASoC,qBAEnB,CAACE,WAAW,EAAOC,iBAAkB,SAAUC,iBAAkB,MAE3FvB,GAAoBmB,EAAoBE,iBAhB5CpC,EAAQuC,KAAKC,IAAMC,UAoBvB,OAAO,WACHjD,EAASkD,kBAEd,CAAC1C,EAASF,EAASN,IAItBiC,qBAAU,WACiB,KAAnBL,KACKE,GAAaqB,SAAYrB,GAAasB,MAGhCtB,GAAasB,OACpBvB,GAAkB,KAHC,YAAnBD,GAA+BX,EAAkBoC,OAAOvB,GAAawB,MAAQnC,GAAkBkC,OAAOvB,GAAawB,MACnHzB,GAAkB,QAK3B,CAACD,GAAgBE,GAAc9B,IAElCiC,qBAAU,WACF9B,EAAKgD,WACU,IAAfhD,EAAKiD,MACLpD,EAASuD,YAAa,CAClBC,QAASrD,EAAKqD,QACdC,MAAM,EACNC,SAAU,WAEPvD,EAAKwD,UACZ3D,EAASuD,YAAa,CAClBC,QAAS1D,EAAE8D,IAASC,kCACpBJ,MAAM,EACNC,SAAU,aAEdlD,EAAQuC,KAAKC,IAAMC,cAGxB,CAAC9C,EAAMK,EAASR,IAEnB,IAAM8D,GAAeC,uBAAY,WAC7B,GAAKzD,EAAL,CACA,IAAM0D,EAAK1D,EAAS2D,uBAChBC,EAAkB7B,KAAK8B,UAAU,CAACvB,UAAWtB,GAAkBuB,iBAAkB,SAAUC,iBAAkB,OAC3GsB,EAAOC,aAAeL,EAAI1D,EAASM,EAAME,EAAMU,GAAcR,EAAgBE,EAAeE,GAA0C,UAAX,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASgE,MAAgBJ,EAAgB,IACnKlE,EAASO,YAAY6D,OACtB,CAACxD,EAAMY,GAAcV,EAAMR,EAASU,EAAgBE,EAAeE,GAAuBE,GAAkBtB,IAEzGuE,GAAeR,uBAAY,SAACS,GAC9BA,EAAEC,iBACFjE,EAAQuC,KAAKC,IAAMC,YACpB,CAACzC,IAEJ,IAAKF,EACD,OAAO,wBAGX,IAAMoE,GAAe,SAACC,EAAYL,GAC9B,IAAMM,EAAeD,EAAM,GAC3B,GAAIC,EAAaC,MAAS,QAAkB,CACxC,IAAIC,EAAK,IAAIC,SACbD,EAAGE,OAAO,OAAQJ,EAAcA,EAAahE,MAC7CZ,EAASgC,YAAW8C,IACpBjD,GAAkByC,QAElBtE,EAASuD,YAAa,CAAEE,MAAM,EAAMC,SAAU,UAAWF,QAAe1D,EAAE8D,IAASqB,cAAiB,gBAK5G,OACI,sBAAKC,MAAO,CAAEtF,MAAO,OAAQuF,QAAS,OAAQC,cAAe,UAAW,UACpE,cAAC,IAAW,CAAC,aAAW,aAAY,SAChC,cAAC,IAAI,CAAC/F,MAAM,gBAA+BgG,KAAK,IAAIC,QAASf,GAAa,SACrEzE,EAAE8D,IAAS2B,eADgB,cAIpC,sBAAKL,MAAO,CAAEtF,MAAO,QAASL,WAAY,OAAQC,YAAa,OAAQ2F,QAAS,OAAQC,cAAe,SAAUI,KAAM,QAAS,UAC5H,qBAAKC,UAAWvF,EAAQjB,MAAM,SACzBa,EAAE8D,IAAS8B,6BAEhB,sBAAKR,MAAO,CAAEC,QAAS,OAAQQ,IAAK,IAAK,UACrC,sBAAKT,MAAO,CAAEM,KAAM,EAAGL,QAAS,OAAQC,cAAe,SAAUO,IAAK,IAAK,UACvE,cAAC,IAAS,CACNC,SAAU,SAACC,GAAK,OAAKhF,EAAQgF,IAC7BC,MAAOhG,EAAE8D,IAASmC,iBAClBC,SAAU7F,EAAKgD,QACf8C,aAAc3F,EAAS4B,4BAEnB,OAAP5B,QAAO,IAAPA,OAAO,EAAPA,EAAS4F,QAAS,mCACf,8BACI,cAAC,IAAS,CACNJ,MAAOhG,EAAE8D,IAASsC,OAClBL,MAAOvF,EAAS4F,YAIT,UAAX,OAAP5F,QAAO,IAAPA,OAAO,EAAPA,EAASgE,OAAmB,sCACN,OAAlB5C,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoByE,cAAe,8BAChC,cAAC,IAAS,CACNL,MAAOhG,EAAE8D,IAASwC,SAClBP,MAAyB,OAAlBnE,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoByE,iBAGhB,OAAlBzE,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB2E,eAAgB,8BACjC,cAAC,IAAS,CACNP,MAAOhG,EAAE8D,IAAS0C,UAClBT,MAAO/F,EAAoB,OAAlB4B,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB2E,mBAGlB,OAAlB3E,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB6E,YAAa,8BAC9B,cAAC,IAAS,CACNT,MAAOhG,EAAE8D,IAAS4C,kBAClBX,MAAyB,OAAlBnE,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB6E,eAGhB,OAAlB7E,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB+E,aAAc,8BAC/B,cAAC,IAAS,CACNX,MAAOhG,EAAE8D,IAAS8C,mBAClBb,MAAyB,OAAlBnE,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB+E,gBAGhB,OAAlB/E,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBiF,UAAW,8BAC5B,cAAC,IAAS,CACNb,MAAOhG,EAAE8D,IAASgD,uBAClBf,MAAK,WAAMgB,aAAaC,YAA6B,OAAlBpF,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBiF,UAAW,aAK1D,UAAX,OAAPrG,QAAO,IAAPA,OAAO,EAAPA,EAASgE,OAAqC,UAAX,OAAPhE,QAAO,IAAPA,OAAO,EAAPA,EAASgE,QAAoB,oCACpC,OAAlB5C,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBqF,SAAU,qBAAKtB,UAAU,UAAS,SACnD,cAAC,IAAS,CACNK,MAAOhG,EAAE8D,IAASN,KAClBmC,UAAU,QACVI,MAAK,mCAAgD,OAAlBnE,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBqF,cAInE,8BACI,gCACI,cAAC,IAAG,CAAC5H,WAAY,IAAK6H,WAAW,OAAO5H,SAAU,GAAI6H,GAAI,EAAG5H,MAAM,cAAa,SAC3ES,EAAE8D,IAASsD,oBAEhB,cAAC,IAAU,CAACC,IAAK3F,GAAcoE,SAAU,SAAApB,GAAC,OAAI/C,GAAgB+C,EAAE2C,gBAIzD,UAAX,OAAP7G,QAAO,IAAPA,OAAO,EAAPA,EAASgE,OACN,sBAAKY,MAAO,CAAEM,KAAM,EAAGL,QAAS,OAAQC,cAAe,SAAUO,IAAK,IAAK,UACvE,gCACI,eAAC,IAAG,CAACxG,WAAY,IAAK6H,WAAW,OAAO5H,SAAU,GAAI6H,GAAI,GAAI5H,MAAM,cAAc6F,MAAO,CAAEC,QAAS,QAAS,UACxGrF,EAAE8D,IAASwD,aACZ,qBAAKlC,MAAO,CAAEC,QAAS,OAAQkC,WAAY,UAAW,SAClD,cAAC,IAAO,CAACpI,MAAO,qBAAKiG,MAAO,CAAE9F,SAAU,IAAK,SAAEU,EAAE8D,IAAS0D,gBAAsBC,OAAK,EAACC,UAAU,MAAK,SACjG,cAAC,IAAe,CAACnI,MAAM,SAAS6F,MAAO,CAAEtF,MAAO,GAAI6H,OAAQ,GAAIC,OAAQ,oBAKpF,sBAAKxC,MAAO,CAAEC,QAAS,QAAS,UAC5B,qBAAKD,MAAO,CAAEM,KAAM,GAAI,SAClB1D,GAAaqB,SAA8B,YAAnBvB,GACtB,qBAAKsD,MAAO,CAAEM,KAAM,EAAGiC,OAAQ,OAAQtC,QAAS,OAAQkC,WAAY,SAAUM,eAAgB,UAAW,SACrG,cAAC,IAAgB,CAAC9C,KAAM,OAE5B,cAAC,IAAS,CACNoB,aAA4B,OAAdjF,QAAc,IAAdA,GAA0B,QAAZ,EAAdA,EAAgB4G,MAAM,YAAI,OAA0C,QAA1C,EAA1B,GAA2C,OAAd5G,QAAc,IAAdA,GAA0B,QAAZ,EAAdA,EAAgB4G,MAAM,YAAI,WAAZ,EAAd,EAA4BC,QAAS,UAAE,WAAtD,EAAd,EAAsEC,WAAW,MAAO,KACtG9B,UAAU,MAItB,gCACI,uBACI+B,OAAO,eACP/D,GAAG,wBACHM,KAAK,OACLY,MAAO,CAAEC,QAAS,QAClBS,SAAU,SAACpB,GAAQE,GAAaF,EAAEwD,OAAOrD,MAAO,cAEpD,uBAAOsD,QAAQ,wBAAwB/C,MAAO,CAAEuC,OAAQ,GAAI,SACxD,cAAC,IAAU,CAACpI,MAAM,UAAU,aAAW,iBAAiBwF,KAAK,QAAQqD,UAAU,OAAOlC,SAAUlE,GAAaqB,QAAQ,SACjH,cAAC,IAAW,iBAMhC,gCACI,eAAC,IAAG,CAAChE,WAAY,IAAK6H,WAAW,OAAO5H,SAAU,GAAI6H,GAAI,GAAI5H,MAAM,cAAc6F,MAAO,CAAEC,QAAS,QAAS,UACxGrF,EAAE8D,IAASuE,aACZ,qBAAKjD,MAAO,CAAEC,QAAS,OAAQkC,WAAY,UAAW,SAClD,cAAC,IAAO,CAACpI,MAAO,qBAAKiG,MAAO,CAAE9F,SAAU,IAAK,SAAEU,EAAE8D,IAAS0D,gBAAsBC,OAAK,EAACC,UAAU,MAAK,SACjG,cAAC,IAAe,CAACnI,MAAM,SAAS6F,MAAO,CAAEtF,MAAO,GAAI6H,OAAQ,GAAIC,OAAQ,oBAKpF,sBAAKxC,MAAO,CAAEC,QAAS,QAAS,UAC5B,qBAAKD,MAAO,CAAEM,KAAM,GAAI,SAClB1D,GAAaqB,SAA8B,YAAnBvB,GACtB,qBAAKsD,MAAO,CAAEM,KAAM,EAAGiC,OAAQ,OAAQtC,QAAS,OAAQkC,WAAY,SAAUM,eAAgB,UAAW,SACrG,cAAC,IAAgB,CAAC9C,KAAM,OAE5B,cAAC,IAAS,CACNoB,aAA4B,OAAd/E,QAAc,IAAdA,GAA0B,QAAZ,EAAdA,EAAgB0G,MAAM,YAAI,OAA0C,QAA1C,EAA1B,GAA2C,OAAd1G,QAAc,IAAdA,GAA0B,QAAZ,EAAdA,EAAgB0G,MAAM,YAAI,WAAZ,EAAd,EAA4BC,QAAS,UAAE,WAAtD,EAAd,EAAsEC,WAAW,MAAO,KACtG9B,UAAU,MAItB,gCACI,uBACI+B,OAAO,eACP/D,GAAG,yBACHM,KAAK,OACLY,MAAO,CAAEC,QAAS,QAClBS,SAAU,SAACpB,GAAQE,GAAaF,EAAEwD,OAAOrD,MAAO,cAEpD,uBAAOsD,QAAQ,yBAAwB,SACnC,cAAC,IAAU,CAAC5I,MAAM,UAAUwF,KAAK,QAAQ,aAAW,iBAAiBqD,UAAU,OAAOlC,SAAUlE,GAAaqB,QAAQ,SACjH,cAAC,IAAW,iBAMhC,gCACKrD,EAAE8D,IAASwE,6BACZ,cAAC,IAAO,CAACnJ,MAAK,UAAKa,EAAE8D,IAASyE,qCAAuCb,UAAU,YAAW,SACtF,cAAC,IAAQ,CAACtC,MAAO,CAAE7F,MAAO,oBAAqBiJ,YAAa,WAEhE,cAAC,IAAgB,CACbC,QAAS,cAAC,IAAe,CAACC,QAASpH,GAAwBwE,SAAU,SAACpB,GAAQnD,GAA0BmD,EAAEwD,OAAOQ,YACjH1C,MAAO,GACPZ,MAAO,CAAE1F,YAAa,MAAOD,WAAY,SAGjD,gCACKO,EAAE8D,IAAS6E,wBACZ,cAAC,IAAO,CAACxJ,MAAK,UAAKa,EAAE8D,IAAS8E,gCAAkClB,UAAU,YAAW,SACjF,cAAC,IAAQ,CAACtC,MAAO,CAAE7F,MAAO,oBAAqBiJ,YAAa,WAEhE,cAAC,IAAgB,CACbC,QAAS,cAAC,IAAe,CAACC,QAASlH,GAAkBsE,SAAU,SAACpB,GAAQjD,GAAoBiD,EAAEwD,OAAOQ,YACrG1C,MAAO,GACPZ,MAAO,CAAE1F,YAAa,MAAOD,WAAY,eAM7D,qBAAK2F,MAAO,CAAE3F,WAAY,OAAQoJ,UAAW,IAAK,SAC9C,cAAC,IAAM,CACHrD,QAASxB,GACT2B,UAAWvF,EAAQR,OACnBkJ,QAAQ,YACRvJ,MAAM,UACN2G,SAAU7F,EAAKgD,SAAWrB,GAAaqB,QAAQ,SAE/C,cAAC,IAAK,CAAC0F,QAASjF,IAASkF,wB,wxBClVpCC,EAAkB,SAACC,EAAqBC,GAAa,MAAmB,CACjFC,QAAS,kBAAMC,IAAgBC,YAAYJ,EAAaC,IACxDI,MAAO,CACHlG,QAASmG,IAAYrG,SACrBU,QAAS2F,IAAYC,iBACrBC,QAASF,IAAYG,kBAEzBnF,KAAM,OAaGoF,EAAgB,SAACC,GAAyB,MAAmB,CACtET,QAAS,kBAAMC,IAAgBS,WAAWD,IAC1CN,MAAO,CACHlG,QAASmG,IAAYrG,SACrBU,QAAS2F,IAAYO,uBACrBL,QAASF,IAAYG,kBAEzBnF,KAAM,OAGGwF,EAAkB,SAACH,GAAyB,MAAmB,CACxET,QAAS,kBAAMC,IAAgBW,gBAAgBH,IAC/CN,MAAO,CACHlG,QAASmG,IAAYS,gBACrBpG,QAAS2F,IAAYU,wBACrBR,QAASF,IAAYW,yBAEzB3F,KAAM,OAGG4F,EAAgB,SAACP,GAAyB,MAAmB,CACtET,QAAS,kBAAMC,IAAgBgB,WAAWR,IAC1CN,MAAO,CACHlG,QAASmG,IAAYrG,SACrBU,QAAS2F,IAAYO,uBACrBL,QAASF,IAAYG,kBAEzBnF,KAAM,OAGG8F,EAAmB,SAACT,GAAyB,MAAmB,CACzET,QAAS,kBAAMC,IAAgBiB,iBAAiBT,IAChDN,MAAO,CACHlG,QAASmG,IAAYe,kBACrB1G,QAAS2F,IAAYgB,0BACrBd,QAASF,IAAYiB,2BAEzBjG,KAAM,OASGkG,EAAiB,SAACC,GAAkC,MAAmB,CAChFvB,QAAQ,WAAD,4BAAE,kDAAAwB,EAAA,sDASe,GARdC,EAAeF,EAAQG,QAASC,UAAUC,WAC1CC,EAAiBN,EAAQG,QAASC,UAAUG,WAC5CC,EAAcR,EAAQG,QAASC,UAAUK,QACzCC,EAAiBV,EAAQG,QAASQ,OAAOC,WAE3CC,EAAW,GACXC,EAAa,GACbC,EAAU,GACVC,EAAa,IAEbd,EAAa,CAAD,gBAEuC,OAD7C7F,EAAK,IAAIC,UACZC,OAAO,OAAQ2F,EAAcA,EAAa/J,MAAM,UACjC8K,IAAc1J,WAAW8C,GAAG,QAA9CwG,EAAQ,OAAwCK,KAAU,IAAE,KAAF,OAG1DZ,EAAe,CAAD,gBAEyC,OADjDjG,EAAK,IAAIC,UACZC,OAAO,OAAQ+F,EAAgBA,EAAenK,MAAM,UACnC8K,IAAc1J,WAAW8C,GAAG,QAAhDyG,EAAU,OAAwCI,KAAU,IAAE,KAAF,OAG5DV,EAAY,CAAD,gBAEsC,OAD3CnG,EAAK,IAAIC,UACZC,OAAO,OAAQiG,EAAaA,EAAYrK,MAAM,UAChC8K,IAAc1J,WAAW8C,GAAG,QAA7C0G,EAAO,OAAwCG,KAAU,IAAE,KAAF,OAGzDR,EAAe,CAAD,gBAEyC,OADjDrG,EAAK,IAAIC,UACZC,OAAO,OAAQmG,EAAgBA,EAAevK,MAAM,UACnC8K,IAAc1J,WAAW8C,GAAG,QAAhD2G,EAAU,OAAwCE,KAAU,IAAE,KAAF,GAMhB,OAHhDlB,EAAQG,QAASC,UAAUC,WAAaQ,EACxCb,EAAQG,QAASC,UAAUG,WAAaO,EACxCd,EAAQG,QAASC,UAAUK,QAAUM,EACrCf,EAAQG,QAASQ,OAAOC,WAAaI,EAAW,kBAEzCtC,IAAgBS,WAAWa,IAAQ,4CAC7C,kDAzCO,GA0CRpB,MAAO,CACHlG,QAASmG,IAAYsC,eACrBpC,QAASF,IAAYuC,uBACrBlI,QAAS2F,IAAYwC,wBAEzBxH,KAAM,OAGGyH,EAAqB,WAAH,MAAU,CAAEzH,KAAMgF,IAAY0C,uBAEhDzL,EAAc,SAACkK,EAA+CwB,GAAoB,MAAmB,CAC9G/C,QAAQ,WAAD,4BAAE,4CAAAwB,EAAA,yDACe,SAAhBuB,GAA0C,kBAAhBA,EAA+B,iBAKf,GAJpCrB,EAAUH,EAAQG,QACpBU,EAAWV,EAAQC,UAAUC,WAC7BS,EAAaX,EAAQC,UAAUG,WAC/BQ,EAAUZ,EAAQC,UAAUK,QAC5BO,EAAab,EAAQQ,OAAOC,YAE5BC,GAAgC,kBAAbA,EAAqB,iBAEG,OADrCxG,EAAK,IAAIC,UACZC,OAAO,OAAQsG,EAAUA,EAAS1K,MAAM,UACzB8K,IAAc1J,WAAW8C,GAAG,QAA9CwG,EAAQ,OAAwCK,KAAU,gBAG1DJ,GAAoC,kBAAfA,EAAuB,iBAEG,OADzCzG,EAAK,IAAIC,UACZC,OAAO,OAAQuG,EAAYA,EAAW3K,MAAM,UAC3B8K,IAAc1J,WAAW8C,GAAG,QAAhDyG,EAAU,OAAwCI,KAAU,gBAG5DH,GAA8B,kBAAZA,EAAoB,iBAEG,OADnC1G,EAAK,IAAIC,UACZC,OAAO,OAAQwG,EAASA,EAAQ5K,MAAM,UACxB8K,IAAc1J,WAAW8C,GAAG,QAA7C0G,EAAO,OAAwCG,KAAU,gBAGzDF,GAAoC,kBAAfA,EAAuB,iBAEG,OADzC3G,EAAK,IAAIC,UACZC,OAAO,OAAQyG,EAAYA,EAAW7K,MAAM,UAC3B8K,IAAc1J,WAAW8C,GAAG,QAAhD2G,EAAU,OAAwCE,KAAU,YAMA,OAH/DlB,EAAQG,QAAwBC,UAAUC,WAAaQ,EACvDb,EAAQG,QAAwBC,UAAUG,WAAaO,EACvDd,EAAQG,QAAwBC,UAAUK,QAAUM,EACpDf,EAAQG,QAAwBQ,OAAOC,WAAaI,EAAW,kBAEzDtC,IAAgB+C,SAASzB,IAAQ,iCAErCiB,IAAc3J,KAAK0I,IAAQ,4CACrC,kDAxCO,GAyCRpB,MAAO,CACHlG,QAASmG,IAAY6C,aACrB3C,QAASF,IAAY8C,qBACrBzI,QAAS2F,IAAY+C,sBAEzB/H,KAAM,OAGGpB,EAAmB,WAAH,MAAU,CAAEoB,KAAMgF,IAAYgD,qBAE9CC,EAAmB,SAACvD,EAAqBC,GAAa,MAAmB,CAClFC,QAAS,kBAAMC,IAAgBqD,eAAexD,EAAaC,IAC3DI,MAAO,CACHlG,QAASmG,IAAYmD,eACrB9I,QAAS2F,IAAYoD,uBACrBlD,QAASF,IAAYqD,wBAEzBrI,KAAM,OAGGsI,EAAwB,WAAH,MAAU,CAAEtI,KAAMgF,IAAYuD,uBAEnDC,EAAoB,SAAC9D,EAAqBC,GAAa,MAAmB,CACnFC,QAAS,kBAAMC,IAAgBqD,eAAexD,EAAaC,IAC3DI,MAAO,CACHlG,QAASmG,IAAYyD,gBACrBpJ,QAAS2F,IAAY0D,wBACrBxD,QAASF,IAAY2D,yBAEzB3I,KAAM,OAGG4I,EAAyB,WAAH,MAAU,CAAE5I,KAAMgF,IAAY6D,wBAEpDC,EAAoB,SAACpE,EAAqBC,GAAa,MAAmB,CACnFC,QAAS,kBAAMC,IAAgBqD,eAAexD,EAAaC,IAC3DI,MAAO,CACHlG,QAASmG,IAAY+D,gBACrB1J,QAAS2F,IAAYgE,wBACrB9D,QAASF,IAAYiE,yBAEzBjJ,KAAM,OAGGkJ,EAAyB,WAAH,MAAU,CAAElJ,KAAMgF,IAAYmE,wBAEpDC,EAAsB,SAAC1E,EAAqBC,GAAa,MAAmB,CACrFC,QAAS,kBAAMC,IAAgBqD,eAAexD,EAAaC,IAC3DI,MAAO,CACHlG,QAASmG,IAAYqE,kBACrBhK,QAAS2F,IAAYsE,0BACrBpE,QAASF,IAAYuE,2BAEzBvJ,KAAM,OAGGwJ,EAA2B,WAAH,MAAU,CAAExJ,KAAMgF,IAAYyE,0BAEtDC,EAAsB,SAACC,GAAY,MAAmB,CAC/D/E,QAAS,kBAAMC,IAAgB6E,oBAAoBC,IACnD5E,MAAO,CACHG,QAASF,IAAY4E,6BACrB/K,QAASmG,IAAY6E,qBACrBxK,QAAS2F,IAAY8E,8BAEzB9J,KAAM,OAKG+J,EAAc,SAACJ,GAAY,MAAmB,CACvD/E,QAAS,kBAAMC,IAAgBkF,YAAYJ,IAC3C5E,MAAO,CACHG,QAASF,IAAYgF,qBACrBnL,QAASmG,IAAYiF,aACrB5K,QAAS2F,IAAYkF,sBAEzBlK,KAAM,OAKGmK,EAAiB,SAACR,GAAY,MAAmB,CAC1D/E,QAAS,kBAAMC,IAAgBsF,eAAeR,IAC9C5E,MAAO,CACHG,QAASF,IAAYoF,wBACrBvL,QAASmG,IAAYqF,gBACrBhL,QAAS2F,IAAYsF,yBAEzBtK,KAAM,OAKGuK,EAAe,SAACZ,GAAY,MAAmB,CACxD/E,QAAS,kBAAMC,IAAgB0F,aAAaZ,IAC5C5E,MAAO,CACHlG,QAASmG,IAAYwF,WACrBnL,QAAS2F,IAAYyF,mBACrBvF,QAASF,IAAY0F,oBAEzB1K,KAAM,Q,iCCxQV,IAAI2K,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CzJ,OAAO,IAETyJ,EAAQC,aAAU,EAElB,IAAIC,EAAQL,EAAwBD,EAAQ,IAIxCO,GAAW,EAFMR,EAAuBC,EAAQ,KAElBK,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,6CACD,WAEJL,EAAQC,QAAUE","file":"static/js/89.e933581f.chunk.js","sourcesContent":["import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'hooks';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { editChannel, resetEditChannel } from 'store/channel/actions';\r\nimport { getEditChannel } from 'common/helpers';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { IChannel } from '@types';\r\nimport { Box, Breadcrumbs, Button, FormControlLabel, IconButton, Link, makeStyles } from '@material-ui/core';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { ColorInput, FieldEdit, FieldView, IOSSwitchPurple } from 'components';\r\nimport { formatNumber } from 'common/helpers';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { uploadFile } from 'store/main/actions';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport paths from 'common/constants/paths';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nconst useFinalStepStyles = makeStyles(theme => ({\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"2em\",\r\n        color: \"#7721ad\",\r\n        padding: \"20px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        maxWidth: \"800px\",\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nconst ChannelEdit: FC = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const classes = useFinalStepStyles();\r\n    const edit = useSelector(state => state.channel.editChannel);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const channel = location.state as IChannel | null;\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [auto, setAuto] = useState(false);\r\n    const [welcometoneurl, setwelcometoneurl] = useState(\"\");\r\n    const [holdingtoneurl, setholdingtoneurl] = useState(\"\");\r\n    const [checkedCallSupervision, setCheckedCallSupervision] = useState(false);\r\n    const [checkedRecording, setCheckedRecording] = useState(false);\r\n    const [hexIconColor, setHexIconColor] = useState(\"\");\r\n    const [serviceCredentials, setServiceCredentials] = useState<any>({});\r\n    const [waitUploadFile, setWaitUploadFile] = useState(\"\");\r\n    const uploadResult = useSelector(state => state.main.uploadFile);\r\n\r\n    useEffect(() => {\r\n        if (!channel) {\r\n            history.push(paths.CHANNELS);\r\n        } else {\r\n            setName(channel.communicationchanneldesc);\r\n            setAuto(true);\r\n            channel.coloricon && setHexIconColor(channel.coloricon);\r\n            if (channel.servicecredentials) {\r\n                setServiceCredentials(JSON.parse(channel.servicecredentials));\r\n                setholdingtoneurl(channel?.voximplantholdtone||\"\")\r\n                setwelcometoneurl(channel?.voximplantwelcometone||\"\")\r\n                setCheckedCallSupervision(!!channel?.voximplantcallsupervision||false)\r\n                let voximplantrecording = null;\r\n                if(channel?.voximplantrecording?.includes(\"recording\")){\r\n                    voximplantrecording= JSON.parse(channel?.voximplantrecording)\r\n                }else{\r\n                    voximplantrecording = {recording: false, recordingstorage: 'month3', recordingquality: 'hd'}\r\n                }\r\n                setCheckedRecording(voximplantrecording.recording)\r\n            }\r\n        }\r\n\r\n        return () => {\r\n            dispatch(resetEditChannel());\r\n        };\r\n    }, [history, channel, dispatch]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (waitUploadFile !== \"\") {\r\n            if (!uploadResult.loading && !uploadResult.error) {\r\n                waitUploadFile === \"welcome\" ? setwelcometoneurl(String(uploadResult.url)) : setholdingtoneurl(String(uploadResult.url))\r\n                setWaitUploadFile(\"\");\r\n            } else if (uploadResult.error) {\r\n                setWaitUploadFile(\"\");\r\n            }\r\n        }\r\n    }, [waitUploadFile, uploadResult, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (edit.loading) return;\r\n        if (edit.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: edit.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else if (edit.success) {\r\n            dispatch(showSnackbar({\r\n                message: t(langKeys.communicationchannel_editsuccess),\r\n                show: true,\r\n                severity: \"success\"\r\n            }));\r\n            history.push(paths.CHANNELS);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [edit, history, dispatch]);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        if (!channel) return;\r\n        const id = channel!.communicationchannelid;\r\n        let recordingtosend = JSON.stringify({recording: checkedRecording, recordingstorage: 'month3', recordingquality: 'hd'})\r\n        const body = getEditChannel(id, channel, name, auto, hexIconColor, welcometoneurl, holdingtoneurl,checkedCallSupervision, channel?.type === \"VOXI\"?recordingtosend:\"\");\r\n        dispatch(editChannel(body));\r\n    }, [name, hexIconColor, auto, channel, welcometoneurl, holdingtoneurl,checkedCallSupervision,checkedRecording, dispatch]);\r\n\r\n    const handleGoBack = useCallback((e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        history.push(paths.CHANNELS);\r\n    }, [history]);\r\n\r\n    if (!channel) {\r\n        return <div />;\r\n    }\r\n\r\n    const onUploadFile = (files: any, type: string) => {\r\n        const selectedFile = files[0];\r\n        if (selectedFile.size <= (1024 * 1024 * 5)) {\r\n            var fd = new FormData();\r\n            fd.append('file', selectedFile, selectedFile.name);\r\n            dispatch(uploadFile(fd));\r\n            setWaitUploadFile(type);\r\n        } else {\r\n            dispatch(showSnackbar({ show: true, severity: \"warning\", message: '' + (t(langKeys.filetoolarge)) + \" Max: 5Mb\" }))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link color=\"textSecondary\" key=\"mainview\" href=\"/\" onClick={handleGoBack}>\r\n                    {t(langKeys.previoustext)}\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ width: \"700px\", marginLeft: 'auto', marginRight: 'auto', display: 'flex', flexDirection: 'column', flex: 'wrap' }}>\r\n                <div className={classes.title}>\r\n                    {t(langKeys.communicationchannel_edit)}\r\n                </div>\r\n                <div style={{ display: 'flex', gap: 24 }}>\r\n                    <div style={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 12 }}>\r\n                        <FieldEdit\r\n                            onChange={(value) => setName(value)}\r\n                            label={t(langKeys.givechannelname)}\r\n                            disabled={edit.loading}\r\n                            valueDefault={channel!.communicationchanneldesc}\r\n                        />\r\n                        {channel?.phone && <>\r\n                            <div>\r\n                                <FieldView\r\n                                    label={t(langKeys.phone)}\r\n                                    value={channel!.phone}\r\n                                />\r\n                            </div>\r\n                        </>}\r\n                        {channel?.type === \"VOXI\" && <>\r\n                            {serviceCredentials?.countryname && <div>\r\n                                <FieldView\r\n                                    label={t(langKeys.country)}\r\n                                    value={serviceCredentials?.countryname}\r\n                                />\r\n                            </div>}\r\n                            {serviceCredentials?.categoryname && <div>\r\n                                <FieldView\r\n                                    label={t(langKeys.category)}\r\n                                    value={t(serviceCredentials?.categoryname)}\r\n                                />\r\n                            </div>}\r\n                            {serviceCredentials?.statename && <div>\r\n                                <FieldView\r\n                                    label={t(langKeys.voximplant_state)}\r\n                                    value={serviceCredentials?.statename}\r\n                                />\r\n                            </div>}\r\n                            {serviceCredentials?.regionname && <div>\r\n                                <FieldView\r\n                                    label={t(langKeys.voximplant_region)}\r\n                                    value={serviceCredentials?.regionname}\r\n                                />\r\n                            </div>}\r\n                            {serviceCredentials?.costvca && <div>\r\n                                <FieldView\r\n                                    label={t(langKeys.voximplant_pricealert)}\r\n                                    value={`$${formatNumber(parseFloat(serviceCredentials?.costvca || 0))}`}\r\n                                />\r\n                            </div>\r\n                            }\r\n                        </>}\r\n                        {(channel?.type === \"FBDM\" || channel?.type === \"FBWA\") && <>\r\n                            {serviceCredentials?.siteId && <div className=\"row-zyx\">\r\n                                <FieldView\r\n                                    label={t(langKeys.url)}\r\n                                    className=\"col-6\"\r\n                                    value={`https://www.facebook.com/${serviceCredentials?.siteId}`}\r\n                                />\r\n                            </div>}\r\n                        </>}\r\n                        <div>\r\n                            <div >\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                                    {t(langKeys.givechannelcolor)}\r\n                                </Box>\r\n                                <ColorInput hex={hexIconColor} onChange={e => setHexIconColor(e.hex)} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {channel?.type === \"VOXI\" &&\r\n                        <div style={{ flex: 1, display: 'flex', flexDirection: 'column', gap: 12 }}>\r\n                            <div>\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={.5} color=\"textPrimary\" style={{ display: 'flex' }}>\r\n                                    {t(langKeys.welcometone)}\r\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                        <Tooltip title={<div style={{ fontSize: 12 }}>{t(langKeys.tonestooltip)}</div>} arrow placement=\"top\" >\r\n                                            <InfoRoundedIcon color=\"action\" style={{ width: 15, height: 15, cursor: 'pointer' }} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </Box>\r\n\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <div style={{ flex: 1 }}>\r\n                                        {(uploadResult.loading && waitUploadFile === \"welcome\") ?\r\n                                            <div style={{ flex: 1, height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                <CircularProgress size={30} />\r\n                                            </div> :\r\n                                            <FieldEdit\r\n                                                valueDefault={welcometoneurl?.split(\"/\")?.[welcometoneurl?.split(\"/\")?.length - 1]?.replaceAll(\"%20\", \" \")}\r\n                                                disabled={true}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            accept=\".mp3,audio/*\"\r\n                                            id=\"contained-button-file\"\r\n                                            type=\"file\"\r\n                                            style={{ display: \"none\" }}\r\n                                            onChange={(e) => { onUploadFile(e.target.files, \"welcome\") }}\r\n                                        />\r\n                                        <label htmlFor=\"contained-button-file\" style={{ height: 0 }}>\r\n                                            <IconButton color=\"primary\" aria-label=\"upload picture\" size=\"small\" component=\"span\" disabled={uploadResult.loading}>\r\n                                                <PublishIcon />\r\n                                            </IconButton>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div >\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={.5} color=\"textPrimary\" style={{ display: 'flex' }}>\r\n                                    {t(langKeys.standbytone)}\r\n                                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                                        <Tooltip title={<div style={{ fontSize: 12 }}>{t(langKeys.tonestooltip)}</div>} arrow placement=\"top\" >\r\n                                            <InfoRoundedIcon color=\"action\" style={{ width: 15, height: 15, cursor: 'pointer' }} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </Box>\r\n\r\n                                <div style={{ display: 'flex' }}>\r\n                                    <div style={{ flex: 1 }}>\r\n                                        {(uploadResult.loading && waitUploadFile === \"holding\") ?\r\n                                            <div style={{ flex: 1, height: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                                                <CircularProgress size={30} />\r\n                                            </div> :\r\n                                            <FieldEdit\r\n                                                valueDefault={holdingtoneurl?.split(\"/\")?.[holdingtoneurl?.split(\"/\")?.length - 1]?.replaceAll(\"%20\", \" \")}\r\n                                                disabled={true}\r\n                                            />\r\n                                        }\r\n                                    </div>\r\n                                    <div>\r\n                                        <input\r\n                                            accept=\".mp3,audio/*\"\r\n                                            id=\"contained-button-file2\"\r\n                                            type=\"file\"\r\n                                            style={{ display: \"none\" }}\r\n                                            onChange={(e) => { onUploadFile(e.target.files, \"holding\") }}\r\n                                        />\r\n                                        <label htmlFor=\"contained-button-file2\">\r\n                                            <IconButton color=\"primary\" size=\"small\" aria-label=\"upload picture\" component=\"span\" disabled={uploadResult.loading}>\r\n                                                <PublishIcon />\r\n                                            </IconButton>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                                {t(langKeys.voicechannel_callsupervisor)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_callsupervisortooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedCallSupervision} onChange={(e) => { setCheckedCallSupervision(e.target.checked);}} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\", marginLeft: 50 }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                {t(langKeys.voicechannel_recording)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_recordingtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedRecording} onChange={(e) => { setCheckedRecording(e.target.checked)}} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\", marginLeft: 50 }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div style={{ marginLeft: 'auto', marginTop: 16 }}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={edit.loading || uploadResult.loading}\r\n                    >\r\n                        <Trans i18nKey={langKeys.finishreg} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelEdit;\r\n","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Publish');\n\nexports.default = _default;"],"sourceRoot":""}