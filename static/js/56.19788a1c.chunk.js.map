{"version":3,"sources":["pages/signup/context.tsx","pages/signup/FirstStep.tsx","pages/signup/SecondStep.tsx","pages/signup/Step2_5.tsx","pages/signup/ThirdStep.tsx","pages/signup/LastStep.tsx","pages/signup/Rating.tsx","pages/signup/RightSideMenu.tsx","pages/signup/ChannelAddFacebook.tsx","pages/signup/ChannelAddInstagram.tsx","pages/signup/ChannelAddInstagramDM.tsx","pages/signup/ChannelAddMessenger.tsx","pages/signup/ChannelAddWhatsapp.tsx","pages/signup/ChannelAddTelegram.tsx","pages/signup/ChannelAddTwitter.tsx","pages/signup/ChannelAddTwitterDM.tsx","pages/signup/ChannelAddChatWeb.tsx","pages/signup/ChannelAddAndroid.tsx","pages/signup/ChannelAddIos.tsx","pages/signup/ChannelAddPhone.tsx","pages/signup/ChannelAddBlogger.tsx","pages/signup/ChannelAddEmail.tsx","pages/signup/ChannelAddLinkedIn.tsx","pages/signup/ChannelAddSMS.tsx","pages/signup/ChannelAddTeams.tsx","pages/signup/ChannelAddTikTok.tsx","pages/signup/ChannelAddYouTube.tsx","pages/signup/LeftSideMenu.tsx","pages/signup/SignUp.tsx","store/channel/actions.ts","store/signup/actions.ts","store/google/actions.ts","pages/channels/GoogleLogInFrame.tsx","store/subscription/actions.ts"],"names":["SubmitObservable","listeners","this","run","push","i","indexOf","splice","runnable","submitObs","defaultListChannels","facebook","instagram","instagramDM","messenger","whatsapp","telegram","twitter","twitterDM","chatWeb","email","phone","sms","android","apple","voximplantphone","tiktok","youtube","linkedin","teams","blogger","SubscriptionContext","createContext","selectedChannels","FBButtonStyles","commonClasses","foreground","undefined","step","confirmations","listchannels","setConfirmations","setStep","finishreg","valchannels","onCheckFunc","altf","setForeground","addChannel","deleteChannel","resetChannels","toggleChannel","submitObservable","form","useStyles","makeStyles","theme","root","padding","border","borderRadius","display","flexDirection","gap","position","rootError","leadingIcon","top","left","width","height","fill","trailingIcon","right","button","fontWeight","fontSize","textTransform","marginTop","maxHeight","backgroundColor","borderColor","boxShadow","textAlign","alignItems","justifyContent","SubscriptionProvider","children","classes","dispatch","useDispatch","t","useTranslation","match","useRouteMatch","useState","planData","useSelector","state","signup","verifyPlan","setlistchannels","validateBool","setValidateBool","useForm","defaultValues","password","confirmpassword","firstandlastname","companybusinessname","mobilephone","facebookid","googleid","join_reason","country","countryname","currency","doctype","docnumber","businessname","fiscaladdress","billingcontact","billingcontactmail","autosendinvoice","companysize","industry","rolecompany","pmemail","pmphone","firstnamecard","lastnamecard","creditcard","mm","yyyy","securitycode","channels","executeResultValidation","subscription","requestValidateChannels","executeResult","insertChannel","useEffect","loading","error","window","open","paths","SIGNIN","resetInsertChannel","params","token","value","showBackdrop","msg","langKeys","successful_sign_up","getValues","showSnackbar","show","severity","message","errormessage","module","property","toLocaleLowerCase","code","suscriptionlinkerror","useMemo","Object","keys","filter","key","length","onVal","data","mainData","partialchannels","values","majorfield","method","parameters","firstname","lastname","username","contactemail","contact","organizationname","paymentplanid","paymentplan","plan","sunatcountry","timezoneoffset","Date","getTimezoneOffset","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","channellist","map","x","build","validateChannels","onSubmit","card","mail","cardnumber","replace","expirationmonth","String","expirationyear","executeSubscription","onError","err","subscription_missinginfo","Provider","handleSubmit","trigger","altfunc","option","prev","v","usePlanData","limitChannels","channelscontracted","provider","providerwhatsapp","phonetax","useChannelAddStyles","buttonfacebook","marginLeft","marginRight","breakpoints","down","buttonGoogle","color","separator","borderBottom","orSeparator","marginBottom","FBButtonStyle2","fontStyle","FirstStep","useContext","useFormContext","control","setValue","rescheckuser","waitSave","setwaitSave","showPassword","setShowPassword","isvalid","useralreadyregistered","handlesubmit","content","executeCheckNewUser","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","name","apiUrls","GOOGLECLIENTID_LOGIN","src","async","defer","style","signupstep1title","className","appId","FACEBOOKAPP","callback","r","id","fields","buttonStyle","textButton","signup_with_facebook","icon","Facebook","isDisabled","disableMobileRedirect","clientId","buttonText","signupgooglebutton","onSuccess","googleId","onFailure","console","log","JSON","stringify","alert","cookiePolicy","accessType","autoLoad","Trans","i18nKey","signupor","rules","validate","field_required","test","emailverification","render","field","errors","formState","TextField","variant","size","margin","fullWidth","type","label","helperText","strongRegex","RegExp","exec","validatePassword","password_strongvalidation","passwordsmustbeequal","autoComplete","InputProps","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","tos","cursor","rel","privacypoliciestitle","tossub1","href","tossub2","Button","a","next","CssPhonemui","styled","MuiPhoneNumber","borderBottomColor","SecondStep","setOpenWarning","mainResult","main","ressignup","countryList","phoneCountry","setPhoneCountry","getCountryList","fetch","then","response","json","countryCode","country_code","toUpperCase","country_name","getCollectionPublic","getValuesFromDomain","resetMain","Breadcrumbs","Link","e","previoustext","signupstep1title2","onChange","valueDefault","optionDesc","optionValue","validationphone","defaultCountry","toLowerCase","mobilephoneoptional","paddingTop","laraigouse","optional","domainvalue","join","prefixTranslation","disabled","fieldview","Step2five","docType","setDocType","databilling","desc","billingfield_billingdni","billingfield_billingextra","billingfield_billingruc","signupstep1title25","billingfield_billingno","docnum","doctype_dni_error","doctype_foreigners_card","doctype_ruc_error","doctype_unknown_error","docTypeValidate","docNumber","fontFamily","flexGrow","paddingBottom","title","palette","primary","subtitle","optionsContainer","flexWrap","useOptionClasses","optionContainer","userSelect","optionContainerHover","optionContainerSelected","optionContainerActive","opacity","optionContainerDisabled","optionPlusDecorator","optionPlusDecoratorDisabled","indexDecorator","optionIconContainer","Option","selected","index","withOpacity","Paper","clsx","elevation","ControlPoint","ThirdStep","socialMediaOptions","channel_facebook","channel_messenger","channel_instagram","channel_instagramdm","channel_whatsapp","channel_telegram","channel_twitter","channel_twitterdm","channel_youtube","channel_linkedin","businessChannelOptions","channel_chatweb","channel_email","channel_phone","channel_sms","channel_ios","channel_android","channel_teams","channel_blogger","Typography","subscription_channellimit","subscription_nolimit","description","socialmediachannel","businesschannel","Step2Six","industryList","setindustryList","companySizeList","setcompanySizeList","roleList","setroleList","multiResult","multiData","getMultiCollectionPublic","laststepsignup","laststepsignup2","uset","roleincompany","useRateStyles","ratingOptionsRow","ratingOption","RateExperience","rating","setRating","comment","setComment","MoodBad","Face","InsertEmoticon","Collapse","in","target","multiline","minRows","maxRows","resize","RightSideMenu","ChannelAddFacebook","register","unregister","setWaitSave","hasFinished","setHasFinished","channel","facebookPages","strRequired","communicationchannelsite","communicationchannelowner","accesstoken","siteid","resetGetFacebookPages","processFacebookCallback","status","getFacebookPages","accessToken","DeleteOutline","connectface2","alignSelf","subscription_congratulations","subscription_message1","subscription_message2","givechannelname","LinkOff","access_token","setValueField","selectpagelink","scope","linkfacebookpage","view","FB","init","cookie","xfbml","version","FACEBOOKVERSION","ChannelAddInstagram","instagramPages","INSTAGRAMAPP","resetGetInstagramPages","getInstagramPages","subscription_instagramconnect","instagram_warning","view_steps","linkinstagrampage","ChannelAddInstagramDM","instagramDMPages","resetGetInstagramDMPages","getInstagramDMPages","ChannelAddMessenger","messengerPages","resetGetMessengerPages","getMessengerPages","subscription_genericconnect","centerbutton","button2","fields1","flex","fields2","fields3","fieldG","phoneRegExp","ChannelAddWhatsapp","viewSelected","setViewSelected","submitError","setSubmitError","nextbutton2","setNextbutton2","cb","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","addListener","removeListener","brandName","brandAddress","firstName","lastName","customerfacebookid","phonenumberwhatsappbusiness","nameassociatednumber","setView","brandpointcontact","brandpointcontact2","defaultValue","disableAreaCodes","emailcondition","whatsappinformation","desiredphonenumberwhatsappbusiness","whatsappinformation3","whatsappguidedownload","whatsappinformation4","whatsappsubtitle1","ChannelAddTelegram","val","enterbotapikey","ChannelAddTwitter","channelList","consumerkey","consumersecret","accesssecret","devenvironment","twittertitle","twittertitle2","consumerapikey","consumerapisecret","authenticationtoken","authenticationsecret","paddingLeft","ChannelAddTwitterDM","getImgUrl","file","URL","createObjectURL","ex","useTabPanelStyles","TabPanel","role","hidden","Box","p","useTabInterfacetyles","text","imgContainer","img","TabPanelInterface","chatBtn","setChatBtn","headerBtn","setHeaderBtn","botBtn","setBotBtn","chatImgUrl","headerImgUrl","botImgUrl","Grid","container","direction","item","xs","sm","md","lg","xl","m","placeholder","chatHeaderTitle","interface","chattitle","chatHeaderSubtitle","chatsubtitle","chatButton","alt","accept","files","document","getElementById","click","CloudUpload","Close","header","botButton","useColorInputStyles","colorInputContainer","colorInput","colorInputSplash","bottom","colorInputPreview","popover","zIndex","ColorInput","hex","setOpen","iconStyle","Icon","ArrowDropDown","useTabColorStyles","backdrop","drawer","colorOption","minWidth","minHeight","TabPanelColors","headerColor","setHeaderColor","setBackgroundColor","setBorderColor","clientMessageColor","setClientMessageColor","botMessageColor","setBotMessageColor","chatHeader","chatBackground","chatBorder","clientMessage","count","botMessage","useTemplateStyles","spacing","fieldContainer","headertitle","closeBtn","NameTemplate","onClose","required","setRequired","checked","_","errorText","validationtext","Divider","inputValidation","inputvalidation","validationOnKeychange","keyvalidation","useTabFormStyles","NAME_FIELD","LASTNAME_FIELD","PHONE_FIELD","EMAIL_FIELD","DOCUMENT_FIELD","SUPPLUNUMBER_FIELD","CONTACT","templates","node","supplynumber","TabPanelForm","enable","setEnable","fieldTemplate","setFieldTemplate","setFields","handleCloseTemplate","newFields","wantAddFormToSiteQuestion","selectField","FormControl","Select","displayEmpty","MenuItem","select","temp","includes","getMenuTemplates","add","useTabBubbleStyles","TabPanelBubble","waitingImg","setWaitingImg","waitingImgUrl","enableWaitingMessage","textOfTheMessage","waitingMessageStyle","useTabExtrasStyles","TabPanelExtras","uploadFile","setUploadFile","uploadVideo","setUploadVideo","uploadImage","setUploadImage","uploadAudio","setUploadAudio","uploadLocation","setUploadLocation","reloadChat","setReloadChat","poweredBy","setPoweredBy","persistentInput","setPersistentInput","abandonEvent","setAbandonEvent","alertSound","setAlertSound","formHistory","setFormHistory","enableMetadata","setEnableMetadata","enableBotName","setEnableBotName","sendLocation","refreshChat","inputAlwaysEnabled","abandonmentEvent","newMessageRing","formBaseHistory","sendMetaData","botName","rootextras","up","scriptPreview","overflowWrap","overflow","scriptPreviewGradient","backgroundImage","scriptPreviewCopyBtn","transform","scriptPreviewFullViewTxt","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","tabs","tab","maxWidth","activetab","ChannelAddChatWeb","selectedView","setSelectedView","tabIndex","setTabIndes","nestedForm","iconbutton","iconheader","iconbot","background","client","bot","bubble","active","messagebubble","iconbubble","extra","uploadfile","uploadaudio","uploadimage","uploadlocation","uploadvideo","reloadchat","poweredby","persistentinput","abandonevent","alertsound","formhistory","enablemetadata","customcss","customjs","botnameenabled","botnametext","getInsertChatwebChannel","valid","integrationId","integrationid","onNext","activeLaraigoOnYourWebsite","AppBar","Tabs","TabIndicatorProps","Tab","ChannelAddEnd","FIRSTNAME_FIELD","SUPPLYNUMBER_FIELD","multiRes","tempfields","tempfield","Tooltip","requiredTooltip","placement","labelTooltip","placeholderTooltip","inputValidationTooltip","inputvalue","validationOnKeychangeTooltip","errorTextTooltip","withStyles","tooltip","typography","pxToRem","arrowRight","borderTop","currentArrow","borderLeft","nextArrow","previousArrow","verticalAlign","currentStep","nextStep","previousStep","isEmpty","str","AndroidInterface","setTabIndex","msgTooltip","setMsgTooltip","setchatTittle","setchatSubtittle","setbotnametext","clientWidth","clientHeight","setMsgTooltipIMGPosition","chatButtonTooltip","FormHelperText","bubbleTooltip","bubbleTooltipText","image","bubbleTooltipImage","interfaceTitleTooltip","interfaceSubtitleTooltip","headerTooltip","botButtonTooltip","botNameTooltip","AndroidColorForm","chatHeaderTooltip","chatBackgroundTooltip","chatBorderTooltip","clientMessageColorTooltip","botMessageTooltip","AndroidExtra","messagetemplate_attachment","documents","documentsTooltip","image_plural","imageTooltip","audioTooltip","videoTooltip","locationTooltip","additionalsettings","poweredbyTooltip","startnewconversation","startnewconversationTooltip","inputAlwaysEnabledTooltip","abandonmentEventTooltip","newMessageRingTooltip","formBaseHistoryTooltip","sendMetaDataTooltip","layoutconfig","lineHeight","mb","cssheaderTooltip","jsscriptTooltip","ChannelAddAndroid","chatinterface","AndroidForm","defFields","useRef","current","handleAddTemplate","borderRight","wantAddFormToSiteQuestionTooltip","formbeforecompletetion","Avatar","sendData","formaftercompletitionerror","ChannelAddIos","containerDetail","containerCapacities","paddingRight","containerItem","ChannelAddPhone","dataRecordingStorage","voicechannel_recordingmonth3","voicechannel_recordingmonth6","voicechannel_recordingyear1","voicechannel_recordingyear2","voicechannel_recordingyear3","dataRecordingQuality","voicechannel_recordingdefault","voicechannel_recordinghd","voicechannel_recordinglossless","categoriesResult","voximplant","requestGetCategories","countryStatesResult","requestGetCountryStates","successinsert","history","useHistory","regionsResult","requestGetRegions","phoneTax","checkedRecording","setCheckedRecording","checkedSms","setCheckedSms","checkedOutbound","setCheckedOutbound","checkedCallSupervision","setCheckedCallSupervision","categoryList","setCategoryList","setCountryList","hasStates","setHasStates","hasRegions","setHasRegions","nextButton","setNextButton","phoneBackup","setPhoneBackup","phonePrice","setPhonePrice","phoneInstallation","setPhoneInstallation","phoneInstallationBackup","setPhoneInstallationBackup","regionList","setRegionList","setInsert","setSetInsert","stateList","setStateList","waitCategories","setWaitCategories","waitRegions","setWaitRegions","waitStates","setWaitStates","getCategories","disableNextButton","formatNumber","toString","other","voximplantcallsupervision","category","region","categoryname","regionname","statename","cost","costvca","costinstallation","recording","outbound","recordingstorage","recordingquality","successful_register","CHANNELS","temporalData","forEach","element","getName","phone_count","regulation_address_type","voximplant_buynumber","voicechannel_capacities","FormControlLabel","voicechannel_recording","voicechannel_recordingtooltip","voicechannel_sms","voicechannel_smstooltip","voicechannel_outbound","voicechannel_outboundtooltip","voicechannel_callsupervisor","voicechannel_callsupervisortooltip","phone_categories","handleCountry","orderbylabel","country_has_states","phone_price","phone_installation_price","getCountryStates","phone_category_name","getRegions","handleCategory","voximplant_state","country_state","country_state_name","handleState","voximplant_region","phone_region_id","phone_region_name","handleRegion","handleSwitchRecordingStorage","voicechannel_recordingquality","handleSwitchRecordingQuality","voximplant_pricealert","voximplant_tooltip","alignContent","float","flexFlow","voicechannel_recordingalert","ChannelAddBlogger","exchangeCodeResult","google","requestExchangeCode","listBloggerResult","requestListBlogger","setChannellist","nextbutton","setNextbutton","showList","setShowList","waitExchange","setWaitExchange","waitList","setWaitList","refreshtoken","tokentype","idtoken","success","id_token","refresh_token","token_type","listBlogger","items","channel_bloggertitle","channel_bloggeralert1","channel_bloggeralert2","GOOGLECLIENTID_CHANNEL","GoogleLogInFrame","connectface4","setchannelField","selectchannellink","ChannelAddEmail","registerInfobip","setRegisterInfobip","registerGmail","setRegisterGmail","changeSubmitError","url","apikey","emittername","emailtitle","emailtitle2","emitteremail","channel_gmailtitle","channel_gmailalert1","channel_gmailalert2","registerinfobip","registergmail","ChannelAddLinkedIn","account","channel_linkedintitle","channel_genericalert","ChannelAddSMS","smstitle","smstitle2","ChannelAddTeams","channel_teamstitle","ChannelAddTikTok","channel_tiktoktitle","channel_tiktok","ChannelAddYouTube","listYouTubeResult","requestListYouTube","listYouTube","channelname","channel_youtubetitle","channel_youtubealert1","channel_youtubealert2","useLeftSideStyles","overflowY","overflowX","containerInfoPay","LeftSide","currentView","setCurrentView","limitnumbers","setlimitnumbers","setIcon","datamonth","subscription_selectedchannel","finishregmessage","addpaymentmethod","addpaymentmethodsub","creditcardvalidate","onPaste","spaces","Math","floor","partialvalue","slice","trim","onInput","inputProps","maxLength","dueDate","finishregwarn","finishregwarn2","GetComponent","useSignUpStyles","purplecircle","containerHead","containerLogo","notthisstep","cookieAlert","emptyspacenumber","containerLeft","SignUp","Popus","SignUpFunc","reset","planDataLoading","openWarning","handleClose","Dialog","DialogTitle","goback","DialogActions","autoFocus","yes","CircularProgress","getChannelsList","callAPI","ChannelsService","getPagelist","types","actionTypes","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","activateChannel","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","insertChannel2","payload","chatIconFile","service","headerIconFile","botIconFile","bubbleIconFile","chatIcon","headerIcon","botIcon","bubbleIcon","fd","FormData","append","CommonService","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","INSERT_CHANNEL_RESET","editChannel","channelType","editchnl","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","resetEditChannel","EDIT_CHANNEL_RESET","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","FACEBOOK_PAGES_RESET","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","MESSENGER_PAGES_RESET","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","INSTAGRAM_PAGES_RESET","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE","execSub","SIGNUP","SIGNUP_SUCCESS","SIGNUP_FAILURE","validateNewUser","ISVALID","ISVALID_SUCCESS","ISVALID_FAILURE","vrfplan","VERIFYPLAN","VERIFYPLAN_SUCCESS","VERIFYPLAN_FAILURE","getCurrencyList","CURRENCYLIST","CURRENCYLIST_SUCCESS","CURRENCYLIST_FAILURE","COUNTRYLIST","COUNTRYLIST_SUCCESS","COUNTRYLIST_FAILURE","exchangeCode","GoogleService","EXCHANGE_CODE","EXCHANGE_CODE_SUCCESS","EXCHANGE_CODE_FAILURE","LIST_BLOGGER","LIST_BLOGGER_SUCCESS","LIST_BLOGGER_FAILURE","LIST_YOUTUBE","LIST_YOUTUBE_SUCCESS","LIST_YOUTUBE_FAILURE","login","useGoogleLogin","tokenResponse","onGoogleLoginSucess","onGoogleLoginFailure","flow","googlecode","login_with_google","recoverPassword","SubscriptionService","RECOVER_PASSWORD_FAILURE","RECOVER_PASSWORD","RECOVER_PASSWORD_SUCCESS","changePassword","CHANGE_PASSWORD_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","VALIDATE_CHANNELS_FAILURE","VALIDATE_CHANNELS","VALIDATE_CHANNELS_SUCCESS"],"mappings":"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","file":"static/js/56.19788a1c.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\nimport { IRequestBody } from '@types';\r\nimport { useSelector } from 'hooks';\r\nimport { langKeys } from 'lang/keys';\r\nimport React, { FC, useState, createContext, useMemo, CSSProperties, useEffect } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { executeSubscription, verifyPlan } from 'store/signup/actions';\r\nimport { validateChannels } from 'store/subscription/actions';\r\nimport { FormProvider, SubmitErrorHandler, SubmitHandler, useForm } from 'react-hook-form';\r\nimport paths from 'common/constants/paths';\r\nimport { resetInsertChannel } from 'store/channel/actions';\r\n\r\nclass SubmitObservable {\r\n    private listeners: (() => void)[];\r\n\r\n    constructor() {\r\n        this.listeners = [];\r\n    }\r\n\r\n    addListener(run: () => void) {\r\n        this.listeners.push(run);\r\n    }\r\n\r\n    removeListener(run: () => void) {\r\n        const i = this.listeners.indexOf(run);\r\n        if (i === -1) return;\r\n\r\n        this.listeners.splice(i, 1);\r\n    }\r\n\r\n    trigger() {\r\n        for (const runnable of this.listeners) {\r\n            runnable();\r\n        }\r\n    }\r\n}\r\n\r\nconst submitObs = new SubmitObservable();\r\n\r\ntype SetState<T> = React.Dispatch<React.SetStateAction<T>>;\r\ntype PlanType = \"BASIC\" | \"PRO\" | \"PREMIUM\" | \"ENTERPRISE\" | \"ADVANCED\";\r\ninterface Subscription {\r\n    selectedChannels: number;\r\n    commonClasses: ReturnType<typeof useStyles>;\r\n    FBButtonStyles: CSSProperties;\r\n    foreground: keyof ListChannels | undefined;\r\n    step: number;\r\n    confirmations: number;\r\n    listchannels: ListChannels;\r\n    setConfirmations: SetState<number>;\r\n    setStep: SetState<number>;\r\n    finishreg: () => void;\r\n    valchannels: () => void;\r\n    onCheckFunc: (altf: any) => void;\r\n    setForeground: SetState<keyof ListChannels | undefined>;\r\n    resetChannels: () => void;\r\n    addChannel: (option: keyof ListChannels) => void;\r\n    deleteChannel: (option: keyof ListChannels) => void;\r\n    toggleChannel: (option: keyof ListChannels) => void;\r\n    submitObservable: SubmitObservable;\r\n    form: any;\r\n}\r\n\r\nexport interface RouteParams {\r\n    token: PlanType;\r\n}\r\nexport interface ListChannels {\r\n    facebook: boolean;\r\n    instagram: boolean;\r\n    instagramDM: boolean;\r\n    messenger: boolean;\r\n    whatsapp: boolean;\r\n    telegram: boolean;\r\n    twitter: boolean;\r\n    twitterDM: boolean;\r\n    chatWeb: boolean;\r\n    email: boolean;\r\n    phone: boolean;\r\n    sms: boolean;\r\n    android: boolean;\r\n    apple: boolean;\r\n    voximplantphone: boolean;\r\n    tiktok: boolean;\r\n    youtube: boolean;\r\n    linkedin: boolean;\r\n    teams: boolean;\r\n    blogger: boolean;\r\n}\r\n\r\nexport interface FacebookChannel {\r\n    description: string;\r\n    communicationchannelsite: string;\r\n    communicationchannelowner: string;\r\n    siteid: string;\r\n    accesstoken: string;\r\n    build: (v: Omit<FacebookChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface WhatsAppChannel {\r\n    description: string;\r\n    accesstoken: string;\r\n    brandName: string;\r\n    brandAddress: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n    customerfacebookid: string;\r\n    phonenumberwhatsappbusiness: string;\r\n    nameassociatednumber: string;\r\n    communicationchannelowner: string;\r\n    build: (v: Omit<WhatsAppChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface TwitterChannel {\r\n    description: string;\r\n    consumerkey: string;\r\n    consumersecret: string;\r\n    accesstoken: string;\r\n    accesssecret: string;\r\n    devenvironment: string;\r\n    communicationchannelowner: string;\r\n    build: (v: Omit<TwitterChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface TelegramChannel {\r\n    description: string;\r\n    accesstoken: string;\r\n    communicationchannelowner: string;\r\n    build: (v: Omit<TelegramChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface MobileChannel {\r\n    description: string;\r\n    build: (v: Omit<MobileChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface ChatWebChannel {\r\n    description: string;\r\n    build: (v: Omit<ChatWebChannel, 'build'>) => IRequestBody;\r\n}\r\nexport interface VoxImplantPhoneChannel {\r\n    description: string;\r\n    country: string;\r\n    category: string;\r\n    region: string;\r\n    state: string;\r\n    countryname: string;\r\n    categoryname: string;\r\n    regionname: string;\r\n    statename: string;\r\n    cost: number;\r\n    costvca: string;\r\n    costinstallation: number;\r\n    recording: boolean,\r\n    sms: boolean,\r\n    outbound: boolean,\r\n    recordingstorage: string,\r\n    recordingquality: string,\r\n    voximplantcallsupervision: boolean,\r\n    build: (v: Omit<VoxImplantPhoneChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface TikTokChannel {\r\n    description: string;\r\n    account: string;\r\n    url: string;\r\n    build: (v: Omit<TikTokChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface YouTubeChannel {\r\n    description: string;\r\n    accesstoken: string;\r\n    refreshtoken: string;\r\n    scope: string;\r\n    tokentype: string;\r\n    idtoken: string;\r\n    channel: string;\r\n    build: (v: Omit<YouTubeChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface LinkedInChannel {\r\n    description: string;\r\n    account: string;\r\n    url: string;\r\n    build: (v: Omit<LinkedInChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface TeamsChannel {\r\n    description: string;\r\n    account: string;\r\n    url: string;\r\n    build: (v: Omit<TeamsChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface BloggerChannel {\r\n    description: string;\r\n    accesstoken: string;\r\n    refreshtoken: string;\r\n    scope: string;\r\n    tokentype: string;\r\n    idtoken: string;\r\n    channel: string;\r\n    build: (v: Omit<BloggerChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface EmailChannel {\r\n    description: string;\r\n    apikey: string;\r\n    url: string;\r\n    emittername: string;\r\n    accesstoken: string;\r\n    refreshtoken: string;\r\n    scope: string;\r\n    tokentype: string;\r\n    idtoken: string;\r\n    type: string;\r\n    build: (v: Omit<EmailChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface SmsChannel {\r\n    description: string;\r\n    apikey: string;\r\n    url: string;\r\n    emittername: string;\r\n    build: (v: Omit<SmsChannel, 'build'>) => IRequestBody;\r\n}\r\n\r\nexport interface Channels {\r\n    facebook: FacebookChannel;\r\n    instagram: FacebookChannel;\r\n    instagramDM: FacebookChannel;\r\n    messenger: FacebookChannel;\r\n    whatsapp: WhatsAppChannel;\r\n    telegram: TelegramChannel;\r\n    twitter: TwitterChannel;\r\n    twitterDM: TwitterChannel;\r\n    chatWeb: ChatWebChannel;\r\n    email: EmailChannel;\r\n    sms: SmsChannel;\r\n    tiktok: TikTokChannel,\r\n    youtube: YouTubeChannel,\r\n    linkedin: LinkedInChannel,\r\n    teams: TeamsChannel,\r\n    blogger: BloggerChannel,\r\n    android: MobileChannel;\r\n    apple: MobileChannel;\r\n    voximplantphone: VoxImplantPhoneChannel;\r\n    phone: any;\r\n}\r\n\r\nexport interface MainData {\r\n    email: string;\r\n    password: string;\r\n    confirmpassword: string;\r\n    firstandlastname: string;\r\n    companybusinessname: string;\r\n    mobilephone: string;\r\n    join_reason: string;\r\n    country: string;\r\n    countryname: string;\r\n    currency: string;\r\n    doctype: number;\r\n    docnumber: string;\r\n    businessname: string;\r\n    fiscaladdress: string;\r\n    billingcontact: string;\r\n    billingcontactmail: string;\r\n    autosendinvoice: boolean;\r\n\r\n    facebookid: string;\r\n    googleid: string;\r\n\r\n    industry: string;\r\n    companysize: string;\r\n    rolecompany: string;\r\n\r\n    channels: Channels;\r\n    firstname: string;\r\n    lastname: string;\r\n    pmemail: string;\r\n    pmphone: string;\r\n    firstnamecard: string;\r\n    lastnamecard: string;\r\n    creditcard: string;\r\n    mm: number;\r\n    yyyy: string;\r\n    securitycode: string;\r\n}\r\n\r\nconst defaultListChannels: ListChannels = {\r\n    facebook: false,\r\n    instagram: false,\r\n    instagramDM: false,\r\n    messenger: false,\r\n    whatsapp: false,\r\n    telegram: false,\r\n    twitter: false,\r\n    twitterDM: false,\r\n    chatWeb: false,\r\n    email: false,\r\n    phone: false,\r\n    sms: false,\r\n    android: false,\r\n    apple: false,\r\n    voximplantphone: false,\r\n    tiktok: false,\r\n    youtube: false,\r\n    linkedin: false,\r\n    teams: false,\r\n    blogger: false,\r\n};\r\n\r\nexport const SubscriptionContext = createContext<Subscription>({\r\n    selectedChannels: 0,\r\n    FBButtonStyles: {},\r\n    commonClasses: {} as any,\r\n    foreground: undefined,\r\n    step: 0,\r\n    confirmations: 0,\r\n    listchannels: defaultListChannels,\r\n    setConfirmations: () => { },\r\n    setStep: () => { },\r\n    finishreg: () => { },\r\n    valchannels: () => { },\r\n    onCheckFunc: (altf: any) => { },\r\n    setForeground: () => { },\r\n    addChannel: () => { },\r\n    deleteChannel: () => { },\r\n    resetChannels: () => { },\r\n    toggleChannel: () => { },\r\n    submitObservable: new SubmitObservable(),\r\n    form: {},\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: '3.5em 5%',\r\n        border: '1px solid black',\r\n        borderRadius: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '1.56em',\r\n        position: 'relative',\r\n    },\r\n    rootError: {\r\n        border: '2px solid red',\r\n    },\r\n    leadingIcon: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        left: 14,\r\n        width: 32,\r\n        height: 32,\r\n        fill: 'gray',\r\n        // stroke: 'red',\r\n    },\r\n    trailingIcon: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        right: 0,\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"100%\"\r\n    },\r\n}));\r\n\r\nconst FBButtonStyles: CSSProperties = {\r\n    fontSize: 14,\r\n    marginTop: 8,\r\n    maxHeight: 40,\r\n    height: 40,\r\n    backgroundColor: \"#7721ad\",\r\n    borderColor: \"#7721ad\",\r\n    boxShadow: '0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)',\r\n    textTransform: \"none\",\r\n    display: \"flex\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n};\r\n\r\nexport const SubscriptionProvider: FC = ({ children }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const match = useRouteMatch<RouteParams>();\r\n    const [confirmations, setConfirmations] = useState(0);\r\n    const planData = useSelector(state => state.signup.verifyPlan);\r\n    const [listchannels, setlistchannels] = useState<ListChannels>(defaultListChannels);\r\n    const [foreground, setForeground] = useState<keyof ListChannels | undefined>(undefined);\r\n    const [validateBool, setValidateBool] = useState(false);\r\n    const form = useForm<MainData>({\r\n        defaultValues: {\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmpassword: \"\",\r\n            firstandlastname: \"\",\r\n            companybusinessname: \"\",\r\n            mobilephone: \"\",\r\n            facebookid: \"\",\r\n            googleid: \"\",\r\n            join_reason: \"\",\r\n            country: \"PE\",\r\n            countryname: \"PERU\",\r\n            currency: \"PEN\",\r\n            doctype: 1,\r\n            docnumber: \"\",\r\n            businessname: \"\",\r\n            fiscaladdress: \"\",\r\n            billingcontact: \"\",\r\n            billingcontactmail: \"\",\r\n            autosendinvoice: true,\r\n            companysize: \"\",\r\n            industry: \"\",\r\n            rolecompany: \"\",\r\n            pmemail: \"\",\r\n            pmphone: \"\",\r\n            firstnamecard: \"\",\r\n            lastnamecard: \"\",\r\n            creditcard: \"\",\r\n            mm: 0,\r\n            yyyy: \"\",\r\n            securitycode: \"\",\r\n            channels: {},\r\n        },\r\n    })\r\n    const [step, setStep] = useState(1);\r\n    const executeResultValidation = useSelector(state => state.subscription.requestValidateChannels);\r\n    const executeResult = useSelector(state => state.signup.insertChannel);\r\n\r\n    useEffect(() => {\r\n        if (!planData.loading && planData.error) {\r\n            window.open(paths.SIGNIN, \"_self\");\r\n        }\r\n\r\n        return () => {\r\n            dispatch(resetInsertChannel());\r\n        }\r\n    }, [planData, dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(verifyPlan(match.params.token));\r\n    }, [dispatch, match.params.token]);\r\n\r\n    useEffect(() => {\r\n        if (executeResult.loading === true) return;\r\n        if (executeResult.value && !executeResult.error) {\r\n            dispatch(showBackdrop(false));\r\n            setStep(4);\r\n            let msg = t(langKeys.successful_sign_up);\r\n            const googleid = form.getValues('googleid');\r\n            const facebookid = form.getValues('facebookid');\r\n            if (googleid || facebookid) {\r\n                msg = t(langKeys.successful_sign_up);\r\n            }\r\n            dispatch(showSnackbar({\r\n                show: true,\r\n                severity: \"success\",\r\n                message: msg,\r\n            }));\r\n        } else if (executeResult.error) {\r\n            var errormessage = t(executeResult.message || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n\r\n            dispatch(showBackdrop(false));\r\n\r\n            dispatch(showSnackbar({\r\n                show: true,\r\n                severity: \"error\",\r\n                message: errormessage,\r\n            }))\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [executeResult, form.getValues, t, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (validateBool) {\r\n            if (executeResultValidation.loading === true) {\r\n                return;\r\n            }\r\n\r\n            setValidateBool(false);\r\n\r\n            if (executeResultValidation.error) {\r\n                var errormessage = t(executeResultValidation.message || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() })\r\n\r\n                if (executeResultValidation.code) {\r\n                    errormessage = `${t(langKeys.suscriptionlinkerror)}${t(executeResultValidation.code)}`\r\n                }\r\n\r\n                dispatch(showBackdrop(false));\r\n                dispatch(showSnackbar({\r\n                    message: errormessage,\r\n                    show: true,\r\n                    severity: \"error\",\r\n                }));\r\n            } else {\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [executeResultValidation, validateBool])\r\n\r\n    const deleteChannel = (option: keyof ListChannels) => {\r\n        setlistchannels(prev => {\r\n            const v = prev[option];\r\n            if (foreground === option) setForeground(undefined);\r\n\r\n            if (v === false) return prev;\r\n            return {\r\n                ...prev,\r\n                [option]: false,\r\n            };\r\n        });\r\n    }\r\n\r\n    const addChannel = (option: keyof ListChannels) => {\r\n        setlistchannels(prev => {\r\n            const v = prev[option];\r\n            if (v === true) return prev;\r\n            return {\r\n                ...prev,\r\n                [option]: true,\r\n            };\r\n        });\r\n    }\r\n\r\n    const toggleChannel = (option: keyof ListChannels) => {\r\n        setlistchannels(prev => {\r\n            const value = !prev[option];\r\n            if (!value && foreground === option) {\r\n                setForeground(undefined);\r\n            }\r\n            return {\r\n                ...prev,\r\n                [option]: value,\r\n            };\r\n        });\r\n    }\r\n\r\n    const resetChannels = () => setlistchannels(defaultListChannels);\r\n\r\n    const selectedChannels = useMemo(() => {\r\n        return Object.keys(listchannels)\r\n            .filter(key => listchannels[key as keyof ListChannels] === true)\r\n            .length;\r\n    }, [listchannels]);\r\n\r\n    const finishreg = () => {\r\n        form.handleSubmit(onSubmit, onError)();\r\n        submitObs.trigger();\r\n    }\r\n    const valchannels = () => {\r\n        form.handleSubmit(onVal, onError)();\r\n    }\r\n    const onCheckFunc = (altfunc?: any) => {\r\n        form.handleSubmit(altfunc, onError)();\r\n        submitObs.trigger();\r\n    }\r\n\r\n    const onVal: SubmitHandler<MainData> = (data) => {\r\n        const { channels, ...mainData } = data;\r\n\r\n        let partialchannels = Object.values(channels);\r\n\r\n        const majorfield = {\r\n            method: \"UFN_CREATEZYXMEACCOUNT_INS\",\r\n            key: \"UFN_CREATEZYXMEACCOUNT_INS\",\r\n            parameters: {\r\n                ...mainData,\r\n                firstname: mainData.firstandlastname,\r\n                lastname: \"\",\r\n                username: mainData.email,\r\n                contactemail: mainData.billingcontactmail,\r\n                contact: mainData.billingcontact,\r\n                organizationname: mainData.companybusinessname,\r\n                phone: mainData.mobilephone,\r\n                industry: mainData.industry,\r\n                companysize: mainData.companysize,\r\n                rolecompany: mainData.rolecompany,\r\n                paymentplanid: planData.data[0].paymentplanid,\r\n                paymentplan: planData.data[0].plan,\r\n                sunatcountry: mainData.country,\r\n                timezoneoffset: (new Date().getTimezoneOffset() / 60) * -1,\r\n                timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n            },\r\n            channellist: partialchannels.map(\r\n                function <T extends { build: (v: any) => IRequestBody }>(x: T) {\r\n                    return x.build(x);\r\n                }\r\n            ),\r\n        };\r\n        dispatch(showBackdrop(true));\r\n        dispatch(validateChannels(majorfield));\r\n        setValidateBool(true);\r\n    }\r\n\r\n    const onSubmit: SubmitHandler<MainData> = (data) => {\r\n        const { channels, ...mainData } = data;\r\n        const majorfield = {\r\n            method: \"UFN_CREATEZYXMEACCOUNT_INS\",\r\n            key: \"UFN_CREATEZYXMEACCOUNT_INS\",\r\n            card: {\r\n                firstname: mainData.firstnamecard,\r\n                lastname: mainData.lastnamecard,\r\n                mail: mainData.pmemail,\r\n                phone: mainData.pmphone,\r\n                cardnumber: mainData.creditcard.replace(/[^0-9]/g, ''),\r\n                expirationmonth: String(mainData.mm),\r\n                expirationyear: mainData.yyyy,\r\n                securitycode: mainData.securitycode,\r\n            },\r\n            parameters: {\r\n                ...mainData,\r\n                firstname: mainData.firstandlastname,\r\n                lastname: \"\",\r\n                username: mainData.email,\r\n                contactemail: mainData.billingcontactmail,\r\n                contact: mainData.billingcontact,\r\n                organizationname: mainData.companybusinessname,\r\n                phone: mainData.mobilephone,\r\n                industry: mainData.industry,\r\n                companysize: mainData.companysize,\r\n                rolecompany: mainData.rolecompany,\r\n                paymentplanid: planData.data[0].paymentplanid,\r\n                paymentplan: planData.data[0].plan,\r\n                sunatcountry: mainData.country,\r\n                timezoneoffset: (new Date().getTimezoneOffset() / 60) * -1,\r\n                timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n            },\r\n            channellist: Object.values(channels).map(\r\n                function <T extends { build: (v: any) => IRequestBody }>(x: T) {\r\n                    return x.build(x);\r\n                }\r\n            ),\r\n        };\r\n        dispatch(showBackdrop(true));\r\n        dispatch(executeSubscription(majorfield));\r\n    }\r\n\r\n    const onError: SubmitErrorHandler<MainData> = (err) => {\r\n        dispatch(showSnackbar({\r\n            message: t(langKeys.subscription_missinginfo),\r\n            show: true,\r\n            severity: \"error\",\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <SubscriptionContext.Provider value={{\r\n            selectedChannels,\r\n            commonClasses: classes,\r\n            foreground,\r\n            step,\r\n            confirmations,\r\n            listchannels,\r\n            setConfirmations,\r\n            setStep,\r\n            finishreg,\r\n            valchannels,\r\n            onCheckFunc,\r\n            setForeground,\r\n            addChannel,\r\n            deleteChannel,\r\n            resetChannels,\r\n            toggleChannel,\r\n            FBButtonStyles,\r\n            submitObservable: submitObs,\r\n            form\r\n        }}>\r\n            <FormProvider {...form}>\r\n                {children}\r\n            </FormProvider>\r\n        </SubscriptionContext.Provider>\r\n    )\r\n}\r\n\r\ninterface PlanData {\r\n    loading: boolean;\r\n    plan: {\r\n        limitChannels: number,\r\n        plan: PlanType,\r\n        provider: string,\r\n        phonetax: number,\r\n    } | null\r\n}\r\n\r\nexport function usePlanData(): PlanData {\r\n    const match = useRouteMatch<RouteParams>();\r\n    const planData = useSelector(state => state.signup.verifyPlan);\r\n    return useMemo(() => {\r\n        if (planData.loading) {\r\n            return {\r\n                loading: true,\r\n                plan: null,\r\n            };\r\n        }\r\n\r\n        return {\r\n            loading: false,\r\n            plan: {\r\n                // ...planData.data[0],\r\n                limitChannels: planData.data[0]?.channelscontracted || 0,\r\n                plan: match.params.token as PlanType,\r\n                provider: planData.data[0]?.providerwhatsapp || \"\",\r\n                phonetax: planData.data[0]?.phonetax || \"\",\r\n            },\r\n        };\r\n    }, [planData, match.params.token]);\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { CSSProperties, FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Button, TextField, InputAdornment, IconButton } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useDispatch } from \"react-redux\";\r\nimport GoogleLogin from 'react-google-login';\r\nimport { Facebook as FacebookIcon } from \"@material-ui/icons\";\r\nimport { useSelector } from 'hooks';\r\nimport { apiUrls } from 'common/constants';\r\n\r\nimport { executeCheckNewUser } from \"store/signup/actions\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { showSnackbar } from \"store/popus/actions\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\nfunction validatePassword(password: string) {\r\n    var strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\");\r\n\r\n    if (password) {\r\n        return strongRegex.exec(password);\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: \"bold\",\r\n        fontSize: '40px',\r\n        //textTransform: 'initial',\r\n        width: \"100%\"\r\n    },\r\n    buttonfacebook: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        '& span': {\r\n            width: '100%'\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n            '& span': {\r\n                width: '100%'\r\n            }\r\n        },\r\n    },\r\n    buttonGoogle: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        width: 400,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        '& button': {\r\n            fontSize: '20px!important',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            height: 50,\r\n            color: '#FFF',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%'\r\n        },\r\n    },\r\n    separator: {\r\n        width: 82,\r\n        borderBottom: \"2px solid #D1CBCB\",\r\n        marginLeft: 32,\r\n        marginRight: 32,\r\n        height: \"0\",\r\n    },\r\n    orSeparator: {\r\n        display: \"flex\",\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 28,\r\n        marginBottom: 18,\r\n    },\r\n}));\r\n\r\nconst FBButtonStyle2: CSSProperties = {\r\n    borderRadius: '3px',\r\n    width: \"100%\",\r\n    height: 50,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: 20,\r\n    fontStyle: 'normal',\r\n    fontWeight: 400,\r\n    textTransform: 'none',\r\n    justifyContent: 'center',\r\n    marginBottom: 16,\r\n    \r\n}\r\n\r\nconst FirstStep: FC = () => {\r\n    const { setStep } = useContext(SubscriptionContext);\r\n    const { control, setValue, getValues, trigger } = useFormContext<MainData>();\r\n    const rescheckuser = useSelector(state => state.signup);\r\n    const [waitSave, setwaitSave] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!rescheckuser.loading) {\r\n                if (rescheckuser.isvalid) {\r\n                    setStep(2)\r\n                    setwaitSave(false)\r\n                } else {\r\n                    dispatch(showSnackbar({\r\n                        show: true,\r\n                        severity: \"error\",\r\n                        message: t(langKeys.useralreadyregistered),\r\n                    }))\r\n                    setwaitSave(false)\r\n                }\r\n            }\r\n        }\r\n    }, [rescheckuser])\r\n    \r\n    const openprivacypolicies = () => {\r\n        window.open(\"/privacy\", '_blank');\r\n    }\r\n\r\n    const onGoogleLoginSucess = (r: any) => {\r\n        if (r && r.googleId) {\r\n            const content = {\r\n                \"method\": \"UFN_USERIDBYUSER\",\r\n                \"parameters\": {\r\n                    \"usr\": null,\r\n                    \"facebookid\": null,\r\n                    \"googleid\": String(r.googleId)\r\n                }\r\n            }\r\n            setwaitSave(true)\r\n            setValue('password', '');\r\n            setValue('confirmpassword', '');\r\n            setValue('email', '');\r\n            setValue('googleid', r.googleId);\r\n            setValue('facebookid', '');\r\n            dispatch(executeCheckNewUser(content))\r\n        }\r\n    }\r\n\r\n    const onGoogleLoginFailure = (event: any) => {\r\n        console.log('GOOGLE LOGIN FAILURE: ' + JSON.stringify(event));\r\n        if (event && event.error) {\r\n            switch (event.error) {\r\n                case 'idpiframe_initialization_failed':\r\n                case 'popup_closed_by_user':\r\n                    break;\r\n                default:\r\n                    alert(event.error);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    const onAuthWithFacebook = (r: any) => {\r\n        if (r && r.id) {\r\n            const content = {\r\n                \"method\": \"UFN_USERIDBYUSER\",\r\n                \"parameters\": {\r\n                    \"usr\": r.email,\r\n                    \"facebookid\": String(r.id),\r\n                    \"googleid\": null\r\n                }\r\n            }\r\n            setwaitSave(true)\r\n            setValue('password', '');\r\n            setValue('confirmpassword', '');\r\n            setValue('email', '');\r\n            setValue('googleid', '');\r\n            setValue('facebookid', r.id);\r\n            dispatch(executeCheckNewUser(content))\r\n        }\r\n    }\r\n\r\n    function handlesubmit() {\r\n        const content = {\r\n            \"method\": \"UFN_USERIDBYUSER\",\r\n            \"parameters\": {\r\n                \"usr\": getValues('email'),\r\n                \"facebookid\": null,\r\n                \"googleid\": null\r\n            }\r\n        }\r\n        setwaitSave(true)\r\n        dispatch(executeCheckNewUser(content))\r\n    }\r\n\r\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n    const handleMouseDownPassword = (event: any) => event.preventDefault();\r\n    return (\r\n        <>\r\n            <meta name=\"google-signin-client_id\" content={apiUrls.GOOGLECLIENTID_LOGIN} />\r\n            <script src=\"https://apis.google.com/js/platform.js\" async defer></script>\r\n            <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginBottom: 32, marginTop: 15 }}>{t(langKeys.signupstep1title)}</div>\r\n            <div className={classes.buttonfacebook}>\r\n                <FacebookLogin\r\n                    appId={apiUrls.FACEBOOKAPP}\r\n                    callback={onAuthWithFacebook}\r\n                    fields=\"name,email,picture\"\r\n                    buttonStyle={FBButtonStyle2}\r\n                    textButton={t(langKeys.signup_with_facebook)}\r\n                    icon={<FacebookIcon style={{ color: 'white', marginRight: '8px'}} />}\r\n                    isDisabled={false}\r\n                    disableMobileRedirect={true}\r\n                />\r\n            </div>\r\n            <div className={classes.buttonGoogle}>\r\n                <GoogleLogin\r\n                    clientId={apiUrls.GOOGLECLIENTID_LOGIN}\r\n                    buttonText={t(langKeys.signupgooglebutton)}\r\n                    style={{ borderRadius: '3px', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                    onSuccess={onGoogleLoginSucess}\r\n                    onFailure={onGoogleLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    accessType='online'\r\n                    \r\n                    autoLoad={false}\r\n                />\r\n            </div>\r\n\r\n            <div className={classes.orSeparator}>\r\n                <div className={classes.separator} />\r\n                <div style={{ fontSize: 24, fontWeight: 500, color: \"#989898\" }}>\r\n                    <Trans i18nKey={langKeys.signupor} />\r\n                </div>\r\n                <div className={classes.separator} />\r\n            </div>\r\n\r\n            <div>\r\n                <Controller\r\n                    name=\"email\"\r\n                    control={control}\r\n                    rules={{ validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n                            return t(langKeys.emailverification) as string;\r\n                        }\r\n                    }}}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            type=\"email\"\r\n                            label={t(langKeys.email)}\r\n                            error={!!errors.email}\r\n                            helperText={errors.email?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"password\"\r\n                    control={control}\r\n                    rules={{ validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        } else {\r\n                            if (validatePassword(value) === null) {\r\n                                return t(langKeys.password_strongvalidation) as string;\r\n                            }\r\n\r\n                            if (value !== getValues('confirmpassword')) {\r\n                                return t(langKeys.passwordsmustbeequal) as string;\r\n                            }\r\n                        }\r\n                    }}}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label={t(langKeys.password)}\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            autoComplete=\"current-password\"\r\n                            error={!!errors.password}\r\n                            helperText={errors.password?.message}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"confirmpassword\"\r\n                    control={control}\r\n                    rules={{ validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        } else if (value !== getValues('confirmpassword')) {\r\n                            return t(langKeys.passwordsmustbeequal) as string;\r\n                        }\r\n                    }}}\r\n                    render={({ field, formState: { errors }}) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            label={t(langKeys.confirmpassword)}\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            autoComplete=\"current-password\"\r\n                            error={!!errors.password}\r\n                            helperText={errors.password?.message}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                ),\r\n                            }}\r\n                        />\r\n                    )}\r\n                />\r\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid*/}\r\n                <div style={{ textAlign: \"center\", padding: \"20px\" }}>{t(langKeys.tos)}<a style={{ fontWeight: 'bold', color: '#6F1FA1', cursor: 'pointer' }} onClick={openprivacypolicies} rel=\"noopener noreferrer\">{t(langKeys.privacypoliciestitle)}</a></div>\r\n                <div style={{ textAlign: \"center\", padding: \"20px\" }}>{t(langKeys.tossub1)} <a href=\"#\" style={{ fontWeight: 'bold', color: '#6F1FA1'}} rel=\"noopener noreferrer\">{t(langKeys.creditcard)}</a> {t(langKeys.tossub2)}</div>\r\n                <Button\r\n                    onClick={async () => {\r\n                        const valid = await trigger();\r\n                        if (valid) {\r\n                            handlesubmit();\r\n                        }\r\n                    }}\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    // disabled={disablebutton}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FirstStep","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Button, TextField, Breadcrumbs } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { IDomain } from \"@types\"\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetMain, getCollectionPublic } from 'store/main/actions';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { FieldMultiSelect, FieldSelect } from \"components\";\r\nimport { getValuesFromDomain } from \"common/helpers/requestBodies\";\r\nimport { getCountryList } from \"store/signup/actions\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: \"bold\",\r\n        fontSize: '40px',\r\n        //textTransform: 'initial',\r\n        width: \"100%\"\r\n    },\r\n}));\r\n\r\nconst CssPhonemui = styled(MuiPhoneNumber)({\r\n    '& label.Mui-focused': {\r\n        color: '#7721ad',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#7721ad',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#7721ad',\r\n        },\r\n    },\r\n});\r\n\r\nconst URL = \"https://ipapi.co/json/\";\r\nconst SecondStep: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { getValues, setValue, control, trigger } = useFormContext<MainData>();\r\n    const { setStep } = useContext(SubscriptionContext);\r\n\r\n    const mainResult = useSelector(state => state.main.mainData);\r\n    const ressignup = useSelector(state => state.signup.countryList);\r\n\r\n    const [phoneCountry, setPhoneCountry] = useState('');\r\n\r\n    const fetchData = () => dispatch(getCollectionPublic(getValuesFromDomain(\"REASONSSIGNUP\")));\r\n    useEffect(() => {\r\n        dispatch(getCountryList())\r\n        try {\r\n            fetch(URL, { method: \"get\" })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    // PERU, PE, PEN\r\n                    const countryCode = data.country_code.toUpperCase();\r\n\r\n                    setPhoneCountry(countryCode);\r\n                    setValue('country', countryCode);\r\n                    setValue('doctype', countryCode === \"PE\" ? 1 : 0);\r\n                    setValue('countryname', data.country_name.toUpperCase());\r\n                    setValue('currency', data.currency);\r\n                })\r\n        }\r\n        catch (error) {\r\n            console.error(\"error\");\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            dispatch(resetMain());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n\r\n    return (\r\n        <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setOpenWarning(true) }}>\r\n                    {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginTop: 15 }}>{t(langKeys.signupstep1title2)}</div>\r\n            <div >\r\n                <Controller\r\n                    name=\"firstandlastname\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={t(langKeys.firstandlastname)}\r\n                            error={!!errors.firstandlastname}\r\n                            helperText={errors.firstandlastname?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"companybusinessname\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={t(langKeys.companybusinessname)}\r\n                            error={!!errors.companybusinessname}\r\n                            helperText={errors.companybusinessname?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"country\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field: { onChange }, formState: { errors } }) => (\r\n                        <FieldSelect\r\n                            onChange={(data) => {\r\n                                onChange(data?.code || '');\r\n                                setValue('doctype', data?.code === \"PE\" ? 1 : 0);\r\n                                setPhoneCountry(data?.code || '');\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{ marginTop: 8 }}\r\n                            label={t(langKeys.country)}\r\n                            valueDefault={getValues('country')}\r\n                            error={errors.country?.message}\r\n                            data={ressignup.data}\r\n                            optionDesc=\"description\"\r\n                            optionValue=\"code\"\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"mobilephone\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }else if(value.length<10){\r\n                                return t(langKeys.validationphone) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <CssPhonemui\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            defaultCountry={phoneCountry.toLowerCase()}\r\n                            label={t(langKeys.mobilephoneoptional)}\r\n                            error={!!errors.mobilephone}\r\n                            helperText={errors.mobilephone?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <div style={{ paddingTop: 20, fontWeight: \"bold\", color: \"#381052\" }}>\r\n                    <Trans i18nKey={langKeys.laraigouse} />\r\n                    <span style={{ fontSize: 14, fontWeight: 500 }}>\r\n                        {` (${t(langKeys.optional).toLowerCase()})`}\r\n                    </span>\r\n                </div>\r\n                <Controller\r\n                    name=\"join_reason\"\r\n                    control={control}\r\n                    render={({ field: { onChange }, formState: { errors } }) => (\r\n                        <FieldMultiSelect\r\n                            onChange={(data: IDomain[]) => {\r\n                                onChange(data?.map(x => x.domainvalue)?.join() || '');\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            error={errors.join_reason?.message}\r\n                            data={mainResult.data as IDomain[]}\r\n                            prefixTranslation=\"reason_\"\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    )}\r\n                />\r\n                <Button\r\n                    onClick={async () => {\r\n                        const valid = await trigger();\r\n                        if (valid) {\r\n                            setStep(2.5);\r\n                        }\r\n                    }}\r\n                    className={classes.button}\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ marginTop: '0.43em' }}\r\n                    disabled={mainResult.loading || ressignup.loading}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SecondStep","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useMemo, useState } from \"react\";\r\nimport { makeStyles, Button, TextField, Breadcrumbs } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldSelect, FieldView } from \"components\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: \"bold\",\r\n        fontSize: '40px',\r\n        //textTransform: 'initial',\r\n        width: \"100%\"\r\n    },\r\n    fieldview: {\r\n        paddingTop: 10,\r\n    }\r\n}));\r\n\r\nconst Step2five: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const { setStep } = useContext(SubscriptionContext);\r\n    const { getValues, control, trigger } = useFormContext<MainData>();\r\n    const { t } = useTranslation();\r\n\r\n    const [docType, setDocType] = useState(getValues('doctype') || 0);\r\n\r\n    const databilling = useMemo(() => ([\r\n        { id: 1, desc: t(langKeys.billingfield_billingdni) },\r\n        { id: 2, desc: t(langKeys.billingfield_billingextra) },\r\n        { id: 3, desc: t(langKeys.billingfield_billingruc) },\r\n    ]), [t]);\r\n\r\n    const docTypeValidate = (docnum: string, docType: number) => {\r\n        if (!docnum) {\r\n            return t(langKeys.field_required);\r\n        }\r\n\r\n        let msg = \"\";\r\n        switch (docType) {\r\n            case 1: // DNI\r\n                msg = t(langKeys.doctype_dni_error);\r\n                return docnum.length !== 8 ? msg : undefined;\r\n            case 2: // CARNET DE EXTRANJERIA\r\n                msg = t(langKeys.doctype_foreigners_card);\r\n                return docnum.length <= 12 ? msg : undefined;\r\n            case 3: // REG. UNICO DE CONTRIBUYENTES\r\n                msg = t(langKeys.doctype_ruc_error);\r\n                return docnum.length !== 11 ? msg : undefined;\r\n            default: return t(langKeys.doctype_unknown_error);\r\n        }\r\n    }\r\n\r\n    const classes = useChannelAddStyles();\r\n    return (\r\n        <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setOpenWarning(true) }}>\r\n                    {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginTop: 15 }}>{t(langKeys.signupstep1title25)}</div>\r\n            {getValues('doctype') === 0 ?\r\n                <FieldView\r\n                    className={classes.fieldview}\r\n                    label={t(langKeys.docType)}\r\n                    value={t(langKeys.billingfield_billingno)}\r\n                /> :\r\n                <Controller\r\n                    name=\"doctype\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value === null || value === undefined) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field: { onChange }, formState: { errors } }) => (\r\n                        <FieldSelect\r\n                            onChange={(data: typeof databilling[number]) => {\r\n                                onChange(data?.id || \"\");\r\n                                setDocType(data?.id || 0);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{ marginTop: 8 }}\r\n                            valueDefault={getValues('doctype')}\r\n                            label={t(langKeys.docType)}\r\n                            error={errors.doctype?.message}\r\n                            data={databilling}\r\n                            optionDesc=\"desc\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                    )}\r\n                />\r\n            }\r\n\r\n            {getValues('doctype') !== 0 &&\r\n                <Controller\r\n                    name=\"docnumber\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: value => docTypeValidate(\r\n                            value,\r\n                            getValues('doctype'),\r\n                        ),\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={t(langKeys.docNumber)}\r\n                            error={!!errors.docnumber}\r\n                            helperText={errors.docnumber?.message}\r\n                            type=\"number\"\r\n                        />\r\n                    )}\r\n                />\r\n            }\r\n            <Controller\r\n                name=\"businessname\"\r\n                control={control}\r\n                rules={{\r\n                    validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        }\r\n                    }\r\n                }}\r\n                render={({ field, formState: { errors } }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label={(docType === 1 || docType === 2) ? t(langKeys.name) : t(langKeys.businessname)}\r\n                        error={!!errors.businessname}\r\n                        helperText={errors.businessname?.message}\r\n                    />\r\n                )}\r\n            />\r\n            <Controller\r\n                name=\"fiscaladdress\"\r\n                control={control}\r\n                rules={{\r\n                    validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        }\r\n                    }\r\n                }}\r\n                render={({ field, formState: { errors } }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label={t(langKeys.fiscaladdress)}\r\n                        error={!!errors.fiscaladdress}\r\n                        helperText={errors.fiscaladdress?.message}\r\n                    />\r\n                )}\r\n            />\r\n            <Controller\r\n                name=\"billingcontact\"\r\n                control={control}\r\n                rules={{\r\n                    validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        }\r\n                    }\r\n                }}\r\n                render={({ field, formState: { errors } }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label={t(langKeys.billingcontact)}\r\n                        error={!!errors.billingcontact}\r\n                        helperText={errors.billingcontact?.message}\r\n                    />\r\n                )}\r\n            />\r\n            <Controller\r\n                name=\"billingcontactmail\"\r\n                control={control}\r\n                rules={{\r\n                    validate: (value) => {\r\n                        if (value.length === 0) {\r\n                            return t(langKeys.field_required) as string;\r\n                        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n                            return t(langKeys.emailverification) as string;\r\n                        }\r\n                    }\r\n                }}\r\n                render={({ field, formState: { errors } }) => (\r\n                    <TextField\r\n                        {...field}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label={t(langKeys.billingcontactmail)}\r\n                        error={!!errors.billingcontactmail}\r\n                        helperText={errors.billingcontactmail?.message}\r\n                    />\r\n                )}\r\n            />\r\n            <Button\r\n                onClick={async () => {\r\n                    const valid = await trigger();\r\n                    if (valid) {\r\n                        setStep(2.6);\r\n                    }\r\n                }}\r\n                className={classes.button}\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ marginTop: 8 }}\r\n            >\r\n                <Trans i18nKey={langKeys.next} />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Step2five","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext } from \"react\";\r\nimport { makeStyles, Typography, Paper } from '@material-ui/core';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans } from \"react-i18next\";\r\nimport clsx from \"clsx\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ControlPoint as ControlPointIcon } from \"@material-ui/icons\";\r\nimport {\r\n    LaraigoLogo,\r\n    SmsColor,\r\n    EmailColor,\r\n    WebMessengerColor,\r\n    FacebookMessengerColor2 as FacebookMessengerColor,\r\n    FacebookColor2 as FacebookColor,\r\n    InstagramColor2 as InstagramColor,\r\n    TelegramColor2 as TelegramColor,\r\n    AndroidColor,\r\n    IosColor,\r\n    WhatsappColor,\r\n    TwitterColor,\r\n    VoiceColor,\r\n    //TikTokColor,\r\n    YouTubeColor,\r\n    LinkedInColor,\r\n    TeamsColor,\r\n    BloggerColor,\r\n} from \"icons\";\r\nimport { ListChannels, SubscriptionContext, usePlanData } from \"./context\";\r\n\r\ninterface ChannelOption {\r\n    icon: React.ReactNode;\r\n    label: React.ReactNode;\r\n    key: keyof ListChannels;\r\n    selected: Boolean;\r\n    onClick: () => void;\r\n}\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: \"bold\",\r\n        fontSize: '40px',\r\n        //textTransform: 'initial',\r\n        width: \"100%\"\r\n    },\r\n    buttonGoogle: {\r\n        '& button': {\r\n            fontSize: '24px!important',\r\n            justifyContent: 'center',\r\n            fontFamily: \"Helvetica,sans-serif!important\",\r\n            width: \"50%\",\r\n            marginLeft: \"25%\",\r\n            marginBottom: '20px',\r\n        }\r\n    },\r\n    separator: {\r\n        borderBottom: \"grey solid 1px\",\r\n        width: \"10vh\",\r\n        height: \"1.6vh\",\r\n        margin: \"0 40px\"\r\n    },\r\n    root: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        backgroundColor: 'inherit',\r\n        textAlign: 'start',\r\n        padding: '0 34px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        paddingBottom: \"20px\"\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n        fontSize: 32,\r\n        textAlign: 'center',\r\n        // margin: '20px 0',\r\n        color: theme.palette.primary.main,\r\n    },\r\n    subtitle: {\r\n        margin: '8px 0 8px 4px',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n        width: '100%',\r\n        textAlign: 'start',\r\n    },\r\n    icon: {\r\n        // fill: 'inherit',\r\n        fill: 'gray',\r\n        height: 38,\r\n        width: 'auto',\r\n    },\r\n    optionsContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        gap: 8\r\n    },\r\n}));\r\n\r\nconst ThirdStep: FC = () => {\r\n    const { listchannels, toggleChannel } = useContext(SubscriptionContext);\r\n    const planData = usePlanData();\r\n    const classes = useChannelAddStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const socialMediaOptions: ChannelOption[] = [\r\n        {\r\n            icon: <FacebookColor className={classes.icon} />,\r\n            label: t(langKeys.channel_facebook),\r\n            key: 'facebook',\r\n            onClick: () => {\r\n                toggleChannel('facebook');\r\n            },\r\n            selected: listchannels.facebook,\r\n        },\r\n        {\r\n            icon: <FacebookMessengerColor className={classes.icon} />,\r\n            label: t(langKeys.channel_messenger),\r\n            key: 'messenger',\r\n            onClick: () => {\r\n                toggleChannel('messenger');\r\n            },\r\n            selected: listchannels.messenger,\r\n        },\r\n        {\r\n            icon: <InstagramColor className={classes.icon} />,\r\n            label: t(langKeys.channel_instagram),\r\n            key: 'instagram',\r\n            onClick: () => {\r\n                toggleChannel('instagram');\r\n            },\r\n            selected: listchannels.instagram,\r\n        },\r\n        {\r\n            icon: <InstagramColor className={classes.icon} />,\r\n            label: t(langKeys.channel_instagramdm),\r\n            key: 'instagramDM',\r\n            onClick: () => {\r\n                toggleChannel('instagramDM');\r\n            },\r\n            selected: listchannels.instagramDM,\r\n        },\r\n        {\r\n            icon: <WhatsappColor className={classes.icon} />,\r\n            label: t(langKeys.channel_whatsapp),\r\n            key: 'whatsapp',\r\n            onClick: () => {\r\n                toggleChannel('whatsapp');\r\n            },\r\n            selected: listchannels.whatsapp,\r\n        },\r\n        {\r\n            icon: <TelegramColor className={classes.icon} />,\r\n            label: t(langKeys.channel_telegram),\r\n            key: 'telegram',\r\n            onClick: () => {\r\n                toggleChannel('telegram');\r\n            },\r\n            selected: listchannels.telegram,\r\n        },\r\n        {\r\n            icon: <TwitterColor className={classes.icon} />,\r\n            label: t(langKeys.channel_twitter),\r\n            key: 'twitter',\r\n            onClick: () => {\r\n                toggleChannel('twitter');\r\n            },\r\n            selected: listchannels.twitter,\r\n        },\r\n        {\r\n            icon: <TwitterColor className={classes.icon} />,\r\n            label: t(langKeys.channel_twitterdm),\r\n            key: 'twitterDM',\r\n            onClick: () => {\r\n                toggleChannel('twitterDM');\r\n            },\r\n            selected: listchannels.twitterDM,\r\n        },\r\n        /*{\r\n            icon: <TikTokColor className={classes.icon} />,\r\n            label: t(langKeys.channel_tiktok),\r\n            key: 'tiktok',\r\n            onClick: () => {\r\n                toggleChannel('tiktok');\r\n            },\r\n            selected: listchannels.tiktok,\r\n        },*/\r\n        {\r\n            icon: <YouTubeColor className={classes.icon} />,\r\n            label: t(langKeys.channel_youtube),\r\n            key: 'youtube',\r\n            onClick: () => {\r\n                toggleChannel('youtube');\r\n            },\r\n            selected: listchannels.youtube,\r\n        },\r\n        {\r\n            icon: <LinkedInColor className={classes.icon} />,\r\n            label: t(langKeys.channel_linkedin),\r\n            key: 'linkedin',\r\n            onClick: () => {\r\n                toggleChannel('linkedin');\r\n            },\r\n            selected: listchannels.linkedin,\r\n        },\r\n    ];\r\n    const businessChannelOptions: ChannelOption[] = [\r\n        {\r\n            icon: <WebMessengerColor className={classes.icon} />,\r\n            label: t(langKeys.channel_chatweb),\r\n            key: 'chatWeb',\r\n            onClick: () => toggleChannel('chatWeb'),\r\n            selected: listchannels.chatWeb,\r\n        },\r\n        {\r\n            icon: <EmailColor className={classes.icon} />,\r\n            label: t(langKeys.channel_email),\r\n            key: 'email',\r\n            onClick: () => toggleChannel('email'),\r\n            selected: listchannels.email\r\n        },\r\n        {\r\n            icon: <VoiceColor className={classes.icon} />,\r\n            label: t(langKeys.channel_phone),\r\n            key: 'phone',\r\n            onClick: () => toggleChannel('phone'),\r\n            selected: listchannels.voximplantphone\r\n        },\r\n        {\r\n            icon: <SmsColor className={classes.icon} />,\r\n            label: t(langKeys.channel_sms),\r\n            key: 'sms',\r\n            onClick: () => toggleChannel('sms'),\r\n            selected: listchannels.sms\r\n        },\r\n        {\r\n            icon: <IosColor className={classes.icon} />,\r\n            label: t(langKeys.channel_ios),\r\n            key: 'apple',\r\n            onClick: () => {\r\n                toggleChannel('apple');\r\n            },\r\n            selected: listchannels.apple,\r\n        },\r\n        {\r\n            icon: <AndroidColor className={classes.icon} />,\r\n            label: t(langKeys.channel_android),\r\n            key: 'android',\r\n            onClick: () => {\r\n                toggleChannel('android');\r\n            },\r\n            selected: listchannels.android,\r\n        },\r\n        {\r\n            icon: <TeamsColor className={classes.icon} />,\r\n            label: t(langKeys.channel_teams),\r\n            key: 'teams',\r\n            onClick: () => {\r\n                toggleChannel('teams');\r\n            },\r\n            selected: listchannels.teams,\r\n        },\r\n        {\r\n            icon: <BloggerColor className={classes.icon} />,\r\n            label: t(langKeys.channel_blogger),\r\n            key: 'blogger',\r\n            onClick: () => {\r\n                toggleChannel('blogger');\r\n            },\r\n            selected: listchannels.blogger,\r\n        },\r\n    ];\r\n\r\n    const description = () => {\r\n        switch (planData.plan!.plan) {\r\n            case \"BASIC\": return `${t(langKeys.subscription_channellimit)} 1`;\r\n            case \"PRO\": return `${t(langKeys.subscription_channellimit)} 3`;\r\n            case \"ADVANCED\":\r\n            case \"ENTERPRISE\":\r\n            case \"PREMIUM\":\r\n                return `${t(langKeys.subscription_channellimit)} ${t(langKeys.subscription_nolimit)}`;\r\n            default: return \"-\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LaraigoLogo style={{ width: '25%', height: 'auto', marginBottom: 10 }} />\r\n            <div className={classes.title}>\r\n                {planData.plan!.plan}\r\n            </div>\r\n            <Typography style={{ fontSize: 20, fontWeight: 400 }}>\r\n                {description()}\r\n            </Typography>\r\n            <Typography className={classes.subtitle}>\r\n                <Trans i18nKey={langKeys.socialmediachannel} />\r\n            </Typography>\r\n            <div className={classes.optionsContainer}>\r\n                {socialMediaOptions.map((e, i) =>\r\n                    <Option\r\n                        key={`social_media_option_${i}`}\r\n                        option={e}\r\n                        selected={listchannels[e.key as keyof ListChannels]}\r\n                        index={i}\r\n                    />\r\n                )}\r\n            </div>\r\n            <Typography className={classes.subtitle}>\r\n                <Trans i18nKey={langKeys.businesschannel} />\r\n            </Typography>\r\n            <div className={classes.optionsContainer}>\r\n                {businessChannelOptions.map((e, i) => (\r\n                    <Option\r\n                        key={`business_channel_option_${i}`}\r\n                        option={e}\r\n                        selected={listchannels[e.key as keyof ListChannels]}\r\n                        index={i}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {/* <Button\r\n                onClick={() => {\r\n                    setsendchannels(true);\r\n                    setrequestchannels([]);\r\n                }}\r\n                className={classes.button}\r\n                fullWidth\r\n                style={{ marginTop: 30 }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                //disabled={nextbutton}\r\n            >\r\n                <Trans i18nKey={langKeys.next} />\r\n            </Button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useOptionClasses = makeStyles(theme => ({\r\n    optionsContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%'\r\n    },\r\n    optionContainer: {\r\n        padding: '0 8px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 120,\r\n        height: 110,\r\n        backgroundColor: 'white',\r\n        fontSize: 15,\r\n        fontWeight: 400,\r\n        color: '#A59F9F',\r\n        fill: '#A59F9F',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        borderRadius: 8,\r\n        position: 'relative',\r\n\r\n        '-webkit-touch-callout': 'none', /* iOS Safari */\r\n        '-webkit-user-select': 'none', /* Safari */\r\n        '-khtml-user-select': 'none', /* Konqueror HTML */\r\n        '-moz-user-select': 'none', /* Old versions of Firefox */\r\n        '-ms-user-select': 'none', /* Internet Explorer/Edge */\r\n        userSelect: 'none',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: 110,\r\n        },\r\n    },\r\n    optionContainerHover: {\r\n        '&:hover': {\r\n            backgroundColor: '#ececec',\r\n            cursor: 'pointer',\r\n            fontWeight: 700,\r\n        },\r\n    },\r\n    optionContainerSelected: {\r\n        fontWeight: 700,\r\n    },\r\n    optionContainerActive: {\r\n        opacity: 1,\r\n    },\r\n    optionContainerDisabled: {\r\n        opacity: .5,\r\n    },\r\n    optionPlusDecorator: {\r\n        fill: theme.palette.primary.main,\r\n        color: theme.palette.primary.main,\r\n        position: 'absolute',\r\n        top: 8,\r\n        right: 8,\r\n        width: 22,\r\n        height: 22,\r\n    },\r\n    optionPlusDecoratorDisabled: {\r\n        fill: '#A59F9F',\r\n        color: '#A59F9F',\r\n    },\r\n    indexDecorator: {\r\n        position: 'absolute',\r\n        top: -6,\r\n        left: -8,\r\n        width: 24,\r\n        height: 24,\r\n        color: 'white',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: 12,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    optionIconContainer: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\ninterface OptionProps {\r\n    option: ChannelOption;\r\n    selected: Boolean;\r\n    index: number;\r\n}\r\n\r\nconst Option: FC<OptionProps> = ({ option, selected, index }) => {\r\n    const classes = useOptionClasses();\r\n    const { plan } = usePlanData();\r\n    const { selectedChannels } = useContext(SubscriptionContext);\r\n\r\n    const reachedLimit = plan!.limitChannels <= selectedChannels;\r\n    const withOpacity = reachedLimit && !selected;\r\n\r\n    return (\r\n        <Paper\r\n            className={\r\n                clsx(classes.optionContainer, {\r\n                    [classes.optionContainerHover]: !withOpacity,\r\n                    [classes.optionContainerSelected]: selected,\r\n                    [classes.optionContainerActive]: !withOpacity,\r\n                    [classes.optionContainerDisabled]: withOpacity,\r\n                })\r\n            }\r\n            elevation={selected ? 4 : 0}\r\n            onClick={() => withOpacity || option.onClick()}\r\n        >\r\n            <div\r\n                className={clsx(classes.optionPlusDecorator, {\r\n                    [classes.optionPlusDecoratorDisabled]: selected || withOpacity,\r\n                })}\r\n            >\r\n                <ControlPointIcon style={{ height: 'inherit', width: 'inherit' }} />\r\n            </div>\r\n            {selected && <div className={classes.indexDecorator}>\r\n                {index + 1}\r\n            </div>}\r\n            <div className={classes.optionIconContainer}>\r\n                {option.icon}\r\n            </div>\r\n            <div style={{ height: 38 }}>\r\n                <span>{option.label}</span>\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default ThirdStep","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Button, Breadcrumbs, Link } from '@material-ui/core';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\n\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getMultiCollectionPublic } from \"store/main/actions\";\r\nimport { FieldSelect } from \"components\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\nimport { IDomain } from \"@types\";\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: \"bold\",\r\n        fontSize: '40px',\r\n        //textTransform: 'initial',\r\n        width: \"100%\"\r\n    },\r\n    buttonGoogle: {\r\n        '& button': {\r\n            fontSize: '24px!important',\r\n            justifyContent: 'center',\r\n            fontFamily: \"Helvetica,sans-serif!important\",\r\n            width: \"50%\",\r\n            marginLeft: \"25%\",\r\n            marginBottom: '20px'\r\n        }\r\n    },\r\n    separator: {\r\n        borderBottom: \"grey solid 1px\",\r\n        width: \"10vh\",\r\n        height: \"1.6vh\",\r\n        margin: \"0 40px\"\r\n    },\r\n}));\r\n\r\ninterface LastStepProps {\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nconst Step2Six: FC<LastStepProps> = ({ setOpenWarning }) => {\r\n    const { setStep } = useContext(SubscriptionContext);\r\n    const { control, trigger } = useFormContext<MainData>();\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const dispatch = useDispatch();\r\n    const [industryList, setindustryList] = useState<any>([]);\r\n    const [companySizeList, setcompanySizeList] = useState<any>([]);\r\n    const [roleList, setroleList] = useState<any>([]);\r\n    const multiResult = useSelector(state => state.main.multiData.data);\r\n    const executeResult = useSelector(state => state.signup.insertChannel);\r\n    \r\n    useEffect(() => {\r\n        dispatch(getMultiCollectionPublic([\"SignUpIndustry\", \"SignUpCompanySize\", \"SignUpRoles\"]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (multiResult.length) {\r\n            setindustryList(multiResult[0].data)\r\n            setcompanySizeList(multiResult[1].data)\r\n            setroleList(multiResult[2].data)\r\n        }\r\n    }, [multiResult]);\r\n\r\n    return (\r\n        <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link\r\n                    color=\"textSecondary\"\r\n                    href=\"/\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setOpenWarning(true);\r\n                    }}\r\n                >\r\n                    {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div>\r\n                <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.laststepsignup)}</div>\r\n                <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px\" }}>{t(langKeys.laststepsignup2)}</div>\r\n            </div>\r\n\r\n            <div style={{ padding: \"20px\" }}>\r\n                <Controller\r\n                    name=\"industry\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field: { onChange }, formState: { errors } }) => (\r\n                        <FieldSelect\r\n                            uset\r\n                            onChange={(data: IDomain) => {\r\n                                onChange(data?.domainvalue || \"\");\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{ marginBottom: \"20px\" }}\r\n                            label={t(langKeys.industry)}\r\n                            error={errors.industry?.message}\r\n                            data={industryList as IDomain[]}\r\n                            prefixTranslation=\"industry_\"\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"companysize\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field: { onChange }, formState: { errors } }) => (\r\n                        <FieldSelect\r\n                            uset\r\n                            onChange={(data: IDomain) => {\r\n                                onChange(data?.domainvalue || \"\");\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{ marginBottom: \"20px\" }}\r\n                            label={t(langKeys.companysize)}\r\n                            error={errors.companysize?.message}\r\n                            data={companySizeList as IDomain[]}\r\n                            prefixTranslation=\"companysize_\"\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"rolecompany\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (value.length === 0) {\r\n                                return t(langKeys.field_required) as string;\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field: { onChange }, formState: { errors } }) => (\r\n                        <FieldSelect\r\n                            uset\r\n                            onChange={(data: IDomain) => {\r\n                                onChange(data?.domainvalue || \"\");\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            style={{ marginBottom: \"20px\" }}\r\n                            label={t(langKeys.roleincompany)}\r\n                            error={errors.rolecompany?.message}\r\n                            data={roleList as IDomain[]}\r\n                            prefixTranslation=\"companyrole_\"\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    )}\r\n                />\r\n                <div>\r\n                    <Button\r\n                        onClick={async () => {\r\n                            const valid = await trigger();\r\n                            if (valid) {\r\n                                setStep(3);\r\n                            }\r\n                        }}\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={executeResult.loading}\r\n                    >\r\n                        <Trans i18nKey={langKeys.next} />\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Step2Six","import { FC, useContext, useState } from \"react\";\r\nimport { Button, Collapse, IconButton, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { Trans } from \"react-i18next\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { SubscriptionContext } from \"./context\";\r\nimport {\r\n    MoodBad as MoodBadIcon,\r\n    InsertEmoticon as InsertEmoticonIcon,\r\n    Face as  Faceicon,\r\n} from '@material-ui/icons';\r\nimport paths from \"common/constants/paths\";\r\n\r\nconst useRateStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '2em',\r\n        borderRadius: 4,\r\n        border: '1px solid rgb(0, 0, 0, .3)',\r\n        textAlign: 'center',\r\n        backgroundColor: 'white',\r\n\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n    ratingOptionsRow: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-evenly',\r\n        alignItems: 'center',\r\n        marginBottom: '1em',\r\n    },\r\n    ratingOption: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n}));\r\n\r\nconst RateExperience: FC = () => {\r\n    const classes = useRateStyles();\r\n    const { commonClasses } = useContext(SubscriptionContext);\r\n    const [rating, setRating] = useState<0 | 1 | 2 | 3>(0);\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <h1 className={classes.title}>\r\n                ¿Cómo calificaría su experiencia al suscribirse?\r\n            </h1>\r\n            <div className={classes.ratingOptionsRow}>\r\n                <div className={classes.ratingOption}>\r\n                    <IconButton\r\n                        color={rating === 0 || rating === 1 ? \"primary\" : \"default\"}\r\n                        onClick={() => setRating(1)}\r\n                    >\r\n                        <MoodBadIcon style={{ height: 74, width: 74 }} />\r\n                    </IconButton>\r\n                    <span>No me gusto</span>\r\n                </div>\r\n               <div className={classes.ratingOption}>\r\n                    <IconButton\r\n                        color={rating === 0 || rating === 2 ? \"primary\" : \"default\"}\r\n                        onClick={() => setRating(2)}\r\n                    >\r\n                        <Faceicon style={{ height: 74, width: 74 }} />\r\n                    </IconButton>\r\n                    <span>Puede mejorar</span>\r\n               </div>\r\n                <div className={classes.ratingOption}>\r\n                    <IconButton\r\n                        color={rating === 0 || rating === 3 ? \"primary\" : \"default\"}\r\n                        onClick={() => setRating(3)}\r\n                    >\r\n                        <InsertEmoticonIcon style={{ height: 74, width: 74 }} />\r\n                    </IconButton>\r\n                    <span>Me encanto</span>\r\n                </div>\r\n            </div>\r\n            <Collapse in={rating !== 0}>\r\n                <TextField\r\n                    label=\"¿Cómo podemos mejorar?\"\r\n                    variant=\"outlined\"\r\n                    value={comment}\r\n                    onChange={e => setComment(e.target.value)}\r\n                    multiline\r\n                    minRows={6}\r\n                    maxRows={6}\r\n                    style={{ resize: 'none' }}\r\n                    fullWidth\r\n                />\r\n            </Collapse>\r\n            <Button\r\n                onClick={() => window.open(paths.SIGNIN, \"_self\")}\r\n                className={commonClasses.button}\r\n                style={{ marginTop: '3em' }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={rating === 0 || comment.length === 0}\r\n            >\r\n                <Trans i18nKey={langKeys.next} />\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RateExperience\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext } from \"react\";\r\nimport FirstStep from './FirstStep';\r\nimport SecondStep from './SecondStep';\r\nimport Step2five from './Step2_5';\r\nimport ThirdStep from './ThirdStep';\r\nimport Step2Six from './LastStep';\r\nimport RateExperience from \"./Rating\";\r\nimport { SubscriptionContext } from \"./context\";\r\n\r\ninterface RightSideMenuProps {\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nconst RightSideMenu: FC<RightSideMenuProps> = ({ setOpenWarning }) => {\r\n    const { step } = useContext(SubscriptionContext);\r\n\r\n    if (step === 1) {\r\n        return <FirstStep />;\r\n    } else if (step === 2) {\r\n        return <SecondStep setOpenWarning={setOpenWarning} />;\r\n    } else if (step === 2.5) {\r\n        return <Step2five setOpenWarning={setOpenWarning} />;\r\n    } else if (step === 2.6) {\r\n        return <Step2Six setOpenWarning={setOpenWarning} />;\r\n    } else if (step === 3) {\r\n        // Seleccion de canales\r\n        return <ThirdStep />;\r\n    }\r\n\r\n    return <RateExperience />;\r\n}\r\n\r\nexport default RightSideMenu","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { IconButton, InputAdornment, Typography } from '@material-ui/core';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from \"@material-ui/icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FacebookColor } from \"icons\";\r\nimport { FieldEdit, FieldSelect } from \"components\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getFacebookPages, resetGetFacebookPages } from \"store/channel/actions\";\r\nimport { apiUrls } from 'common/constants';\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\ninterface ChannelAddFacebookProps {\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nexport const ChannelAddFacebook: FC<ChannelAddFacebookProps> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        FBButtonStyles,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.facebookPages);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.facebook.description', { validate: strRequired, value: '' });\r\n        register('channels.facebook.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.facebook.communicationchannelowner', { validate: strRequired, value: '' });\r\n        register('channels.facebook.communicationchannelsite', { validate: strRequired, value: '' });\r\n        register('channels.facebook.siteid', { validate: strRequired, value: '' });\r\n        register('channels.facebook.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": values.communicationchannelsite,\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#2d88ff\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"FACEBOOK\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"siteid\": values.siteid,\r\n                    \"appid\": apiUrls.FACEBOOKAPP\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.facebook')\r\n            dispatch(resetGetFacebookPages());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [register, unregister, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResult, waitSave])\r\n\r\n    const processFacebookCallback = async (r: any) => {\r\n        if (r.status !== \"unknown\" && !r.error) {\r\n            dispatch(getFacebookPages(r.accessToken, apiUrls.FACEBOOKAPP))\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n            setHasFinished(true);\r\n        }\r\n    }\r\n\r\n    function setValueField(value: any) {\r\n        setValue('channels.facebook.communicationchannelsite', value?.id || \"\");\r\n        setValue('channels.facebook.communicationchannelowner', value?.name || \"\");\r\n        setValue('channels.facebook.siteid', value?.id || \"\");\r\n        setValue('channels.facebook.accesstoken', value?.access_token || \"\");\r\n    }\r\n\r\n    return (\r\n        <div className={commonClasses.root}>\r\n            {!hasFinished && <FacebookColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('facebook');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"FACEBOOK\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.connectface2} />\r\n            </Typography>}\r\n            {hasFinished && <FacebookColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_facebook)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => setValue('channels.facebook.description', value)}\r\n                label={t(langKeys.givechannelname)}\r\n                valueDefault={getValues('channels.facebook.description')}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.facebook?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldSelect\r\n                onChange={(value) => setValueField(value)}\r\n                label={t(langKeys.selectpagelink)}\r\n                data={mainResult.data}\r\n                valueDefault={getValues('channels.facebook.siteid')}\r\n                optionDesc=\"name\"\r\n                optionValue=\"id\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={mainResult.loading || mainResult.data.length === 0}\r\n                error={errors.channels?.facebook?.siteid?.message}\r\n            />\r\n            {((getValues('channels.facebook.siteid')?.length || 0) === 0) && (mainResult.data.length === 0) && (\r\n                <FacebookLogin\r\n                    appId={apiUrls.FACEBOOKAPP}\r\n                    autoLoad={false}\r\n                    buttonStyle={FBButtonStyles}\r\n                    fields=\"name,email,picture\"\r\n                    scope=\"pages_manage_engagement,pages_manage_metadata,pages_messaging,pages_read_engagement,pages_read_user_content,pages_show_list,public_profile,pages_manage_posts\"\r\n                    callback={processFacebookCallback}\r\n                    textButton={t(langKeys.linkfacebookpage)}\r\n                    // icon={<FacebookIcon style={{ color: 'white', marginRight: '8px' }} />}\r\n                    onClick={(e: any) => {\r\n                        e.view.window.FB.init({\r\n                            appId: apiUrls.FACEBOOKAPP,\r\n                            cookie: true,\r\n                            xfbml: true,\r\n                            version: apiUrls.FACEBOOKVERSION,\r\n                        });\r\n                    }}\r\n                    isDisabled={mainResult.loading}\r\n                    disableMobileRedirect={true}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Typography, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from \"@material-ui/icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, FieldSelect } from \"components\";\r\nimport { InstagramColor } from \"icons\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getInstagramPages, resetGetInstagramPages } from \"store/channel/actions\";\r\nimport { apiUrls } from 'common/constants';\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\ninterface ChannelAddInstagramProps {\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nexport const ChannelAddInstagram: FC<ChannelAddInstagramProps> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        FBButtonStyles,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n    const mainResult = useSelector(state => state.channel.instagramPages)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.instagram.description', { validate: strRequired, value: '' });\r\n        register('channels.instagram.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.instagram.communicationchannelowner', { validate: strRequired, value: '' });\r\n        register('channels.instagram.communicationchannelsite', { validate: strRequired, value: '' });\r\n        register('channels.instagram.siteid', { validate: strRequired, value: '' });\r\n        register('channels.instagram.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": values.communicationchannelsite,\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#F56040\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"INSTAGRAM\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"siteid\": values.siteid,\r\n                    \"appid\": apiUrls.INSTAGRAMAPP\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.instagram');\r\n            dispatch(resetGetInstagramPages());\r\n        }\r\n    }, [register, unregister, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult, waitSave])\r\n\r\n    const processFacebookCallback = async (r: any) => {\r\n        if (r.status !== \"unknown\" && !r.error) {\r\n            dispatch(getInstagramPages(r.accessToken, apiUrls.INSTAGRAMAPP))\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n            setHasFinished(true);\r\n        }\r\n    }\r\n\r\n    function setValueField(value: any) {\r\n        setValue('channels.instagram.communicationchannelsite', value?.id || \"\");\r\n        setValue('channels.instagram.communicationchannelowner', value?.name || \"\");\r\n        setValue('channels.instagram.siteid', value?.id || \"\");\r\n        setValue('channels.instagram.accesstoken', value?.access_token || \"\");\r\n    }\r\n\r\n    const openviewsteps = () => {\r\n        window.open(\"https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/VCA%20PERU/a61f2d61-a974-42e4-b393-481ef8311bb0/Instagram_warning.png\", '_blank');\r\n    }\r\n\r\n    return (\r\n        <div className={commonClasses.root}>\r\n            {!hasFinished && <InstagramColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('instagram');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"INSTAGRAM\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_instagramconnect} />\r\n            </Typography>}\r\n            {!hasFinished && <Typography style={{ color: \"#cc3333\" }}>\r\n                <Trans i18nKey={langKeys.instagram_warning}></Trans> <a style={{ fontWeight: 'bold', color: '#6F1FA1', cursor: 'pointer' }} onClick={openviewsteps} rel=\"noopener noreferrer\">[{t(langKeys.view_steps)}]</a>\r\n            </Typography>}\r\n            {hasFinished && <InstagramColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_instagram)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => setValue('channels.instagram.description', value)}\r\n                valueDefault={getValues('channels.instagram.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.instagram?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldSelect\r\n                onChange={(value) => setValueField(value)}\r\n                valueDefault={getValues('channels.instagram.siteid')}\r\n                label={t(langKeys.selectpagelink)}\r\n                data={mainResult.data}\r\n                optionDesc=\"name\"\r\n                optionValue=\"id\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={mainResult.loading || mainResult.data.length === 0}\r\n                error={errors.channels?.instagram?.siteid?.message}\r\n            />\r\n            {((getValues('channels.instagram.siteid')?.length || 0) === 0) && (mainResult.data.length === 0) && (\r\n                <FacebookLogin\r\n                    appId={apiUrls.INSTAGRAMAPP}\r\n                    autoLoad={false}\r\n                    buttonStyle={FBButtonStyles}\r\n                    fields=\"name,email,picture\"\r\n                    scope=\"instagram_basic,instagram_manage_comments,instagram_manage_messages,pages_manage_metadata,pages_read_engagement,pages_show_list,public_profile,instagram_content_publish\"\r\n                    callback={processFacebookCallback}\r\n                    textButton={t(langKeys.linkinstagrampage)}\r\n                    onClick={(e: any) => {\r\n                        e.view.window.FB.init({\r\n                            appId: apiUrls.INSTAGRAMAPP,\r\n                            cookie: true,\r\n                            xfbml: true,\r\n                            version: apiUrls.FACEBOOKVERSION,\r\n                        });\r\n                    }}\r\n                    isDisabled={mainResult.loading}\r\n                    disableMobileRedirect={true}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { IconButton, InputAdornment, Typography } from '@material-ui/core';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from \"@material-ui/icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, FieldSelect } from \"components\";\r\nimport { InstagramColor3 } from \"icons\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getInstagramDMPages, resetGetInstagramDMPages } from \"store/channel/actions\";\r\nimport { apiUrls } from 'common/constants';\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nexport const ChannelAddInstagramDM: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        FBButtonStyles,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n    const mainResult = useSelector(state => state.channel.instagramDMPages)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.instagramDM.description', { validate: strRequired, value: '' });\r\n        register('channels.instagramDM.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.instagramDM.communicationchannelowner', { validate: strRequired, value: '' });\r\n        register('channels.instagramDM.communicationchannelsite', { validate: strRequired, value: '' });\r\n        register('channels.instagramDM.siteid', { validate: strRequired, value: '' });\r\n        register('channels.instagramDM.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": values.communicationchannelsite,\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#F56040\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"INSTAMESSENGER\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"siteid\": values.siteid,\r\n                    \"appid\": apiUrls.INSTAGRAMAPP\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.instagramDM');\r\n            dispatch(resetGetInstagramDMPages());\r\n        }\r\n    }, [register, unregister, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult, waitSave])\r\n\r\n    const processFacebookCallback = async (r: any) => {\r\n        if (r.status !== \"unknown\" && !r.error) {\r\n            dispatch(getInstagramDMPages(r.accessToken, apiUrls.INSTAGRAMAPP))\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n            setHasFinished(true);\r\n        }\r\n    }\r\n\r\n    function setValueField(value: any) {\r\n        setValue('channels.instagramDM.communicationchannelsite', value?.id || \"\");\r\n        setValue('channels.instagramDM.communicationchannelowner', value?.name || \"\");\r\n        setValue('channels.instagramDM.siteid', value?.id || \"\");\r\n        setValue('channels.instagramDM.accesstoken', value?.access_token || \"\");\r\n    }\r\n\r\n    const openviewsteps = () => {\r\n        window.open(\"https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/VCA%20PERU/a61f2d61-a974-42e4-b393-481ef8311bb0/Instagram_warning.png\", '_blank');\r\n    }\r\n\r\n    return (\r\n        <div className={commonClasses.root}>\r\n            {!hasFinished && <InstagramColor3 className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('instagramDM');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"INSTAMESSENGER\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_instagramconnect} />\r\n            </Typography>}\r\n            {!hasFinished && <Typography style={{ color: \"#cc3333\" }}>\r\n                <Trans i18nKey={langKeys.instagram_warning}></Trans> <a style={{ fontWeight: 'bold', color: '#6F1FA1', cursor: 'pointer' }} onClick={openviewsteps} rel=\"noopener noreferrer\">[{t(langKeys.view_steps)}]</a>\r\n            </Typography>}\r\n            {hasFinished && <InstagramColor3\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_instagramdm)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => setValue('channels.instagramDM.description', value)}\r\n                valueDefault={getValues('channels.instagramDM.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.instagramDM?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldSelect\r\n                onChange={(value) => setValueField(value)}\r\n                valueDefault={getValues('channels.instagramDM.siteid')}\r\n                label={t(langKeys.selectpagelink)}\r\n                data={mainResult.data}\r\n                optionDesc=\"name\"\r\n                optionValue=\"id\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={mainResult.loading || mainResult.data.length === 0}\r\n                error={errors.channels?.instagramDM?.siteid?.message}\r\n            />\r\n            {((getValues('channels.instagramDM.siteid')?.length || 0) === 0) && (mainResult.data.length === 0) && (\r\n                <FacebookLogin\r\n                    appId={apiUrls.INSTAGRAMAPP}\r\n                    autoLoad={false}\r\n                    buttonStyle={FBButtonStyles}\r\n                    fields=\"name,email,picture\"\r\n                    scope=\"instagram_basic,instagram_manage_comments,instagram_manage_messages,pages_manage_metadata,pages_read_engagement,pages_show_list,public_profile,instagram_content_publish\"\r\n                    callback={processFacebookCallback}\r\n                    textButton={t(langKeys.linkinstagrampage)}\r\n                    onClick={(e: any) => {\r\n                        e.view.window.FB.init({\r\n                            appId: apiUrls.INSTAGRAMAPP,\r\n                            cookie: true,\r\n                            xfbml: true,\r\n                            version: apiUrls.FACEBOOKVERSION,\r\n                        });\r\n                    }}\r\n                    isDisabled={mainResult.loading}\r\n                    disableMobileRedirect={true}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { Typography, IconButton, InputAdornment } from '@material-ui/core';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from \"@material-ui/icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, FieldSelect } from \"components\";\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMessengerPages, resetGetMessengerPages } from \"store/channel/actions\";\r\nimport { FacebookMessengerColor } from \"icons\";\r\nimport { apiUrls } from 'common/constants';\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\ninterface ChannelAddMessengerProps {\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nexport const ChannelAddMessenger: FC<ChannelAddMessengerProps> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        FBButtonStyles,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.messengerPages)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.messenger.description', { validate: strRequired, value: '' });\r\n        register('channels.messenger.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.messenger.communicationchannelowner', { validate: strRequired, value: '' });\r\n        register('channels.messenger.communicationchannelsite', { validate: strRequired, value: '' });\r\n        register('channels.messenger.siteid', { validate: strRequired, value: '' });\r\n        register('channels.messenger.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": values.communicationchannelsite,\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#0078FF\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"MESSENGER\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"siteid\": values.siteid,\r\n                    \"appid\": apiUrls.FACEBOOKAPP\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.messenger');\r\n            dispatch(resetGetMessengerPages());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [register, unregister, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResult, waitSave])\r\n\r\n    const processFacebookCallback = async (r: any) => {\r\n        if (r.status !== \"unknown\" && !r.error) {\r\n            dispatch(getMessengerPages(r.accessToken, apiUrls.FACEBOOKAPP))\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n            setHasFinished(true);\r\n        }\r\n    }\r\n\r\n    function setValueField(value: any) {\r\n        setValue('channels.messenger.communicationchannelsite', value?.id || \"\");\r\n        setValue('channels.messenger.communicationchannelowner', value?.name || \"\");\r\n        setValue('channels.messenger.siteid', value?.id || \"\");\r\n        setValue('channels.messenger.accesstoken', value?.access_token || \"\");\r\n    }\r\n\r\n    return (\r\n        <div className={commonClasses.root}>\r\n            {!hasFinished && <FacebookMessengerColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('messenger');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"MESSENGER\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <FacebookMessengerColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center', fill: 'gray' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_messenger)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => setValue('channels.messenger.description', value)}\r\n                valueDefault={getValues('channels.messenger.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.messenger?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldSelect\r\n                onChange={(value) => setValueField(value)}\r\n                valueDefault={getValues('channels.messenger.siteid')}\r\n                label={t(langKeys.selectpagelink)}\r\n                data={mainResult.data}\r\n                optionDesc=\"name\"\r\n                optionValue=\"id\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={mainResult.loading || mainResult.data.length === 0}\r\n                error={errors.channels?.messenger?.siteid?.message}\r\n            />\r\n            {((getValues('channels.messenger.siteid')?.length || 0) === 0) && (mainResult.data.length === 0) && (\r\n                <FacebookLogin\r\n                    appId={apiUrls.FACEBOOKAPP}\r\n                    autoLoad={false}\r\n                    buttonStyle={FBButtonStyles}\r\n                    fields=\"name,email,picture\"\r\n                    scope=\"pages_manage_engagement,pages_manage_metadata,pages_messaging,pages_read_engagement,pages_read_user_content,pages_show_list,public_profile,pages_manage_posts\"\r\n                    callback={processFacebookCallback}\r\n                    textButton={t(langKeys.linkfacebookpage)}\r\n                    // icon={<FacebookIcon style={{ color: 'white', marginRight: '8px' }} />}\r\n                    onClick={(e: any) => {\r\n                        e.view.window.FB.init({\r\n                            appId: apiUrls.FACEBOOKAPP,\r\n                            cookie: true,\r\n                            xfbml: true,\r\n                            version: apiUrls.FACEBOOKVERSION,\r\n                        });\r\n                    }}\r\n                    isDisabled={mainResult.loading}\r\n                    disableMobileRedirect={true}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, TextField, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { WhatsappColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    centerbutton: {\r\n        marginLeft: \"calc(50% - 96px)\",\r\n        marginTop: \"30px\",\r\n        marginBottom: \"20px\",\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    button2: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"100%\",\r\n    },\r\n    fields1: {\r\n        flex: 1,\r\n        margin: \"15px\"\r\n    },\r\n    fields2: {\r\n        flex: 1,\r\n    },\r\n    fields3: {\r\n        flex: 1,\r\n        // marginLeft: \"15px\"\r\n    },\r\n    fieldG: {\r\n        margin: 0,\r\n        width: '48%',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n        },\r\n    }\r\n}));\r\n\r\nconst CssPhonemui = styled(MuiPhoneNumber)({\r\n    '& label.Mui-focused': {\r\n        color: '#7721ad',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#7721ad',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#7721ad',\r\n        },\r\n    },\r\n});\r\n\r\nconst phoneRegExp = /^([+]?[\\s0-9]+)?(\\d{3}|[(]?[0-9]+[)])?([-]?[\\s]?[0-9])+$/i;\r\n\r\nexport const ChannelAddWhatsapp: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const { t } = useTranslation();\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n    const classes = useChannelAddStyles();\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.whatsapp.description');\r\n            const v2 = await trigger('channels.whatsapp.accesstoken');\r\n            const v3 = await trigger('channels.whatsapp.brandName');\r\n            const v4 = await trigger('channels.whatsapp.brandAddress');\r\n            const v5 = await trigger('channels.whatsapp.firstName');\r\n            const v6 = await trigger('channels.whatsapp.lastName');\r\n            const v7 = await trigger('channels.whatsapp.email');\r\n            const v8 = await trigger('channels.whatsapp.phone');\r\n            const v9 = await trigger('channels.whatsapp.customerfacebookid');\r\n            const v10 = await trigger('channels.whatsapp.phonenumberwhatsappbusiness');\r\n            const v11 = await trigger('channels.whatsapp.nameassociatednumber');\r\n            setSubmitError(!v1 || !v2 || !v3 || !v4 || !v5 || !v6 || !v7 || !v8 || !v9 || !v10 || !v11);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        const emailRequired = (value: string) => {\r\n            if (value.length === 0) {\r\n                return t(langKeys.field_required) as string;\r\n            } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n                return t(langKeys.emailverification) as string;\r\n            }\r\n        }\r\n\r\n        const phoneRequired = (value: string) => {\r\n            if (!phoneRegExp.test(value) || value.length < 10) {\r\n                return \"Ingrese un número de telefono válido\"\r\n            }\r\n        }\r\n\r\n        register('channels.whatsapp.description', { validate: strRequired, value: '' });\r\n        register('channels.whatsapp.accesstoken', { value: '' });\r\n        register('channels.whatsapp.brandName', { value: '' });\r\n        register('channels.whatsapp.brandAddress', { value: '' });\r\n        register('channels.whatsapp.firstName', { validate: strRequired, value: '' });\r\n        register('channels.whatsapp.lastName', { validate: strRequired, value: '' });\r\n        register('channels.whatsapp.email', { validate: emailRequired, value: '' });\r\n        register('channels.whatsapp.phone', { validate: phoneRequired, value: '' });\r\n        register('channels.whatsapp.customerfacebookid', { value: '' });\r\n        register('channels.whatsapp.phonenumberwhatsappbusiness', { validate: strRequired, value: '' });\r\n        register('channels.whatsapp.nameassociatednumber', { validate: strRequired, value: '' });\r\n        register('channels.whatsapp.communicationchannelowner', { value: '' });\r\n        register('channels.whatsapp.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#4AC959\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"WHATSAPPSMOOCH\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"brandname\": values.brandName,\r\n                    \"brandaddress\": values.brandAddress,\r\n                    \"firstname\": values.firstName,\r\n                    \"lastname\": values.lastName,\r\n                    \"email\": values.email,\r\n                    \"phone\": values.phone,\r\n                    \"customerfacebookid\": values.customerfacebookid,\r\n                    \"phonenumberwhatsappbusiness\": values.phonenumberwhatsappbusiness,\r\n                    \"nameassociatednumber\": values.nameassociatednumber,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.whatsapp')\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'whatsapp' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    const setView = (option: \"view1\" | \"view2\" | \"view3\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('whatsapp');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\");\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginBottom: 10 }}>{t(langKeys.brandpointcontact)}</div>\r\n                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 16, color: \"grey\" }}>{t(langKeys.brandpointcontact2)}</div>\r\n                <div style={{ textAlign: \"center\", marginBottom: 16, marginTop: 16, fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\", flexWrap: 'wrap', gap: 16, width: '100%' }}>\r\n                    <TextField\r\n                        className={classes.fieldG}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        defaultValue={getValues('channels.whatsapp.firstName')}\r\n                        label={t(langKeys.firstname)}\r\n                        name=\"firstname\"\r\n                        error={!!errors.channels?.whatsapp?.firstName}\r\n                        helperText={errors.channels?.whatsapp?.firstName?.message}\r\n                        onChange={(e) => setValue('channels.whatsapp.firstName', e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        className={classes.fieldG}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        defaultValue={getValues('channels.whatsapp.lastName')}\r\n                        label={t(langKeys.lastname)}\r\n                        name=\"lastname\"\r\n                        error={!!errors.channels?.whatsapp?.lastName}\r\n                        helperText={errors.channels?.whatsapp?.lastName?.message}\r\n                        onChange={(e) => setValue('channels.whatsapp.lastName', e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        className={classes.fieldG}\r\n                        style={{ marginBottom: 0 }}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        label={t(langKeys.email)}\r\n                        name=\"email\"\r\n                        defaultValue={getValues('channels.whatsapp.email')}\r\n                        error={!!errors.channels?.whatsapp?.email}\r\n                        helperText={errors.channels?.whatsapp?.email?.message}\r\n                        onChange={(e) => setValue('channels.whatsapp.email', e.target.value)}\r\n                    />\r\n                    <CssPhonemui\r\n                        className={classes.fieldG}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        size=\"small\"\r\n                        disableAreaCodes={true}\r\n                        value={getValues('channels.whatsapp.phone')}\r\n                        error={!!errors.channels?.whatsapp?.phone}\r\n                        helperText={errors.channels?.whatsapp?.phone?.message}\r\n                        label={t(langKeys.phone)}\r\n                        name=\"phone\"\r\n                        fullWidth\r\n                        defaultCountry={'pe'}\r\n                        onChange={(e: string) => setValue('channels.whatsapp.phone', e)}\r\n                    />\r\n                </div>\r\n                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginBottom: \"15px\" }}>{t(langKeys.emailcondition)}</div>\r\n                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", marginBottom: 10 }}>{t(langKeys.whatsappinformation)}</div>\r\n                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\" }}>\r\n                    <TextField\r\n                        className={classes.fields3}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        defaultValue={getValues('channels.whatsapp.phonenumberwhatsappbusiness')}\r\n                        label={t(langKeys.desiredphonenumberwhatsappbusiness)}\r\n                        name=\"phonenumberwhatsappbusiness\"\r\n                        error={!!errors.channels?.whatsapp?.phonenumberwhatsappbusiness}\r\n                        helperText={errors.channels?.whatsapp?.phonenumberwhatsappbusiness?.message}\r\n                        onChange={e => setValue('channels.whatsapp.phonenumberwhatsappbusiness', e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginBottom: \"15px\" }}>\r\n                    {t(langKeys.whatsappinformation3) + \" \"}\r\n                    <Link href=\"http://africau.edu/images/default/sample.pdf\">\r\n                        {t(langKeys.whatsappguidedownload)}\r\n                    </Link>\r\n                </div>\r\n                <div style={{ textAlign: \"center\", fontWeight: 500, fontSize: 32, color: \"#7721ad\", display: \"flex\" }}>\r\n                    <TextField\r\n                        className={classes.fields3}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        fullWidth\r\n                        size=\"small\"\r\n                        defaultValue={getValues('channels.whatsapp.nameassociatednumber')}\r\n                        label={t(langKeys.nameassociatednumber)}\r\n                        name=\"nameassociatednumber\"\r\n                        error={!!errors.channels?.whatsapp?.nameassociatednumber}\r\n                        helperText={errors.channels?.whatsapp?.nameassociatednumber?.message}\r\n                        onChange={e => setValue('channels.whatsapp.nameassociatednumber', e.target.value)}\r\n                    />\r\n                </div>\r\n                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginBottom: \"20px\" }}>{t(langKeys.whatsappinformation4)}</div>\r\n                <div style={{ textAlign: \"left\", fontWeight: 500, fontSize: 12, color: \"grey\", marginBottom: \"15px\" }}><b>*{t(langKeys.whatsappsubtitle1)}</b></div>\r\n                <div style={{ width: \"100%\", margin: \"0px 15px\", marginLeft: 0 }}>\r\n                    <Button\r\n                        onClick={async () => {\r\n                            const v1 = await trigger('channels.whatsapp.description');\r\n                            const v2 = await trigger('channels.whatsapp.accesstoken');\r\n                            const v3 = await trigger('channels.whatsapp.brandName');\r\n                            const v4 = await trigger('channels.whatsapp.brandAddress');\r\n                            const v5 = await trigger('channels.whatsapp.firstName');\r\n                            const v6 = await trigger('channels.whatsapp.lastName');\r\n                            const v7 = await trigger('channels.whatsapp.email');\r\n                            const v8 = await trigger('channels.whatsapp.phone');\r\n                            const v9 = await trigger('channels.whatsapp.customerfacebookid');\r\n                            const v10 = await trigger('channels.whatsapp.phonenumberwhatsappbusiness');\r\n                            const v11 = await trigger('channels.whatsapp.nameassociatednumber');\r\n                            if (v1 && v2 && v3 && v4 && v5 && v6 && v7 && v8 && v9 && v10 && v11) {\r\n                                setView(\"view1\");\r\n                                setHasFinished(true);\r\n                            }\r\n                        }}\r\n                        className={classes.button2}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <Trans i18nKey={langKeys.next} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <WhatsappColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('whatsapp');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== type));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <WhatsappColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_whatsapp)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.whatsapp.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.whatsapp.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.whatsapp?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { TelegramColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nexport const ChannelAddTelegram: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.telegram.description', { validate: strRequired, value: '' });\r\n        register('channels.telegram.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.telegram.communicationchannelowner', { value: '' });\r\n        register('channels.telegram.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": \"\",\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#207FDD\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"TELEGRAM\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.telegram')\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    function setBotKey(val: string) {\r\n        setValue('channels.telegram.accesstoken', val);\r\n        setValue('channels.telegram.communicationchannelowner', \"\");\r\n        if (val.length > 0 && !hasFinished) {\r\n            setHasFinished(true);\r\n        } else if (val.length === 0 && hasFinished) {\r\n            setHasFinished(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={commonClasses.root}>\r\n            {!hasFinished && <TelegramColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('telegram');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"TELEGRAM\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <TelegramColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_telegram)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={v => setValue('channels.telegram.description', v)}\r\n                valueDefault={getValues('channels.telegram.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.telegram?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldEdit\r\n                onChange={(value) => setBotKey(value)}\r\n                valueDefault={getValues('channels.telegram.accesstoken')}\r\n                label={t(langKeys.enterbotapikey)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.telegram?.accesstoken?.message}\r\n            />\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TwitterColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddTwitter: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.channelList)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.twitter.consumerkey');\r\n            const v2 = await trigger('channels.twitter.consumersecret');\r\n            const v3 = await trigger('channels.twitter.accesstoken');\r\n            const v4 = await trigger('channels.twitter.accesssecret');\r\n            setSubmitError(!v1 || !v2 || !v3 || !v4);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.twitter.description', { validate: strRequired, value: '' });\r\n        register('channels.twitter.consumerkey', { validate: strRequired, value: '' });\r\n        register('channels.twitter.consumersecret', { validate: strRequired, value: '' });\r\n        register('channels.twitter.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.twitter.accesssecret', { validate: strRequired, value: '' });\r\n        register('channels.twitter.devenvironment', { validate: strRequired, value: '' });\r\n        register('channels.twitter.communicationchannelowner', { value: '' });\r\n        register('channels.twitter.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#1D9BF0\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"TWITTER\",\r\n                \"service\": {\r\n                    \"consumerkey\": values.consumerkey,\r\n                    \"consumersecret\": values.consumersecret,\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"accesssecret\": values.accesssecret,\r\n                    \"devenvironment\": values.devenvironment\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.twitter');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'twitter' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('twitter');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\");\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.twittertitle)}</div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.twittertitle2)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitter.consumerkey', v)}\r\n                            valueDefault={getValues('channels.twitter.consumerkey')}\r\n                            label={t(langKeys.consumerapikey)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitter?.consumerkey?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitter.consumersecret', v)}\r\n                            valueDefault={getValues('channels.twitter.consumersecret')}\r\n                            label={t(langKeys.consumerapisecret)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitter?.consumersecret?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitter.accesstoken', v)}\r\n                            valueDefault={getValues('channels.twitter.accesstoken')}\r\n                            label={t(langKeys.authenticationtoken)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitter?.accesstoken?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitter.accesssecret', v)}\r\n                            valueDefault={getValues('channels.twitter.accesssecret')}\r\n                            label={t(langKeys.authenticationsecret)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitter?.accesssecret?.message}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={async () => {\r\n                                const v1 = await trigger('channels.twitter.consumerkey');\r\n                                const v2 = await trigger('channels.twitter.consumersecret');\r\n                                const v3 = await trigger('channels.twitter.accesstoken');\r\n                                const v4 = await trigger('channels.twitter.accesssecret');\r\n                                if (v1 && v2 && v3 && v4) {\r\n                                    setView(\"view1\");\r\n                                    setHasFinished(true);\r\n                                }\r\n                            }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            <Trans i18nKey={langKeys.next} />\r\n                        </Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <TwitterColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('twitter');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"TWITTER\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <TwitterColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_twitter)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.twitter.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.twitter.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.twitter?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldEdit\r\n                onChange={(value) => {\r\n                    setValue('channels.twitter.devenvironment', value);\r\n                    setValue('channels.twitter.communicationchannelowner', \"\");\r\n                }}\r\n                valueDefault={getValues('channels.twitter.devenvironment')}\r\n                label={t(langKeys.devenvironment)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.twitter?.devenvironment?.message}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelAddTwitter","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, IconButton, Link, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { TwitterColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddTwitterDM: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.twitterDM.consumerkey');\r\n            const v2 = await trigger('channels.twitterDM.consumersecret');\r\n            const v3 = await trigger('channels.twitterDM.accesstoken');\r\n            const v4 = await trigger('channels.twitterDM.accesssecret');\r\n            setSubmitError(!v1 || !v2 || !v3 || !v4);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.twitterDM.description', { validate: strRequired, value: '' });\r\n        register('channels.twitterDM.consumerkey', { validate: strRequired, value: '' });\r\n        register('channels.twitterDM.consumersecret', { validate: strRequired, value: '' });\r\n        register('channels.twitterDM.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.twitterDM.accesssecret', { validate: strRequired, value: '' });\r\n        register('channels.twitterDM.devenvironment', { validate: strRequired, value: '' });\r\n        register('channels.twitterDM.communicationchannelowner', { value: '' });\r\n        register('channels.twitterDM.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.communicationchannelowner,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#1D9BF0\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"TWITTERDM\",\r\n                \"service\": {\r\n                    \"consumerkey\": values.consumerkey,\r\n                    \"consumersecret\": values.consumersecret,\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"accesssecret\": values.accesssecret,\r\n                    \"devenvironment\": values.devenvironment\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.twitterDM');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'twitterDM' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('twitterDM');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\")\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.twittertitle)}</div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.twittertitle2)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitterDM.consumerkey', v)}\r\n                            valueDefault={getValues('channels.twitterDM.consumerkey')}\r\n                            label={t(langKeys.consumerapikey)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitterDM?.consumerkey?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitterDM.consumersecret', v)}\r\n                            valueDefault={getValues('channels.twitterDM.consumersecret')}\r\n                            label={t(langKeys.consumerapisecret)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitterDM?.consumersecret?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitterDM.accesstoken', v)}\r\n                            valueDefault={getValues('channels.twitterDM.accesstoken')}\r\n                            label={t(langKeys.authenticationtoken)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitterDM?.accesstoken?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => setValue('channels.twitterDM.accesssecret', v)}\r\n                            valueDefault={getValues('channels.twitterDM.accesssecret')}\r\n                            label={t(langKeys.authenticationsecret)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.twitterDM?.accesssecret?.message}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={async () => {\r\n                                const v1 = await trigger('channels.twitterDM.consumerkey');\r\n                                const v2 = await trigger('channels.twitterDM.consumersecret');\r\n                                const v3 = await trigger('channels.twitterDM.accesstoken');\r\n                                const v4 = await trigger('channels.twitterDM.accesssecret');\r\n                                if (v1 && v2 && v3 && v4) {\r\n                                    setView(\"view1\");\r\n                                    setHasFinished(true);\r\n                                }\r\n                            }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >{t(langKeys.next)}\r\n                        </Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <TwitterColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('twitterDM');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"TWITTERDM\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <TwitterColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_twitterdm)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.twitterDM.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.twitterDM.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.twitterDM?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            <FieldEdit\r\n                onChange={(value) => {\r\n                    setValue('channels.twitterDM.devenvironment', value);\r\n                    setValue('channels.twitterDM.communicationchannelowner', \"\");\r\n                }}\r\n                valueDefault={getValues('channels.twitterDM.devenvironment')}\r\n                label={t(langKeys.devenvironment)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.twitterDM?.devenvironment?.message}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelAddTwitterDM","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useContext, useEffect, useState } from 'react';\r\nimport { AppBar, Box, Button, makeStyles, Link, Tab, Tabs, Typography, TextField, Grid, Select, IconButton, FormControl, MenuItem, Divider, Breadcrumbs, InputAdornment } from '@material-ui/core';\r\nimport { FieldEdit, IOSSwitch } from 'components';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport { langKeys } from 'lang/keys';\r\nimport { ChromePicker, ColorChangeHandler } from 'react-color';\r\nimport { ArrowDropDown, Close, CloudUpload, DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { useForm, useFormContext, UseFormReturn } from 'react-hook-form';\r\nimport { IChatWebAdd, IChatWebAddFormField } from '@types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetInsertChannel } from 'store/channel/actions';\r\nimport { useSelector } from 'hooks';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { getInsertChatwebChannel } from 'common/helpers';\r\nimport { WebMessengerColor } from 'icons';\r\nimport { MainData, SubscriptionContext } from './context';\r\n\r\ninterface TabPanelProps {\r\n    value: string;\r\n    index: string;\r\n}\r\n\r\ninterface FieldTemplate {\r\n    text: React.ReactNode;\r\n    node: (onClose: (key: string) => void, data: IChatWebAddFormField, form: UseFormReturn<IChatWebAdd>, index: number) => React.ReactNode;\r\n    data: IChatWebAddFormField;\r\n}\r\n\r\nconst getImgUrl = (file: File | null): string | null => {\r\n    if (!file) return null;\r\n\r\n    try {\r\n        const url = URL.createObjectURL(file);\r\n        return url;\r\n    } catch (ex) {\r\n        console.error(ex);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst useTabPanelStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n    },\r\n}));\r\n\r\nconst TabPanel: FC<TabPanelProps> = ({ children, value, index }) => {\r\n    const classes = useTabPanelStyles();\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            className={classes.root}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            style={{ display: value === index ? 'block' : 'none' }}\r\n        >\r\n            <Box p={3}>\r\n                {children}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabInterfacetyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst TabPanelInterface: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabInterfacetyles();\r\n    const { t } = useTranslation();\r\n    const [chatBtn, setChatBtn] = useState<File | null>(getValues('interface.iconbutton') as File);\r\n    const [headerBtn, setHeaderBtn] = useState<File | null>(getValues('interface.iconheader') as File);\r\n    const [botBtn, setBotBtn] = useState<File | null>(getValues('interface.iconbot') as File);\r\n\r\n    const handleChatBtnClick = () => {\r\n        const input = document.getElementById('chatBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleHeaderBtnClick = () => {\r\n        const input = document.getElementById('headerBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleBotBtnClick = () => {\r\n        const input = document.getElementById('botBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const onChangeChatInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setChatBtn(e.target.files[0]);\r\n        setValue(\"interface.iconbutton\", e.target.files[0]);\r\n    }\r\n\r\n    const onChangeHeaderInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setHeaderBtn(e.target.files[0]);\r\n        setValue('interface.iconheader', e.target.files[0]);\r\n    }\r\n\r\n    const onChangeBotInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setBotBtn(e.target.files[0]);\r\n        setValue('interface.iconbot', e.target.files[0]);\r\n    }\r\n\r\n    const handleCleanChatInput = () => {\r\n        if (!chatBtn) return;\r\n        const input = document.getElementById('chatBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setChatBtn(null);\r\n        setValue('interface.iconbutton', null);\r\n    }\r\n\r\n    const handleCleanHeaderInput = () => {\r\n        if (!headerBtn) return;\r\n        const input = document.getElementById('headerBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setHeaderBtn(null);\r\n        setValue('interface.iconheader', null);\r\n    }\r\n\r\n    const handleCleanBotInput = () => {\r\n        if (!botBtn) return;\r\n        const input = document.getElementById('botBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setBotBtn(null);\r\n        setValue('interface.iconbot', null);\r\n    }\r\n\r\n    const chatImgUrl = getImgUrl(chatBtn);\r\n    const headerImgUrl = getImgUrl(headerBtn);\r\n    const botImgUrl = getImgUrl(botBtn);\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.title} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                placeholder={t(langKeys.chatHeaderTitle)} // \"Título de la cabecera del chat\"\r\n                                name=\"titulo\"\r\n                                size=\"small\"\r\n                                defaultValue={getValues('interface.chattitle')}\r\n                                onChange={(e) => setValue('interface.chattitle', e.target.value)}\r\n                                error={!!form.formState.errors.interface?.chattitle}\r\n                                helperText={form.formState.errors.interface?.chattitle?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.subtitle} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                placeholder={t(langKeys.chatHeaderSubtitle)} // \"Subtitulo de la cabecera del chat\"\r\n                                name=\"subtitulo\"\r\n                                size=\"small\"\r\n                                defaultValue={getValues('interface.chatsubtitle')}\r\n                                onChange={(e) => setValue('interface.chatsubtitle', e.target.value)}\r\n                                error={!!form.formState.errors.interface?.chatsubtitle}\r\n                                helperText={form.formState.errors.interface?.chatsubtitle?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.chatButton} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {chatImgUrl && <img alt=\"chatweb\" src={chatImgUrl} className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"chatBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeChatInput}\r\n                                    />\r\n                                    <IconButton onClick={handleChatBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanChatInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.header} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {headerImgUrl && <img alt=\"chatweb\" src={headerImgUrl} className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"headerBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeHeaderInput}\r\n                                    />\r\n                                    <IconButton onClick={handleHeaderBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanHeaderInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.botButton} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {botImgUrl && <img alt=\"chatweb\" src={botImgUrl} className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"botBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeBotInput}\r\n                                    />\r\n                                    <IconButton onClick={handleBotBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanBotInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useColorInputStyles = makeStyles(theme => ({\r\n    colorInputContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: 60,\r\n        height: 30,\r\n        cursor: 'pointer',\r\n        borderRadius: 2,\r\n        position: 'relative',\r\n    },\r\n    colorInput: {\r\n        position: 'relative',\r\n        flexGrow: 1,\r\n        borderRadius: '0 2px 2px 0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n    },\r\n    colorInputSplash: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        left: 0,\r\n        borderRadius: 2,\r\n        '&:hover': {\r\n            backgroundColor: 'black',\r\n            opacity: .15,\r\n        },\r\n    },\r\n    colorInputPreview: {\r\n        flexGrow: 1,\r\n        borderRadius: 2,\r\n    },\r\n    popover: {\r\n        position: 'absolute',\r\n        zIndex: 2,\r\n        top: 36,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n    },\r\n}));\r\n\r\nconst ColorInput: FC<{ hex: string, onChange: ColorChangeHandler }> = ({ hex, onChange }) => {\r\n    const classes = useColorInputStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const iconStyle = { style: { width: 'unset', height: 'unset' } };\r\n    const Icon: FC = () => open ? <Close {...iconStyle} /> : <ArrowDropDown {...iconStyle} />;\r\n\r\n    return (\r\n        <div className={classes.colorInputContainer}>\r\n            <div style={{ backgroundColor: hex }} className={classes.colorInputPreview} />\r\n            <div className={classes.colorInput} onClick={() => setOpen(!open)}>\r\n                <Icon />\r\n                <div className={classes.colorInputSplash} />\r\n            </div>\r\n            {open && (\r\n                <div className={classes.popover}>\r\n                    <ChromePicker color={hex} onChange={onChange} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabColorStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    colorOption: {\r\n        width: 28,\r\n        height: 28,\r\n        padding: 0,\r\n        minWidth: 28,\r\n        minHeight: 28,\r\n    },\r\n}));\r\n\r\nconst TabPanelColors: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabColorStyles();\r\n    const [headerColor, setHeaderColor] = useState(getValues('color.header'));\r\n    const [backgroundColor, setBackgroundColor] = useState(getValues('color.background'));\r\n    const [borderColor, setBorderColor] = useState(getValues('color.border'));\r\n    const [clientMessageColor, setClientMessageColor] = useState(getValues('color.client'));\r\n    const [botMessageColor, setBotMessageColor] = useState(getValues('color.bot'));\r\n\r\n    const handleHeaderColorChange: ColorChangeHandler = (e) => {\r\n        setHeaderColor(e.hex);\r\n        setValue('color.header', e.hex);\r\n    }\r\n\r\n    const handleBackgroundColorChange: ColorChangeHandler = (e) => {\r\n        setBackgroundColor(e.hex);\r\n        setValue('color.background', e.hex);\r\n    }\r\n\r\n    const handleBorderColorChange: ColorChangeHandler = (e) => {\r\n        setBorderColor(e.hex);\r\n        setValue('color.border', e.hex);\r\n    }\r\n\r\n    const handleClientMessageColorChange: ColorChangeHandler = (e) => {\r\n        setClientMessageColor(e.hex);\r\n        setValue('color.client', e.hex);\r\n    }\r\n\r\n    const handleBotMessageColorChange: ColorChangeHandler = (e) => {\r\n        setBotMessageColor(e.hex);\r\n        setValue('color.bot', e.hex);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\">\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.chatHeader} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={headerColor} onChange={handleHeaderColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.chatBackground} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={backgroundColor} onChange={handleBackgroundColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.chatBorder} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={borderColor} onChange={handleBorderColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.clientMessage} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={clientMessageColor} onChange={handleClientMessageColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.botMessage} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={botMessageColor} onChange={handleBotMessageColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useTemplateStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: `${theme.palette.primary.main} 1px solid`,\r\n        borderRadius: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n    },\r\n    title: {\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        margin: '0 0 12 0',\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    fieldContainer: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    headertitle: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    closeBtn: {\r\n        border: `${theme.palette.primary.main} 1px solid`,\r\n    },\r\n}));\r\ninterface NameTemplateProps {\r\n    onClose: () => void;\r\n    form: UseFormReturn<IChatWebAdd>;\r\n    title: React.ReactNode;\r\n    data: IChatWebAddFormField;\r\n    index: number;\r\n}\r\n\r\nconst NameTemplate: FC<NameTemplateProps> = ({ data, onClose, title, form, index }) => {\r\n    const classes = useTemplateStyles();\r\n    const { t } = useTranslation();\r\n    const [required, setRequired] = useState(data.required);\r\n\r\n    const handleRequired = (checked: boolean) => {\r\n        setRequired(checked);\r\n        data.required = checked;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.headertitle}>\r\n                <label className={clsx(classes.title, classes.fieldContainer)}>\r\n                    {title}\r\n                </label>\r\n                <IconButton color=\"primary\" onClick={onClose} className={classes.closeBtn}>\r\n                    <Close color=\"primary\" className=\"fa fa-plus-circle\" />\r\n                </IconButton>\r\n            </div>\r\n            <div style={{ height: 18 }} />\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={6}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\" style={{ minHeight: 40 }}>\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.required} />\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <IOSSwitch checked={required} onChange={(_, v) => { handleRequired(v); form.setValue(`form.${index}.required`, v) }} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.label} />\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <TextField\r\n                                                    placeholder={t(langKeys.label)}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.label`, e.target.value)\r\n                                                        data.label = e.target.value\r\n                                                    }}\r\n                                                    defaultValue={data.label}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={6}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>Placeholder</label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <TextField\r\n                                                    placeholder=\"Placeholder\"\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.placeholder`, e.target.value)\r\n                                                        data.placeholder = e.target.value\r\n                                                    }}\r\n                                                    defaultValue={data.placeholder}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.errorText} />\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <TextField\r\n                                                    placeholder={t(langKeys.errorText)}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.validationtext`, e.target.value)\r\n                                                        data.validationtext = e.target.value\r\n                                                    }}\r\n                                                    defaultValue={data.validationtext}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider style={{ margin: '22px 0' }} />\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Box m={1}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={2}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.inputValidation} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={10}>\r\n                                <TextField\r\n                                    placeholder={t(langKeys.inputValidation)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    fullWidth\r\n                                    onChange={e => {\r\n                                        form.setValue(`form.${index}.inputvalidation`, e.target.value)\r\n                                        data.inputvalidation = e.target.value\r\n                                    }}\r\n                                    defaultValue={data.inputvalidation}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Box m={1}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={2}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.validationOnKeychange} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={10}>\r\n                                <TextField\r\n                                    placeholder={t(langKeys.validationOnKeychange)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    fullWidth\r\n                                    onChange={e => {\r\n                                        form.setValue(`form.${index}.keyvalidation`, e.target.value)\r\n                                        data.keyvalidation = e.target.value\r\n                                    }}\r\n                                    defaultValue={data.keyvalidation}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabFormStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n}));\r\n\r\nconst NAME_FIELD = \"NAME_FIELD\";\r\nconst LASTNAME_FIELD = \"LASTNAME_FIELD\";\r\nconst PHONE_FIELD = \"PHONE_FIELD\";\r\nconst EMAIL_FIELD = \"EMAIL_FIELD\";\r\nconst DOCUMENT_FIELD = \"DOCUMENT_FIELD\";\r\nconst SUPPLUNUMBER_FIELD = \"SUPPLUNUMBER_FIELD\";\r\nconst CONTACT = \"CONTACT\";\r\n\r\nconst templates: { [x: string]: FieldTemplate } = {\r\n    [NAME_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.name} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(NAME_FIELD)}\r\n                    key={NAME_FIELD}\r\n                    title={<Trans i18nKey={langKeys.name} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"FIRSTNAME\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [LASTNAME_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.lastname} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(LASTNAME_FIELD)}\r\n                    key={LASTNAME_FIELD}\r\n                    title={<Trans i18nKey={langKeys.lastname} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"LASTNAME\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [PHONE_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.phone} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(PHONE_FIELD)}\r\n                    key={PHONE_FIELD}\r\n                    title={<Trans i18nKey={langKeys.phone} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"PHONE\",\r\n            type: \"phone\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [EMAIL_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.email} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(EMAIL_FIELD)}\r\n                    key={EMAIL_FIELD}\r\n                    title={<Trans i18nKey={langKeys.email} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"EMAIL\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [DOCUMENT_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.document} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(DOCUMENT_FIELD)}\r\n                    key={DOCUMENT_FIELD}\r\n                    title={<Trans i18nKey={langKeys.document} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"DOCUMENT\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [SUPPLUNUMBER_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.supplynumber} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(SUPPLUNUMBER_FIELD)}\r\n                    key={SUPPLUNUMBER_FIELD}\r\n                    title={<Trans i18nKey={langKeys.supplynumber} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"SUPPLYNUMBER\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [CONTACT]: {\r\n        text: <Trans i18nKey={langKeys.contact} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(CONTACT)}\r\n                    key={CONTACT}\r\n                    title={<Trans i18nKey={langKeys.contact} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"CONTACT\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n};\r\n\r\nconst TabPanelForm: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const classes = useTabFormStyles();\r\n    const [enable, setEnable] = useState(false);\r\n    const [fieldTemplate, setFieldTemplate] = useState<string>(\"\");\r\n    const [fields, setFields] = useState<FieldTemplate[]>([]);\r\n\r\n    useEffect(() => {\r\n        form.setValue('form', fields.map(x => x.data));\r\n    }, [fields]);\r\n\r\n    const handleCloseTemplate = (key: string) => {\r\n        const newFields = fields.filter(e => e.data.field !== templates[key].data.field)\r\n        setFields(newFields);\r\n    };\r\n\r\n    const handleAddTemplate = () => {\r\n        if (fieldTemplate === \"\") return;\r\n\r\n        setFields([...fields, templates[fieldTemplate]]);\r\n        setFieldTemplate(\"\");\r\n    }\r\n\r\n    const getMenuTemplates = () => {\r\n        const temp: React.ReactNode[] = [];\r\n        for (const key in templates) {\r\n            if (fields.includes(templates[key])) continue;\r\n            temp.push(<MenuItem key={key} value={key}>{templates[key].text}</MenuItem>);\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <Typography className={classes.text}>\r\n                                <Trans i18nKey={langKeys.wantAddFormToSiteQuestion} />\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <IOSSwitch checked={enable} onChange={(_, v) => setEnable(v)} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ display: enable ? 'block' : 'none' }}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <Typography className={classes.text}>\r\n                                <Trans i18nKey={langKeys.selectField} />\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <FormControl style={{ width: 160, marginRight: 20 }}>\r\n                                <Select\r\n                                    variant=\"outlined\"\r\n                                    value={fieldTemplate}\r\n                                    onChange={e => setFieldTemplate(e.target.value as string)}\r\n                                    displayEmpty\r\n                                    style={{ height: 40 }}\r\n                                >\r\n                                    <MenuItem value={\"\"}>\r\n                                        <em><Trans i18nKey={langKeys.select} /> -</em>\r\n                                    </MenuItem>\r\n                                    {getMenuTemplates()}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Button\r\n                                disabled={fieldTemplate === \"\"}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ height: 40, minHeight: 40 }}\r\n                                onClick={handleAddTemplate}\r\n                            >\r\n                                <Trans i18nKey={langKeys.add} /> +\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {fields.map((e, i) => e.node(handleCloseTemplate, e.data, form, i))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabBubbleStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst TabPanelBubble: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabBubbleStyles();\r\n    const { t } = useTranslation();\r\n    const [enable, setEnable] = useState(getValues('bubble.active'));\r\n    const [waitingImg, setWaitingImg] = useState<File | null>(getValues('bubble.iconbubble') as File);\r\n\r\n    const handleWaitingBtnClick = () => {\r\n        const input = document.getElementById('waitingBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const onChangeWaitingInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setWaitingImg(e.target.files[0]);\r\n        setValue('bubble.iconbubble', e.target.files[0]);\r\n    }\r\n\r\n    const handleCleanWaitingInput = () => {\r\n        if (!waitingImg) return;\r\n        const input = document.getElementById('waitingBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setWaitingImg(null);\r\n        setValue('bubble.iconbubble', null);\r\n    }\r\n\r\n    const handleEnableChange = (checked: boolean) => {\r\n        setEnable(checked);\r\n        setValue('bubble.active', checked);\r\n    }\r\n\r\n    const waitingImgUrl = getImgUrl(waitingImg);\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.enableWaitingMessage} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <IOSSwitch checked={enable} onChange={(_, v) => handleEnableChange(v)} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1} style={{ display: enable ? 'block' : 'none' }}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>{t(langKeys.text)}</label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                placeholder={t(langKeys.textOfTheMessage)}\r\n                                name=\"text\"\r\n                                size=\"small\"\r\n                                defaultValue={getValues('bubble.messagebubble')}\r\n                                onChange={e => setValue('bubble.messagebubble', e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1} style={{ display: enable ? 'block' : 'none' }}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.waitingMessageStyle} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {waitingImgUrl && <img alt=\"chatweb\" src={waitingImgUrl} className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"waitingBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeWaitingInput}\r\n                                    />\r\n                                    <IconButton onClick={handleWaitingBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanWaitingInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useTabExtrasStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n}));\r\n\r\nconst TabPanelExtras: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabExtrasStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const [uploadFile, setUploadFile] = useState(getValues('extra.uploadfile'));\r\n    const [uploadVideo, setUploadVideo] = useState(getValues('extra.uploadvideo'));\r\n    const [uploadImage, setUploadImage] = useState(getValues('extra.uploadimage'));\r\n    const [uploadAudio, setUploadAudio] = useState(getValues('extra.uploadaudio'));\r\n    const [uploadLocation, setUploadLocation] = useState(getValues('extra.uploadlocation'));\r\n    const [reloadChat, setReloadChat] = useState(getValues('extra.reloadchat'));\r\n    const [poweredBy, setPoweredBy] = useState(getValues('extra.poweredby'));\r\n\r\n    const [persistentInput, setPersistentInput] = useState(getValues('extra.persistentinput'));\r\n    const [abandonEvent, setAbandonEvent] = useState(getValues('extra.abandonevent'));\r\n    const [alertSound, setAlertSound] = useState(getValues('extra.alertsound'));\r\n    const [formHistory, setFormHistory] = useState(getValues('extra.formhistory'));\r\n    const [enableMetadata, setEnableMetadata] = useState(getValues('extra.enablemetadata'));\r\n\r\n    const [enableBotName, setEnableBotName] = useState(getValues('extra.botnameenabled'));\r\n\r\n    const handleUploadFileChange = (checked: boolean) => {\r\n        setUploadFile(checked);\r\n        setValue('extra.uploadfile', checked);\r\n    }\r\n\r\n    const handleUploadVideoChange = (checked: boolean) => {\r\n        setUploadVideo(checked);\r\n        setValue('extra.uploadvideo', checked);\r\n    }\r\n\r\n    const handleUploadImageChange = (checked: boolean) => {\r\n        setUploadImage(checked);\r\n        setValue('extra.uploadimage', checked);\r\n    }\r\n\r\n    const handleUploadAudioChange = (checked: boolean) => {\r\n        setUploadAudio(checked);\r\n        setValue('extra.uploadaudio', checked);\r\n    }\r\n\r\n    const handleUploadLocationChange = (checked: boolean) => {\r\n        setUploadLocation(checked);\r\n        setValue('extra.uploadlocation', checked);\r\n    }\r\n\r\n    const handleReloadChatChange = (checked: boolean) => {\r\n        setReloadChat(checked);\r\n        setValue('extra.reloadchat', checked);\r\n    }\r\n\r\n    const handlePoweredByChange = (checked: boolean) => {\r\n        setPoweredBy(checked);\r\n        setValue('extra.poweredby', checked);\r\n    }\r\n\r\n    const handlePersistentInputChange = (checked: boolean) => {\r\n        setPersistentInput(checked);\r\n        setValue('extra.persistentinput', checked);\r\n    }\r\n\r\n    const handleAbandonEventChange = (checked: boolean) => {\r\n        setAbandonEvent(checked);\r\n        setValue('extra.abandonevent', checked);\r\n    }\r\n\r\n    const handleAlertSoundChange = (checked: boolean) => {\r\n        setAlertSound(checked);\r\n        setValue('extra.alertsound', checked);\r\n    }\r\n\r\n    const handleFormHistoryChange = (checked: boolean) => {\r\n        setFormHistory(checked);\r\n        setValue('extra.formhistory', checked);\r\n    }\r\n\r\n    const handleEnableMetadataChange = (checked: boolean) => {\r\n        setEnableMetadata(checked);\r\n        setValue('extra.enablemetadata', checked);\r\n    }\r\n\r\n    const handleEnableBotNameChange = (checked: boolean) => {\r\n        setEnableBotName(checked);\r\n        setValue('extra.botnameenabled', checked);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadFile} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadFile} onChange={(_, v) => handleUploadFileChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadVideo} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadVideo} onChange={(_, v) => handleUploadVideoChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.sendLocation} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadLocation} onChange={(_, v) => handleUploadLocationChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadImage} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadImage} onChange={(_, v) => handleUploadImageChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadAudio} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadAudio} onChange={(_, v) => handleUploadAudioChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.refreshChat} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={reloadChat} onChange={(_, v) => handleReloadChatChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>Powered by</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={poweredBy} onChange={(_, v) => handlePoweredByChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider style={{ margin: '22px 0 38px 0' }} />\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.inputAlwaysEnabled} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={persistentInput} onChange={(_, v) => handlePersistentInputChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.abandonmentEvent} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={abandonEvent} onChange={(_, v) => handleAbandonEventChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.newMessageRing} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={alertSound} onChange={(_, v) => handleAlertSoundChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.formBaseHistory} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={formHistory} onChange={(_, v) => handleFormHistoryChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.sendMetaData} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={enableMetadata} onChange={(_, v) => handleEnableMetadataChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder=\"CSS Header\"\r\n                    multiline\r\n                    minRows={5}\r\n                    maxRows={10}\r\n                    fullWidth\r\n                    defaultValue={getValues('extra.customcss')}\r\n                    onChange={e => setValue('extra.customcss', e.target.value)}\r\n                />\r\n            </Grid>\r\n            <div style={{ height: 20 }} />\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder=\"JS Script\"\r\n                    multiline\r\n                    minRows={5}\r\n                    maxRows={10}\r\n                    fullWidth\r\n                    defaultValue={getValues('extra.customjs')}\r\n                    onChange={e => setValue('extra.customjs', e.target.value)}\r\n                />\r\n            </Grid>\r\n            <Divider style={{ margin: '22px 0 38px 0' }} />\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={10} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.enableBotName} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={enableBotName} onChange={(_, v) => handleEnableBotNameChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ display: enableBotName ? 'block' : 'none' }}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder={t(langKeys.botName)}\r\n                    fullWidth\r\n                    defaultValue={getValues('extra.botnametext')}\r\n                    onChange={e => setValue('extra.botnametext', e.target.value)}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    rootextras: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingTop: \"80%\",\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: \"25%\",\r\n        },\r\n        \"@media (min-width: 960px)\": {\r\n            paddingTop: \"70%\",\r\n        },\r\n        \"@media (min-width: 1000px)\": {\r\n            paddingTop: \"40%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            paddingTop: \"25%\",\r\n        },\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n        fontSize: 32,\r\n        margin: '20px 0',\r\n        color: theme.palette.primary.main,\r\n    },\r\n    subtitle: {\r\n        margin: '8px 0',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#A59F9F',\r\n    },\r\n    scriptPreview: {\r\n        width: 'inherit',\r\n        height: 111,\r\n        minHeight: 111,\r\n        backgroundColor: 'white',\r\n        border: '#A59F9F 1px solid',\r\n        margin: '24px 0',\r\n        padding: theme.spacing(2),\r\n        position: 'relative',\r\n        overflowWrap: 'break-word',\r\n        overflow: 'hidden',\r\n    },\r\n    scriptPreviewGradient: {\r\n        backgroundImage: 'linear-gradient(transparent, white)',\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    scriptPreviewCopyBtn: {\r\n        height: 45,\r\n        width: 123,\r\n        minHeight: 45,\r\n        minWidth: 123,\r\n        top: '50%',\r\n        transform: 'translateY(-50%)',\r\n        right: theme.spacing(2),\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n    },\r\n    scriptPreviewFullViewTxt: {\r\n        margin: 0,\r\n        position: 'absolute',\r\n        bottom: theme.spacing(1),\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        height: 24,\r\n\r\n        WebkitTouchCallout: 'none',\r\n        WebkitUserSelect: 'none',\r\n        KhtmlUserSelect: 'none',\r\n        MozUserSelect: 'none',\r\n        msUserSelect: 'none',\r\n        userSelect: 'none',\r\n\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    tabs: {\r\n        color: '#989898',\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: 'inherit',\r\n    },\r\n    tab: {\r\n        // width: 130,\r\n        height: 45,\r\n        maxWidth: 'unset',\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n        backgroundColor: 'white',\r\n        flexGrow: 1,\r\n    },\r\n    activetab: {\r\n        color: 'white',\r\n        backgroundColor: theme.palette.primary.main,\r\n    }\r\n}));\r\n\r\nexport const ChannelAddChatWeb: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const classes = useStyles();\r\n    const { foreground, submitObservable, setForeground } = useContext(SubscriptionContext);\r\n    const { getValues, register, unregister } = useFormContext<MainData>();\r\n    const dispatch = useDispatch();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const [selectedView, setSelectedView] = useState(\"view1\");\r\n    const [tabIndex, setTabIndes] = useState('0');\r\n    const { t } = useTranslation();\r\n\r\n    const insertChannel = useSelector(state => state.channel.insertChannel);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetInsertChannel());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'chatWeb' && selectedView !== \"view1\") {\r\n            setSelectedView(\"view1\");\r\n        }\r\n    }, [foreground, selectedView]);\r\n\r\n    useEffect(() => {\r\n        if (insertChannel.loading) return;\r\n        if (insertChannel.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: insertChannel.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else if (insertChannel.value) {\r\n            dispatch(showSnackbar({\r\n                message: \"El canal se inserto con éxito\",\r\n                show: true,\r\n                severity: \"success\"\r\n            }));\r\n        }\r\n    }, [insertChannel]);\r\n\r\n    const nestedForm: UseFormReturn<IChatWebAdd> = useForm<IChatWebAdd>({\r\n        defaultValues: {\r\n            interface: {\r\n                chattitle: \"\",\r\n                chatsubtitle: \"\",\r\n                iconbutton: null,\r\n                iconheader: null,\r\n                iconbot: null,\r\n            },\r\n            color: {\r\n                header: \"#fff\",\r\n                background: \"#F9F9FA\",\r\n                border: \"#EBEAED\",\r\n                client: \"#fff\",\r\n                bot: \"#aa53e0\",\r\n            },\r\n            form: [],\r\n            bubble: {\r\n                active: true,\r\n                messagebubble: \"\",\r\n                iconbubble: null,\r\n            },\r\n            extra: {\r\n                uploadfile: true,\r\n                uploadaudio: true,\r\n                uploadimage: true,\r\n                uploadlocation: true,\r\n                uploadvideo: true,\r\n                reloadchat: true,\r\n                poweredby: true,\r\n\r\n                persistentinput: true,\r\n                abandonevent: true,\r\n                alertsound: true,\r\n                formhistory: true,\r\n                enablemetadata: true,\r\n\r\n                customcss: \"\",\r\n                customjs: \"\",\r\n\r\n                botnameenabled: true,\r\n                botnametext: \"\",\r\n            },\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.chatWeb.description', { validate: strRequired, value: '' });\r\n        register('channels.chatWeb.build', {\r\n            value: values => {\r\n                return getInsertChatwebChannel(\r\n                    getValues('channels.chatWeb.description'),\r\n                    false,\r\n                    \"#7721ad\",\r\n                    nestedForm.getValues(),\r\n                );\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.chatWeb');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        nestedForm.register('interface.chattitle', { validate: strRequired, value: '' });\r\n        nestedForm.register('interface.chatsubtitle', { validate: strRequired, value: '' });\r\n\r\n        const cb = async () => {\r\n            const valid = await nestedForm.trigger();\r\n            setSubmitError(!valid);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, nestedForm.register, nestedForm.unregister, nestedForm.trigger]);\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setSelectedView(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setSelectedView(option);\r\n            setForeground('chatWeb');\r\n        }\r\n    }\r\n\r\n    if (selectedView === \"view1\") {\r\n        return (\r\n            <ChannelAddEnd\r\n                hasFinished={hasFinished}\r\n                loading={insertChannel.loading}\r\n                integrationId={insertChannel.value?.integrationid}\r\n                onNext={() => setView(\"view2\")}\r\n                submitError={submitError}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root, {\r\n            [classes.rootextras]: tabIndex === \"4\",\r\n        })}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link\r\n                    color=\"textSecondary\"\r\n                    key={\"mainview\"}\r\n                    href=\"/\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setView(\"view1\");\r\n                    }}\r\n                >\r\n                    {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <h2 className={classes.title}>\r\n                    <Trans i18nKey={langKeys.activeLaraigoOnYourWebsite} />\r\n                </h2>\r\n                <div style={{ height: 20 }} />\r\n                <AppBar position=\"static\" elevation={0}>\r\n                    <Tabs\r\n                        value={tabIndex}\r\n                        onChange={(_, i: string) => setTabIndes(i)}\r\n                        className={classes.tabs}\r\n                        TabIndicatorProps={{ style: { display: 'none' } }}\r\n                    >\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"0\" && classes.activetab)} label={<Trans i18nKey={langKeys.interface} />} value=\"0\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"1\" && classes.activetab)} label={<Trans i18nKey={langKeys.color} count={2} />} value=\"1\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"2\" && classes.activetab)} label={<Trans i18nKey={langKeys.form} />} value=\"2\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"3\" && classes.activetab)} label={<Trans i18nKey={langKeys.bubble} />} value=\"3\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"4\" && classes.activetab)} label={<Trans i18nKey={langKeys.extra} count={2} />} value=\"4\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value=\"0\" index={tabIndex}><TabPanelInterface form={nestedForm} /></TabPanel>\r\n                <TabPanel value=\"1\" index={tabIndex}><TabPanelColors form={nestedForm} /></TabPanel>\r\n                <TabPanel value=\"2\" index={tabIndex}><TabPanelForm form={nestedForm} /></TabPanel>\r\n                <TabPanel value=\"3\" index={tabIndex}><TabPanelBubble form={nestedForm} /></TabPanel>\r\n                <TabPanel value=\"4\" index={tabIndex}><TabPanelExtras form={nestedForm} /></TabPanel>\r\n                <div style={{ height: 20 }} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                        const valid = await nestedForm.trigger();\r\n                        if (valid) {\r\n                            setView(\"view1\");\r\n                            setHasFinished(true);\r\n                        }\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ninterface ChannelAddEndProps {\r\n    hasFinished: boolean;\r\n    loading: boolean;\r\n    integrationId?: string;\r\n    submitError: boolean;\r\n    onNext: () => void;\r\n}\r\n\r\nconst ChannelAddEnd: FC<ChannelAddEndProps> = ({\r\n    hasFinished,\r\n    submitError,\r\n    onNext,\r\n    loading,\r\n    integrationId,\r\n}) => {\r\n    const {\r\n        commonClasses,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { t } = useTranslation();\r\n    const { getValues, setValue, formState: { errors } } = useFormContext<MainData>();\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {!hasFinished && <WebMessengerColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => deleteChannel('chatWeb')}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {hasFinished && <WebMessengerColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center', fill: 'gray' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_chatweb)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={v => { setValue('channels.chatWeb.description', v); setNextbutton2(!v); }}\r\n                valueDefault={getValues('channels.chatWeb.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={loading || integrationId != null}\r\n                error={errors.channels?.chatWeb?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={onNext}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={loading || integrationId != null || nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useRef, useState } from \"react\";\r\nimport { IconButton, Typography, InputAdornment, makeStyles, Button, Breadcrumbs, Link, AppBar, Tabs, Tab, Grid, Tooltip, Box, FormHelperText, TextField, withStyles, Avatar, FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport { Close, CloudUpload, DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { ColorInput, FieldEdit, FieldSelect, IOSSwitch, } from \"components\";\r\nimport { AndroidColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useForm, useFormContext, UseFormReturn } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from 'hooks';\r\nimport { showSnackbar } from \"store/popus/actions\";\r\nimport { IAndroidSDKAdd, IChatWebAdd, IChatWebAddFormField } from \"@types\";\r\nimport { getInsertChatwebChannel } from \"common/helpers/requestBodies\";\r\nimport clsx from 'clsx';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport React from \"react\";\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { ColorChangeHandler } from \"react-color\";\r\n\r\ninterface TabPanelProps {\r\n    value: string;\r\n    index: string;\r\n}\r\n\r\ninterface FieldTemplate {\r\n    text: React.ReactNode;\r\n    node: (onClose: (key: string) => void, data: IChatWebAddFormField, form: UseFormReturn<IChatWebAdd>, index: number,fields:any, setFields: (key: any) => void) => React.ReactNode;\r\n    data: IChatWebAddFormField;\r\n}\r\n\r\nconst useTabPanelStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n    },\r\n}));\r\n\r\nconst FIRSTNAME_FIELD = \"FIRSTNAME_FIELD\";\r\nconst LASTNAME_FIELD = \"LASTNAME_FIELD\";\r\nconst PHONE_FIELD = \"PHONE_FIELD\";\r\nconst EMAIL_FIELD = \"EMAIL_FIELD\";\r\nconst DOCUMENT_FIELD = \"DOCUMENT_FIELD\";\r\nconst SUPPLYNUMBER_FIELD = \"SUPPLYNUMBER_FIELD\";\r\nconst CONTACT = \"CONTACT_FIELD\";\r\n\r\n\r\nconst TabPanel: FC<TabPanelProps> = ({ children, value, index }) => {\r\n    const classes = useTabPanelStyles();\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            className={classes.root}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            style={{ display: value === index ? 'block' : 'none' }}\r\n        >\r\n            <Box p={3}>\r\n                {children}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTemplateStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: `${theme.palette.primary.main} 1px solid`,\r\n        borderRadius: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n    },\r\n    title: {\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        margin: '0 0 12 0',\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    fieldContainer: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    headertitle: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    closeBtn: {\r\n        border: `${theme.palette.primary.main} 1px solid`,\r\n    },\r\n}));\r\n\r\ninterface NameTemplateProps {\r\n    onClose: () => void;\r\n    form: UseFormReturn<IChatWebAdd>;\r\n    title: React.ReactNode;\r\n    data: IChatWebAddFormField;\r\n    index: number;\r\n    fields:any;\r\n    setFields: (key: any) => void\r\n}\r\n\r\nconst NameTemplate: FC<NameTemplateProps> = ({ data, onClose, title, form, index, fields, setFields }) => {\r\n    const classes = useTemplateStyles();\r\n    const { t } = useTranslation();\r\n    const [required, setRequired] = useState(data.required);\r\n    const multiRes = useSelector(state => state.main.multiData);\r\n\r\n    const handleRequired = (checked: boolean) => {\r\n        setRequired(checked);\r\n        data.required = checked;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.headertitle}>\r\n                <label className={clsx(classes.title, classes.fieldContainer)}>\r\n                    <IconButton\r\n                        style={{color: \"#7721ad\", width: 16, height: 16, padding: 0, position: \"relative\", right: 25, marginRight: -16, bottom: 30}}\r\n                        onClick={() => {\r\n                            console.log(fields.length)\r\n                            let tempfields = fields;\r\n                            let tempfield = fields[index]\r\n                            tempfields[index] = tempfields[index + 1]\r\n                            tempfields[index + 1] = tempfield\r\n                            setFields(tempfields)\r\n                            form.trigger()\r\n                        }}\r\n                        disabled={index + 1 >= fields.length}\r\n                    >\r\n                        <ArrowDownwardIcon/>\r\n                    </IconButton>\r\n                    <IconButton\r\n                        style={{color: \"#7721ad\", width: 16, height: 16, padding: 0, right: 9, marginRight: -16, bottom: 30}}\r\n                        onClick={() => {\r\n                            console.log(fields.length)\r\n                            let tempfields = fields;\r\n                            let tempfield = fields[index]\r\n                            tempfields[index] = tempfields[index - 1]\r\n                            tempfields[index - 1] = tempfield\r\n                            setFields(tempfields)\r\n                            form.trigger()\r\n                        }}\r\n                        disabled={index - 1 < 0}\r\n                    >\r\n                        <ArrowUpwardIcon width={\"5px\"}/>\r\n                    </IconButton>\r\n                    {index+1}) {title}\r\n                </label>\r\n                <IconButton color=\"primary\" onClick={onClose} className={classes.closeBtn}>\r\n                    <Close color=\"primary\" className=\"fa fa-plus-circle\" />\r\n                </IconButton>\r\n            </div>\r\n            <div style={{ height: 18 }} />\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\" style={{ minHeight: 40 }}>\r\n                                            <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.required} />\r\n                                                </label>\r\n                                                <Tooltip title={`${t(langKeys.requiredTooltip)}`} placement=\"top-start\">\r\n                                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                                <IOSSwitch checked={required} onChange={(_, v) => { handleRequired(v); form.setValue(`form.${index}.required`, v);form.trigger(`form.${index}.required`) }} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.label} />\r\n                                                </label>\r\n                                                <Tooltip title={`${t(langKeys.labelTooltip)}`} placement=\"top-start\">\r\n                                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                                </Tooltip>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                                <TextField\r\n                                                    placeholder={t(langKeys.label)}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.label`, e.target.value)\r\n                                                        data.label = e.target.value;\r\n                                                        form.trigger(`form.${index}.label`)\r\n                                                    }}\r\n                                                    defaultValue={data.label}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <Box m={1}>\r\n                                    <Grid container direction=\"row\">\r\n                                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                            <label className={classes.text}>Placeholder</label>\r\n                                            <Tooltip title={`${t(langKeys.placeholderTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                            <TextField\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                fullWidth\r\n                                                onChange={e => {\r\n                                                    form.setValue(`form.${index}.placeholder`, e?.target.value || \"\")\r\n                                                    data.placeholder = e?.target.value || \"\";\r\n                                                    form.trigger(`form.${index}.placeholder`)\r\n                                                }}\r\n                                                defaultValue={data.placeholder}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <Box m={1}>\r\n                                    <Grid container direction=\"row\">\r\n                                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                            <label className={classes.text}>\r\n                                                <Trans i18nKey={langKeys.inputValidation} />\r\n                                                <Tooltip title={`${t(langKeys.inputValidationTooltip)}`} placement=\"top-start\">\r\n                                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                                </Tooltip>\r\n                                            </label>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                            <FieldSelect\r\n                                                className=\"col-12\"\r\n                                                valueDefault={data.inputvalidation}\r\n                                                variant=\"outlined\"\r\n                                                onChange={e => {\r\n                                                    form.setValue(`form.${index}.inputvalidation`, e?.inputvalue || \"\")\r\n                                                    data.inputvalidation = e?.inputvalue || \"\"\r\n                                                }}\r\n                                                data={multiRes.data?.[0]?.data || []}\r\n                                                loading={multiRes.loading}\r\n                                                optionDesc=\"description\"\r\n                                                optionValue=\"inputvalue\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <Box m={1}>\r\n                                    <Grid container direction=\"row\">\r\n                                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                            <label className={classes.text}>\r\n                                                <Trans i18nKey={langKeys.validationOnKeychange} />\r\n                                                <Tooltip title={`${t(langKeys.validationOnKeychangeTooltip)}`} placement=\"top-start\">\r\n                                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                                </Tooltip>\r\n                                            </label>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                            <FieldSelect\r\n                                                className=\"col-12\"\r\n                                                valueDefault={data.keyvalidation}\r\n                                                variant=\"outlined\"\r\n                                                onChange={e => {\r\n                                                    form.setValue(`form.${index}.keyvalidation`, e?.inputvalue || \"\")\r\n                                                    data.keyvalidation = e?.inputvalue || \"\"\r\n                                                }}\r\n                                                data={multiRes.data?.[0]?.data || []}\r\n                                                loading={multiRes.loading}\r\n                                                optionDesc=\"description\"\r\n                                                optionValue=\"inputvalue\"\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <Box m={1}>\r\n                                    <Grid container direction=\"row\">\r\n                                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                            <label className={classes.text}>\r\n                                                <Trans i18nKey={langKeys.errorText} />\r\n                                                <Tooltip title={`${t(langKeys.errorTextTooltip)}`} placement=\"top-start\">\r\n                                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                                </Tooltip>\r\n                                            </label>\r\n                                        </Grid>\r\n                                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                            <TextField\r\n                                                placeholder={t(langKeys.errorText)}\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                                fullWidth\r\n                                                onChange={e => {\r\n                                                    form.setValue(`form.${index}.validationtext`, e.target.value)\r\n                                                    data.validationtext = e.target.value;\r\n                                                    form.trigger(`form.${index}.validationtext`)\r\n                                                }}\r\n                                                defaultValue={data.validationtext}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\nconst templates: { [x: string]: FieldTemplate } = {\r\n    [FIRSTNAME_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.name} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(FIRSTNAME_FIELD)}\r\n                    key={FIRSTNAME_FIELD}\r\n                    title={<Trans i18nKey={langKeys.name} />}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"FIRSTNAME\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [LASTNAME_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.lastname} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(LASTNAME_FIELD)}\r\n                    key={LASTNAME_FIELD}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                    title={<Trans i18nKey={langKeys.lastname} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"LASTNAME\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [PHONE_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.phone} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(PHONE_FIELD)}\r\n                    key={PHONE_FIELD}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                    title={<Trans i18nKey={langKeys.phone} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"PHONE\",\r\n            type: \"phone\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [EMAIL_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.email} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(EMAIL_FIELD)}\r\n                    key={EMAIL_FIELD}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                    title={<Trans i18nKey={langKeys.email} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"EMAIL\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [DOCUMENT_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.document} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(DOCUMENT_FIELD)}\r\n                    key={DOCUMENT_FIELD}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                    title={<Trans i18nKey={langKeys.document} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"DOCUMENT\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [SUPPLYNUMBER_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.supplynumber} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(SUPPLYNUMBER_FIELD)}\r\n                    key={SUPPLYNUMBER_FIELD}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                    title={<Trans i18nKey={langKeys.supplynumber} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"SUPPLYNUMBER\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [CONTACT]: {\r\n        text: <Trans i18nKey={langKeys.contact} />,\r\n        node: (onClose, data, form, index, fields, setFields) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(CONTACT)}\r\n                    key={CONTACT}\r\n                    fields={fields}\r\n                    setFields={setFields}\r\n                    title={<Trans i18nKey={langKeys.contact} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"CONTACT\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n};\r\n\r\n\r\nconst HtmlTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n      backgroundColor: '#f5f5f9',\r\n      color: 'rgba(0, 0, 0, 0.87)',\r\n      maxWidth: 220,\r\n      fontSize: theme.typography.pxToRem(12),\r\n      border: '1px solid #dadde9',\r\n    },\r\n}))(Tooltip);\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    rootextras: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            paddingTop: \"80%\",\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            paddingTop: \"25%\",\r\n        },\r\n        \"@media (min-width: 960px)\": {\r\n            paddingTop: \"70%\",\r\n        },\r\n        \"@media (min-width: 1000px)\": {\r\n            paddingTop: \"40%\",\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            paddingTop: \"25%\",\r\n        },\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n        fontSize: 32,\r\n        margin: '20px 0',\r\n        color: theme.palette.primary.main,\r\n    },\r\n    subtitle: {\r\n        margin: '8px 0',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#A59F9F',\r\n    },\r\n    scriptPreview: {\r\n        width: 'inherit',\r\n        height: 111,\r\n        minHeight: 111,\r\n        backgroundColor: 'white',\r\n        border: '#A59F9F 1px solid',\r\n        margin: '24px 0',\r\n        padding: theme.spacing(2),\r\n        position: 'relative',\r\n        overflowWrap: 'break-word',\r\n        overflow: 'hidden',\r\n    },\r\n    scriptPreviewGradient: {\r\n        backgroundImage: 'linear-gradient(transparent, white)',\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    scriptPreviewCopyBtn: {\r\n        height: 45,\r\n        width: 123,\r\n        minHeight: 45,\r\n        minWidth: 123,\r\n        top: '50%',\r\n        transform: 'translateY(-50%)',\r\n        right: theme.spacing(2),\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n    },\r\n    scriptPreviewFullViewTxt: {\r\n        margin: 0,\r\n        position: 'absolute',\r\n        bottom: theme.spacing(1),\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        height: 24,\r\n\r\n        WebkitTouchCallout: 'none',\r\n        WebkitUserSelect: 'none',\r\n        KhtmlUserSelect: 'none',\r\n        MozUserSelect: 'none',\r\n        msUserSelect: 'none',\r\n        userSelect: 'none',\r\n\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    tabs: {\r\n        color: '#989898',\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: 'inherit',\r\n    },\r\n    tab: {\r\n        // width: 130,\r\n        height: 45,\r\n        maxWidth: 'unset',\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n        backgroundColor: 'white',\r\n        flexGrow: 1,\r\n    },\r\n    activetab: {\r\n        color: 'white',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    arrowRight: {\r\n        width: 0, \r\n        height: 0, \r\n        borderTop: \"20px solid transparent\",\r\n        borderBottom: \"20px solid transparent\",\r\n    },\r\n    currentArrow:{\r\n        borderLeft: \"20px solid #7721ad\"\r\n    },\r\n    nextArrow: {\r\n        borderLeft: \"20px solid #c0bcbc\"\r\n    },\r\n    previousArrow: {\r\n        borderLeft: \"20px solid #00b050\"\r\n    },\r\n    step: {\r\n        backgroundColor: \"#7721ad\",\r\n        height: \"40px\",\r\n        color: \"white\",\r\n        padding: \"10px 25px 5px\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n        width: 100\r\n    },\r\n    currentStep:{\r\n        backgroundColor: \"#7721ad\",\r\n    },\r\n    nextStep: {\r\n        backgroundColor: \"#c0bcbc\",\r\n    },\r\n    previousStep: {\r\n        backgroundColor: \"#00b050\",\r\n    },\r\n    separator: {\r\n        borderBottom: \"2px solid #D1CBCB\",\r\n        width: \"15%\",\r\n        height: 0,\r\n        paddingTop: 18,\r\n        marginLeft: 4,\r\n        marginRight: 4\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}));\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    tabs: {\r\n        color: '#989898',\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: 'inherit',\r\n    },\r\n    activetab: {\r\n        color: 'white',\r\n        backgroundColor: '#7721ad!important',\r\n    },\r\n    tab: {\r\n        // width: 130,\r\n        height: 45,\r\n        maxWidth: 'unset',\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n        backgroundColor: 'white',\r\n        flexGrow: 1,\r\n    },\r\n    arrowRight: {\r\n        width: 0, \r\n        height: 0, \r\n        borderTop: \"20px solid transparent\",\r\n        borderBottom: \"20px solid transparent\",\r\n    },\r\n    currentArrow:{\r\n        borderLeft: \"20px solid #7721ad\"\r\n    },\r\n    nextArrow: {\r\n        borderLeft: \"20px solid #c0bcbc\"\r\n    },\r\n    previousArrow: {\r\n        borderLeft: \"20px solid #00b050\"\r\n    },\r\n    step: {\r\n        backgroundColor: \"#7721ad\",\r\n        height: \"40px\",\r\n        color: \"white\",\r\n        padding: \"10px 25px 5px\",\r\n        textAlign: \"center\",\r\n        verticalAlign: \"middle\",\r\n        width: 100\r\n    },\r\n    currentStep:{\r\n        backgroundColor: \"#7721ad\",\r\n    },\r\n    nextStep: {\r\n        backgroundColor: \"#c0bcbc\",\r\n    },\r\n    previousStep: {\r\n        backgroundColor: \"#00b050\",\r\n    },\r\n    separator: {\r\n        borderBottom: \"2px solid #D1CBCB\",\r\n        width: \"15%\",\r\n        height: 0,\r\n        paddingTop: 18,\r\n        marginLeft: 4,\r\n        marginRight: 4\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n}));\r\n\r\nconst getImgUrl = (file: File | string | null): string | null => {\r\n    if (!file) return null;\r\n\r\n    try {\r\n        if (typeof file === \"string\") {\r\n            return file;\r\n        } else if (typeof file === \"object\") {\r\n            return URL.createObjectURL(file);\r\n        }\r\n        return null;\r\n    } catch (ex) {\r\n        console.error(ex);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst isEmpty = (str?: string) => {\r\n    return !str || str.length === 0;\r\n}\r\n\r\nexport const AndroidInterface: FC<{setTabIndex: (f:string)=>void, form: UseFormReturn<IAndroidSDKAdd>}> = ({setTabIndex,form}) => {    \r\n    const classes = useChannelAddStyles();\r\n    const { setValue, getValues, formState: { errors } } = form;\r\n    const { t } = useTranslation();\r\n    const [enable, setEnable] = useState(getValues('bubble.active'));\r\n    const [msgTooltip, setMsgTooltip] = useState(getValues('bubble.messagebubble'));\r\n    const [chatTittle, setchatTittle] = useState(getValues('interface.chattitle'));\r\n    const [chatSubtittle, setchatSubtittle] = useState(getValues('interface.chatsubtitle'));\r\n    const [botnametext, setbotnametext] = useState(getValues('extra.botnametext'));\r\n    const [msgTooltipIMGPosition, setMsgTooltipIMGPosition] = useState({\r\n        right: document?.getElementById(\"msgtooltip\")?.clientWidth||0,\r\n        bottom: document?.getElementById(\"msgtooltip\")?.clientHeight||0\r\n    });\r\n    const [chatBtn, setChatBtn] = useState<File | string | null>(getValues('interface.iconbutton'));\r\n    const [waitingImg, setWaitingImg] = useState<File | string | null>(getValues('bubble.iconbubble'));\r\n    const [headerBtn, setHeaderBtn] = useState<File | string | null>(getValues('interface.iconheader'));\r\n    const [botBtn, setBotBtn] = useState<File | string | null>(getValues('interface.iconbot'));\r\n    const chatImgUrl = getImgUrl(chatBtn);\r\n    const waitingImgUrl = getImgUrl(waitingImg);\r\n    const headerImgUrl = getImgUrl(headerBtn);\r\n    const botImgUrl = getImgUrl(botBtn);\r\n\r\n\r\n    useEffect(() => {\r\n        setMsgTooltipIMGPosition({\r\n            right: document?.getElementById(\"msgtooltip\")?.clientWidth||0,\r\n            bottom: document?.getElementById(\"msgtooltip\")?.clientHeight||0\r\n        })\r\n    }, [msgTooltip])\r\n\r\n    const handleEnableChange = (checked: boolean) => {\r\n        setEnable(checked);\r\n        setValue('bubble.active', checked);\r\n    }\r\n\r\n    const onChangeChatInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setChatBtn(e.target.files[0]);\r\n        setValue(\"interface.iconbutton\", e.target.files[0]);\r\n    }\r\n\r\n    const handleChatBtnClick = () => {\r\n        const input = document.getElementById('chatBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleCleanChatInput = () => {\r\n        if (!chatBtn) return;\r\n        const input = document.getElementById('chatBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setChatBtn(null);\r\n        setValue('interface.iconbutton', null);\r\n    }\r\n\r\n    const onChangeWaitingInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setWaitingImg(e.target.files[0]);\r\n        setValue('bubble.iconbubble', e.target.files[0]);\r\n    }\r\n\r\n    const handleWaitingBtnClick = () => {\r\n        const input = document.getElementById('waitingBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleCleanWaitingInput = () => {\r\n        if (!waitingImg) return;\r\n        const input = document.getElementById('waitingBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setWaitingImg(null);\r\n        setValue('bubble.iconbubble', null);\r\n    }\r\n    \r\n    const onChangeHeaderInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setHeaderBtn(e.target.files[0]);\r\n        setValue('interface.iconheader', e.target.files[0]);\r\n    }\r\n\r\n    const onChangeBotInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setBotBtn(e.target.files[0]);\r\n        setValue('interface.iconbot', e.target.files[0]);\r\n    }\r\n\r\n    const handleHeaderBtnClick = () => {\r\n        const input = document.getElementById('headerBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleBotBtnClick = () => {\r\n        const input = document.getElementById('botBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleCleanHeaderInput = () => {\r\n        if (!headerBtn) return;\r\n        const input = document.getElementById('headerBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setHeaderBtn(null);\r\n        setValue('interface.iconheader', null);\r\n    }\r\n\r\n    const handleCleanBotInput = () => {\r\n        if (!botBtn) return;\r\n        const input = document.getElementById('botBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setBotBtn(null);\r\n        setValue('interface.iconbot', null);\r\n    }\r\n\r\n    return <>\r\n        <div style={{ display: 'flex', width: \"100%\" }}>\r\n            {/*borderRight: \"2px solid #76acdc\", */}\r\n            <div style={{width: \"100%\", minWidth: 500,  padding: 10}}>\r\n                \r\n                <Grid container direction=\"column\">\r\n                    <Grid container direction=\"row\" style={{display: \"flex\", width: \"100%\", margin: \"5px 8px\"}}>\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.chatButton} />\r\n                                <Tooltip title={`${t(langKeys.chatButtonTooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {chatImgUrl && <img src={chatImgUrl} alt=\"icon button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"chatBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeChatInput}\r\n                                    />\r\n                                    <IconButton onClick={handleChatBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanChatInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <FormHelperText error={!isEmpty(errors?.interface?.iconbutton?.message)} style={{ marginLeft: 14 }}>\r\n                                {errors?.interface?.iconbutton?.message}\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.bubble} />\r\n                                        <Tooltip title={`${t(langKeys.bubbleTooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                    <IOSSwitch checked={enable} onChange={(_, v) => handleEnableChange(v)} />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1} style={{ display: enable ? 'block' : 'none' }}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={1} sm={2} md={2} lg={2} xl={2}/>\r\n                                <Grid item xs={11} sm={2} md={2} lg={2} xl={2}>\r\n                                    <label className={classes.text}>{t(langKeys.text)}</label>\r\n                                    <Tooltip title={`${t(langKeys.bubbleTooltipText)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.textOfTheMessage)}\r\n                                        name=\"text\"\r\n                                        size=\"small\"\r\n                                        defaultValue={getValues('bubble.messagebubble')}\r\n                                        onChange={e => {setValue('bubble.messagebubble', e.target.value);setMsgTooltip(e.target.value);}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" style={{ width: \"100%\", display: enable ? 'flex' : 'none'}} >\r\n                        <Grid item xs={1} sm={2} md={2} lg={2} xl={2}/>\r\n                        <Grid item xs={11} sm={2} md={2} lg={2} xl={2}>\r\n                            <label className={classes.text} style={{margin: \"5px 8px\"}}>\r\n                                <Trans i18nKey={langKeys.image} />\r\n                                <Tooltip title={`${t(langKeys.bubbleTooltipImage)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {waitingImgUrl && <img src={waitingImgUrl} alt=\"bubble button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"waitingBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeWaitingInput}\r\n                                    />\r\n                                    <IconButton onClick={handleWaitingBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanWaitingInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.title} />\r\n                                        <Tooltip title={`${t(langKeys.interfaceTitleTooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        name=\"titulo\"\r\n                                        size=\"small\"\r\n                                        placeholder={t(langKeys.chatHeaderTitle)} // \"Título de la cabecera del chat\"\r\n                                        defaultValue={getValues('interface.chattitle')}\r\n                                        onChange={(e) => {setValue('interface.chattitle', e.target.value); setchatTittle(e.target.value)}}\r\n                                        error={!isEmpty(errors?.interface?.chattitle?.message)}\r\n                                        helperText={errors?.interface?.chattitle?.message}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.subtitle} />\r\n                                        <Tooltip title={`${t(langKeys.interfaceSubtitleTooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.chatHeaderSubtitle)}\r\n                                        name=\"subtitulo\"\r\n                                        size=\"small\"\r\n                                        defaultValue={getValues('interface.chatsubtitle')}\r\n                                        onChange={(e) => {setValue('interface.chatsubtitle', e.target.value);setchatSubtittle(e.target.value)}}\r\n                                        error={!isEmpty(errors?.interface?.chatsubtitle?.message)}\r\n                                        helperText={errors?.interface?.chatsubtitle?.message}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" style={{display: \"flex\", width: \"100%\", margin: \"5px 8px\"}}>\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.header} />\r\n                                <Tooltip title={`${t(langKeys.headerTooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {headerImgUrl && <img src={headerImgUrl} alt=\"header button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"headerBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeHeaderInput}\r\n                                    />\r\n                                    <IconButton onClick={handleHeaderBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanHeaderInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <FormHelperText error={!isEmpty(errors?.interface?.iconheader?.message)} style={{ marginLeft: 14 }}>\r\n                                {errors?.interface?.iconheader?.message}\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container direction=\"row\" style={{display: \"flex\", width: \"100%\", margin: \"5px 8px\"}}>\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.botButton} />\r\n                                <Tooltip title={`${t(langKeys.botButtonTooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {botImgUrl && <img src={botImgUrl} alt=\"bot button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"botBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeBotInput}\r\n                                    />\r\n                                    <IconButton onClick={handleBotBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanBotInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <FormHelperText error={!isEmpty(errors?.interface?.iconbot?.message)} style={{ marginLeft: 14 }}>\r\n                                {errors?.interface?.iconbot?.message}\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                    </Grid>                    \r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.botName} />\r\n                                        <Tooltip title={`${t(langKeys.botNameTooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                    <TextField\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        name=\"titulo\"\r\n                                        size=\"small\"\r\n                                        placeholder={t(langKeys.botName)}\r\n                                        defaultValue={getValues('extra.botnametext')}\r\n                                        onChange={e => {setValue('extra.botnametext', e.target.value); setbotnametext(e.target.value)}}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>            \r\n            {/*<div style={{width: \"50%\", minWidth: 500, display:\"flex\", paddingLeft: 24, paddingBottom: 24, flexDirection: 'column', gap: 8}}>\r\n                <div><Typography variant=\"h6\" >{t(langKeys.homepage)}</Typography></div>\r\n                <div style={{ display: 'flex', width: \"100%\"}} className={classes.tab}>   \r\n                    <HtmlTooltip  arrow \r\n                        open={enable}\r\n                        placement=\"top-end\"\r\n                        title={\r\n                            <React.Fragment>\r\n                                {!!waitingImgUrl &&\r\n                                    <Avatar src={waitingImgUrl||\"\"}  style={{width: 50, height: 50, border: '0.1px solid lightgray', position:'absolute', right: msgTooltipIMGPosition.right, bottom: msgTooltipIMGPosition.bottom }}/>\r\n                                }\r\n                                <Typography color=\"inherit\" id=\"msgtooltip\">{msgTooltip}</Typography>\r\n                            </React.Fragment>\r\n                            }\r\n                    >  \r\n                        <Avatar src={chatImgUrl||\"\"}  style={{width: 75, height: 75, border: '0.1px solid lightgray', top: \"calc(50% - 38px)\", left: \"calc(50% - 38px)\" }}/>\r\n                    </HtmlTooltip>\r\n                </div>\r\n                <div><Typography variant=\"h6\" >Chat</Typography></div>\r\n                <div style={{ display: 'flex', width: \"100%\", flexDirection: 'column' }} className={classes.tab}>\r\n                    <div style={{padding:20, margin:\"20px 20px 0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 75, border: '#A59F9F 1px solid', borderRadius: \"6px 6px 0 0 \"}}>\r\n                         <Avatar src={headerImgUrl||\"\"}  style={{width: 35, height: 35, border: '0.1px solid lightgray' }}/>\r\n                        <div style={{height: \"100%\", width: \"100%\",  paddingLeft: 25, fontSize: \"1.1em\", paddingTop: 5}}>{chatTittle}</div>\r\n                    </div>\r\n                    <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 45, border: '#A59F9F 1px solid'}}>  \r\n                        <div style={{height: \"100%\", width: \"100%\",  textAlign: 'center', fontSize: \"1em\", paddingTop: 5}}>{chatSubtittle}</div>\r\n                    </div>\r\n                    <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 'calc(100% - 160px)', border: '#A59F9F 1px solid', flexDirection: 'column', borderRadius: \"0 0 6px 6px\"}}>  \r\n                        <div style={{fontSize: \"0.8em\", paddingTop: 5, width: 50, textAlign: 'center',whiteSpace: \"initial\", wordWrap: 'break-word'}}>{botnametext}</div>\r\n                        <div style={{display:\"flex\", height: 30, paddingLeft: 10, }}>\r\n                            <Avatar src={botImgUrl||\"\"}  style={{width: 30, height: 30, border: '0.1px solid lightgray' }}/>\r\n                            <div style={{height: \"100%\", width: \"100%\",  paddingLeft: 10, fontSize: \"1.1em\", paddingTop: 5}}>Te saluda {botnametext}. en qúe puedo ayudarte</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>*/}\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport const AndroidColorForm: FC<{setTabIndex: (f:string)=>void, form: UseFormReturn<IAndroidSDKAdd>}> = ({setTabIndex,form}) => {    \r\n    const classes = useChannelAddStyles();\r\n    const { setValue, getValues } = form;\r\n    const { t } = useTranslation();\r\n    const [headerColor, setHeaderColor] = useState(getValues('color.header'));\r\n    const [backgroundColor, setBackgroundColor] = useState(getValues('color.background'));\r\n    const [borderColor, setBorderColor] = useState(getValues('color.border'));\r\n    const [clientMessageColor, setClientMessageColor] = useState(getValues('color.client'));\r\n    const [botMessageColor, setBotMessageColor] = useState(getValues('color.bot'));\r\n\r\n    const handleHeaderColorChange: ColorChangeHandler = (e) => {\r\n        setHeaderColor(e.hex);\r\n        setValue('color.header', e.hex);\r\n    }\r\n\r\n    const handleBackgroundColorChange: ColorChangeHandler = (e) => {\r\n        setBackgroundColor(e.hex);\r\n        setValue('color.background', e.hex);\r\n    }\r\n\r\n    const handleBorderColorChange: ColorChangeHandler = (e) => {\r\n        setBorderColor(e.hex);\r\n        setValue('color.border', e.hex);\r\n    }\r\n\r\n    const handleClientMessageColorChange: ColorChangeHandler = (e) => {\r\n        setClientMessageColor(e.hex);\r\n        setValue('color.client', e.hex);\r\n    }\r\n\r\n    const handleBotMessageColorChange: ColorChangeHandler = (e) => {\r\n        setBotMessageColor(e.hex);\r\n        setValue('color.bot', e.hex);\r\n    }\r\n\r\n    return <>\r\n        <div style={{ display: 'flex', width: \"100%\" }}>\r\n            {/** borderRight: \"2px solid #76acdc\",*/}\r\n            <div style={{width: \"100%\", minWidth: 500,  padding: 10}}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{padding:10}}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={1} sm={1} md={1} lg={1} xl={1}></Grid>\r\n                                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.chatHeader} />\r\n                                            <Tooltip title={`${t(langKeys.chatHeaderTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                                        <ColorInput hex={headerColor} onChange={handleHeaderColorChange} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{padding:10}}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={1} sm={1} md={1} lg={1} xl={1}></Grid>\r\n                                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.chatBackground} />\r\n                                            <Tooltip title={`${t(langKeys.chatBackgroundTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                                        <ColorInput hex={backgroundColor} onChange={handleBackgroundColorChange} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{padding:10}}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={1} sm={1} md={1} lg={1} xl={1}></Grid>\r\n                                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.chatBorder} />\r\n                                            <Tooltip title={`${t(langKeys.chatBorderTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                                        <ColorInput hex={borderColor} onChange={handleBorderColorChange} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{padding:10}}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={1} sm={1} md={1} lg={1} xl={1}></Grid>\r\n                                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.clientMessage} count={2} />\r\n                                        </label>\r\n                                        <Tooltip title={`${t(langKeys.clientMessageColorTooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                                        <ColorInput hex={clientMessageColor} onChange={handleClientMessageColorChange} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{padding:10}}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={1} sm={1} md={1} lg={1} xl={1}></Grid>\r\n                                    <Grid item xs={8} sm={8} md={8} lg={8} xl={8}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.botMessage} count={2} />\r\n                                            <Tooltip title={`${t(langKeys.botMessageTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={3} sm={3} md={3} lg={3} xl={3}>\r\n                                        <ColorInput hex={botMessageColor} onChange={handleBotMessageColorChange} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            {/* \r\n                <div style={{width: \"50%\", minWidth: 500, display:\"flex\", paddingLeft: 24, paddingBottom: 24, flexDirection: 'column', gap: 8}}>\r\n                    <div style={{ display: 'flex', width: \"100%\", flexDirection: 'column' }} className={classes.tab}>\r\n                        <div style={{padding:20, margin:\"20px 20px 0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 75, border: '1px solid', borderRadius: \"6px 6px 0 0 \", backgroundColor: headerColor, borderColor: borderColor}}>\r\n                            <Avatar src={getImgUrl(getValues('interface.iconheader'))||\"\"}  style={{width: 35, height: 35, border: '0.1px solid lightgray' }}/>\r\n                            <div style={{height: \"100%\", width: \"100%\",  paddingLeft: 25, fontSize: \"1.1em\", paddingTop: 5}}>{getValues('interface.chattitle')}</div>\r\n                        </div>\r\n                        <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 45, border: '1px solid', backgroundColor: headerColor, borderColor: borderColor}}>  \r\n                            <div style={{height: \"100%\", width: \"100%\",  textAlign: 'center', fontSize: \"1em\", paddingTop: 5}}>{getValues('interface.chatsubtitle')}</div>\r\n                        </div>\r\n                        <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 'calc(100% - 160px)', border: '1px solid', flexDirection: 'column', borderRadius: \"0 0 6px 6px\", backgroundColor: backgroundColor, borderColor: borderColor}}>  \r\n                            <div style={{fontSize: \"0.8em\", paddingTop: 5, width: 50, textAlign: 'center',whiteSpace: \"initial\", wordWrap: 'break-word'}}>{getValues('extra.botnametext')}</div>\r\n                            <div style={{display:\"flex\", height: \"auto\", paddingLeft: 10, }}>\r\n                                <Avatar src={getImgUrl(getValues('interface.iconbot'))||\"\"}  style={{width: 30, height: 30, border: '0.1px solid', borderColor: borderColor }}/>\r\n                                <div style={{height: \"auto\", width: \"80%\", border:\"1px solid\", borderColor: borderColor, backgroundColor: botMessageColor, borderRadius: 8,  marginLeft: 10, padding:10, fontSize: \"1.1em\", paddingTop: 5}}>Te saluda {getValues('extra.botnametext')||\"bot\"}. en qúe puedo ayudarte</div>\r\n                            </div>\r\n                            <div style={{height: \"auto\", width: \"80%\", border:\"1px solid\", borderColor: borderColor, borderRadius: 8, backgroundColor: clientMessageColor,  marginLeft: \"20%\", marginTop: 10, padding:10, fontSize: \"1.1em\", paddingTop: 5}}>Hola</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            */}\r\n        </div>\r\n    </>\r\n}\r\nexport const AndroidExtra: FC<{setTabIndex: (f:string)=>void, form: UseFormReturn<IAndroidSDKAdd>}> = ({setTabIndex,form}) => {    \r\n    const classes = useChannelAddStyles();\r\n    const { setValue, getValues } = form;\r\n    const { t } = useTranslation();\r\n\r\n    const [uploadFile, setUploadFile] = useState(getValues('extra.uploadfile'));\r\n    const [uploadVideo, setUploadVideo] = useState(getValues('extra.uploadvideo'));\r\n    const [uploadImage, setUploadImage] = useState(getValues('extra.uploadimage'));\r\n    const [uploadAudio, setUploadAudio] = useState(getValues('extra.uploadaudio'));\r\n    const [uploadLocation, setUploadLocation] = useState(getValues('extra.uploadlocation'));\r\n    const [reloadChat, setReloadChat] = useState(getValues('extra.reloadchat'));\r\n    const [poweredBy, setPoweredBy] = useState(getValues('extra.poweredby'));\r\n\r\n    const [persistentInput, setPersistentInput] = useState(getValues('extra.persistentinput'));\r\n    const [abandonEvent, setAbandonEvent] = useState(getValues('extra.abandonevent'));\r\n    const [alertSound, setAlertSound] = useState(getValues('extra.alertsound'));\r\n    const [formHistory, setFormHistory] = useState(getValues('extra.formhistory'));\r\n    const [enableMetadata, setEnableMetadata] = useState(getValues('extra.enablemetadata'));\r\n\r\n    const handleUploadFileChange = (checked: boolean) => {\r\n        setUploadFile(checked);\r\n        setValue('extra.uploadfile', checked);\r\n    }\r\n\r\n    const handleUploadVideoChange = (checked: boolean) => {\r\n        setUploadVideo(checked);\r\n        setValue('extra.uploadvideo', checked);\r\n    }\r\n\r\n    const handleUploadImageChange = (checked: boolean) => {\r\n        setUploadImage(checked);\r\n        setValue('extra.uploadimage', checked);\r\n    }\r\n\r\n    const handleUploadAudioChange = (checked: boolean) => {\r\n        setUploadAudio(checked);\r\n        setValue('extra.uploadaudio', checked);\r\n    }\r\n\r\n    const handleUploadLocationChange = (checked: boolean) => {\r\n        setUploadLocation(checked);\r\n        setValue('extra.uploadlocation', checked);\r\n    }\r\n\r\n    const handleReloadChatChange = (checked: boolean) => {\r\n        setReloadChat(checked);\r\n        setValue('extra.reloadchat', checked);\r\n    }\r\n\r\n    const handlePoweredByChange = (checked: boolean) => {\r\n        setPoweredBy(checked);\r\n        setValue('extra.poweredby', checked);\r\n    }\r\n\r\n    const handlePersistentInputChange = (checked: boolean) => {\r\n        setPersistentInput(checked);\r\n        setValue('extra.persistentinput', checked);\r\n    }\r\n\r\n    const handleAbandonEventChange = (checked: boolean) => {\r\n        setAbandonEvent(checked);\r\n        setValue('extra.abandonevent', checked);\r\n    }\r\n\r\n    const handleAlertSoundChange = (checked: boolean) => {\r\n        setAlertSound(checked);\r\n        setValue('extra.alertsound', checked);\r\n    }\r\n\r\n    const handleFormHistoryChange = (checked: boolean) => {\r\n        setFormHistory(checked);\r\n        setValue('extra.formhistory', checked);\r\n    }\r\n\r\n    const handleEnableMetadataChange = (checked: boolean) => {\r\n        setEnableMetadata(checked);\r\n        setValue('extra.enablemetadata', checked);\r\n    }\r\n    return <>\r\n        <div style={{ display: 'flex', width: \"100%\" }}>\r\n            {/* <div style={{width: \"50%\", minWidth: 500, borderRight: \"2px solid #76acdc\", padding: 10}}>*/}\r\n            <div style={{width: \"100%\", minWidth: 500, padding: 10}}>\r\n                <Grid container direction=\"column\">\r\n                    <div style={{padding: \"10px 0\", paddingTop: 0}}><Typography variant=\"h6\" >{t(langKeys.messagetemplate_attachment)}</Typography></div>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}  style={{padding: \"0 0 20px 0\", paddingTop: 0}}>                        \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.documents}/>\r\n                                            <Tooltip title={`${t(langKeys.documentsTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={uploadFile} onChange={(_, v) => handleUploadFileChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.image_plural}/>\r\n                                            <Tooltip title={`${t(langKeys.imageTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={uploadImage} onChange={(_, v) => handleUploadImageChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{padding: \"0 0 20px 0\", paddingTop: 0}}>                       \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            Audios\r\n                                            <Tooltip title={`${t(langKeys.audioTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={uploadAudio} onChange={(_, v) => handleUploadAudioChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            Videos\r\n                                            <Tooltip title={`${t(langKeys.videoTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={uploadVideo} onChange={(_, v) => handleUploadVideoChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>                        \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.sendLocation} />\r\n                                            <Tooltip title={`${t(langKeys.locationTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={uploadLocation} onChange={(_, v) => handleUploadLocationChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div style={{padding: \"10px 0\"}}><Typography variant=\"h6\" >{t(langKeys.additionalsettings)}</Typography></div>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>   \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>Powered by\r\n                                            <Tooltip title={`${t(langKeys.poweredbyTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={poweredBy} onChange={(_, v) => handlePoweredByChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.startnewconversation} />\r\n                                            <Tooltip title={`${t(langKeys.startnewconversationTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={reloadChat} onChange={(_, v) => handleReloadChatChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>   \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.inputAlwaysEnabled} />\r\n                                            <Tooltip title={`${t(langKeys.inputAlwaysEnabledTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={persistentInput} onChange={(_, v) => handlePersistentInputChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.abandonmentEvent} />\r\n                                            <Tooltip title={`${t(langKeys.abandonmentEventTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={abandonEvent} onChange={(_, v) => handleAbandonEventChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>   \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.newMessageRing} />\r\n                                            <Tooltip title={`${t(langKeys.newMessageRingTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={alertSound} onChange={(_, v) => handleAlertSoundChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.formBaseHistory} />\r\n                                            <Tooltip title={`${t(langKeys.formBaseHistoryTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={formHistory} onChange={(_, v) => handleFormHistoryChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>   \r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={6} md={6} lg={6} xl={6}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                        <label className={classes.text}>\r\n                                            <Trans i18nKey={langKeys.sendMetaData} />\r\n                                            <Tooltip title={`${t(langKeys.sendMetaDataTooltip)}`} placement=\"top-start\">\r\n                                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                            </Tooltip>\r\n                                        </label>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                        <IOSSwitch checked={enableMetadata} onChange={(_, v) => handleEnableMetadataChange(v)} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div style={{padding: \"10px 0\"}}><Typography variant=\"h6\" >{t(langKeys.layoutconfig)}</Typography></div>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={.5} color=\"textPrimary\">\r\n                            CSS Header\r\n                            <Tooltip title={`${t(langKeys.cssheaderTooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </Box>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            minRows={5}\r\n                            maxRows={10}\r\n                            fullWidth\r\n                            defaultValue={getValues('extra.customcss')}\r\n                            onChange={e => setValue('extra.customcss', e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <div style={{ height: 20 }} />\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={.5} color=\"textPrimary\">\r\n                            JS Script\r\n                            <Tooltip title={`${t(langKeys.jsscriptTooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </Box>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            multiline\r\n                            minRows={5}\r\n                            maxRows={10}\r\n                            fullWidth\r\n                            defaultValue={getValues('extra.customjs')}\r\n                            onChange={e => setValue('extra.customjs', e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            {/* \r\n            \r\n            <div style={{width: \"50%\", minWidth: 250, padding: 10}}>\r\n                <div style={{ display: 'flex', width: \"100%\", flexDirection: 'column' }}>\r\n                    <div style={{padding:20, margin:\"20px 20px 0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 75, border: '1px solid', borderRadius: \"6px 6px 0 0 \", backgroundColor: getValues('color.header'), borderColor: getValues('color.border')}}>\r\n                        <Avatar src={getImgUrl(getValues('interface.iconheader'))||\"\"}  style={{width: 35, height: 35, border: '0.1px solid lightgray' }}/>\r\n                        <div style={{height: \"100%\", width: \"100%\",  paddingLeft: 25, fontSize: \"1.1em\", paddingTop: 5}}>{getValues('interface.chattitle')}</div>\r\n                    </div>\r\n                    <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 45, border: '1px solid', backgroundColor: getValues('color.header'), borderColor: getValues('color.border')}}>  \r\n                        <div style={{height: \"100%\", width: \"100%\",  textAlign: 'center', fontSize: \"1em\", paddingTop: 5}}>{getValues('interface.chatsubtitle')}</div>\r\n                    </div>\r\n                    <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 200, border: '1px solid', flexDirection: 'column', backgroundColor: getValues('color.background'), borderColor: getValues('color.border')}}> \r\n                    </div>\r\n                    <div style={{padding:5, margin:\"0 20px\", width:\"calc(100% - 40px)\", height: 'calc(100% - 160px)', border: '1px solid', borderRadius: \"0 0 6px 6px\", backgroundColor: \"#e7e7e7\", borderColor: getValues('color.border')}}> \r\n                        <div style={{width: \"100%\", display:'flex'}}>\r\n                            <div style={{paddingRight: 10}}>   \r\n                                <Box style={{backgroundColor: \"white\", zIndex: 99, width: 160, marginRight: -160, position: 'relative',\r\n                                bottom: (Number(uploadAudio) + Number(uploadFile) + Number(uploadImage) + Number(uploadLocation) + Number(uploadVideo))*37, marginBottom: -(Number(uploadAudio) + Number(uploadFile) + Number(uploadImage) + Number(uploadLocation) + Number(uploadVideo))*37 }}>\r\n                                    {uploadAudio && <MenuItem style={{border: '1px solid #ebeaed'}}>{t(langKeys.uploadAudio)}</MenuItem>}\r\n                                    {uploadFile && <MenuItem style={{border: '1px solid #ebeaed'}}>{t(langKeys.uploadFile)}</MenuItem>}\r\n                                    {uploadImage && <MenuItem style={{border: '1px solid #ebeaed'}}>{t(langKeys.uploadImage)}</MenuItem>}\r\n                                    {uploadLocation && <MenuItem style={{border: '1px solid #ebeaed'}}>{t(langKeys.sendLocation)}</MenuItem>}\r\n                                    {uploadVideo && <MenuItem style={{border: '1px solid #ebeaed'}}>{t(langKeys.uploadVideo)}</MenuItem>}\r\n                                </Box>\r\n                                <IconButton\r\n                                    id= \"circleopenmenu\"\r\n                                    style={{padding:0}}\r\n                                >\r\n                                    <AddCircleIcon style={{width:35, height:35}}/>\r\n                                </IconButton>  \r\n                            </div>\r\n                            <div style={{width: '80%'}}>                            \r\n                                <TextField\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    disabled={!persistentInput}\r\n                                    size=\"small\"\r\n                                    style={{backgroundColor: \"white\"}}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        {poweredBy && <div style={{width: \"100%\", textAlign:'center'}}>Powered by Laraigo</div>}\r\n                    </div>\r\n                </div>\r\n            </div>               \r\n            */ }\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport const ChannelAddAndroid: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const classes = useStyles();\r\n    const { foreground, submitObservable, setForeground } = useContext(SubscriptionContext);\r\n    const { getValues, register, unregister } = useFormContext<MainData>();\r\n    const dispatch = useDispatch();\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const [selectedView, setSelectedView] = useState(\"view1\");\r\n    const [tabIndex, setTabIndex] = useState('0');\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'chatWeb' && selectedView !== \"view1\") {\r\n            setSelectedView(\"view1\");\r\n        }\r\n    }, [foreground, selectedView]);\r\n    \r\n    const insertChannel = useSelector(state => state.channel.insertChannel);\r\n\r\n    useEffect(() => {\r\n        if (insertChannel.loading) return;\r\n        if (insertChannel.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: insertChannel.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else if (insertChannel.value) {\r\n            dispatch(showSnackbar({\r\n                message: \"El canal se inserto con éxito\",\r\n                show: true,\r\n                severity: \"success\"\r\n            }));\r\n        }\r\n    }, [insertChannel]);\r\n\r\n    const nestedForm: UseFormReturn<IChatWebAdd> = useForm<IChatWebAdd>({\r\n        defaultValues: {\r\n            interface: {\r\n                chattitle: \"\",\r\n                chatsubtitle: \"\",\r\n                iconbutton: null,\r\n                iconheader: null,\r\n                iconbot: null,\r\n            },\r\n            color: {\r\n                header: \"#fff\",\r\n                background: \"#F9F9FA\",\r\n                border: \"#EBEAED\",\r\n                client: \"#fff\",\r\n                bot: \"#aa53e0\",\r\n            },\r\n            form: [],\r\n            bubble: {\r\n                active: true,\r\n                messagebubble: \"\",\r\n                iconbubble: null,\r\n            },\r\n            extra: {\r\n                uploadfile: true,\r\n                uploadaudio: true,\r\n                uploadimage: true,\r\n                uploadlocation: true,\r\n                uploadvideo: true,\r\n                reloadchat: true,\r\n                poweredby: true,\r\n\r\n                persistentinput: true,\r\n                abandonevent: true,\r\n                alertsound: true,\r\n                formhistory: true,\r\n                enablemetadata: true,\r\n\r\n                customcss: \"\",\r\n                customjs: \"\",\r\n\r\n                botnameenabled: true,\r\n                botnametext: \"\",\r\n            },\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.android.description', { validate: strRequired, value: '' });\r\n        register('channels.android.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": \"\",\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#90c900\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"SMOOCHANDROID\",\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.android');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        nestedForm.register('interface.chattitle', { validate: strRequired, value: '' });\r\n        nestedForm.register('interface.chatsubtitle', { validate: strRequired, value: '' });\r\n\r\n        const cb = async () => {\r\n            const valid = await nestedForm.trigger();\r\n            setSubmitError(!valid);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, nestedForm.register, nestedForm.unregister, nestedForm.trigger]);\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setSelectedView(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setSelectedView(option);\r\n            setForeground('android');\r\n        }\r\n    }\r\n\r\n    if (selectedView === \"view1\") {\r\n        return (\r\n            <ChannelAddEnd\r\n                hasFinished={hasFinished}\r\n                loading={insertChannel.loading}\r\n                integrationId={insertChannel.value?.integrationid}\r\n                onNext={() => setView(\"view2\")}\r\n                submitError={submitError}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(classes.root, {\r\n            [classes.rootextras]: tabIndex === \"4\",\r\n        })}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link\r\n                    color=\"textSecondary\"\r\n                    key={\"mainview\"}\r\n                    href=\"/\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        setView(\"view1\");\r\n                    }}\r\n                >\r\n                    {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <h2 className={classes.title}>\r\n                    <Trans i18nKey={langKeys.activeLaraigoOnYourWebsite} />\r\n                </h2>\r\n                <div style={{ height: 20 }} />\r\n                <div style={{display: \"flex\", width: \"100%\", paddingLeft: \"calc(27.5% - 240px)\", minWidth: 500}} >\r\n                    <div style={{display: \"flex\"}}>\r\n                        <div className={clsx(classes.step, tabIndex === \"0\" && classes.currentStep, tabIndex > \"0\" && classes.previousStep, tabIndex < \"0\" && classes.nextStep)}>{t(langKeys.step)} 1</div>\r\n                        <div className={clsx(classes.arrowRight, tabIndex === \"0\" && classes.currentArrow, tabIndex > \"0\" && classes.previousArrow, tabIndex < \"0\" && classes.nextArrow)}></div>\r\n                    </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <div className={clsx(classes.step, tabIndex === \"1\" && classes.currentStep, tabIndex > \"1\" && classes.previousStep, tabIndex < \"1\" && classes.nextStep)}>{t(langKeys.step)} 2</div>\r\n                        <div className={clsx(classes.arrowRight, tabIndex === \"1\" && classes.currentArrow, tabIndex > \"1\" && classes.previousArrow, tabIndex < \"1\" && classes.nextArrow)}></div>\r\n                    </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <div className={clsx(classes.step, tabIndex === \"2\" && classes.currentStep, tabIndex > \"2\" && classes.previousStep, tabIndex < \"2\" && classes.nextStep)}>{t(langKeys.step)} 3</div>\r\n                        <div className={clsx(classes.arrowRight, tabIndex === \"2\" && classes.currentArrow, tabIndex > \"2\" && classes.previousArrow, tabIndex < \"2\" && classes.nextArrow)}></div>\r\n                    </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div style={{display: \"flex\"}}>\r\n                        <div className={clsx(classes.step, tabIndex === \"3\" && classes.currentStep, tabIndex > \"3\" && classes.previousStep, tabIndex < \"3\" && classes.nextStep)}>{t(langKeys.step)} 4</div>\r\n                        <div className={clsx(classes.arrowRight, tabIndex === \"3\" && classes.currentArrow, tabIndex > \"3\" && classes.previousArrow, tabIndex < \"3\" && classes.nextArrow)}></div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: 20 }} />\r\n                <AppBar position=\"static\" elevation={0}>\r\n                    <Tabs\r\n                        value={tabIndex}\r\n                        className={classes.tabs}\r\n                        onChange={(_, i: string) => setTabIndex(i)}\r\n                        TabIndicatorProps={{ style: { display: 'none' } }}\r\n                    >\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"0\" && classes.activetab)} label={<Trans i18nKey={langKeys.chatinterface} />} value=\"0\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"1\" && classes.activetab)} label={<Trans i18nKey={langKeys.color} count={2} />} value=\"1\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"2\" && classes.activetab)} label={<Trans i18nKey={langKeys.form} />} value=\"2\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"3\" && classes.activetab)} label={<Trans i18nKey={langKeys.extra} count={2}/>} value=\"3\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value=\"0\" index={tabIndex}><AndroidInterface  form={nestedForm} setTabIndex={setTabIndex}/></TabPanel>\r\n                <TabPanel value=\"1\" index={tabIndex}><AndroidColorForm form={nestedForm} setTabIndex={setTabIndex}/></TabPanel>\r\n                <TabPanel value=\"2\" index={tabIndex}><AndroidForm form={nestedForm} setTabIndex={setTabIndex}/></TabPanel>\r\n                <TabPanel value=\"3\" index={tabIndex}><AndroidExtra form={nestedForm} setTabIndex={setTabIndex}/></TabPanel>\r\n                <div style={{ height: 20 }} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={async () => {\r\n                        const valid = await nestedForm.trigger();\r\n                        if (valid) {\r\n                            setView(\"view1\");\r\n                            setHasFinished(true);\r\n                        }\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport const AndroidForm: FC<{setTabIndex: (f:string)=>void, form: UseFormReturn<IAndroidSDKAdd>}> = ({setTabIndex,form}) => {    \r\n    const classes = useChannelAddStyles();\r\n    const { setValue, getValues } = form;\r\n    const { t } = useTranslation();\r\n    const defFields = useRef<FieldTemplate[]>((form.getValues('form') || []).map(x => {\r\n        return {\r\n            ...templates[`${x.field}_FIELD`],\r\n            data: x,\r\n        } as FieldTemplate;\r\n    }));\r\n\r\n    const [enable, setEnable] = useState(false);\r\n    const [fieldTemplate, setFieldTemplate] = useState<string>(\"\");\r\n    const [fields, setFields] = useState<FieldTemplate[]>(defFields.current);\r\n\r\n    useEffect(() => {\r\n        form.setValue('form', fields.map(x => x.data));\r\n    }, [fields, form]);\r\n\r\n    useEffect(() => {\r\n        handleAddTemplate()\r\n    }, [fieldTemplate]);\r\n\r\n    const handleCloseTemplate = (key: string) => {\r\n        const newFields = fields.filter(e => e.data.field !== templates[key].data.field)\r\n        setFields(newFields);\r\n    };\r\n\r\n    const handleAddTemplate = () => {\r\n        if (fieldTemplate === \"\") return;\r\n\r\n        setFields([...fields, templates[fieldTemplate]]);\r\n        setFieldTemplate(\"\");\r\n    }\r\n\r\n    const getMenuTemplates = () => {\r\n        const temp: React.ReactNode[] = [];\r\n        for (const key in templates) {\r\n            if (fields.includes(templates[key])) continue;\r\n            temp.push(<MenuItem key={key} value={key}>{templates[key].text}</MenuItem>);\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    return <>\r\n        <div style={{ display: 'flex', width: \"100%\" }}>\r\n            <div style={{width: \"50%\", minWidth: 500, borderRight: \"2px solid #76acdc\", padding: 10}}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={10} md={10} lg={10} xl={10}>\r\n                                <Typography className={classes.text}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.wantAddFormToSiteQuestion} />\r\n                                        <Tooltip title={`${t(langKeys.wantAddFormToSiteQuestionTooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </label>\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={2} lg={2} xl={2}>\r\n                                <IOSSwitch checked={enable} onChange={(_, v) => setEnable(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ display: enable ? 'block' : 'none' }}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                                <Typography className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.selectField} />\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                                <FormControl style={{ width: 160, marginRight: 20 }}>\r\n                                    <Select\r\n                                        variant=\"outlined\"\r\n                                        value={fieldTemplate}\r\n                                        onChange={e => setFieldTemplate(e.target.value as string)}\r\n                                        displayEmpty\r\n                                        style={{ height: 40 }}\r\n                                    >\r\n                                        <MenuItem value={\"\"}>\r\n                                            <em><Trans i18nKey={langKeys.select} /> -</em>\r\n                                        </MenuItem>\r\n                                        {getMenuTemplates()}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {fields.map((e, i) => e.node(handleCloseTemplate, e.data, form, i,fields, setFields))}\r\n            </div>\r\n            <div style={{width: \"50%\", minWidth: 500, display:\"flex\", paddingLeft: 24, paddingBottom: 24, gap: 8}}>\r\n                \r\n                <div style={{width: \"50%\", minWidth: 250, padding: 10}}>\r\n                    <div><Typography variant=\"subtitle1\" >1) {t(langKeys.formbeforecompletetion)}</Typography></div>\r\n                    <div style={{ display: 'flex', width: \"100%\", flexDirection: 'column' }}>\r\n                        <div style={{padding:20, margin:\"20px 20px 0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 75, border: '1px solid', borderRadius: \"6px 6px 0 0 \", backgroundColor: getValues('color.header'), borderColor: getValues('color.border')}}>\r\n                            <Avatar src={getImgUrl(getValues('interface.iconheader'))||\"\"}  style={{width: 35, height: 35, border: '0.1px solid lightgray' }}/>\r\n                            <div style={{height: \"100%\", width: \"100%\",  paddingLeft: 25, fontSize: \"1.1em\", paddingTop: 5}}>{getValues('interface.chattitle')}</div>\r\n                        </div>\r\n                        <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 45, border: '1px solid', backgroundColor: getValues('color.header'), borderColor: getValues('color.border')}}>  \r\n                            <div style={{height: \"100%\", width: \"100%\",  textAlign: 'center', fontSize: \"1em\", paddingTop: 5}}>{getValues('interface.chatsubtitle')}</div>\r\n                        </div>\r\n                        <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 'calc(100% - 160px)', border: '1px solid', flexDirection: 'column', borderRadius: \"0 0 6px 6px\", backgroundColor: getValues('color.background'), borderColor: getValues('color.border')}}>  \r\n                            {fields.map((e,i) => (<div key={i} style={{padding: \"8px 0\"}}>\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={.5} color=\"textPrimary\">\r\n                                    {e.data.label}\r\n                                </Box>\r\n                                <TextField\r\n                                    type={e.data.type}\r\n                                    fullWidth\r\n                                    placeholder={e.data.placeholder}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                />\r\n                            </div>)\r\n                            )}\r\n                            <div style={{display: \"flex\", marginLeft:\"calc(50% - 80px\"}}>\r\n                                <div className={clsx(classes.step)} style={{backgroundColor:\"white\", color:\"black\", width: 140}}>{t(langKeys.sendData)}</div>\r\n                                <div className={clsx(classes.arrowRight)} style={{borderLeft: \"20px solid white\"}}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{width: \"50%\", minWidth: 250, padding: 10}}>\r\n                    <div><Typography variant=\"subtitle1\" >2) {t(langKeys.formaftercompletitionerror)}</Typography></div>\r\n                    <div style={{ display: 'flex', width: \"100%\", flexDirection: 'column' }}>\r\n                        <div style={{padding:20, margin:\"20px 20px 0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 75, border: '1px solid', borderRadius: \"6px 6px 0 0 \", backgroundColor: getValues('color.header'), borderColor: getValues('color.border')}}>\r\n                            <Avatar src={getImgUrl(getValues('interface.iconheader'))||\"\"}  style={{width: 35, height: 35, border: '0.1px solid lightgray' }}/>\r\n                            <div style={{height: \"100%\", width: \"100%\",  paddingLeft: 25, fontSize: \"1.1em\", paddingTop: 5}}>{getValues('interface.chattitle')}</div>\r\n                        </div>\r\n                        <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 45, border: '1px solid', backgroundColor: getValues('color.header'), borderColor: getValues('color.border')}}>  \r\n                            <div style={{height: \"100%\", width: \"100%\",  textAlign: 'center', fontSize: \"1em\", paddingTop: 5}}>{getValues('interface.chatsubtitle')}</div>\r\n                        </div>\r\n                        <div style={{padding:5, margin:\"0 20px\", display:\"flex\", width:\"calc(100% - 40px)\", height: 'calc(100% - 160px)', border: '1px solid', flexDirection: 'column', borderRadius: \"0 0 6px 6px\", backgroundColor: getValues('color.background'), borderColor: getValues('color.border')}}>  \r\n                            {fields.map((e,i) => (<div key={i} style={{padding: \"8px 0\"}}>\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={.5} color=\"textPrimary\">\r\n                                    {e.data.label}\r\n                                </Box>\r\n                                <TextField\r\n                                    type={e.data.type}\r\n                                    fullWidth\r\n                                    placeholder={e.data.placeholder}\r\n                                    size=\"small\"\r\n                                    variant=\"outlined\"\r\n                                    disabled\r\n                                    error\r\n                                    helperText={e.data.validationtext||\"\"}\r\n                                />\r\n                            </div>)\r\n                            )}\r\n                            <div style={{display: \"flex\", marginLeft:\"calc(50% - 80px\"}}>\r\n                                <div className={clsx(classes.step)} style={{backgroundColor:\"white\", color:\"black\", width: 140}}>{t(langKeys.sendData)}</div>\r\n                                <div className={clsx(classes.arrowRight)} style={{borderLeft: \"20px solid white\"}}></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\ninterface ChannelAddEndProps {\r\n    hasFinished: boolean;\r\n    loading: boolean;\r\n    integrationId?: string;\r\n    submitError: boolean;\r\n    onNext: () => void;\r\n}\r\n\r\n\r\nconst ChannelAddEnd: FC<ChannelAddEndProps> = ({\r\n    hasFinished,\r\n    submitError,\r\n    onNext,\r\n    loading,\r\n    integrationId,\r\n}) => {\r\n    const {\r\n        commonClasses,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { t } = useTranslation();\r\n    const { getValues, setValue, formState: { errors } } = useFormContext<MainData>();\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n    \r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {!hasFinished && <AndroidColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => deleteChannel('android')}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {hasFinished && <AndroidColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center', fill: 'gray' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_android)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={v => { setValue('channels.android.description', v); setNextbutton2(!v); }}\r\n                valueDefault={getValues('channels.android.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                disabled={loading || integrationId != null}\r\n                error={errors.channels?.android?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={onNext}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={loading || integrationId != null || nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelAddAndroid","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, } from \"components\";\r\nimport { IosColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\n\r\nexport const ChannelAddIos: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.apple.description', { validate: strRequired, value: '' });\r\n        register('channels.apple.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": \"\",\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#000000\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"SMOOCHIOS\",\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.apple')\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    return (\r\n        <div className={commonClasses.root}>\r\n            {!hasFinished && <IosColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('apple');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"SMOOCHIOS\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <IosColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_ios)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(val: string) => {\r\n                    setValue('channels.apple.description', val);\r\n                    if (val.length > 0 && !hasFinished) {\r\n                        setHasFinished(true);\r\n                    } else if (val.length === 0 && hasFinished) {\r\n                        setHasFinished(false);\r\n                    }\r\n                }}\r\n                valueDefault={getValues('channels.apple.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.apple?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChannelAddIos","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\n\r\nimport { Button, IconButton, InputAdornment, makeStyles, Typography, FormControlLabel } from \"@material-ui/core\";\r\nimport { FieldEdit, FieldSelect, IOSSwitchPurple } from \"components\";\r\nimport { FC, useEffect, useState, useContext } from \"react\";\r\nimport { getCategories, getCountryStates, getRegions } from \"store/voximplant/actions\";\r\nimport { getName } from \"country-list\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useSelector } from \"hooks\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { MainData, SubscriptionContext, usePlanData } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport { formatNumber } from \"common/helpers\";\r\n\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport paths from \"common/constants/paths\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        fontSize: \"14px\",\r\n        fontWeight: 500,\r\n        padding: 12,\r\n        textTransform: \"initial\",\r\n        width: \"180px\",\r\n    },\r\n    containerDetail: {\r\n        background: \"#fff\",\r\n        borderRadius: \"6px\",\r\n        boxShadow: \"0px 5px 10px 0px rgba(0, 0, 0, 0.5)\",\r\n        marginBottom: \"40px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        width: \"80%\",\r\n    },\r\n    containerCapacities: {\r\n        background: \"#EFEFF4\",\r\n        borderRadius: \"6px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        marginBottom: \"20px\",\r\n        paddingLeft: \"10px\",\r\n        paddingRight: \"10px\",\r\n        padding: theme.spacing(2),\r\n        width: \"100%\",\r\n        height: \"auto\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    containerItem: {\r\n        display: \"flex\",\r\n        marginLeft: 0,\r\n        paddingLeft: 50,\r\n        marginRight: 20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        width: 120,\r\n    },\r\n}));\r\n\r\nexport const ChannelAddPhone: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const dataRecordingStorage = [{ value: \"month3\", text: t(langKeys.voicechannel_recordingmonth3) }, { value: \"month6\", text: t(langKeys.voicechannel_recordingmonth6) }, { value: \"year1\", text: t(langKeys.voicechannel_recordingyear1) }, { value: \"year2\", text: t(langKeys.voicechannel_recordingyear2) }, { value: \"year3\", text: t(langKeys.voicechannel_recordingyear3) }];\r\n    const dataRecordingQuality = [{ value: \"default\", text: t(langKeys.voicechannel_recordingdefault) }, { value: \"hd\", text: t(langKeys.voicechannel_recordinghd) }, { value: \"lossless\", text: t(langKeys.voicechannel_recordinglossless) }];\r\n\r\n    const categoriesResult = useSelector(state => state.voximplant.requestGetCategories);\r\n    const classes = useChannelAddStyles();\r\n    const countryStatesResult = useSelector(state => state.voximplant.requestGetCountryStates);\r\n    const executeResult = useSelector(state => state.channel.successinsert);\r\n    const history = useHistory();\r\n    const regionsResult = useSelector(state => state.voximplant.requestGetRegions);\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const { getValues, setValue, register, unregister, formState: { errors } } = useFormContext<MainData>();\r\n\r\n    const planData = usePlanData();\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    const [phoneTax, setPhoneTax] = useState(planData?.plan?.phonetax || 0);\r\n    const [checkedRecording, setCheckedRecording] = useState(false);\r\n    const [checkedSms, setCheckedSms] = useState(false);\r\n    const [checkedOutbound, setCheckedOutbound] = useState(false);\r\n    const [checkedCallSupervision, setCheckedCallSupervision] = useState(false);\r\n    const [categoryList, setCategoryList] = useState<any>([]);\r\n    const [countryList, setCountryList] = useState<any>([]);\r\n    const [hasStates, setHasStates] = useState(false);\r\n    const [hasRegions, setHasRegions] = useState(false);\r\n    const [nextButton, setNextButton] = useState(true);\r\n    const [phoneBackup, setPhoneBackup] = useState(0.00);\r\n    const [phonePrice, setPhonePrice] = useState(0.00);\r\n    const [phoneInstallation, setPhoneInstallation] = useState(0.00);\r\n    const [phoneInstallationBackup, setPhoneInstallationBackup] = useState(0.00);\r\n    const [regionList, setRegionList] = useState<any>([]);\r\n    const [setInsert, setSetInsert] = useState(false);\r\n    const [stateList, setStateList] = useState<any>([]);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitCategories, setWaitCategories] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [waitRegions, setWaitRegions] = useState(false);\r\n    const [waitStates, setWaitStates] = useState(false);\r\n    const [hasFinished, setHasFinished] = useState(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories({}));\r\n        setWaitCategories(true);\r\n    }, [])\r\n\r\n    const openPricingPage = () => {\r\n        window.open(\"https://laraigo.com/en/pricing/\", '_blank');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (phonePrice) {\r\n            setValue(\"channels.voximplantphone.cost\", (phonePrice || 0))\r\n            setValue(\"channels.voximplantphone.costinstallation\", (phoneInstallation || 0))\r\n            setValue(\"channels.voximplantphone.costvca\", (formatNumber((phonePrice || 0) * (1 + (phoneTax || 0)))).toString())\r\n        }\r\n        else {\r\n            setValue(\"channels.voximplantphone.cost\", (0))\r\n            setValue(\"channels.voximplantphone.costinstallation\", (0))\r\n            setValue(\"channels.voximplantphone.costvca\", \"0\")\r\n        }\r\n    }, [phonePrice, phoneInstallation])\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string, other?: boolean) => {\r\n            if (!other) {\r\n                if (!value) {\r\n                    return t(langKeys.field_required);\r\n                }\r\n            }\r\n        }\r\n        register('channels.voximplantphone.country', { validate: strRequired, value: '' });\r\n        register('channels.voximplantphone.category', { validate: strRequired, value: '' });\r\n        register('channels.voximplantphone.region', { validate: hasRegions ? strRequired : () => { return undefined }, value: '' });\r\n        register('channels.voximplantphone.state', { validate: hasStates ? strRequired : () => { return undefined }, value: '' });\r\n        register('channels.voximplantphone.description', { validate: strRequired, value: '' });\r\n        register('channels.voximplantphone.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": \"\",\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#90c900\",\r\n                    \"voximplantcallsupervision\": values.voximplantcallsupervision\r\n                },\r\n                \"service\": {\r\n                    \"category\": values.category,\r\n                    \"country\": values.country,\r\n                    \"region\": values.region,\r\n                    \"state\": values.state,\r\n                    \"categoryname\": values.categoryname,\r\n                    \"countryname\": values.countryname,\r\n                    \"regionname\": values.regionname,\r\n                    \"statename\": values.statename,\r\n                    \"cost\": values.cost,\r\n                    \"costvca\": values.costvca,\r\n                    \"costinstallation\": values.costinstallation,\r\n                    \"recording\": values.recording,\r\n                    \"sms\": values.sms,\r\n                    \"outbound\": values.outbound,\r\n                    \"recordingstorage\": values.recordingstorage,\r\n                    \"recordingquality\": values.recordingquality,\r\n                    \"voximplantcallsupervision\": values.voximplantcallsupervision\r\n                },\r\n                \"type\": \"VOXIMPLANTPHONE\",\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.voximplantphone')\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getCategories({}));\r\n        setWaitCategories(true);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (phonePrice) {\r\n            setValue('channels.voximplantphone.cost', phonePrice || 0)\r\n        }\r\n        else {\r\n            setValue('channels.voximplantphone.cost', 0)\r\n        }\r\n    }, [phonePrice])\r\n\r\n    useEffect(() => {\r\n        if (phoneInstallation) {\r\n            setValue('channels.voximplantphone.costinstallation', phoneInstallation || 0)\r\n        }\r\n        else {\r\n            setValue('channels.voximplantphone.costinstallation', 0)\r\n        }\r\n    }, [phoneInstallation])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    useEffect(() => {\r\n        if (!mainResult.loading && setInsert) {\r\n            if (executeResult) {\r\n                setSetInsert(false);\r\n                setWaitSave(false);\r\n\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }));\r\n                dispatch(showBackdrop(false));\r\n\r\n                history.push(paths.CHANNELS);\r\n            } else if (!executeResult) {\r\n                setWaitSave(false);\r\n\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(mainResult.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() }) }))\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [mainResult])\r\n\r\n    useEffect(() => {\r\n        disableNextButton();\r\n    }, [regionList])\r\n\r\n    useEffect(() => {\r\n        if (waitCategories) {\r\n            if (!categoriesResult.loading) {\r\n                if (categoriesResult.data) {\r\n                    var temporalData = categoriesResult.data;\r\n                    temporalData.forEach(function (element: any) {\r\n                        element.country_name = getName(element.country_code);\r\n                    });\r\n                    setCountryList(temporalData);\r\n                }\r\n                setWaitCategories(false);\r\n            }\r\n        }\r\n    }, [categoriesResult, waitCategories])\r\n\r\n    useEffect(() => {\r\n        if (waitStates) {\r\n            if (!countryStatesResult.loading) {\r\n                if (countryStatesResult.data) {\r\n                    setStateList(countryStatesResult.data);\r\n                }\r\n                setWaitStates(false);\r\n            }\r\n        }\r\n    }, [countryStatesResult, waitStates])\r\n\r\n    useEffect(() => {\r\n        if (waitRegions) {\r\n            if (!regionsResult.loading) {\r\n                if (regionsResult.data) {\r\n                    setRegionList(regionsResult.data.filter((data: { phone_count: number; regulation_address_type: string; }) => data.phone_count > 0 && !data.regulation_address_type));\r\n                }\r\n                setWaitRegions(false);\r\n            }\r\n        }\r\n    }, [regionsResult, waitRegions])\r\n\r\n    function disableNextButton() {\r\n        setNextButton(true);\r\n        if (getValues('channels.voximplantphone.category') && getValues('channels.voximplantphone.country')) {\r\n            if (getValues('channels.voximplantphone.region')) {\r\n                if (hasStates) {\r\n                    if (getValues('channels.voximplantphone.state')) {\r\n                        if (getValues('channels.voximplantphone.recording')) {\r\n                            if (getValues('channels.voximplantphone.recordingquality') && getValues('channels.voximplantphone.recordingstorage')) {\r\n                                setNextButton(false);\r\n                            }\r\n                        }\r\n                        else {\r\n                            setNextButton(false);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (getValues('channels.voximplantphone.recording')) {\r\n                        if (getValues('channels.voximplantphone.recordingquality') && getValues('channels.voximplantphone.recordingstorage')) {\r\n                            setNextButton(false);\r\n                        }\r\n                    }\r\n                    else {\r\n                        setNextButton(false);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSwitchRecordingQuality = (value: any) => {\r\n        setValue('channels.voximplantphone.recordingquality', value);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchRecordingStorage = (value: any) => {\r\n        setValue('channels.voximplantphone.recordingstorage', value);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchRecording = (value: boolean) => {\r\n        setValue('channels.voximplantphone.recording', value);\r\n\r\n        if (!value ) {\r\n            setValue('channels.voximplantphone.recordingquality', '');\r\n            setValue('channels.voximplantphone.recordingquality', '');\r\n        }\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchSms = (value: boolean) => {\r\n        setValue('channels.voximplantphone.sms', value);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchOutbound = (value: boolean) => {\r\n        setValue('channels.voximplantphone.outbound', value);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleSwitchCallSupervison = (value: boolean) => {\r\n        setValue('channels.voximplantphone.voximplantcallsupervision', value);\r\n\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleCountry = (value: any) => {\r\n        if (value) {\r\n            setCategoryList(value.phone_categories || []);\r\n            setValue('channels.voximplantphone.country', value.country_code)\r\n            setValue('channels.voximplantphone.countryname', value.country_name)\r\n        } else {\r\n            setHasRegions(false);\r\n            setHasStates(false);\r\n            setPhoneBackup(0.00);\r\n            setPhonePrice(0.00);\r\n            setPhoneInstallation(0.00);\r\n            setPhoneInstallationBackup(0.00);\r\n            setCategoryList([]);\r\n            setRegionList([]);\r\n            setStateList([]);\r\n            setValue('channels.voximplantphone.country', \"\")\r\n            setValue('channels.voximplantphone.countryname', \"\")\r\n        }\r\n        setValue('channels.voximplantphone.category', \"\")\r\n        setValue('channels.voximplantphone.region', \"\")\r\n        setValue('channels.voximplantphone.state', \"\")\r\n        setValue('channels.voximplantphone.categoryname', \"\")\r\n        setValue('channels.voximplantphone.regionname', \"\")\r\n        setValue('channels.voximplantphone.statename', \"\")\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleCategory = (value: any) => {\r\n        if (value) {\r\n            setHasStates(value.country_has_states || false);\r\n            setPhoneBackup(value.phone_price || 0.00);\r\n            setPhonePrice(value.phone_price || 0.00);\r\n            setPhoneInstallation(value.phone_installation_price || 0.00);\r\n            setPhoneInstallationBackup(value.phone_installation_price || 0.00);\r\n            if (value.country_has_states) {\r\n                dispatch(getCountryStates({ country_code: getValues('channels.voximplantphone.country'), phone_category_name: value.phone_category_name }));\r\n\r\n                setHasRegions(false);\r\n                setRegionList([]);\r\n                setWaitStates(true);\r\n            }\r\n            else {\r\n                setHasRegions(true);\r\n                setStateList([]);\r\n\r\n                dispatch(getRegions({ country_code: getValues('channels.voximplantphone.country'), phone_category_name: value.phone_category_name }));\r\n                setWaitRegions(true);\r\n            }\r\n            setValue('channels.voximplantphone.category', value.phone_category_name)\r\n            setValue('channels.voximplantphone.categoryname', value.phone_category_name)\r\n        }\r\n        else {\r\n            setHasRegions(false);\r\n            setHasStates(false);\r\n            setPhoneBackup(0.00);\r\n            setPhonePrice(0.00);\r\n            setPhoneInstallation(0.00);\r\n            setPhoneInstallationBackup(0.00);\r\n            setRegionList([]);\r\n            setStateList([]);\r\n            setValue('channels.voximplantphone.category', \"\")\r\n            setValue('channels.voximplantphone.categoryname', \"\")\r\n        }\r\n        setValue('channels.voximplantphone.region', \"\")\r\n        setValue('channels.voximplantphone.state', \"\")\r\n        setValue('channels.voximplantphone.regionname', \"\")\r\n        setValue('channels.voximplantphone.statename', \"\")\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleState = (value: any) => {\r\n        if (value) {\r\n            setValue('channels.voximplantphone.state', value.country_state)\r\n            setValue('channels.voximplantphone.statename', value.country_state_name)\r\n            setHasRegions(true);\r\n\r\n            dispatch(getRegions({ country_code: getValues('channels.voximplantphone.country'), phone_category_name: getValues('channels.voximplantphone.category'), country_state: value.country_state }));\r\n            setWaitRegions(true);\r\n        }\r\n        else {\r\n            setHasRegions(false);\r\n            setRegionList([]);\r\n            setValue('channels.voximplantphone.state', \"\")\r\n            setValue('channels.voximplantphone.statename', \"\")\r\n        }\r\n        setValue('channels.voximplantphone.region', \"\")\r\n        setValue('channels.voximplantphone.regionname', \"\")\r\n        disableNextButton();\r\n    }\r\n\r\n    const handleRegion = (value: any) => {\r\n        if (value) {\r\n            setPhonePrice((value.phone_price || phoneBackup) || 0.00);\r\n            setPhoneInstallation((value.phone_installation_price || phoneInstallationBackup) || 0.00);\r\n            setValue('channels.voximplantphone.region', value.phone_region_id)\r\n            setValue('channels.voximplantphone.regionname', value.phone_region_name)\r\n        }\r\n        else {\r\n            setPhonePrice(phoneBackup || 0.00);\r\n            setPhoneInstallation(phoneInstallationBackup || 0.00);\r\n            setValue('channels.voximplantphone.region', \"\")\r\n            setValue('channels.voximplantphone.regionname', \"\")\r\n        }\r\n        disableNextButton();\r\n    }\r\n\r\n    if (viewSelected === \"view1\") {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <div>\r\n                    <div className={classes.containerDetail}>\r\n                        <div style={{ textAlign: \"left\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.voximplant_buynumber)}</div>\r\n                        <div className={classes.containerCapacities}>\r\n                            <div style={{ verticalAlign: \"middle\", marginRight: \"30px\" }}>\r\n                                <b>{t(langKeys.voicechannel_capacities)}</b>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedRecording} onChange={(e) => { setCheckedRecording(e.target.checked); handleSwitchRecording(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_recording)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_recordingtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedSms} onChange={(e) => { setCheckedSms(e.target.checked); handleSwitchSms(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_sms)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_smstooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedOutbound} onChange={(e) => { setCheckedOutbound(e.target.checked); handleSwitchOutbound(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_outbound)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_outboundtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.containerItem}>\r\n                                <FormControlLabel\r\n                                    control={<IOSSwitchPurple checked={checkedCallSupervision} onChange={(e) => { setCheckedCallSupervision(e.target.checked); handleSwitchCallSupervison(e.target.checked); }} />}\r\n                                    label={\"\"}\r\n                                    style={{ marginRight: \"4px\" }}\r\n                                />\r\n                                {t(langKeys.voicechannel_callsupervisor)}\r\n                                <Tooltip title={`${t(langKeys.voicechannel_callsupervisortooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={countryList}\r\n                                label={t(langKeys.country)}\r\n                                loading={categoriesResult.loading}\r\n                                onChange={(value: any) => { handleCountry(value); }}\r\n                                optionDesc=\"country_name\"\r\n                                optionValue=\"country_code\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={getValues('channels.voximplantphone.country')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={categoryList}\r\n                                label={t(langKeys.category)}\r\n                                loading={categoriesResult.loading}\r\n                                onChange={(value: any) => { handleCategory(value); }}\r\n                                optionDesc=\"phone_category_name\"\r\n                                optionValue=\"phone_category_name\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={getValues('channels.voximplantphone.category')}\r\n                                uset={true}\r\n                                prefixTranslation=\"voximplantcategory_\"\r\n                            />\r\n                        </div>\r\n                        {hasStates && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={stateList}\r\n                                label={t(langKeys.voximplant_state)}\r\n                                loading={countryStatesResult.loading}\r\n                                onChange={(value: any) => { handleState(value); }}\r\n                                optionDesc=\"country_state_name\"\r\n                                optionValue=\"country_state\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={getValues('channels.voximplantphone.state')}\r\n                            />\r\n                        </div>}\r\n                        {hasRegions && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={regionList}\r\n                                label={t(langKeys.voximplant_region)}\r\n                                loading={regionsResult.loading}\r\n                                onChange={(value: any) => { handleRegion(value); }}\r\n                                optionDesc=\"phone_region_name\"\r\n                                optionValue=\"phone_region_id\"\r\n                                orderbylabel={true}\r\n                                variant=\"outlined\"\r\n                                valueDefault={getValues('channels.voximplantphone.region')}\r\n                            />\r\n                        </div>}\r\n                        {checkedRecording && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={dataRecordingStorage}\r\n                                label={t(langKeys.voicechannel_recording)}\r\n                                onChange={(value: any) => { handleSwitchRecordingStorage(value); }}\r\n                                optionDesc=\"text\"\r\n                                optionValue=\"value\"\r\n                                variant=\"outlined\"\r\n                                valueDefault={getValues('channels.voximplantphone.recordingstorage')}\r\n                            />\r\n                        </div>}\r\n                        {checkedRecording && <div className=\"row-zyx\">\r\n                            <FieldSelect\r\n                                className=\"col-12\"\r\n                                data={dataRecordingQuality}\r\n                                label={t(langKeys.voicechannel_recordingquality)}\r\n                                onChange={(value: any) => { handleSwitchRecordingQuality(value); }}\r\n                                optionDesc=\"text\"\r\n                                optionValue=\"value\"\r\n                                variant=\"outlined\"\r\n                                valueDefault={getValues('channels.voximplantphone.recordingquality')}\r\n                            />\r\n                        </div>}\r\n                        <div className=\"row-zyx\">\r\n                            <div style={{ display: \"inline-block\" }}>\r\n                                <div>\r\n                                    <b style={{ paddingLeft: \"6px\" }}>{t(langKeys.voximplant_pricealert)}</b>\r\n                                    <Tooltip title={`${t(langKeys.voximplant_tooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{ color: \"rgb(119, 33, 173)\", paddingLeft: \"4px\" }} />\r\n                                    </Tooltip>\r\n                                    <b style={{ paddingRight: \"20px\", textAlign: \"right\", alignContent: \"right\", float: \"right\" }}>{`$${formatNumber(phonePrice * (1 + (phoneTax || 0)))}`}</b>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {(checkedRecording || checkedSms || checkedOutbound || checkedCallSupervision) && <div className=\"row-zyx\">\r\n                            <div style={{ display: \"flex\", flexFlow: \"row\", flexWrap: \"wrap\" }}>\r\n                                <p><b style={{ color: \"#762AA9\" }}>{t(langKeys.voicechannel_recordingalert)}</b><a style={{ fontWeight: 'bold', cursor: 'pointer' }} onClick={openPricingPage} rel=\"noopener noreferrer\">https://laraigo.com/en/pricing/</a></p>\r\n                            </div>\r\n                        </div>}\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"64%\" }}>\r\n                        <Button\r\n                            disabled={nextButton || regionsResult.loading}\r\n                            onClick={() => { setViewSelected(\"view2\") }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >{t(langKeys.next)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={commonClasses.root}>\r\n                {!hasFinished && <PhoneIcon className={commonClasses.leadingIcon} />}\r\n                {!hasFinished && <IconButton\r\n                    color=\"primary\"\r\n                    className={commonClasses.trailingIcon}\r\n                    onClick={() => {\r\n                        deleteChannel('voximplantphone');\r\n                        // setrequestchannels(prev => prev.filter(x => x.type !== \"SMOOCHIOS\"));\r\n                    }}\r\n                >\r\n                    <DeleteOutlineIcon />\r\n                </IconButton>}\r\n                {!hasFinished && <Typography>\r\n                    <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n                </Typography>}\r\n                {hasFinished && <PhoneIcon\r\n                    style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n                }\r\n                {hasFinished && (\r\n                    <div style={{ alignSelf: 'center' }}>\r\n                        <Typography\r\n                            color=\"primary\"\r\n                            style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                            {t(langKeys.subscription_congratulations)}\r\n                        </Typography>\r\n                        <Typography\r\n                            color=\"primary\"\r\n                            style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                            {t(langKeys.subscription_message1)} {t(langKeys.channel_phone)} {t(langKeys.subscription_message2)}\r\n                        </Typography>\r\n                    </div>\r\n                )}\r\n                <FieldEdit\r\n                    onChange={(val: string) => {\r\n                        setValue('channels.voximplantphone.description', val);\r\n                        if (val.length > 0 && !hasFinished) {\r\n                            setHasFinished(true);\r\n                        } else if (val.length === 0 && hasFinished) {\r\n                            setHasFinished(false);\r\n                        }\r\n                    }}\r\n                    valueDefault={getValues('channels.voximplantphone.description')}\r\n                    label={t(langKeys.givechannelname)}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    error={errors.channels?.voximplantphone?.description?.message}\r\n                    InputProps={{\r\n                        endAdornment: (\r\n                            <InputAdornment position=\"end\">\r\n                                {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                            </InputAdornment>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-useless-escape */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport clsx from 'clsx';\r\n\r\nimport { apiUrls } from 'common/constants';\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, FieldSelect } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BloggerColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport { listBlogger } from \"store/google/actions\";\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport GoogleLogInFrame from 'pages/channels/GoogleLogInFrame';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddBlogger: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const classes = useChannelAddStyles();\r\n    const exchangeCodeResult = useSelector(state => state.google.requestExchangeCode);\r\n    const listBloggerResult = useSelector(state => state.google.requestListBlogger);\r\n\r\n    const { commonClasses, deleteChannel, foreground, setForeground, submitObservable, } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n\r\n    const [channellist, setChannellist] = useState([]);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n    const [showList, setShowList] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitExchange, setWaitExchange] = useState(false);\r\n    const [waitList, setWaitList] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const openprivacypolicies = () => {\r\n        window.open(\"/privacy\", \"_blank\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.blogger.accesstoken');\r\n            const v2 = await trigger('channels.blogger.refreshtoken');\r\n            const v3 = await trigger('channels.blogger.scope');\r\n            const v4 = await trigger('channels.blogger.tokentype');\r\n            const v5 = await trigger('channels.blogger.idtoken');\r\n            const v6 = await trigger('channels.blogger.channel');\r\n            setSubmitError(!v1 || !v2 || !v3 || !v4 || !v5 || !v6);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.blogger.description', { validate: strRequired, value: '' });\r\n        register('channels.blogger.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.blogger.refreshtoken', { validate: strRequired, value: '' });\r\n        register('channels.blogger.scope', { validate: strRequired, value: '' });\r\n        register('channels.blogger.tokentype', { validate: strRequired, value: '' });\r\n        register('channels.blogger.idtoken', { validate: strRequired, value: '' });\r\n        register('channels.blogger.channel', { validate: strRequired, value: '' });\r\n        register('channels.blogger.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#F06A35\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"BLOGGER\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"refreshtoken\": values.refreshtoken,\r\n                    \"scope\": values.scope,\r\n                    \"tokentype\": values.tokentype,\r\n                    \"idtoken\": values.idtoken,\r\n                    \"channel\": values.channel,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.blogger');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'blogger' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('blogger');\r\n        }\r\n    }\r\n\r\n    function setchannelField(value: any) {\r\n        setNextbutton(value === null);\r\n        setValue('channels.blogger.channel', value?.id || \"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitExchange) {\r\n            if (!exchangeCodeResult.loading) {\r\n                if (!exchangeCodeResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (exchangeCodeResult.data) {\r\n                        setValue('channels.blogger.accesstoken', exchangeCodeResult.data.access_token);\r\n                        setValue('channels.blogger.idtoken', exchangeCodeResult.data.id_token);\r\n                        setValue('channels.blogger.refreshtoken', exchangeCodeResult.data.refresh_token);\r\n                        setValue('channels.blogger.scope', exchangeCodeResult.data.scope);\r\n                        setValue('channels.blogger.tokentype', exchangeCodeResult.data.token_type);\r\n\r\n                        setShowList(true);\r\n                        setChannellist([]);\r\n\r\n                        dispatch(listBlogger({ accesstoken: exchangeCodeResult.data.access_token }));\r\n                        dispatch(showBackdrop(true));\r\n                        setWaitList(true);\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((exchangeCodeResult.msg || exchangeCodeResult.message) || exchangeCodeResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitExchange(false);\r\n            }\r\n        }\r\n    }, [exchangeCodeResult, waitExchange])\r\n\r\n    useEffect(() => {\r\n        if (waitList) {\r\n            if (!listBloggerResult.loading) {\r\n                if (!listBloggerResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (listBloggerResult.data) {\r\n                        if (listBloggerResult.data.items) {\r\n                            setChannellist(listBloggerResult.data.items);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((listBloggerResult.msg || listBloggerResult.message) || listBloggerResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitList(false);\r\n            }\r\n        }\r\n    }, [listBloggerResult, waitList])\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                {!showList && <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setView(\"view1\");\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_bloggertitle)}</div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px\" }}>{t(langKeys.channel_bloggeralert1)}</div>\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\", color: \"#969ea5\" }}>{t(langKeys.channel_bloggeralert2)}</div>\r\n                        <div style={{ display: \"flex\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                            <GoogleOAuthProvider clientId={apiUrls.GOOGLECLIENTID_CHANNEL}>\r\n                                <GoogleLogInFrame\r\n                                    setWaitExchange={setWaitExchange}\r\n                                />\r\n                            </GoogleOAuthProvider>\r\n                        </div>\r\n                        <div style={{ textAlign: \"center\", paddingTop: \"20px\", color: \"#969ea5\", fontStyle: \"italic\" }}>{t(langKeys.connectface4)}</div>\r\n                        <div style={{ textAlign: \"center\", paddingBottom: \"80px\", color: \"#969ea5\" }}><a style={{ fontWeight: \"bold\", color: \"#6F1FA1\", cursor: \"pointer\" }} onClick={openprivacypolicies} rel=\"noopener noreferrer\">{t(langKeys.privacypoliciestitle)}</a></div>\r\n                    </div>\r\n                </>}\r\n                {showList && <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setShowList(false);\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_bloggertitle)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldSelect\r\n                                onChange={(value) => setchannelField(value)}\r\n                                label={t(langKeys.selectchannellink)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('channels.blogger.channel')}\r\n                                data={channellist}\r\n                                optionDesc=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                        </div>\r\n                        <div style={{ paddingLeft: \"80%\" }}>\r\n                            <Button\r\n                                onClick={async () => {\r\n                                    const v1 = await trigger('channels.blogger.accesstoken');\r\n                                    const v2 = await trigger('channels.blogger.refreshtoken');\r\n                                    const v3 = await trigger('channels.blogger.scope');\r\n                                    const v4 = await trigger('channels.blogger.tokentype');\r\n                                    const v5 = await trigger('channels.blogger.idtoken');\r\n                                    const v6 = await trigger('channels.blogger.channel');\r\n                                    if (v1 && v2 && v3 && v4 && v5 && v6) {\r\n                                        setView(\"view1\");\r\n                                        setHasFinished(true);\r\n                                    }\r\n                                }}\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={nextbutton}\r\n                            >\r\n                                <Trans i18nKey={langKeys.next} />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <BloggerColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('blogger');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"BLOGGER\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <BloggerColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_blogger)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.blogger.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.blogger.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.blogger?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-useless-escape */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport clsx from 'clsx';\r\n\r\nimport { apiUrls } from 'common/constants';\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { EmailColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport GoogleLogInFrame from 'pages/channels/GoogleLogInFrame';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    button2: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"100%\",\r\n    },\r\n}));\r\n\r\nexport const ChannelAddEmail: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const classes = useChannelAddStyles();\r\n    const exchangeCodeResult = useSelector(state => state.google.requestExchangeCode);\r\n\r\n    const { commonClasses, deleteChannel, foreground, setForeground, submitObservable, } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n    const [registerInfobip, setRegisterInfobip] = useState(false);\r\n    const [registerGmail, setRegisterGmail] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitExchange, setWaitExchange] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const openprivacypolicies = () => {\r\n        window.open(\"/privacy\", \"_blank\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            await changeSubmitError();\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    const changeSubmitError = async () => {\r\n        if (registerInfobip) {\r\n            const v1 = await trigger('channels.email.url');\r\n            const v2 = await trigger('channels.email.apikey');\r\n            const v3 = await trigger('channels.email.emittername');\r\n            setSubmitError(!v1 || !v2 || !v3);\r\n        }\r\n        else if (registerGmail) {\r\n            const v1 = await trigger('channels.email.accesstoken');\r\n            const v2 = await trigger('channels.email.refreshtoken');\r\n            const v3 = await trigger('channels.email.scope');\r\n            const v4 = await trigger('channels.email.tokentype');\r\n            const v5 = await trigger('channels.email.idtoken');\r\n            setSubmitError(!v1 || !v2 || !v3 || !v4 || !v5);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.email.description', { validate: strRequired, value: '' });\r\n        register('channels.email.url', { validate: strRequired, value: '' });\r\n        register('channels.email.apikey', { validate: strRequired, value: '' });\r\n        register('channels.email.emittername', { validate: strRequired, value: '' });\r\n        register('channels.email.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.email.refreshtoken', { validate: strRequired, value: '' });\r\n        register('channels.email.scope', { validate: strRequired, value: '' });\r\n        register('channels.email.tokentype', { validate: strRequired, value: '' });\r\n        register('channels.email.idtoken', { validate: strRequired, value: '' });\r\n        register('channels.email.type', { validate: strRequired, value: '' });\r\n        register('channels.email.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#1D9BF0\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"INFOBIPEMAIL\",\r\n                \"service\": {\r\n                    \"url\": values.url,\r\n                    \"apikey\": values.apikey,\r\n                    \"emittername\": values.emittername,\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"refreshtoken\": values.refreshtoken,\r\n                    \"scope\": values.scope,\r\n                    \"tokentype\": values.tokentype,\r\n                    \"idtoken\": values.idtoken,\r\n                    \"type\": values.type,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.email');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'email' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('email');\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitExchange) {\r\n            if (!exchangeCodeResult.loading) {\r\n                if (!exchangeCodeResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (exchangeCodeResult.data) {\r\n                        setValue('channels.email.accesstoken', exchangeCodeResult.data.access_token);\r\n                        setValue('channels.email.idtoken', exchangeCodeResult.data.id_token);\r\n                        setValue('channels.email.refreshtoken', exchangeCodeResult.data.refresh_token);\r\n                        setValue('channels.email.scope', exchangeCodeResult.data.scope);\r\n                        setValue('channels.email.tokentype', exchangeCodeResult.data.token_type);\r\n                        setValue('channels.email.url', 'NOUSE');\r\n                        setValue('channels.email.apikey', 'NOUSE');\r\n                        setValue('channels.email.emittername', 'NOUSE');\r\n\r\n                        setView(\"view1\");\r\n                        setHasFinished(true);\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((exchangeCodeResult.msg || exchangeCodeResult.message) || exchangeCodeResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitExchange(false);\r\n            }\r\n        }\r\n    }, [exchangeCodeResult, waitExchange])\r\n\r\n    if (viewSelected === \"view2\") {\r\n        if (registerInfobip) {\r\n            return (\r\n                <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setRegisterGmail(false);\r\n                                setRegisterInfobip(false);\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.emailtitle)}</div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.emailtitle2)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={v => {\r\n                                    setNextbutton(v === \"\" || getValues('channels.email.emittername') === \"\" || getValues('channels.email.url') === \"\" || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.email.url')) || !/\\S+@\\S+\\.\\S+/.test(getValues('channels.email.emittername')));\r\n                                    setValue('channels.email.apikey', v);\r\n                                }}\r\n                                valueDefault={getValues('channels.email.apikey')}\r\n                                label={t(langKeys.apikey)}\r\n                                className=\"col-6\"\r\n                                error={errors.channels?.email?.apikey?.message}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={v => {\r\n                                    setNextbutton(v === \"\" || getValues('channels.email.emittername') === \"\" || getValues('channels.email.apikey') === \"\" || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(v) || !/\\S+@\\S+\\.\\S+/.test(getValues('channels.email.emittername')));\r\n                                    setValue('channels.email.url', v);\r\n                                }}\r\n                                valueDefault={getValues('channels.email.url')}\r\n                                label={t(langKeys.url)}\r\n                                className=\"col-6\"\r\n                                error={errors.channels?.email?.url?.message}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldEdit\r\n                                onChange={v => {\r\n                                    setNextbutton(v === \"\" || getValues('channels.email.apikey') === \"\" || getValues('channels.email.url') === \"\" || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.email.url')) || !/\\S+@\\S+\\.\\S+/.test(v));\r\n                                    setValue('channels.email.emittername', v);\r\n                                }}\r\n                                valueDefault={getValues('channels.email.emittername')}\r\n                                label={t(langKeys.emitteremail)}\r\n                                className=\"col-6\"\r\n                                error={errors.channels?.email?.emittername?.message}\r\n                            />\r\n                        </div>\r\n                        <div style={{ paddingLeft: \"80%\" }}>\r\n                            <Button\r\n                                onClick={async () => {\r\n                                    const v1 = await trigger('channels.email.url');\r\n                                    const v2 = await trigger('channels.email.apikey');\r\n                                    const v3 = await trigger('channels.email.emittername');\r\n                                    if (v1 && v2 && v3) {\r\n                                        setValue('channels.email.accesstoken', 'NOUSE');\r\n                                        setValue('channels.email.idtoken', 'NOUSE');\r\n                                        setValue('channels.email.refreshtoken', 'NOUSE');\r\n                                        setValue('channels.email.scope', 'NOUSE');\r\n                                        setValue('channels.email.tokentype', 'NOUSE');\r\n\r\n                                        setView(\"view1\");\r\n                                        setHasFinished(true);\r\n                                    }\r\n                                }}\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={nextbutton}\r\n                            >\r\n                                <Trans i18nKey={langKeys.next} />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else if (registerGmail) {\r\n            return (\r\n                <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setRegisterGmail(false);\r\n                                setRegisterInfobip(false);\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_gmailtitle)}</div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px\" }}>{t(langKeys.channel_gmailalert1)}</div>\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\", color: \"#969ea5\" }}>{t(langKeys.channel_gmailalert2)}</div>\r\n                        <div style={{ display: \"flex\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                            <GoogleOAuthProvider clientId={apiUrls.GOOGLECLIENTID_CHANNEL}>\r\n                                <GoogleLogInFrame\r\n                                    setWaitExchange={setWaitExchange}\r\n                                />\r\n                            </GoogleOAuthProvider>\r\n                        </div>\r\n                        <div style={{ textAlign: \"center\", paddingTop: \"20px\", color: \"#969ea5\", fontStyle: \"italic\" }}>{t(langKeys.connectface4)}</div>\r\n                        <div style={{ textAlign: \"center\", paddingBottom: \"80px\", color: \"#969ea5\" }}><a style={{ fontWeight: \"bold\", color: \"#6F1FA1\", cursor: \"pointer\" }} onClick={openprivacypolicies} rel=\"noopener noreferrer\">{t(langKeys.privacypoliciestitle)}</a></div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setView(\"view1\");\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div style={{ width: \"100%\", marginTop: \"20px\", alignItems: \"center\", display: \"flex\" }}>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setValue('channels.email.type', \"INFOBIPEMAIL\");\r\n                                    setRegisterInfobip(true);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.registerinfobip)}\r\n                            </Button>\r\n                        </div>\r\n                        <div style={{ flex: \"1\", margin: \"0px 15px\" }}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setValue('channels.email.type', \"GMAIL\");\r\n                                    setRegisterGmail(true);\r\n                                }}\r\n                                className={classes.button2}\r\n                                disabled={false}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                            >{t(langKeys.registergmail)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <EmailColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('email');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"INFOBIPEMAIL\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <EmailColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_email)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.email.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.email.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.email?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable no-useless-escape */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { LinkedInColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddLinkedIn: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.channelList)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.linkedin.account');\r\n            const v2 = await trigger('channels.linkedin.url');\r\n            setSubmitError(!v1 || !v2);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.linkedin.description', { validate: strRequired, value: '' });\r\n        register('channels.linkedin.account', { validate: strRequired, value: '' });\r\n        register('channels.linkedin.url', { validate: strRequired, value: '' });\r\n        register('channels.linkedin.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#0A66C2\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"LINKEDIN\",\r\n                \"service\": {\r\n                    \"account\": values.account,\r\n                    \"url\": values.url,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.linkedin');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'linkedin' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('linkedin');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\");\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_linkedintitle)}</div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.channel_genericalert)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                setNextbutton(v === \"\" || getValues('channels.linkedin.url') === \"\" || !/\\S+@\\S+\\.\\S+/.test(v) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.linkedin.url')));\r\n                                setValue('channels.linkedin.account', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.linkedin.account')}\r\n                            label={t(langKeys.account)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.linkedin?.account?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                setNextbutton(v === \"\" || getValues('channels.linkedin.account') === \"\" || !/\\S+@\\S+\\.\\S+/.test(getValues('channels.linkedin.account')) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(v))\r\n                                setValue('channels.linkedin.url', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.linkedin.url')}\r\n                            label={t(langKeys.url)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.linkedin?.url?.message}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={async () => {\r\n                                const v1 = await trigger('channels.linkedin.account');\r\n                                const v2 = await trigger('channels.linkedin.url');\r\n                                if (v1 && v2) {\r\n                                    setView(\"view1\");\r\n                                    setHasFinished(true);\r\n                                }\r\n                            }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={nextbutton}\r\n                        >\r\n                            <Trans i18nKey={langKeys.next} />\r\n                        </Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <LinkedInColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('linkedin');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"LINKEDIN\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <LinkedInColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_linkedin)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.linkedin.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.linkedin.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.linkedin?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable no-useless-escape */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SmsColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddSMS: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.channelList)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n\r\n            const v1 = await trigger('channels.sms.url');\r\n            const v2 = await trigger('channels.sms.apikey');\r\n            const v3 = await trigger('channels.sms.emittername');\r\n            setSubmitError(!v1 || !v2 || !v3);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.sms.description', { validate: strRequired, value: '' });\r\n        register('channels.sms.url', { validate: strRequired, value: '' });\r\n        register('channels.sms.apikey', { validate: strRequired, value: '' });\r\n        register('channels.sms.emittername', { validate: strRequired, value: '' });\r\n        register('channels.sms.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#1D9BF0\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"INFOBIPSMS\",\r\n                \"service\": {\r\n                    \"url\": values.url,\r\n                    \"apikey\": values.apikey,\r\n                    \"emittername\": values.emittername,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.sms');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'sms' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('sms');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\");\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.smstitle)}</div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.smstitle2)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                setNextbutton(v === \"\" || getValues('channels.sms.emittername') === \"\" || getValues('channels.sms.url') === \"\" || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.sms.url')));\r\n                                setValue('channels.sms.apikey', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.sms.apikey')}\r\n                            label={t(langKeys.apikey)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.sms?.apikey?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                setNextbutton(v === \"\" || getValues('channels.sms.emittername') === \"\" || getValues('channels.sms.apikey') === \"\" || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(v));\r\n                                setValue('channels.sms.url', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.sms.url')}\r\n                            label={t(langKeys.url)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.sms?.url?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                setNextbutton(v === \"\" || getValues('channels.sms.apikey') === \"\" || getValues('channels.sms.url') === \"\" || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.sms.url')));\r\n                                setValue('channels.sms.emittername', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.sms.emittername')}\r\n                            label={t(langKeys.emittername)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.sms?.emittername?.message}\r\n                        />\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={async () => {\r\n                                const v1 = await trigger('channels.sms.url');\r\n                                const v2 = await trigger('channels.sms.apikey');\r\n                                const v3 = await trigger('channels.sms.emittername');\r\n                                if (v1 && v2 && v3) {\r\n                                    setView(\"view1\");\r\n                                    setHasFinished(true);\r\n                                }\r\n                            }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={nextbutton}\r\n                        >\r\n                            <Trans i18nKey={langKeys.next} />\r\n                        </Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <SmsColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('sms');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"INFOBIPSMS\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <SmsColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_sms)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.sms.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.sms.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.sms?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TeamsColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddTeams: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.channelList)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.teams.account');\r\n            const v2 = await trigger('channels.teams.url');\r\n            setSubmitError(!v1 || !v2);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.teams.description', { validate: strRequired, value: '' });\r\n        register('channels.teams.account', { validate: strRequired, value: '' });\r\n        register('channels.teams.url', { validate: strRequired, value: '' });\r\n        register('channels.teams.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#7B83EB\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"MICROSOFTTEAMS\",\r\n                \"service\": {\r\n                    \"account\": values.account,\r\n                    \"url\": values.url,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.teams');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'teams' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('teams');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\");\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_teamstitle)}</div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.channel_genericalert)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                // eslint-disable-next-line no-useless-escape\r\n                                setNextbutton(v === \"\" || getValues('channels.teams.url') === \"\" || !/\\S+@\\S+\\.\\S+/.test(v) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.teams.url')));\r\n                                setValue('channels.teams.account', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.teams.account')}\r\n                            label={t(langKeys.account)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.teams?.account?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                // eslint-disable-next-line no-useless-escape\r\n                                setNextbutton(v === \"\" || getValues('channels.teams.account') === \"\" || !/\\S+@\\S+\\.\\S+/.test(getValues('channels.teams.account')) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(v))\r\n                                setValue('channels.teams.url', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.teams.url')}\r\n                            label={t(langKeys.url)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.teams?.url?.message}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={async () => {\r\n                                const v1 = await trigger('channels.teams.account');\r\n                                const v2 = await trigger('channels.teams.url');\r\n                                if (v1 && v2) {\r\n                                    setView(\"view1\");\r\n                                    setHasFinished(true);\r\n                                }\r\n                            }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={nextbutton}\r\n                        >\r\n                            <Trans i18nKey={langKeys.next} />\r\n                        </Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <TeamsColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('teams');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"MICROSOFTTEAMS\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <TeamsColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_teams)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.teams.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.teams.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.teams?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { TikTokColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport clsx from 'clsx';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddTikTok: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const {\r\n        commonClasses,\r\n        foreground,\r\n        submitObservable,\r\n        setForeground,\r\n        deleteChannel,\r\n    } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const mainResult = useSelector(state => state.channel.channelList)\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useChannelAddStyles();\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.tiktok.account');\r\n            const v2 = await trigger('channels.tiktok.url');\r\n            setSubmitError(!v1 || !v2);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.tiktok.description', { validate: strRequired, value: '' });\r\n        register('channels.tiktok.account', { validate: strRequired, value: '' });\r\n        register('channels.tiktok.url', { validate: strRequired, value: '' });\r\n        register('channels.tiktok.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#000000\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"TIKTOK\",\r\n                \"service\": {\r\n                    \"account\": values.account,\r\n                    \"url\": values.url,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.tiktok');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'tiktok' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('tiktok');\r\n        }\r\n    }\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link\r\n                        color=\"textSecondary\"\r\n                        href=\"/\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            setView(\"view1\");\r\n                        }}\r\n                    >\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_tiktoktitle)}</div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px 80px\" }}>{t(langKeys.channel_genericalert)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                // eslint-disable-next-line no-useless-escape\r\n                                setNextbutton(v === \"\" || getValues('channels.tiktok.url') === \"\" || !/\\S+@\\S+\\.\\S+/.test(v) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(getValues('channels.tiktok.url')));\r\n                                setValue('channels.tiktok.account', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.tiktok.account')}\r\n                            label={t(langKeys.account)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.tiktok?.account?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={v => {\r\n                                // eslint-disable-next-line no-useless-escape\r\n                                setNextbutton(v === \"\" || getValues('channels.tiktok.account') === \"\" || !/\\S+@\\S+\\.\\S+/.test(getValues('channels.tiktok.account')) || !/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)/.test(v))\r\n                                setValue('channels.tiktok.url', v);\r\n                            }}\r\n                            valueDefault={getValues('channels.tiktok.url')}\r\n                            label={t(langKeys.url)}\r\n                            className=\"col-6\"\r\n                            error={errors.channels?.tiktok?.url?.message}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={async () => {\r\n                                const v1 = await trigger('channels.tiktok.account');\r\n                                const v2 = await trigger('channels.tiktok.url');\r\n                                if (v1 && v2) {\r\n                                    setView(\"view1\");\r\n                                    setHasFinished(true);\r\n                                }\r\n                            }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={nextbutton}\r\n                        >\r\n                            <Trans i18nKey={langKeys.next} />\r\n                        </Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <TikTokColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('tiktok');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"TIKTOK\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <TikTokColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_tiktok)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.tiktok.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.tiktok.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.tiktok?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChannelAddTikTok","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport clsx from 'clsx';\r\n\r\nimport { apiUrls } from 'common/constants';\r\nimport { FC, useContext, useEffect, useState } from \"react\";\r\nimport { makeStyles, Breadcrumbs, Button, Link, IconButton, Typography, InputAdornment } from '@material-ui/core';\r\nimport { DeleteOutline as DeleteOutlineIcon, Link as LinkIcon, LinkOff as LinkOffIcon } from '@material-ui/icons';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { FieldEdit, FieldSelect } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { YouTubeColor } from \"icons\";\r\nimport { MainData, SubscriptionContext } from \"./context\";\r\nimport { useFormContext } from \"react-hook-form\";\r\nimport { listYouTube } from \"store/google/actions\";\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport GoogleLogInFrame from 'pages/channels/GoogleLogInFrame';\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\nexport const ChannelAddYouTube: FC<{ setOpenWarning: (param: any) => void }> = ({ setOpenWarning }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const classes = useChannelAddStyles();\r\n    const exchangeCodeResult = useSelector(state => state.google.requestExchangeCode);\r\n    const listYouTubeResult = useSelector(state => state.google.requestListYouTube);\r\n\r\n    const { commonClasses, deleteChannel, foreground, setForeground, submitObservable, } = useContext(SubscriptionContext);\r\n    const { getValues, setValue, register, unregister, formState: { errors }, trigger } = useFormContext<MainData>();\r\n\r\n    const [channellist, setChannellist] = useState([]);\r\n    const [hasFinished, setHasFinished] = useState(false);\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [nextbutton2, setNextbutton2] = useState(true);\r\n    const [showList, setShowList] = useState(false);\r\n    const [submitError, setSubmitError] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitExchange, setWaitExchange] = useState(false);\r\n    const [waitList, setWaitList] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const openprivacypolicies = () => {\r\n        window.open(\"/privacy\", \"_blank\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        const cb = async () => {\r\n            const v1 = await trigger('channels.youtube.accesstoken');\r\n            const v2 = await trigger('channels.youtube.refreshtoken');\r\n            const v3 = await trigger('channels.youtube.scope');\r\n            const v4 = await trigger('channels.youtube.tokentype');\r\n            const v5 = await trigger('channels.youtube.idtoken');\r\n            const v6 = await trigger('channels.youtube.channel');\r\n            setSubmitError(!v1 || !v2 || !v3 || !v4 || !v5 || !v6);\r\n        }\r\n\r\n        submitObservable.addListener(cb);\r\n        return () => {\r\n            submitObservable.removeListener(cb);\r\n        }\r\n    }, [submitObservable, trigger]);\r\n\r\n    useEffect(() => {\r\n        const strRequired = (value: string) => {\r\n            if (!value) {\r\n                return t(langKeys.field_required);\r\n            }\r\n        }\r\n\r\n        register('channels.youtube.description', { validate: strRequired, value: '' });\r\n        register('channels.youtube.accesstoken', { validate: strRequired, value: '' });\r\n        register('channels.youtube.refreshtoken', { validate: strRequired, value: '' });\r\n        register('channels.youtube.scope', { validate: strRequired, value: '' });\r\n        register('channels.youtube.tokentype', { validate: strRequired, value: '' });\r\n        register('channels.youtube.idtoken', { validate: strRequired, value: '' });\r\n        register('channels.youtube.channel', { validate: strRequired, value: '' });\r\n        register('channels.youtube.build', {\r\n            value: values => ({\r\n                \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n                \"parameters\": {\r\n                    \"id\": 0,\r\n                    \"description\": values.description,\r\n                    \"type\": \"\",\r\n                    \"communicationchannelsite\": \"\",\r\n                    \"communicationchannelowner\": values.description,\r\n                    \"chatflowenabled\": true,\r\n                    \"integrationid\": \"\",\r\n                    \"color\": \"\",\r\n                    \"icons\": \"\",\r\n                    \"other\": \"\",\r\n                    \"form\": \"\",\r\n                    \"apikey\": \"\",\r\n                    \"coloricon\": \"#FE0000\",\r\n                    \"voximplantcallsupervision\": false\r\n                },\r\n                \"type\": \"YOUTUBE\",\r\n                \"service\": {\r\n                    \"accesstoken\": values.accesstoken,\r\n                    \"refreshtoken\": values.refreshtoken,\r\n                    \"scope\": values.scope,\r\n                    \"tokentype\": values.tokentype,\r\n                    \"idtoken\": values.idtoken,\r\n                    \"channel\": values.channel,\r\n                }\r\n            })\r\n        });\r\n\r\n        return () => {\r\n            unregister('channels.youtube');\r\n        }\r\n    }, [register, unregister]);\r\n\r\n    useEffect(() => {\r\n        if (foreground !== 'youtube' && viewSelected !== \"view1\") {\r\n            setViewSelected(\"view1\");\r\n        }\r\n    }, [foreground, viewSelected]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    const setView = (option: \"view1\" | \"view2\") => {\r\n        if (option === \"view1\") {\r\n            setViewSelected(option);\r\n            setForeground(undefined);\r\n        } else {\r\n            setViewSelected(option);\r\n            setForeground('youtube');\r\n        }\r\n    }\r\n\r\n    function setchannelField(value: any) {\r\n        setNextbutton(value === null);\r\n        setValue('channels.youtube.channel', value?.id || \"\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitExchange) {\r\n            if (!exchangeCodeResult.loading) {\r\n                if (!exchangeCodeResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (exchangeCodeResult.data) {\r\n                        setValue('channels.youtube.accesstoken', exchangeCodeResult.data.access_token);\r\n                        setValue('channels.youtube.idtoken', exchangeCodeResult.data.id_token);\r\n                        setValue('channels.youtube.refreshtoken', exchangeCodeResult.data.refresh_token);\r\n                        setValue('channels.youtube.scope', exchangeCodeResult.data.scope);\r\n                        setValue('channels.youtube.tokentype', exchangeCodeResult.data.token_type);\r\n\r\n                        setShowList(true);\r\n                        setChannellist([]);\r\n\r\n                        dispatch(listYouTube({ accesstoken: exchangeCodeResult.data.access_token }));\r\n                        dispatch(showBackdrop(true));\r\n                        setWaitList(true);\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((exchangeCodeResult.msg || exchangeCodeResult.message) || exchangeCodeResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitExchange(false);\r\n            }\r\n        }\r\n    }, [exchangeCodeResult, waitExchange])\r\n\r\n    useEffect(() => {\r\n        if (waitList) {\r\n            if (!listYouTubeResult.loading) {\r\n                if (!listYouTubeResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (listYouTubeResult.data) {\r\n                        if (listYouTubeResult.data.items) {\r\n                            listYouTubeResult.data.items.forEach((element: any) => {\r\n                                element.channelname = `https://www.youtube.com/channel/${element.id}`;\r\n                            });\r\n                            setChannellist(listYouTubeResult.data.items);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((listYouTubeResult.msg || listYouTubeResult.message) || listYouTubeResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitList(false);\r\n            }\r\n        }\r\n    }, [listYouTubeResult, waitList])\r\n\r\n    if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ marginTop: \"auto\", marginBottom: \"auto\", maxHeight: \"100%\" }}>\r\n                {!showList && <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setView(\"view1\");\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_youtubetitle)}</div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px\" }}>{t(langKeys.channel_youtubealert1)}</div>\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\", color: \"#969ea5\" }}>{t(langKeys.channel_youtubealert2)}</div>\r\n                        <div style={{ display: \"flex\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                            <GoogleOAuthProvider clientId={apiUrls.GOOGLECLIENTID_CHANNEL}>\r\n                                <GoogleLogInFrame\r\n                                    setWaitExchange={setWaitExchange}\r\n                                />\r\n                            </GoogleOAuthProvider>\r\n                        </div>\r\n                        <div style={{ textAlign: \"center\", paddingTop: \"20px\", color: \"#969ea5\", fontStyle: \"italic\" }}>{t(langKeys.connectface4)}</div>\r\n                        <div style={{ textAlign: \"center\", paddingBottom: \"80px\", color: \"#969ea5\" }}><a href=\"#\" style={{ fontWeight: \"bold\", color: \"#6F1FA1\", cursor: \"pointer\" }} onClick={openprivacypolicies} rel=\"noopener noreferrer\">{t(langKeys.privacypoliciestitle)}</a></div>\r\n                    </div>\r\n                </>}\r\n                {showList && <>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setShowList(false);\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_youtubetitle)}</div>\r\n                        <div className=\"row-zyx\">\r\n                            <div className=\"col-3\"></div>\r\n                            <FieldSelect\r\n                                onChange={(value) => setchannelField(value)}\r\n                                label={t(langKeys.selectchannellink)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('channels.youtube.channel')}\r\n                                data={channellist}\r\n                                optionDesc=\"channelname\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                        </div>\r\n                        <div style={{ paddingLeft: \"80%\" }}>\r\n                            <Button\r\n                                onClick={async () => {\r\n                                    const v1 = await trigger('channels.youtube.accesstoken');\r\n                                    const v2 = await trigger('channels.youtube.refreshtoken');\r\n                                    const v3 = await trigger('channels.youtube.scope');\r\n                                    const v4 = await trigger('channels.youtube.tokentype');\r\n                                    const v5 = await trigger('channels.youtube.idtoken');\r\n                                    const v6 = await trigger('channels.youtube.channel');\r\n                                    if (v1 && v2 && v3 && v4 && v5 && v6) {\r\n                                        setView(\"view1\");\r\n                                        setHasFinished(true);\r\n                                    }\r\n                                }}\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={nextbutton}\r\n                            >\r\n                                <Trans i18nKey={langKeys.next} />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={clsx(commonClasses.root, submitError && commonClasses.rootError)}>\r\n            {!hasFinished && <YouTubeColor className={commonClasses.leadingIcon} />}\r\n            {!hasFinished && <IconButton\r\n                color=\"primary\"\r\n                className={commonClasses.trailingIcon}\r\n                onClick={() => {\r\n                    deleteChannel('youtube');\r\n                    // setrequestchannels(prev => prev.filter(x => x.type !== \"YOUTUBE\"));\r\n                }}\r\n            >\r\n                <DeleteOutlineIcon />\r\n            </IconButton>}\r\n            {!hasFinished && <Typography>\r\n                <Trans i18nKey={langKeys.subscription_genericconnect} />\r\n            </Typography>}\r\n            {hasFinished && <YouTubeColor\r\n                style={{ width: 100, height: 100, alignSelf: 'center' }} />\r\n            }\r\n            {hasFinished && (\r\n                <div style={{ alignSelf: 'center' }}>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.5vw', fontWeight: 'bold', textAlign: 'center' }}>\r\n                        {t(langKeys.subscription_congratulations)}\r\n                    </Typography>\r\n                    <Typography\r\n                        color=\"primary\"\r\n                        style={{ fontSize: '1.2vw', fontWeight: 500 }}>\r\n                        {t(langKeys.subscription_message1)} {t(langKeys.channel_youtube)} {t(langKeys.subscription_message2)}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <FieldEdit\r\n                onChange={(value) => { setValue('channels.youtube.description', value); setNextbutton2(!value); }}\r\n                valueDefault={getValues('channels.youtube.description')}\r\n                label={t(langKeys.givechannelname)}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                error={errors.channels?.youtube?.description?.message}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {hasFinished ? <LinkIcon color=\"primary\" /> : <LinkOffIcon />}\r\n                        </InputAdornment>\r\n                    )\r\n                }}\r\n            />\r\n            {!hasFinished && (\r\n                <Button\r\n                    onClick={() => setView(\"view2\")}\r\n                    className={commonClasses.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={nextbutton2}\r\n                >\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { Breadcrumbs, Button, Link, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { ChannelAddFacebook } from './ChannelAddFacebook'\r\nimport { ChannelAddInstagram } from './ChannelAddInstagram'\r\nimport { ChannelAddInstagramDM } from './ChannelAddInstagramDM'\r\nimport { ChannelAddMessenger } from './ChannelAddMessenger'\r\nimport { ChannelAddWhatsapp } from './ChannelAddWhatsapp'\r\nimport { ChannelAddTelegram } from './ChannelAddTelegram'\r\nimport { ChannelAddTwitter } from './ChannelAddTwitter'\r\nimport { ChannelAddTwitterDM } from './ChannelAddTwitterDM'\r\nimport { ChannelAddChatWeb } from './ChannelAddChatWeb'\r\nimport { ChannelAddAndroid } from './ChannelAddAndroid'\r\nimport { ChannelAddIos } from './ChannelAddIos'\r\nimport { ChannelAddPhone } from './ChannelAddPhone'\r\nimport { ChannelAddBlogger } from './ChannelAddBlogger'\r\nimport { ChannelAddEmail } from './ChannelAddEmail'\r\nimport { ChannelAddLinkedIn } from './ChannelAddLinkedIn'\r\nimport { ChannelAddSMS } from './ChannelAddSMS'\r\nimport { ChannelAddTeams } from './ChannelAddTeams'\r\nimport { ChannelAddTikTok } from './ChannelAddTikTok'\r\nimport { ChannelAddYouTube } from './ChannelAddYouTube'\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { ListChannels, SubscriptionContext, MainData } from \"./context\";\r\nimport { useSelector } from \"hooks\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\nimport { FieldSelect } from \"components\";\r\nimport { styled } from '@material-ui/core/styles';\r\n\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\n\r\nconst useLeftSideStyles = makeStyles(theme => ({\r\n    root: {\r\n        flex: 1,\r\n        width: '100%',\r\n        height: 'auto',\r\n        backgroundColor: 'white',\r\n        padding: 40,\r\n        overflowY: 'auto',\r\n        overflowX: 'hidden',\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.main,\r\n        textAlign: 'center',\r\n    },\r\n    channelList: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '2em',\r\n    },\r\n    containerInfoPay: {\r\n        width: '50%',\r\n\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100%',\r\n        },\r\n    }\r\n}));\r\n\r\nconst CssPhonemui = styled(MuiPhoneNumber)({\r\n    '& label.Mui-focused': {\r\n        color: '#7721ad',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#7721ad',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#7721ad',\r\n        },\r\n    },\r\n});\r\n\r\ninterface LeftSideProps {\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nexport const LeftSide: FC<LeftSideProps> = ({ setOpenWarning }) => {\r\n    const { t } = useTranslation();\r\n    const [currentView, setCurrentView] = useState(\"view-1\");\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [limitnumbers, setlimitnumbers] = useState(16);\r\n    const [icon, setIcon] = useState(<></>);\r\n    const { getValues, control, setValue } = useFormContext<MainData>();\r\n    const executeResultValidation = useSelector(state => state.subscription.requestValidateChannels);\r\n    const classes = useLeftSideStyles();\r\n    const {\r\n        foreground,\r\n        listchannels,\r\n        selectedChannels,\r\n        finishreg,\r\n        valchannels,\r\n        commonClasses\r\n    } = useContext(SubscriptionContext);\r\n    const executeResult = useSelector(state => state.signup.insertChannel);\r\n    const datamonth = useMemo(() => ([\r\n        { id: 1, desc: \"01\" },\r\n        { id: 2, desc: \"02\" },\r\n        { id: 3, desc: \"03\" },\r\n        { id: 4, desc: \"04\" },\r\n        { id: 5, desc: \"05\" },\r\n        { id: 6, desc: \"06\" },\r\n        { id: 7, desc: \"07\" },\r\n        { id: 8, desc: \"08\" },\r\n        { id: 9, desc: \"09\" },\r\n        { id: 10, desc: \"10\" },\r\n        { id: 11, desc: \"11\" },\r\n        { id: 12, desc: \"12\" },\r\n    ]), [t]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResultValidation.loading) {\r\n                if (!executeResultValidation.error) {\r\n                    setWaitSave(false);\r\n                    setCurrentView(\"view-2\");\r\n                } else {\r\n                    setWaitSave(false);\r\n                }\r\n            }\r\n        }\r\n    }, [executeResultValidation])\r\n\r\n\r\n    const channels = useMemo(() => {\r\n        if (listchannels === undefined) {\r\n            return null;\r\n        }\r\n\r\n        return Object\r\n            .keys(listchannels)\r\n            .filter(x => {\r\n                /*if (foreground !== undefined) {\r\n                    return (\r\n                        listchannels[x as keyof ListChannels] === true &&\r\n                        foreground === x\r\n                    );\r\n                }*/\r\n\r\n                return listchannels[x as keyof ListChannels] === true;\r\n            })\r\n            .map((key, i) => {\r\n                let display = true;\r\n                if (foreground !== undefined) {\r\n                    display = foreground === key;\r\n                }\r\n\r\n                return (\r\n                    <GetComponent\r\n                        channel={key as keyof ListChannels}\r\n                        setOpenWarning={setOpenWarning}\r\n                        key={key}\r\n                        display={display}\r\n                    />\r\n                );\r\n            });\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [listchannels, foreground]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div hidden={currentView !== \"view-1\"}>\r\n                {!foreground && (\r\n                    <Breadcrumbs aria-label=\"breadcrumb\" style={{ marginBottom: '1em' }}>\r\n                        <Link\r\n                            color=\"textSecondary\"\r\n                            href=\"/\"\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setOpenWarning(true);\r\n                            }}\r\n                        >\r\n                            {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                )}\r\n                {!foreground && <h1 className={classes.title}>{t(langKeys.subscription_selectedchannel)}</h1>}\r\n                <div className={classes.channelList}>\r\n                    {channels}\r\n                </div>\r\n                {(!foreground && selectedChannels >= 1) && (\r\n                    <>\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\" }}>{t(langKeys.finishregmessage)}</div>\r\n                        <Button\r\n                            onClick={(e) => {\r\n                                e.preventDefault();\r\n                                setWaitSave(true)\r\n                                valchannels();\r\n                            }}\r\n                            className={commonClasses.button}\r\n                            style={{ marginTop: '3em' }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={executeResult.loading}\r\n                        >\r\n                            <Trans i18nKey={langKeys.addpaymentmethod} />\r\n                        </Button>\r\n                    </>\r\n                )}\r\n                <div />\r\n            </div>\r\n            <div hidden={currentView !== \"view-2\"}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\" style={{ marginBottom: '1em' }}>\r\n                    <Link color=\"textSecondary\" href=\"/\" onClick={(e) => { e.preventDefault(); setCurrentView(\"view-1\"); }}>\r\n                        {'<< '}<Trans i18nKey={langKeys.previoustext} />\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <h1 className={classes.title}>{t(langKeys.addpaymentmethod)}</h1>\r\n                <div style={{ padding: \"20px\" }}>\r\n                    {t(langKeys.addpaymentmethodsub)}\r\n                </div>\r\n                <Controller\r\n                    name=\"firstnamecard\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (currentView === \"view-2\") {\r\n                                if (value.length === 0) {\r\n                                    return t(langKeys.field_required) as string;\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={t(langKeys.firstname)}\r\n                            error={!!errors.firstnamecard}\r\n                            helperText={errors.firstnamecard?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"lastnamecard\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (currentView === \"view-2\") {\r\n                                if (value?.length === 0) {\r\n                                    return t(langKeys.field_required) as string;\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={t(langKeys.lastname)}\r\n                            error={!!errors.lastnamecard}\r\n                            helperText={errors.lastnamecard?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"pmemail\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (currentView === \"view-2\") {\r\n                                if (value?.length === 0) {\r\n                                    return t(langKeys.field_required) as string;\r\n                                } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n                                    return t(langKeys.emailverification) as string;\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <TextField\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            label={t(langKeys.email)}\r\n                            error={!!errors.pmemail}\r\n                            helperText={errors.pmemail?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <Controller\r\n                    name=\"pmphone\"\r\n                    control={control}\r\n                    rules={{\r\n                        validate: (value) => {\r\n                            if (currentView === \"view-2\") {\r\n                                if (value.length === 0) {\r\n                                    return t(langKeys.field_required) as string;\r\n                                } else if (value.length < 10) {\r\n                                    return t(langKeys.validationphone) as string;\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                    render={({ field, formState: { errors } }) => (\r\n                        <CssPhonemui\r\n                            {...field}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            defaultCountry={'pe'}\r\n                            label={t(langKeys.phone)}\r\n                            error={!!errors?.pmphone}\r\n                            helperText={errors?.pmphone?.message}\r\n                        />\r\n                    )}\r\n                />\r\n                <h3>{t(langKeys.creditcard)}</h3>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <img alt=\"visa\" src=\"https://static.culqi.com/v2/v2/static/img/visa.svg\" width=\"50px\" style={{ padding: 5 }}></img>\r\n                    <img alt=\"mastercard\" src=\"https://static.culqi.com/v2/v2/static/img/mastercard.svg\" width=\"50px\" style={{ padding: 5 }}></img>\r\n                    <img alt=\"ammex\" src=\"https://static.culqi.com/v2/v2/static/img/amex.svg\" width=\"50px\" style={{ padding: 5 }}></img>\r\n                    <img alt=\"dinners\" src=\"https://static.culqi.com/v2/v2/static/img/diners.svg\" width=\"50px\" style={{ padding: 5 }}></img>\r\n                </div>\r\n                <div style={{ display: \"flex\", width: \"100%\", flexWrap: 'wrap' }}>\r\n                    <div className={classes.containerInfoPay}>\r\n                        <Controller\r\n                            name=\"creditcard\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => {\r\n                                    if (currentView === \"view-2\") {\r\n                                        if (value?.length === 0) {\r\n                                            return t(langKeys.field_required) as string;\r\n                                        } else if ((value?.length !== limitnumbers) || (limitnumbers < 12)) {\r\n                                            return t(langKeys.creditcardvalidate) as string;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }}\r\n                            render={({ field, formState: { errors } }) => (\r\n                                <TextField\r\n                                    {...field}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    size=\"small\"\r\n                                    label={t(langKeys.creditcard)}\r\n                                    error={!!errors.creditcard}\r\n                                    helperText={errors.creditcard?.message}\r\n                                    onPaste={e => {\r\n                                        e.preventDefault()\r\n                                    }}\r\n                                    onChange={(e) => {\r\n                                        let val = e.target.value.replace(/[^0-9]/g, '');\r\n                                        let spaces = Math.floor(val.length / 4)\r\n                                        let partialvalue = val.slice(0, 4)\r\n                                        for (let i = 1; i <= spaces; i++) {\r\n                                            partialvalue += \" \" + val.slice(i * 4, (i + 1) * 4)\r\n                                        }\r\n                                        setValue(\"creditcard\", partialvalue.trim());\r\n                                    }}\r\n                                    onInput={(e: any) => {\r\n                                        if (e.target.value.slice(0, 1) === \"4\") {\r\n                                            setIcon(<img alt=\"visa\" src=\"https://static.culqi.com/v2/v2/static/img/visa.svg\" width=\"50px\" style={{ padding: 5 }}></img>)\r\n                                            setlimitnumbers(19)\r\n                                        } else if (e.target.value.slice(0, 2) === \"51\" || e.target.value.slice(0, 2) === \"55\") {\r\n                                            setIcon(<img alt=\"mastercard\" src=\"https://static.culqi.com/v2/v2/static/img/mastercard.svg\" width=\"50px\" style={{ padding: 5 }}></img>)\r\n                                            setlimitnumbers(19)\r\n                                        } else if (e.target.value.slice(0, 2) === \"37\" || e.target.value.slice(0, 2) === \"34\") {\r\n                                            setIcon(<img alt=\"ammex\" src=\"https://static.culqi.com/v2/v2/static/img/amex.svg\" width=\"50px\" style={{ padding: 5 }}></img>)\r\n                                            setlimitnumbers(18)\r\n                                        } else if (e.target.value.slice(0, 2) === \"36\" || e.target.value.slice(0, 2) === \"38\" || e.target.value.slice(0, 3) === \"300\" || e.target.value.slice(0, 3) === \"305\") {\r\n                                            setIcon(<img alt=\"dinners\" src=\"https://static.culqi.com/v2/v2/static/img/diners.svg\" width=\"50px\" style={{ padding: 5 }}></img>)\r\n                                            setlimitnumbers(17)\r\n                                        } else {\r\n                                            setIcon(<></>)\r\n                                            setlimitnumbers(10)\r\n                                        }\r\n                                    }}\r\n                                    InputProps={{\r\n                                        endAdornment: icon,\r\n                                    }}\r\n                                    inputProps={{\r\n                                        maxLength: limitnumbers\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <div style={{ padding: \"20px\" }}>{t(langKeys.dueDate)}</div>\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <Controller\r\n                                name=\"mm\"\r\n                                control={control}\r\n                                rules={{\r\n                                    validate: (value) => {\r\n                                        if (currentView === \"view-2\") {\r\n                                            if (value === null || value === undefined) {\r\n                                                return t(langKeys.field_required) as string;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                render={({ field: { onChange }, formState: { errors } }) => (\r\n                                    <FieldSelect\r\n                                        onChange={(data: typeof datamonth[number]) => {\r\n                                            onChange(data?.id || \"\");\r\n                                        }}\r\n                                        variant=\"outlined\"\r\n                                        style={{ marginTop: 8, marginRight: 10 }}\r\n                                        className=\"col-6\"\r\n                                        valueDefault={getValues('mm')}\r\n                                        label={\"MM\"}\r\n                                        error={errors.mm?.message}\r\n                                        data={datamonth}\r\n                                        optionDesc=\"desc\"\r\n                                        optionValue=\"id\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                            <Controller\r\n                                name=\"yyyy\"\r\n                                control={control}\r\n                                rules={{\r\n                                    validate: (value) => {\r\n                                        if (currentView === \"view-2\") {\r\n                                            if (value?.length === 0) {\r\n                                                return t(langKeys.field_required) as string;\r\n                                            } else if (value?.length !== 4) {\r\n                                                return t(langKeys.field_required) as string;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                render={({ field, formState: { errors } }) => (\r\n                                    <TextField\r\n                                        {...field}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"normal\"\r\n                                        fullWidth\r\n                                        className=\"col-6\"\r\n                                        style={{ marginTop: 8 }}\r\n                                        type=\"number\"\r\n                                        size=\"small\"\r\n                                        label={\"YYYY\"}\r\n                                        error={!!errors.yyyy}\r\n                                        helperText={errors.yyyy?.message}\r\n                                        inputProps={{\r\n                                            maxLength: 4\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <Controller\r\n                            name=\"securitycode\"\r\n                            control={control}\r\n                            rules={{\r\n                                validate: (value) => {\r\n                                    if (currentView === \"view-2\") {\r\n                                        if (value?.length === 0) {\r\n                                            return t(langKeys.field_required) as string;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }}\r\n                            render={({ field, formState: { errors } }) => (\r\n                                <TextField\r\n                                    {...field}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    fullWidth\r\n                                    type=\"password\"\r\n                                    size=\"small\"\r\n                                    label={t(langKeys.securitycode)}\r\n                                    error={!!errors.securitycode}\r\n                                    helperText={errors.securitycode?.message}\r\n                                    inputProps={{\r\n                                        maxLength: limitnumbers === 18 ? 4 : 3\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.containerInfoPay} >\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\", border: \"1px solid #7721ad\", borderRadius: \"15px\", margin: \"10px\" }}>{t(langKeys.finishregwarn)}</div>\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\", color: \"#7721ad\", margin: \"10px\" }}>{t(langKeys.finishregwarn2)}</div>\r\n                    </div>\r\n                </div>\r\n                <Button\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        finishreg();\r\n                    }}\r\n                    className={commonClasses.button}\r\n                    style={{ marginTop: '3em' }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={executeResult.loading}\r\n                >\r\n                    <Trans i18nKey={langKeys.finishreg} />\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GetComponentProps {\r\n    channel: keyof ListChannels;\r\n    display: boolean;\r\n    setOpenWarning: (param: any) => void;\r\n}\r\n\r\nconst GetComponent: FC<GetComponentProps> = ({ channel: key, display, setOpenWarning }) => {\r\n    switch (key as keyof ListChannels) {\r\n        case 'facebook':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddFacebook setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'messenger':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddMessenger setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'instagram':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddInstagram setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'instagramDM':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddInstagramDM setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'whatsapp':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddWhatsapp setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'telegram':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddTelegram setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'twitter':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddTwitter setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'twitterDM':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddTwitterDM setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'tiktok':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddTikTok setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'youtube':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddYouTube setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'linkedin':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddLinkedIn setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'chatWeb':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddChatWeb setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'email':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddEmail setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'phone':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddPhone setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'sms':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddSMS setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'apple':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddIos setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'android':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddAndroid setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'teams':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddTeams setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        case 'blogger':\r\n            return (\r\n                <div style={{ display: display ? 'block' : 'none' }}>\r\n                    <ChannelAddBlogger setOpenWarning={setOpenWarning} />\r\n                </div>\r\n            );\r\n\r\n        default: return <div />;\r\n    }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useContext, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport RightSideMenu from './RightSideMenu';\r\nimport { Button, CircularProgress, Dialog, DialogActions, DialogTitle } from '@material-ui/core';\r\nimport { langKeys } from 'lang/keys';\r\nimport { Trans } from 'react-i18next';\r\nimport { LaraigoLogo } from 'icons';\r\nimport { LeftSide } from './LeftSideMenu';\r\nimport { SubscriptionContext, SubscriptionProvider, usePlanData } from './context';\r\nimport Popus from 'components/layout/Popus';\r\nimport { useFormContext } from 'react-hook-form';\r\n\r\nconst useSignUpStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: '#F7F7F7',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    purplecircle: {\r\n        background: \"#7721ad\",\r\n        borderRadius: \"50%\",\r\n        width: 35,\r\n        minWidth: 35,\r\n        height: 35,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        fontSize: 20,\r\n        fontWeight: 700\r\n    },\r\n    containerHead: {\r\n        display: \"flex\",\r\n        border: '1px solid #D1CBCB',\r\n        flex: '0 0 1',\r\n        paddingTop: 16,\r\n        paddingBottom: 16,\r\n        // marginBottom: 4,\r\n        backgroundColor: '#FFF',\r\n\r\n    },\r\n    containerLogo: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    notthisstep: {\r\n        background: \"#e5e5e5\",\r\n        borderRadius: \"50%\",\r\n        width: 35,\r\n        minWidth: 35,\r\n        height: 35,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        color: \"#a59f9f\",\r\n        fontSize: 20,\r\n        fontWeight: 700\r\n    },\r\n    separator: {\r\n        borderBottom: \"1px solid #D1CBCB\",\r\n        width: \"15%\",\r\n        height: 0,\r\n        marginLeft: 4,\r\n        marginRight: 4\r\n    },\r\n    cookieAlert: {\r\n        \"& svg\": {\r\n            color: 'white'\r\n        }\r\n    },\r\n    emptyspacenumber: {\r\n        flex: 1,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            display: \"none\"\r\n        },\r\n    },\r\n    containerLeft: {\r\n        flex: 1,\r\n        padding: 24,\r\n        overflowY: 'auto',\r\n        [theme.breakpoints.down('xs')]: {\r\n            minWidth: '100vw',\r\n            height: '100vh',\r\n        },\r\n    }\r\n}));\r\n\r\nexport const SignUp: FC = () => {\r\n    return (\r\n        <SubscriptionProvider>\r\n            <SignUpFunc />\r\n            <Popus />\r\n        </SubscriptionProvider>\r\n    );\r\n}\r\n\r\nconst SignUpFunc: FC = () => {\r\n    const { step, setStep } = useContext(SubscriptionContext);\r\n    const { getValues, reset } = useFormContext();\r\n    const { loading: planDataLoading } = usePlanData();\r\n    const [openWarning, setOpenWarning] = useState(false);\r\n\r\n    function setDefaultMainData() {\r\n        reset({\r\n            ...getValues(),\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmpassword: \"\",\r\n            firstandlastname: \"\",\r\n            companybusinessname: \"\",\r\n            mobilephone: \"\",\r\n            facebookid: \"\",\r\n            googleid: \"\",\r\n            join_reason: \"\",\r\n            country: \"\",\r\n            doctype: 0,\r\n            docnumber: \"\",\r\n            businessname: \"\",\r\n            fiscaladdress: \"\",\r\n            billingcontact: \"\",\r\n            billingcontactmail: \"\",\r\n            autosendinvoice: true,\r\n            pmemail: \"\",\r\n            pmphone: \"\",\r\n            firstnamecard: \"\",\r\n            lastnamecard: \"\",\r\n            creditcard: \"\",\r\n            mm: 0,\r\n            yyyy: \"\",\r\n            securitycode: \"\",\r\n        });\r\n    }\r\n    function setDefaultMainData2() {\r\n        reset({\r\n            ...getValues(),\r\n            doctype: 0,\r\n            docnumber: \"\",\r\n            businessname: \"\",\r\n            fiscaladdress: \"\",\r\n            billingcontact: \"\",\r\n            billingcontactmail: \"\",\r\n        })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpenWarning(false);\r\n    };\r\n    const handleClose2 = () => {\r\n        if (step === 2) {\r\n            setDefaultMainData()\r\n            setStep(step - 1)\r\n        } else if (step === 4) {\r\n            setStep(step - 1)\r\n        } else if (step === 3) {\r\n            setStep(2.5)\r\n        } else if (step === 2.5) {\r\n            setDefaultMainData2()\r\n            setStep(2)\r\n        } else if (step === 2.6) {\r\n            setStep(2.5);\r\n        } else {\r\n            setStep(step - 1)\r\n        }\r\n        setOpenWarning(false);\r\n    };\r\n\r\n    const classes = useSignUpStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Dialog\r\n                open={openWarning}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <Trans i18nKey={langKeys.goback} />\r\n                </DialogTitle>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                    <Button onClick={handleClose2} color=\"primary\" autoFocus>\r\n                        <Trans i18nKey={langKeys.yes} />\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            <div className={classes.containerHead}>\r\n                <div className={classes.emptyspacenumber}></div>\r\n                <div style={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center', marginRight: 10, marginLeft: 10 }}>\r\n                    <div className={step === 1 ? classes.purplecircle : classes.notthisstep}> 1 </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div className={step === 2 ? classes.purplecircle : classes.notthisstep}> 2 </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div className={step === 2.5 ? classes.purplecircle : classes.notthisstep}> 3 </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div className={step === 2.6 ? classes.purplecircle : classes.notthisstep}> 4 </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div className={step === 3 ? classes.purplecircle : classes.notthisstep}> 5 </div>\r\n                    <div className={classes.separator}> </div>\r\n                    <div className={step === 4 ? classes.purplecircle : classes.notthisstep}> 6 </div>\r\n                </div>\r\n            </div>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexDirection: 'row',\r\n                height: '100%',\r\n                // flexGrow: 1,\r\n                overflow: 'overlay',\r\n                flexWrap: 'wrap'\r\n            }}>\r\n                {step !== 3 && (\r\n                    <div className={classes.containerLogo}>\r\n                        {/* containerlogo tiene flex 1, para q se divida con el texto */}\r\n                        <LaraigoLogo style={{ width: '50%' }} />\r\n                    </div>\r\n                )}\r\n                <div className={classes.containerLeft}>\r\n                    {!planDataLoading\r\n                        ? <RightSideMenu setOpenWarning={setOpenWarning} />\r\n                        : <CircularProgress />\r\n                    }\r\n                </div>\r\n                {step === 3 && (\r\n                    <LeftSide setOpenWarning={setOpenWarning} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });","import { IActionCall, IRequestBody } from \"@types\";\r\nimport { ChannelsService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.PAGELIST,\r\n        success: actionTypes.PAGELIST_SUCCESS,\r\n        failure: actionTypes.PAGELIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeSubscription = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.execSub(requestBody),\r\n    types: {\r\n        loading: actionTypes.SIGNUP,\r\n        success: actionTypes.SIGNUP_SUCCESS,\r\n        failure: actionTypes.SIGNUP_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const validatechannels = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.valChannels(requestBody),\r\n    types: {\r\n        loading: actionTypes.VALCHANNELS,\r\n        success: actionTypes.VALCHANNELS_SUCCESS,\r\n        failure: actionTypes.VALCHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeCheckNewUser = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.validateNewUser(requestBody),\r\n    types: {\r\n        loading: actionTypes.ISVALID,\r\n        success: actionTypes.ISVALID_SUCCESS,\r\n        failure: actionTypes.ISVALID_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const verifyPlan = (accessToken: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.vrfplan(accessToken),\r\n    types: {\r\n        loading: actionTypes.VERIFYPLAN,\r\n        success: actionTypes.VERIFYPLAN_SUCCESS,\r\n        failure: actionTypes.VERIFYPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsListSub = (): IActionCall => ({type: actionTypes.PAGELIST_RESET});\r\n\r\nexport const getCurrencyList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCurrencyList(),\r\n    types: {\r\n        loading: actionTypes.CURRENCYLIST,\r\n        success: actionTypes.CURRENCYLIST_SUCCESS,\r\n        failure: actionTypes.CURRENCYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getCountryList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCountryList(),\r\n    types: {\r\n        loading: actionTypes.COUNTRYLIST,\r\n        success: actionTypes.COUNTRYLIST_SUCCESS,\r\n        failure: actionTypes.COUNTRYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});","import { IActionCall } from \"@types\";\r\nimport { GoogleService } from \"network\";\r\n\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const exchangeCode = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.exchangeCode(request),\r\n    types: {\r\n        loading: actionTypes.EXCHANGE_CODE,\r\n        success: actionTypes.EXCHANGE_CODE_SUCCESS,\r\n        failure: actionTypes.EXCHANGE_CODE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetExchangeCode = (): IActionCall => ({ type: actionTypes.EXCHANGE_CODE_RESET });\r\n\r\nexport const listBlogger = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.listBlogger(request),\r\n    types: {\r\n        loading: actionTypes.LIST_BLOGGER,\r\n        success: actionTypes.LIST_BLOGGER_SUCCESS,\r\n        failure: actionTypes.LIST_BLOGGER_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetListBlogger = (): IActionCall => ({ type: actionTypes.LIST_BLOGGER_RESET });\r\n\r\nexport const listYouTube = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.listYouTube(request),\r\n    types: {\r\n        loading: actionTypes.LIST_YOUTUBE,\r\n        success: actionTypes.LIST_YOUTUBE_SUCCESS,\r\n        failure: actionTypes.LIST_YOUTUBE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetListYouTube = (): IActionCall => ({ type: actionTypes.LIST_YOUTUBE_RESET });","import { FC } from \"react\";\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { exchangeCode } from \"store/google/actions\";\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\ninterface GoogleLogInFrameProps {\r\n    setWaitExchange: (value: boolean) => void;\r\n}\r\n\r\nexport const GoogleLogInFrame: FC<GoogleLogInFrameProps> = ({ setWaitExchange }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    \r\n    const login = useGoogleLogin({\r\n        onSuccess: tokenResponse => onGoogleLoginSucess(tokenResponse),\r\n        onError: error => onGoogleLoginFailure(error),\r\n        flow: 'auth-code',\r\n        scope: 'https://www.googleapis.com/auth/gmail.compose \\\r\n        https://www.googleapis.com/auth/youtube.readonly \\\r\n        https://www.googleapis.com/auth/youtube.upload \\\r\n        https://www.googleapis.com/auth/youtube.force-ssl \\\r\n        https://www.googleapis.com/auth/drive.file \\\r\n        https://www.googleapis.com/auth/gmail.readonly \\\r\n        https://www.googleapis.com/auth/blogger \\\r\n        https://www.googleapis.com/auth/blogger.readonly \\\r\n        https://www.googleapis.com/auth/drive.readonly',\r\n    });\r\n\r\n    const onGoogleLoginSucess = (event: any) => {\r\n        if (event) {\r\n            if (event.code) {\r\n                dispatch(exchangeCode({ googlecode: event.code }));\r\n                dispatch(showBackdrop(true));\r\n                setWaitExchange(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onGoogleLoginFailure = (event: any) => {\r\n        console.log('GOOGLE LOGIN FAILURE: ' + JSON.stringify(event));\r\n    }\r\n\r\n    return <Button\r\n        onClick={() => { login() }}\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n    >\r\n        {t(langKeys.login_with_google)}\r\n    </Button>\r\n};\r\n\r\nexport default GoogleLogInFrame","import { IActionCall } from \"@types\";\r\nimport { SubscriptionService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const recoverPassword = (request: any): IActionCall => ({\r\n    callAPI: () => SubscriptionService.recoverPassword(request),\r\n    types: {\r\n        failure: actionTypes.RECOVER_PASSWORD_FAILURE,\r\n        loading: actionTypes.RECOVER_PASSWORD,\r\n        success: actionTypes.RECOVER_PASSWORD_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetRecoverPassword = (): IActionCall => ({ type: actionTypes.RECOVER_PASSWORD_RESET });\r\n\r\nexport const changePassword = (request: any): IActionCall => ({\r\n    callAPI: () => SubscriptionService.changePassword(request),\r\n    types: {\r\n        failure: actionTypes.CHANGE_PASSWORD_FAILURE,\r\n        loading: actionTypes.CHANGE_PASSWORD,\r\n        success: actionTypes.CHANGE_PASSWORD_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetChangePassword = (): IActionCall => ({ type: actionTypes.CHANGE_PASSWORD_RESET });\r\n\r\nexport const validateChannels = (request: any): IActionCall => ({\r\n    callAPI: () => SubscriptionService.validateChannels(request),\r\n    types: {\r\n        failure: actionTypes.VALIDATE_CHANNELS_FAILURE,\r\n        loading: actionTypes.VALIDATE_CHANNELS,\r\n        success: actionTypes.VALIDATE_CHANNELS_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetValidateChannels = (): IActionCall => ({ type: actionTypes.VALIDATE_CHANNELS_RESET });"],"sourceRoot":""}