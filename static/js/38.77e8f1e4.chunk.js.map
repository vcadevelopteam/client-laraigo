{"version":3,"sources":["pages/Iaservices.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/core/esm/Accordion/AccordionContext.js","../node_modules/@material-ui/icons/ExpandMore.js","../node_modules/@material-ui/core/esm/Collapse/Collapse.js","../node_modules/@material-ui/core/esm/AccordionSummary/AccordionSummary.js","../node_modules/@material-ui/core/esm/AccordionDetails/AccordionDetails.js","../node_modules/@material-ui/core/esm/Accordion/Accordion.js","../node_modules/@babel/runtime/helpers/esm/toArray.js"],"names":["serviceTypes","type","options","value","description","transtaltion_services","analysis_type","service_type_tone","nlu_fields","arrayBread","id","name","useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","title","color","palette","text","primary","mb2","marginBottom","switches","marginRight","border","borderRadius","DetailIaService","data","row","edit","setViewSelected","multiData","fetchData","user","useSelector","state","login","validateToken","classes","useState","waitSave","setWaitSave","executeRes","main","execute","dispatch","useDispatch","t","useTranslation","dataModels","success","dataChannels","dataStatus","useForm","defaultValues","intelligentmodelsconfigurationid","status","icontype","channels","communicationchannelid","channelsdesc","channeldesc","operation","services","parameters","JSON","parse","control","register","handleSubmit","setValue","getValues","trigger","errors","formState","useFieldArray","fields","fieldsAppend","append","fieldRemove","remove","fieldUpdate","update","React","useEffect","validate","length","langKeys","field_required","loading","error","errormessage","code","module","organization_plural","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","onSubmit","forEach","item","service","categories","concepts","emotion","entities","keywords","semanticroles","sentiment","translationservice","stringify","manageConfirmation","visible","question","confirmation_save","callback","insInteligentModelConfiguration","iaservice_must_select","style","width","display","justifyContent","breadcrumbs","handleClick","newiaservice","gap","alignItems","variant","startIcon","backgroundColor","onClick","back","className","save","label","corporation","valueDefault","corpdesc","disabled","organization","orgdesc","channel","onChange","map","o","join","optionDesc","optionValue","domainvalue","uset","prefixTranslation","services_plural","type_of_service","intelligentmodelsid","analyzemode","analyzecustomer","analyzebot","servicetype","analyzeuser","i","expanded","undefined","expandIcon","fregister","type_service","some","x","iaservice_already_exist","model_type","filter","y","model","trim","flexWrap","it","index","flex","paddingBottom","client_message","bot_message","agent_message","textAlign","delete","Iaservices","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","channeltype","toLowerCase","toUpperCase","getCollection","getIntelligentModelsConfigurations","getMultiCollection","getIntelligentModels","getChannelsByOrg","getValuesFromDomain","resetAllMain","successful_delete","confirmation_delete","onClickRow","titlemodule","iaservices_plural","count","mainData","download","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d","AccordionContext","Collapse","ref","children","collapsedHeight","_props$collapsedSize","collapsedSize","collapsedSizeProp","_props$component","component","Component","_props$disableStrictM","disableStrictModeCompat","inProp","in","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","timeout","duration","standard","_props$TransitionComp","TransitionComponent","Transition","other","_objectWithoutProperties","useTheme","timer","wrapperRef","autoTransitionDuration","concat","clearTimeout","current","enableStrictModeCompat","unstable_strictMode","nodeRef","handleRef","useForkRef","normalizedTransitionCallback","nodeOrAppearing","maybeAppearing","_ref","_ref2","_slicedToArray","node","isAppearing","handleEnter","height","handleEntering","wrapperHeight","clientHeight","transitionDuration","getTransitionProps","mode","duration2","transitions","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","_extends","addEndListener","nodeOrNext","maybeNext","next","setTimeout","childProps","clsx","root","container","entered","hidden","minHeight","wrapper","wrapperInner","muiSupportAuto","withStyles","overflow","transition","create","visibility","AccordionSummary","focusVisibleClassName","_props$IconButtonProp","IconButtonProps","_React$useContext","_React$useContext$dis","toggle","ButtonBase","focusRipple","disableRipple","focusVisible","focused","event","content","IconButton","edge","tabIndex","role","shortest","cursor","action","focus","opacity","disabledOpacity","flexGrow","margin","transform","AccordionDetails","Accordion","arr","childrenProp","_props$defaultExpande","defaultExpanded","_props$disabled","expandedProp","_props$square","square","TransitionProps","_useControlled","useControlled","controlled","_useControlled2","setExpandedState","handleChange","_React$Children$toArr","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","Paper","rounded","Provider","position","left","top","right","divider","disabledBackground","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"],"mappings":"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","file":"static/js/38.77e8f1e4.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldEdit, FieldSelect, FieldMultiSelect, TemplateSwitch } from 'components';\r\nimport { getChannelsByOrg, getIntelligentModels, getIntelligentModelsConfigurations, getValuesFromDomain, insInteligentModelConfiguration } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useFieldArray, useForm } from 'react-hook-form';\r\nimport { getCollection, resetAllMain, getMultiCollection, execute } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Accordion, AccordionDetails, AccordionSummary } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst serviceTypes = [\r\n    {\r\n        type: 'ASSISTANT',\r\n        options: [\r\n            { value: 'RASA', description: 'RASA' },\r\n            { value: 'WATSON ASSISTANT', description: 'WATSON ASSISTANT' },\r\n            { value: 'WIT.AI', description: 'WIT.AI' }\r\n        ]\r\n    },\r\n    {\r\n        type: 'CLASSIFIER',\r\n        options: [\r\n            { value: 'NATURAL LANGUAGE CLASSIFIER', description: 'NATURAL LANGUAGE CLASSIFIER' }\r\n        ]\r\n    },\r\n    {\r\n        type: 'NATURAL LANGUAGE UNDERSTANDING',\r\n        options: [\r\n            { value: 'NATURAL LANGUAGE UNDERSTANDING', description: 'NATURAL LANGUAGE UNDERSTANDING' }\r\n        ]\r\n    },\r\n    {\r\n        type: 'TONE ANALYZER',\r\n        options: [\r\n            { value: 'TONE ANALYZER', description: 'TONE ANALYZER' }\r\n        ]\r\n    }\r\n]\r\n\r\nconst transtaltion_services = [\r\n    {\r\n        value: 'IBM',\r\n        description: 'IBM'\r\n    },\r\n    {\r\n        value: 'GOOGLE',\r\n        description: 'GOOGLE'\r\n    }\r\n]\r\n\r\nconst analysis_type = [\r\n    {\r\n        value: 'DESACTIVADO',\r\n        description: 'DESACTIVADO'\r\n    },\r\n    {\r\n        value: 'BYINTERACTION',\r\n        description: 'Por Interaccion'\r\n    },\r\n    {\r\n        value: 'BYCONVERSATION',\r\n        description: 'Por Conversacion'\r\n    }\r\n];\r\n\r\nconst service_type_tone = [\r\n    {\r\n        value: 'CUSTOMER',\r\n        description: 'Atención al cliente'\r\n    },\r\n    {\r\n        value: 'GENERAL',\r\n        description: 'General'\r\n    },\r\n]\r\n\r\nconst nlu_fields = [\r\n    {\r\n        value: 'categories',\r\n        description: 'Categorias'\r\n    },\r\n    {\r\n        value: 'concepts',\r\n        description: 'Conceptos'\r\n    },\r\n    {\r\n        value: 'emotion',\r\n        description: 'Emociones'\r\n    },\r\n    {\r\n        value: 'entities',\r\n        description: 'Entidades'\r\n    },\r\n    {\r\n        value: 'keywords',\r\n        description: 'Palabras Clave'\r\n    },\r\n    {\r\n        value: 'semanticroles',\r\n        description: 'Roles Semanticos'\r\n    },\r\n    {\r\n        value: 'sentiment',\r\n        description: 'Sentimiento'\r\n    }\r\n]\r\n\r\ninterface servicesData {\r\n    service: string,\r\n    intelligentmodelsid: number,\r\n    analyzemode: string,\r\n    analyzecustomer: boolean,\r\n    analyzebot: boolean,\r\n    analyzeuser: boolean,\r\n    id?: string,\r\n    categories?: boolean,\r\n    concepts?: boolean,\r\n    emotion?: boolean,\r\n    entities?: boolean,\r\n    keywords?: boolean,\r\n    semanticroles?: boolean,\r\n    sentiment?: boolean,\r\n    translationservice?: string\r\n}\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\n\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\n\r\ninterface DetailIaServiceProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void\r\n}\r\n\r\nconst arrayBread = [\r\n    { id: \"view-1\", name: \"IA Services\" },\r\n    { id: \"view-2\", name: \"IA Service detail\" }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    mb2: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    switches: {\r\n        background: '#ccc3',\r\n        marginRight: '10px',\r\n        padding: '10px 10px 20px 10px',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '5px',\r\n        marginBottom: '4px'\r\n    }\r\n}));\r\n\r\nconst DetailIaService: React.FC<DetailIaServiceProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData }) => {\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const dataModels = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const dataChannels = multiData[1] && multiData[1].success ? multiData[1].data : [];\r\n    //const dataModelType = multiData[2] && multiData[2].success ? multiData[2].data : [];\r\n    const dataStatus = multiData[3] && multiData[3].success ? multiData[3].data : [];\r\n\r\n    const { control, register, handleSubmit, setValue, getValues, trigger, formState: { errors } } = useForm<any>({\r\n        defaultValues: {\r\n            id: row ? row.intelligentmodelsconfigurationid : 0,\r\n            description: row ? (row.description || '') : '',\r\n            status: row ? row.status : 'ACTIVO',\r\n            type: 'NINGUNO',\r\n            color: '#FFFFFF',\r\n            icontype: \"fab fa-reddit-alien\",\r\n            channels: row?.communicationchannelid || '',\r\n            channelsdesc: row ? row.channeldesc : '', //for table\r\n            operation: row ? \"EDIT\" : \"INSERT\",\r\n            services: (row?.parameters) ? JSON.parse(row?.parameters) : []\r\n        }\r\n    });\r\n\r\n    const { fields, append: fieldsAppend, remove: fieldRemove, update: fieldUpdate } = useFieldArray({\r\n        control,\r\n        name: 'services',\r\n    });\r\n\r\n    const handlerNewColumn = () => fieldsAppend({\r\n        type_of_service: '',\r\n        service: '',\r\n        intelligentmodelsid: '',\r\n        analyzemode: '',\r\n        translationservice: '',\r\n        analyzecustomer: false,\r\n        analyzebot: false,\r\n        servicetype: '',\r\n        analyzeuser: false,\r\n        categories: false,\r\n        concepts: false,\r\n        emotion: false,\r\n        entities: false,\r\n        keywords: false,\r\n        semanticroles: false,\r\n        sentiment: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        register('description', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('channels', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('channelsdesc', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n    }, [register]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.organization_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    const handlerDeleteColumn = (index: number) => {\r\n        fieldRemove(index)\r\n    };\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (data.services.length === 0) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.iaservice_must_select) }))\r\n            return\r\n        }\r\n\r\n        data.services.forEach((item: servicesData) => {\r\n            delete item.id\r\n            if (item.service !== 'NATURAL LANGUAGE UNDERSTANDING') {\r\n                delete item.categories\r\n                delete item.concepts\r\n                delete item.emotion\r\n                delete item.entities\r\n                delete item.keywords\r\n                delete item.semanticroles\r\n                delete item.sentiment\r\n                delete item.translationservice\r\n            }\r\n        })\r\n\r\n        data.services = JSON.stringify(data.services)\r\n        const callback = () => {\r\n            dispatch(execute(insInteligentModelConfiguration(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={arrayBread}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.description}` : t(langKeys.newiaservice)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        {edit &&\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                startIcon={<SaveIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >{t(langKeys.save)}\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.corporation)} // \"Corporation\"\r\n                            className=\"col-6\"\r\n                            valueDefault={user?.corpdesc}\r\n                            disabled={true}\r\n                        />\r\n\r\n                        <FieldEdit\r\n                            label={t(langKeys.organization)} // \"Organization\"\r\n                            className=\"col-6\"\r\n                            valueDefault={user?.orgdesc}\r\n                            disabled={true}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldMultiSelect //los multiselect te devuelven un array de objetos en OnChange por eso se le recorre\r\n                            label={t(langKeys.channel)}\r\n                            className=\"col-12\"\r\n                            valueDefault={row?.communicationchannelid || \"\"}\r\n                            onChange={(value) => {\r\n                                setValue('channels', value.map((o: Dictionary) => o.communicationchannelid).join())\r\n                                setValue('channelsdesc', value.map((o: Dictionary) => o.description).join())\r\n                            }}\r\n                            error={errors?.channels?.message}\r\n                            loading={false}\r\n                            data={dataChannels}\r\n                            optionDesc=\"description\"\r\n                            optionValue=\"communicationchannelid\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.description)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row ? (row.description || \"\") : \"\"}\r\n                            onChange={(value) => setValue('description', value)}\r\n                            disabled={false}\r\n                            error={errors?.description?.message}\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.status)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.status || \"ACTIVO\"}\r\n                            onChange={(value) => setValue('status', value ? value.domainvalue : '')}\r\n                            error={errors?.status?.message}\r\n                            uset={true}\r\n                            prefixTranslation=\"status_\"\r\n                            data={dataStatus}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            <div className={classes.containerDetail}>\r\n                <div>\r\n                    <div style={{ marginBottom: '16px', display: 'flex', justifyContent: 'space-between' }}>\r\n                        <div className={classes.title}>{t(langKeys.services_plural)}</div>\r\n                        <div>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<AddIcon color=\"secondary\" />}\r\n                                onClick={() => handlerNewColumn()}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >{t(langKeys.register)}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    {fields.map((item: Dictionary, i) =>\r\n                        <div key={item.id}>\r\n                            <Accordion expanded={!row ? true : undefined} style={{ marginBottom: '8px' }}>\r\n                                <AccordionSummary\r\n                                    expandIcon={<ExpandMoreIcon />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                >\r\n                                    <Typography style={{ fontSize: 16 }}>{getValues(`services.${i}.service`) || t(langKeys.newiaservice)}</Typography>\r\n                                </AccordionSummary>\r\n                                <AccordionDetails>\r\n                                    <form onSubmit={onSubmit} style={{ width: '100%' }}>\r\n                                        <div className=\"row-zyx\">\r\n                                            <div className=\"col-12\">\r\n                                                <FieldSelect\r\n                                                    fregister={{\r\n                                                        ...register(`services.${i}.type_of_service`, {\r\n                                                            validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                                        })\r\n                                                    }}\r\n                                                    onChange={(value) => {\r\n                                                        // fieldUpdate(i, { ...fields[i], type_of_service: value ? value.type : '', service: '' })\r\n                                                        setValue(`services.${i}.type_of_service`, value?.type || \"\")\r\n                                                        trigger(`services.${i}.type_of_service`)\r\n\r\n                                                        setValue(`services.${i}.service`, \"\")\r\n                                                        trigger(`services.${i}.service`)\r\n                                                    }}\r\n                                                    label={t(langKeys.type_service)}\r\n                                                    className={classes.mb2}\r\n                                                    valueDefault={(item.type_of_service) ? item.type_of_service : ''}\r\n                                                    error={errors?.services?.[i]?.type_of_service?.message}\r\n                                                    data={serviceTypes}\r\n                                                    optionDesc=\"type\"\r\n                                                    optionValue=\"type\"\r\n                                                />\r\n                                                {getValues(`services.${i}.type_of_service`) !== '' && (\r\n                                                    <FieldSelect\r\n                                                        fregister={{\r\n                                                            ...register(`services.${i}.service`, {\r\n                                                                validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                                            })\r\n                                                        }}\r\n                                                        onChange={(value) => {\r\n                                                            if (value) {\r\n                                                                if (fields.some((x: any) => x.service === value.value)) {\r\n                                                                    // fieldUpdate(i, { ...fields[i], service: '' })\r\n                                                                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.iaservice_already_exist) }))\r\n                                                                    setValue(`services.${i}.type_of_service`, \"\");\r\n                                                                    setValue(`services.${i}.service`, \"\");\r\n                                                                    trigger(`services.${i}.service`)\r\n                                                                    trigger(`services.${i}.type_of_service`)\r\n                                                                } else {\r\n                                                                    setValue(`services.${i}.service`, value?.value || \"\")\r\n                                                                    trigger(`services.${i}.service`)\r\n                                                                }\r\n                                                            } else {\r\n                                                                setValue(`services.${i}.service`, value?.value || \"\")\r\n                                                                trigger(`services.${i}.service`)\r\n                                                            }\r\n                                                            // fieldUpdate(i, { ...fields[i], service: value ? value.value : '' })\r\n\r\n                                                        }}\r\n                                                        // triggerOnChangeOnFirst={true}\r\n                                                        label={t(langKeys.model_type)}\r\n                                                        className={classes.mb2}\r\n                                                        valueDefault={getValues(`services.${i}.service`)}\r\n                                                        error={errors?.services?.[i]?.service?.message}\r\n                                                        data={serviceTypes.filter((y: any) => y.type === getValues(`services.${i}.type_of_service`))[0]?.options}\r\n                                                        optionDesc=\"value\"\r\n                                                        optionValue=\"value\"\r\n                                                    />\r\n                                                )}\r\n\r\n                                                {getValues(`services.${i}.service`) !== '' && (\r\n                                                    <FieldSelect\r\n                                                        fregister={{\r\n                                                            ...register(`services.${i}.intelligentmodelsid`, {\r\n                                                                validate: (value: any) => (value) || t(langKeys.field_required)\r\n                                                            })\r\n                                                        }}\r\n                                                        onChange={(value) => {\r\n                                                            setValue(`services.${i}.intelligentmodelsid`, value?.intelligentmodelsid || 0)\r\n                                                            trigger(`services.${i}.intelligentmodelsid`)\r\n                                                            // fieldUpdate(i, { ...fields[i], intelligentmodelsid: value.intelligentmodelsid })\r\n                                                        }\r\n                                                        }\r\n                                                        label={t(langKeys.model)}\r\n                                                        className={classes.mb2}\r\n                                                        error={errors?.services?.[i]?.intelligentmodelsid?.message}\r\n                                                        data={dataModels.filter((y: any) => y.type.trim() === getValues(`services.${i}.service`))}\r\n                                                        valueDefault={getValues(`services.${i}.intelligentmodelsid`)}\r\n                                                        optionDesc=\"description\"\r\n                                                        optionValue=\"intelligentmodelsid\"\r\n                                                    />\r\n                                                )}\r\n                                                {getValues(`services.${i}.service`) === 'NATURAL LANGUAGE UNDERSTANDING' && (\r\n                                                    <div>\r\n                                                        <FieldSelect\r\n                                                            fregister={{\r\n                                                                ...register(`services.${i}.translationservice`, {\r\n                                                                    validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                                                })\r\n                                                            }}\r\n                                                            onChange={(value) => {\r\n                                                                fieldUpdate(i, { ...fields[i], translationservice: value.value })\r\n                                                            }}\r\n                                                            label={t(langKeys.translationservice)}\r\n                                                            className={classes.mb2}\r\n                                                            valueDefault={(item.translationservice) ? item.translationservice : ''}\r\n                                                            error={errors?.services?.[i]?.translationservice?.message}\r\n                                                            data={transtaltion_services}\r\n                                                            optionDesc=\"description\"\r\n                                                            optionValue=\"value\"\r\n                                                        />\r\n\r\n                                                        <div style={{ display: 'flex', flexWrap: 'wrap' }} className={classes.mb2}>\r\n                                                            {nlu_fields.map((it, index) =>\r\n                                                                <TemplateSwitch\r\n                                                                    key={index}\r\n                                                                    valueDefault={item[it.value] || false}\r\n                                                                    fregister={{\r\n                                                                        ...register(`services.${i}.${it.value}`)\r\n                                                                    }}\r\n                                                                    label={it.description}\r\n                                                                    className={classes.switches}\r\n                                                                    style={{ flex: '0 0 170px', paddingBottom: '10px' }}\r\n                                                                    onChange={(value) => setValue(`services.${i}.${it.value}`, value)}\r\n                                                                />\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )}\r\n                                                {getValues(`services.${i}.service`) === 'TONE ANALYZER' && (\r\n                                                    <FieldSelect\r\n                                                        fregister={{\r\n                                                            ...register(`services.${i}.servicetype`, {\r\n                                                                validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                                            })\r\n                                                        }}\r\n                                                        onChange={(value) => {\r\n                                                            setValue(`services.${i}.servicetype`, value?.value || \"\")\r\n                                                            trigger(`services.${i}.servicetype`)\r\n\r\n                                                            // fieldUpdate(i, { ...fields[i], servicetype: value.value })\r\n                                                        }}\r\n                                                        label={'Service type'} //traduccion\r\n                                                        className={classes.mb2}\r\n                                                        valueDefault={(item.servicetype) ? item.servicetype : ''}\r\n                                                        error={errors?.services?.[i]?.servicetype?.message}\r\n                                                        data={service_type_tone}\r\n                                                        optionDesc=\"description\"\r\n                                                        optionValue=\"value\"\r\n                                                    />\r\n                                                )}\r\n                                                <FieldSelect\r\n                                                    fregister={{\r\n                                                        ...register(`services.${i}.analyzemode`, {\r\n                                                            validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                                        })\r\n                                                    }}\r\n                                                    label={t(langKeys.analysis_type)}\r\n                                                    className={classes.mb2}\r\n                                                    error={errors?.services?.[i]?.analyzemode?.message}\r\n                                                    valueDefault={getValues(`services.${i}.analyzemode`)}\r\n                                                    onChange={(value) => {\r\n                                                        setValue(`services.${i}.analyzemode`, value?.value || \"\")\r\n                                                    }}\r\n                                                    data={analysis_type}\r\n                                                    optionDesc=\"description\"\r\n                                                    optionValue=\"value\"\r\n                                                />\r\n                                                <div style={{ display: 'flex', flexWrap: 'wrap' }} className={classes.mb2}>\r\n                                                    <TemplateSwitch\r\n                                                        fregister={{\r\n                                                            ...register(`services.${i}.analyzecustomer`)\r\n                                                        }}\r\n                                                        label={t(langKeys.client_message)}\r\n                                                        valueDefault={(item.analyzecustomer) ? item.analyzecustomer : false}\r\n                                                        style={{ flex: '0 0 170px' }}\r\n                                                        onChange={(value) => setValue(`services.${i}.analyzecustomer`, value)}\r\n                                                    />\r\n                                                    <TemplateSwitch\r\n                                                        fregister={{\r\n                                                            ...register(`services.${i}.analyzebot`)\r\n                                                        }}\r\n                                                        label={t(langKeys.bot_message)}\r\n                                                        valueDefault={(item.analyzebot) ? item.analyzebot : false}\r\n                                                        style={{ flex: '0 0 170px' }}\r\n                                                        onChange={(value) => setValue(`services.${i}.analyzebot`, value)}\r\n                                                    />\r\n                                                    <TemplateSwitch\r\n                                                        fregister={{\r\n                                                            ...register(`services.${i}.analyzeuser`)\r\n                                                        }}\r\n                                                        label={t(langKeys.agent_message)}\r\n                                                        valueDefault={(item.analyzeuser) ? item.analyzeuser : false}\r\n                                                        style={{ flex: '0 0 170px' }}\r\n                                                        onChange={(value) => setValue(`services.${i}.analyzeuser`, value)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style={{ textAlign: 'right' }}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                type=\"button\"\r\n                                                color=\"primary\"\r\n                                                startIcon={<DeleteIcon color=\"secondary\" />}\r\n                                                style={{ backgroundColor: \"#FB5F5F\" }}\r\n                                                onClick={() => handlerDeleteColumn(i)}\r\n                                            >{t(langKeys.delete)}</Button>\r\n                                        </div>\r\n                                    </form>\r\n                                </AccordionDetails>\r\n                            </Accordion>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Iaservices: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'orgid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.channeltype),\r\n                accessor: 'channeltype',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.channeldesc),\r\n                accessor: 'channeldesc',\r\n                NoFilter: true,\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getIntelligentModelsConfigurations()));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([\r\n            getIntelligentModels(),\r\n            getChannelsByOrg(),\r\n            getValuesFromDomain(\"TIPOMODELO\"),\r\n            getValuesFromDomain(\"ESTADOGENERICO\")\r\n        ]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.organization_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const data = {\r\n            channels: row.communicationchannelid,\r\n            id: row.intelligentmodelsconfigurationid,\r\n            operation: \"DELETE\",\r\n            description: row.description,\r\n            type: \"NINGUNO\",\r\n            color: row.color,\r\n            icontype: row.icontype,\r\n            services: row.parameters,\r\n            status: \"ELIMINADO\",\r\n        }\r\n\r\n        const callback = () => {\r\n            dispatch(execute(insInteligentModelConfiguration(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            <TableZyx\r\n                onClickRow={handleEdit}\r\n                columns={columns}\r\n                titlemodule={t(langKeys.iaservices_plural, { count: 2 })}\r\n                data={mainResult.mainData.data}\r\n                download={false}\r\n                loading={mainResult.mainData.loading}\r\n                register={true}\r\n                handleRegister={handleRegister}\r\n            />\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailIaService\r\n                data={rowSelected}\r\n                setViewSelected={setViewSelected}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default Iaservices;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import * as React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar AccordionContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\n\nexport default AccordionContext;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { Transition } from 'react-transition-group';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 0,\n      overflow: 'hidden',\n      transition: theme.transitions.create('height')\n    },\n\n    /* Styles applied to the root element when the transition has entered. */\n    entered: {\n      height: 'auto',\n      overflow: 'visible'\n    },\n\n    /* Styles applied to the root element when the transition has exited and `collapsedSize` != 0px. */\n    hidden: {\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the outer wrapper element. */\n    wrapper: {\n      // Hack to get children with a negative margin to not falsify the height computation.\n      display: 'flex'\n    },\n\n    /* Styles applied to the inner wrapper element. */\n    wrapperInner: {\n      width: '100%'\n    }\n  };\n};\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      collapsedHeight = props.collapsedHeight,\n      _props$collapsedSize = props.collapsedSize,\n      collapsedSizeProp = _props$collapsedSize === void 0 ? '0px' : _props$collapsedSize,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableStrictM = props.disableStrictModeCompat,\n      disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? duration.standard : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"collapsedHeight\", \"collapsedSize\", \"component\", \"disableStrictModeCompat\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var timer = React.useRef();\n  var wrapperRef = React.useRef(null);\n  var autoTransitionDuration = React.useRef();\n  var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === 'number' ? \"\".concat(collapsedHeight || collapsedSizeProp, \"px\") : collapsedHeight || collapsedSizeProp;\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;\n  var nodeRef = React.useRef(null);\n  var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : undefined);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (nodeOrAppearing, maybeAppearing) {\n      if (callback) {\n        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing],\n            _ref2 = _slicedToArray(_ref, 2),\n            node = _ref2[0],\n            isAppearing = _ref2[1]; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n\n        if (isAppearing === undefined) {\n          callback(node);\n        } else {\n          callback(node, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(function (node, isAppearing) {\n    node.style.height = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n    node.style.height = \"\".concat(wrapperHeight, \"px\");\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(onExited);\n  var handleExiting = normalizedTransitionCallback(function (node) {\n    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n\n    var _getTransitionProps2 = getTransitionProps({\n      style: style,\n      timeout: timeout\n    }, {\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration;\n\n    if (timeout === 'auto') {\n      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);\n      node.style.transitionDuration = \"\".concat(duration2, \"ms\");\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : \"\".concat(transitionDuration, \"ms\");\n    }\n\n    node.style.height = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  var addEndListener = function addEndListener(nodeOrNext, maybeNext) {\n    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;\n\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: enableStrictModeCompat ? nodeRef : undefined,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.createElement(Component, _extends({\n      className: clsx(classes.root, classes.container, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: _extends({\n        minHeight: collapsedSize\n      }, style),\n      ref: handleRef\n    }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapper,\n      ref: wrapperRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.wrapperInner\n    }, children)));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    if (props.classes && props.classes.container) {\n      throw new Error(['Material-UI: the classes.container key is deprecated.', 'Use `classes.root` instead', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The height of the container when collapsed.\n   * @deprecated The prop was renamed to support the addition of horizontal orientation, use `collapsedSize` instead.\n   */\n  collapsedHeight: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'The prop was renamed to support the vertical orientation, use `collapsedSize` instead'),\n\n  /**\n   * The height of the container when collapsed.\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Enable this prop if you encounter 'Function components cannot be given refs',\n   * use `unstable_createStrictModeTheme`,\n   * and can't forward the ref in the passed `Component`.\n   */\n  disableStrictModeCompat: PropTypes.bool,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from '../Accordion/AccordionContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: theme.spacing(0, 2),\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused, &$focusVisible': {\n        backgroundColor: theme.palette.action.focus\n      },\n      '&$disabled': {\n        opacity: theme.palette.action.disabledOpacity\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focused: {},\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$IconButtonProp = props.IconButtonProps,\n      IconButtonProps = _props$IconButtonProp === void 0 ? {} : _props$IconButtonProp,\n      onClick = props.onClick,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"focusVisibleClassName\", \"IconButtonProps\", \"onClick\"]);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded),\n    focusVisibleClassName: clsx(classes.focusVisible, classes.focused, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && /*#__PURE__*/React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    if (props.classes.focused.indexOf(' ') !== -1) {\n      return new Error(['Material-UI: The `classes.focused` key is deprecated.', 'Use `classes.focusVisible` instead.', 'The name of the pseudo-class was changed for consistency.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/master/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionSummary'\n})(AccordionSummary);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      padding: theme.spacing(1, 2, 2)\n    }\n  };\n};\nvar AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion details.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordionDetails'\n})(AccordionDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}"],"sourceRoot":""}