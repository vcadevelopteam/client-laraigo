{"version":3,"sources":["../node_modules/@material-ui/icons/Stop.js","@types/entities/campaign.ts","../node_modules/@material-ui/icons/esm/Event.js","pages/campaign/CampaignGeneral.tsx","pages/campaign/CampaignPerson.tsx","pages/campaign/CampaignMessage.tsx","pages/campaign/CampaignDetail.tsx","pages/campaign/Blacklist.tsx","pages/campaign/Campaign.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","components/fields/table-paginated.tsx","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/icons/esm/Search.js","../node_modules/@material-ui/icons/esm/Close.js","../node_modules/@material-ui/icons/esm/ArrowUpward.js","../node_modules/@material-ui/icons/esm/ArrowDownward.js","../node_modules/@material-ui/icons/esm/GetApp.js","../node_modules/@material-ui/icons/esm/FileCopy.js","pages/campaign/CampaignReport.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","SelectedColumns","primarykey","column","columns","firstname","lastname","this","createSvgIcon","useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","flexgrow1","flexGrow","dataExecutionType","MANUAL","SCHEDULED","dataSource","INTERNAL","EXTERNAL","PERSON","LEAD","dataCampaignType","key","rif","rifvalue","CampaignGeneral","row","edit","auxdata","detaildata","setDetaildata","multiData","frameProps","fetchData","setFrameProps","setPageSelected","setSave","classes","dispatch","useDispatch","t","useTranslation","dataStatus","success","data","dataChannel","filter","x","type","startsWith","dataGroup","dataMessageTemplate","user","useSelector","state","login","validateToken","useState","openModal","setOpenModal","useForm","defaultValues","isnew","id","communicationchannelid","length","communicationchanneltype","usergroup","status","title","description","subject","message","startdate","enddate","repeatable","frecuency","source","messagetemplateid","messagetemplatename","messagetemplatenamespace","messagetemplatetype","messagetemplateheader","messagetemplatebuttons","messagetemplatefooter","messagetemplateattachment","messagetemplatelanguage","messagetemplatepriority","executiontype","batchjson","fields","operation","sourcechanged","register","setValue","getValues","trigger","errors","formState","useEffect","validate","langKeys","field_required","afterstart","validateDate","field_afterstart","properties","environment","includes","roledesc","keys","messageTemplateData","find","setStepData","name","namespace","templatetype","resetMainAux","checkPage","then","valid","executeSave","page","showSnackbar","show","severity","no_person_selected","Date","onChangeExecutionType","onChangeChannel","channeltype","onChangeType","filterDataCampaignType","filterIf","filterMessageTemplate","mailTemplate","filterPipe","htmlTemplate","onChangeMessageTemplateId","messageTemplate","body","language","priority","headerenabled","headertype","header","buttonsenabled","buttons","footerenabled","footer","attachment","Fragment","className","label","valueDefault","onChange","error","style","display","uset","dictToArrayKV","optionDesc","optionValue","IconButton","size","onClick","e","Event","color","channel","disabled","communicationchanneldesc","group","domainvalue","domaindesc","replace","RegExp","resetCollectionPaginatedAux","messagetype","fregister","messagetemplate","parentSetValue","ModalCampaignSchedule","control","handleSubmit","clearErrors","useFieldArray","schedule","scheduleAppend","append","scheduleRemove","remove","onClickAddSchedule","a","date","time","quantity","onClickDeleteSchedule","index","onSubmit","map","i","batchindex","open","scheduled","button1Type","buttonText1","cancel","handleClickButton1","button2Type","buttonText2","save","handleClickButton2","TableContainer","Table","TableHead","TableRow","TableCell","hour","TableBody","item","parseInt","inputProps","min","step","CampaignPerson","auxResult","main","mainAux","valuefile","setvaluefile","columnList","setColumnList","headers","setHeaders","jsonData","setJsonData","jsonDataTemp","setJsonDataTemp","selectedColumns","setSelectedColumns","selectedColumnsBackup","setSelectedColumnsBackup","selectionKey","setSelectionKey","selectedRows","setSelectedRows","allRowsSelected","setAllRowsSelected","paginatedAuxResult","mainPaginatedAux","paginatedWait","setPaginatedWait","pageSize","pageIndex","filters","sorts","daterange","fetchDataAux","setfetchDataAux","pageCount","setPageCount","totalrow","setTotalRow","changeStep","Header","accessor","field","getCollectionAux","getCampaignMemberSel","documenttype","documentnumber","personType","phone","alternativePhone","email","alternativeEmail","lastContactDate","Cell","props","cell","original","convertLocalDate","lastcontact","toLocaleString","agent","opportunity","birthday","gender","educationLevel","comments","lastUpdate","changedate","expected_revenue","endDate","date_deadline","tags","campaign","product_plural","phase","person","loading","selectedRowsTemp","reduce","ad","campaignmemberid","setHeaderTableData","j","Math","ceil","count","handleUpload","files","file","uploadExcel","uploadData","file_without_data","too_many_records","actualHeaders","newHeaders","every","h","file_incompatbile_with_previous_one","findIndex","JSON","stringify","localColumnList","localSelectedColumns","Array","fill","c","ac","push","from","Map","values","filterrange","FiltersElement","ButtonsElement","selected_plural","requestBody","startDate","setUTCDate","getUTCFullYear","getUTCMonth","take","skip","getCollectionPaginatedAux","campaignPersonSel","campaignLeadPersonSel","useSelection","initialSelectedRows","titlemodule","download","filterGeneral","accept","target","htmlFor","Button","component","variant","backgroundColor","Trans","i18nKey","uploadFile","cleanData","clean","handleCancelModal","handleSaveModal","parse","jsondatadata","jd","forEach","cs","match","ModalCampaignColumns","checkboxEnable","setCheckboxEnable","select_column_plural","checked","sc","sci","mb1","marginBottom","VariableHandler","inputkey","inputvalue","range","top","left","changer","CampaignMessage","tablevariable","messageVariables","setMessageVariables","tablevariableShow","setTableVariableShow","variableHandler","setVariableHandler","toggleVariableSelect","changefunc","elem","selectionStart","lines","substr","split","startIndex","slice","lastIndexOf","partialText","indexOf","rightText","selectionEnd","endIndex","param","varaiblesCleaned","substring","text","readOnly","justifyContent","flexFlow","gap","overflow","borderStyle","borderWidth","borderColor","borderRadius","Box","lineHeight","mb","console","log","dangerouslySetInnerHTML","__html","width","parameters","variable","datatemp","rows","onInput","datalabel","datakey","onClickSelection","selectionVariableSelect","onClickAway","btn","payload","messagetemplate_attachment","f","src","useFilePreviewStyles","btnContainer","flexDirection","infoContainer","height","root","alignItems","margin","maxHeight","maxWidth","FilePreview","onClose","isUrl","useCallback","getFileName","m","getFileExt","pop","toUpperCase","Paper","elevation","FileCopy","textOverflow","whiteSpace","CircularProgress","Close","href","rel","GetApp","validateField","origin","CampaignDetail","setViewSelected","mainResult","pageSelected","auxData","setAuxData","waitView","setWaitView","executeRes","execute","campaignMembers","setCampaignMembers","setTableVariable","usedTablevariable","setUsedTableVariable","arrayBread","detail","getMultiCollection","getValuesFromDomain","getCommChannelLst","getUserGroupsSel","getMessageTemplateLst","getCampaignSel","showBackdrop","checkValidation","missing_header","newmessages","splitMessage","v","join","mv","tv","localtablevariable","Set","ltv","test","entries","actv","tvi","formatMessage","localsubject","localheader","localmessage","elemVariables","errorIndex","vars","extractVariables","invalid_parameter","variablereplace","missing_people","required_fields_missing","manageConfirmation","visible","question","confirmation_save","callback","insCampaign","campaignMemberList","ap","p","personid","personcommunicationchannel","personcommunicationchannelowner","displayname","field1","field2","field3","field4","field5","field6","field7","field8","field9","field10","field11","field12","field13","field14","field15","alternativeemail","trim","alternativephone","batchjsontemp","bda","bdc","cm","buildingMembers","errormessage","code","module","toLocaleLowerCase","campaignid","p_campaignid","insCampaignMember","successful_edit","successful_register","persistent","breadcrumbs","handleClick","newcampaign","Tabs","indicatorColor","borderBottom","textColor","_","generalinformation","person_plural","Blacklist","mainPaginated","resExportData","exportData","executeResult","settotalrow","waitExport","setWaitExport","waitImport","setWaitImport","waitSave","setWaitSave","selectedRow","setSelectedRow","useMemo","NoFilter","isComponent","minWidth","viewFunction","handleDetail","deleteFunction","handleDelete","editFunction","creationdate","createdate","toLocaleDateString","undefined","year","month","day","getCollectionPaginated","getBlacklistPaginated","validpk","insarrayBlacklist","confirmation_delete","insBlacklist","resetCollectionPaginated","blacklist","url","window","successful_transaction","back","startIcon","importCSV","exportPersonalized","getBlacklistExport","autotrigger","ModalBlacklist","IconOptions","onHandlerDelete","anchorEl","setAnchorEl","stopPropagation","currentTarget","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","MenuItem","ListItemIcon","delete","Campaign","viewSelected","rowSelected","setRowSelected","waitStart","setWaitStart","waitStatus","setWaitStatus","waitStop","setWaitStop","dateToLocalDate","prefixTranslation","toLowerCase","titleAccess","stop","handleStop","todayDate","handleStatus","handleStart","getCollection","getCampaignLst","getCampaignStatus","getCampaignStart","resetAllMain","successful_delete","enviado","total","sent","capitalize","campaign_in_execution","delCampaign","confirmation_stop","stopCampaign","mainData","onClickRow","campaign_plural","report","handleRegister","CampaignReport","_classCallCheck","instance","Constructor","TypeError","footerTable","breakpoints","up","textAlign","trdynamic","boxShadow","visibility","containerfloat","position","zIndex","palette","primary","containerButtons","flexWrap","containerButtonsNoFilters","iconOrder","containerHeader","containerHeaderColumn","iconHelpText","cursor","DefaultColumnFilter","setFilters","listSelectFilter","operator","setoperator","handleClickItemMenu","op","DateOptionsMenuComponent","isNaN","valueOf","toISOString","TimeOptionsMenuComponent","toLocaleTimeString","fullWidth","onKeyDown","keyCode","event","PaperProps","OptionsMenuComponent","TableZyx","memo","controlledPageCount","HeadComponent","autoRefresh","selectionFilter","cleanSelection","setCleanSelection","filterRangeDate","onFilterChange","initialEndDate","initialStartDate","initialFilters","initialPageIndex","pagination","setPagination","openDateRangeModal","setOpenDateRangeModal","triggerSearch","setTriggerSearch","tFilters","setTFilters","useTable","initialState","selectedRowIds","manualPagination","useControlledState","autoResetSelectedRows","getRowId","relativeIndex","parent","stateReducer","newState","action","useFilters","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","getToggleAllPageRowsSelectedProps","filteredRows","isSelected","toggleRowSelected","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","setPageSize","toggleAllRowsSelected","setPageIndex","prev","getFirstDayMonth","getDateToday","getLastDayMonth","dateRange","setdateRange","triggertmp","fromButton","setHours","getTime","clsx","setOpen","onSelect","border","getDateCleaned","search","import","headerGroup","getHeaderGroupProps","ii","activeOnHover","render","getHeaderProps","NoSort","newsorts","handleClickSort","wordWrap","helpText","arrow","placement","LoadingSkeleton","getRowProps","hover","cells","getCellProps","tablePageOf","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","itemCount","totalItems","disableUnderline","Number","marginRight","recordPerPage","items","useQueryParams","query","options","ignore","get","buildQueryFilters","init","params","URLSearchParams","set","String","colFilters","select","itemDate","minHeight","dataReportType","proactive","initialRange","setDate","getFullYear","getMonth","externalUse","reportType","setReportType","openDateRangeCreateDateModal","setOpenDateRangeCreateDateModal","dateRangeCreateDate","setDateRangeCreateDate","sortType","minute","second","templatename","rundate","success_percent","failed","failed_percent","attended","locked","blacklisted","getCampaignReportPaginated","reporttype","no_record_selected","getCampaignReportExport","alias","ticket","userid","contact","runtime","firstreplydate","firstreplytime","finishconversationdate","finishconversationtime","realduration","classification","conversationid","getCampaignReportProactiveExport","template","ticketdate","tickettime","client","firstagent","lastagent","no_type_selected","ModalReport","close"],"mappings":"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","file":"static/js/32.2e28ad13.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 6h12v12H6z\"\n}), 'Stop');\n\nexports.default = _default;","import { Dictionary } from \"@types\";\r\n\r\nexport class SelectedColumns {\r\n\tprimarykey: string;\r\n\tcolumn: boolean[];\r\n\tcolumns: string[];\r\n\tfirstname: string;\r\n\tlastname: string;\r\n\tconstructor() {\r\n\t\tthis.primarykey = '';\r\n\t\tthis.column = [];\r\n\t\tthis.columns = [];\r\n\t\tthis.firstname = '';\r\n\t\tthis.lastname = '';\r\n\t}\r\n}\r\n\r\nexport interface ICampaign {\r\n\tisnew?: boolean,\r\n\tid?: number,\r\n\tcommunicationchannelid?: number,\r\n\tcommunicationchanneltype?: string,\r\n\tusergroup?: string,\r\n\ttype?: string,\r\n\tstatus?: string,\r\n\ttitle?: string,\r\n\tdescription?: string,\r\n\tstartdate?: string,\r\n\tenddate?: string,\r\n\trepeatable?: boolean,\r\n\tfrecuency?: number,\r\n\tsource?: string,\r\n\tmessagetemplateid?: number,\r\n\tmessagetemplatename?: string,\r\n\tmessagetemplatenamespace?: string,\r\n\tmessagetemplatetype?: string,\r\n\tmessagetemplateheader?: Dictionary,\r\n\tmessagetemplatebuttons?: Dictionary[],\r\n\tmessagetemplatefooter?: string,\r\n\tmessagetemplateattachment?: string,\r\n\tmessagetemplatelanguage?: string,\r\n\tmessagetemplatepriority?: string,\r\n\texecutiontype?: string,\r\n\tbatchjson?: Dictionary[],\r\n\tfields?: Dictionary,\r\n\toperation?: string,\r\n\r\n\theaders?: any[],\r\n\tjsonData?: any[],\r\n\tselectedColumns?: SelectedColumns,\r\n\tselectedRows?: any,\r\n\tperson?: any[],\r\n\r\n\tsubject?: string,\r\n\tmessage?: string,\r\n\tvariablereplace?: string[],\r\n\r\n\tsourcechanged?: boolean,\r\n}\r\n\r\nexport interface ICampaignLst {\r\n\tdescription: string;\r\n\tenddate: string;\r\n\tid: number;\r\n\tstartdate: string;\r\n\tstatus: string;\r\n\ttitle: string;\r\n\ttype: string;\r\n}","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 12h-5v5h5v-5zM16 1v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2h-1V1h-2zm3 18H5V8h14v11z\"\n}), 'Event');","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { FieldView, FieldEdit, FieldSelect, DialogZyx, FieldEditArray } from 'components';\r\nimport { dictToArrayKV, filterIf, filterPipe } from 'common/helpers';\r\nimport { Dictionary, ICampaign, MultiData, SelectedColumns } from \"@types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useFieldArray, useForm } from 'react-hook-form';\r\nimport { Event as EventIcon } from '@material-ui/icons';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { resetCollectionPaginatedAux, resetMainAux } from 'store/main/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FrameProps } from './CampaignDetail';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { useSelector } from 'hooks';\r\n\r\ninterface DetailProps {\r\n    row: Dictionary | null,\r\n    edit: boolean,\r\n    auxdata: Dictionary;\r\n    detaildata: ICampaign;\r\n    setDetaildata: (data: ICampaign) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n    frameProps: FrameProps;\r\n    setFrameProps: (value: FrameProps) => void;\r\n    setPageSelected: (page: number) => void;\r\n    setSave: (value: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    flexgrow1: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst dataExecutionType: Dictionary = {\r\n    MANUAL: 'manual',\r\n    SCHEDULED: 'scheduled',\r\n};\r\n\r\nconst dataSource: Dictionary = {\r\n    INTERNAL: 'datasource_internal',\r\n    EXTERNAL: 'datasource_external',\r\n    PERSON: 'datasource_person',\r\n    LEAD: 'datasource_lead'\r\n};\r\n\r\nconst dataCampaignType = [\r\n    { key: 'TEXTO', value: 'text' },\r\n    { key: 'HSM', value: 'hsm', rif: 'startsWith', rifvalue: 'WHA' },\r\n    { key: 'SMS', value: 'sms', rif: 'startsWith', rifvalue: 'SMS' },\r\n    { key: 'CALL', value: 'call', rif: 'starsWith', rifvalue: 'VOX' },\r\n    { key: 'MAIL', value: 'mail', rif: 'starsWith', rifvalue: 'MAI' },\r\n];\r\n\r\ntype FormFields = {\r\n    isnew: boolean,\r\n    id: number,\r\n    communicationchannelid: number,\r\n    communicationchanneltype: string,\r\n    usergroup: string,\r\n    type: string,\r\n    status: string,\r\n    title: string,\r\n    description: string,\r\n    subject: string,\r\n    message: string,\r\n    startdate: string,\r\n    enddate: string,\r\n    repeatable: boolean,\r\n    frecuency: number,\r\n    source: string,\r\n    messagetemplateid: number,\r\n    messagetemplatename: string,\r\n    messagetemplatenamespace: string,\r\n    messagetemplatetype: string,\r\n    messagetemplateheader: Dictionary,\r\n    messagetemplatebuttons: Dictionary[],\r\n    messagetemplatefooter: string,\r\n    messagetemplateattachment: string,\r\n    messagetemplatelanguage: string,\r\n    messagetemplatepriority: string,\r\n    executiontype: string,\r\n    batchjson: Dictionary[],\r\n    fields: SelectedColumns,\r\n    operation: string,\r\n    sourcechanged: boolean\r\n}\r\n\r\nexport const CampaignGeneral: React.FC<DetailProps> = ({ row, edit, auxdata, detaildata, setDetaildata, multiData, fetchData, frameProps, setFrameProps, setPageSelected, setSave }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const dataStatus = [...multiData[0] && multiData[0].success ? multiData[0].data : []];\r\n    const dataChannel = [...multiData[1] && multiData[1].success ? (multiData[1].data || []).filter(x => ((x.type || '').startsWith('WHA') || (x.type || '').startsWith('SMS') || (x.type || '').startsWith('MAI') || (x.type || '').startsWith('VOX'))) : []];\r\n    const dataGroup = [...multiData[2] && multiData[2].success ? multiData[2].data : []];\r\n    const dataMessageTemplate = [...multiData[3] && multiData[3].success ? multiData[3].data : []];\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const { register, setValue, getValues, trigger, formState: { errors } } = useForm<FormFields>({\r\n        defaultValues: {\r\n            isnew: row ? false : true,\r\n            id: row ? row.id : 0,\r\n            communicationchannelid: detaildata?.communicationchannelid || (auxdata?.length > 0 ? auxdata[0].communicationchannelid : 0),\r\n            communicationchanneltype: '',\r\n            usergroup: detaildata?.usergroup || (auxdata?.length > 0 ? auxdata[0].usergroup : ''),\r\n            type: detaildata?.type || (auxdata?.length > 0 ? auxdata[0].type : 'TEXTO'),\r\n            status: detaildata?.status || (auxdata?.length > 0 ? auxdata[0].status : 'ACTIVO'),\r\n            title: '',\r\n            description: '',\r\n            subject: '',\r\n            message: '',\r\n            startdate: '',\r\n            enddate: '',\r\n            repeatable: false,\r\n            frecuency: 0,\r\n            source: detaildata?.source || (auxdata?.length > 0 ? auxdata[0].source : 'EXTERNAL'),\r\n            messagetemplateid: detaildata?.messagetemplateid || (auxdata?.length > 0 ? auxdata[0].messagetemplateid : 0),\r\n            messagetemplatename: '',\r\n            messagetemplatenamespace: '',\r\n            messagetemplatetype: 'STANDARD',\r\n            messagetemplateheader: {},\r\n            messagetemplatebuttons: [],\r\n            messagetemplatefooter: '',\r\n            messagetemplateattachment: '',\r\n            messagetemplatelanguage: '',\r\n            messagetemplatepriority: '',\r\n            executiontype: detaildata?.executiontype || (auxdata?.length > 0 ? auxdata[0].executiontype : 'MANUAL'),\r\n            batchjson: [],\r\n            fields: new SelectedColumns(),\r\n            operation: row ? \"UPDATE\" : \"INSERT\",\r\n            sourcechanged: false,\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        register('title', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('description', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('startdate', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('enddate', {\r\n            validate: {\r\n                value: (value: any) => (value && value.length) || t(langKeys.field_required),\r\n                afterstart: (value: any) => validateDate(value) || t(langKeys.field_afterstart)\r\n            }\r\n        });\r\n        register('executiontype', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('communicationchannelid', { validate: (value: any) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('status', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('source', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('type', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usergroup', { validate: (value: any) => ((user?.properties?.environment===\"CLARO\" && ['Gestor de Campañas'].includes(user?.roledesc || \"\"))? (value && value.length):true) || t(langKeys.field_required) });\r\n    }, [edit, register]);\r\n\r\n    useEffect(() => {\r\n        if (row !== null && Object.keys(detaildata).length === 0) {\r\n            if (auxdata.length > 0) {\r\n                let messageTemplateData = dataMessageTemplate.find(d => d.id === auxdata[0].messagetemplateid) || {};\r\n                setStepData({\r\n                    ...auxdata[0],\r\n                    messagetemplatename: messageTemplateData.name || auxdata[0].messagetemplatename || '',\r\n                    messagetemplatenamespace: messageTemplateData.namespace || auxdata[0].messagetemplatenamespace || '',\r\n                    messagetemplatetype: messageTemplateData.templatetype || 'STANDARD',\r\n                });\r\n                trigger();\r\n                dispatch(resetMainAux());\r\n            }\r\n        }\r\n        else if (Object.keys(detaildata).length !== 0) {\r\n            setStepData(detaildata);\r\n            trigger();\r\n        }\r\n    }, [auxdata, detaildata]);\r\n\r\n    const setStepData = (data: Dictionary) => {\r\n        setValue('id', data.id);\r\n        setValue('communicationchannelid', data.communicationchannelid);\r\n        setValue('communicationchanneltype', dataChannel.filter(d => d.communicationchannelid === data?.communicationchannelid)[0]?.type);\r\n        setValue('usergroup', data.usergroup);\r\n        setValue('type', data.type);\r\n        setValue('status', data.status);\r\n        setValue('title', data.title);\r\n        setValue('description', data.description);\r\n        setValue('subject', data.subject);\r\n        setValue('message', data.message);\r\n        setValue('startdate', data.startdate);\r\n        setValue('enddate', data.enddate);\r\n        setValue('repeatable', data.repeatable);\r\n        setValue('frecuency', data.frecuency);\r\n        setValue('source', data.source || 'INTERNAL');\r\n        setValue('messagetemplateid', data.messagetemplateid);\r\n        setValue('messagetemplatename', data.messagetemplatename);\r\n        setValue('messagetemplatenamespace', data.messagetemplatenamespace);\r\n        setValue('messagetemplatetype', data.messagetemplatetype);\r\n        setValue('messagetemplateheader', data.messagetemplateheader || {});\r\n        setValue('messagetemplatebuttons', data.messagetemplatebuttons || []);\r\n        setValue('messagetemplatefooter', data.messagetemplatefooter || '');\r\n        setValue('messagetemplateattachment', data.messagetemplateattachment || '');\r\n        setValue('messagetemplatelanguage', data.messagetemplatelanguage || '');\r\n        setValue('messagetemplatepriority', data.messagetemplatepriority || '');\r\n        setValue('executiontype', data.executiontype);\r\n        setValue('batchjson', data.batchjson || []);\r\n        setValue('fields', { ...new SelectedColumns(), ...data.fields });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (frameProps.checkPage) {\r\n            trigger().then((valid: any) => {\r\n                let data = getValues();\r\n                data.messagetemplateheader = data.messagetemplateheader || {};\r\n                data.messagetemplatebuttons = data.messagetemplatebuttons || [];\r\n                data.batchjson = data.batchjson || [];\r\n                data.fields = { ...new SelectedColumns(), ...data.fields };\r\n                setDetaildata({ ...detaildata, ...data });\r\n                setFrameProps({ ...frameProps, executeSave: false, checkPage: false, valid: { ...frameProps.valid, 0: valid } });\r\n                if (frameProps.page === 2 && !frameProps.valid[1]) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_person_selected)}));\r\n                }\r\n                else if (valid) {\r\n                    setPageSelected(frameProps.page);\r\n                }\r\n                if (valid && frameProps.executeSave) {\r\n                    setSave('VALIDATION');\r\n                }\r\n            });\r\n        }\r\n    }, [frameProps.checkPage])\r\n\r\n    const validateDate = (value: string): any => {\r\n        return new Date(value) >= new Date(getValues('startdate'))\r\n    }\r\n\r\n    const onChangeExecutionType = async (data: Dictionary) => {\r\n        setValue('executiontype', data?.key || '');\r\n        await trigger('executiontype');\r\n    }\r\n\r\n    const onChangeChannel = async (data: Dictionary) => {\r\n        setValue('communicationchannelid', data?.communicationchannelid || 0);\r\n        const channeltype = dataChannel.filter(d => d.communicationchannelid === data?.communicationchannelid)[0]?.type;\r\n        setValue('communicationchanneltype', channeltype);\r\n        if (channeltype?.startsWith('WHA')) {\r\n            onChangeType({ key: 'HSM' });\r\n        }\r\n        else if (channeltype?.startsWith('SMS')) {\r\n            onChangeType({ key: 'SMS' });\r\n        }\r\n        else if (channeltype?.startsWith('VOX')) {\r\n            onChangeType({ key: 'CALL' });\r\n        }\r\n        else if (channeltype?.startsWith('MAI')) {\r\n            onChangeType({ key: 'MAIL' });\r\n        }\r\n        else {\r\n            onChangeType({ key: 'TEXTO' });\r\n        }\r\n        await trigger(['communicationchannelid', 'communicationchanneltype', 'type']);\r\n    }\r\n\r\n    const onChangeGroup = (data: Dictionary) => {\r\n        setValue('usergroup', data?.domainvalue || '');\r\n    }\r\n\r\n    const onChangeStatus = (data: Dictionary) => {\r\n        setValue('status', data?.domainvalue || '');\r\n    }\r\n\r\n    const filterDataSource = () => {\r\n        return row !== null ? dictToArrayKV(dataSource) : filterPipe(dictToArrayKV(dataSource), 'key', 'INTERNAL', '!');\r\n    }\r\n\r\n    const onChangeSource = (data: Dictionary) => {\r\n        if (['PERSON','LEAD'].includes(getValues('source'))) {\r\n            setValue('message', getValues('message').replace(new RegExp(/{{field[0-9]+}}/, 'g'), '{{???}}'))\r\n        }\r\n        setValue('source', data?.key || '');\r\n        setValue('sourcechanged', true);\r\n        setFrameProps({ ...frameProps, valid: { ...frameProps.valid, 1: false } });\r\n        dispatch(resetCollectionPaginatedAux())\r\n    }\r\n\r\n    const filterDataCampaignType = () => {\r\n        if (getValues('communicationchanneltype')?.startsWith('WHA')) {\r\n            return dataCampaignType.filter(t => t.key === 'HSM');\r\n        }\r\n        else if (getValues('communicationchanneltype')?.startsWith('SMS')) {\r\n            return dataCampaignType.filter(t => t.key === 'SMS');\r\n        }\r\n        else if (getValues('communicationchanneltype')?.startsWith('VOX')) {\r\n            return dataCampaignType.filter(t => t.key === 'CALL');\r\n        }\r\n        else if (getValues('communicationchanneltype')?.startsWith('MAI')) {\r\n            return dataCampaignType.filter(t => t.key === 'MAIL');\r\n        }\r\n        else {\r\n            return filterIf(dataCampaignType);\r\n        }\r\n    }\r\n\r\n    const onChangeType = async (data: Dictionary) => {\r\n        setValue('type', data?.key || '');\r\n        setValue('message', '');\r\n        setValue('messagetemplateid', 0);\r\n        setValue('messagetemplatename', '');\r\n        setValue('messagetemplatenamespace', '');\r\n        setValue('messagetemplatetype', 'STANDARD');\r\n        setValue('messagetemplateheader', {});\r\n        setValue('messagetemplatebuttons', []);\r\n        setValue('messagetemplatefooter', '');\r\n        setValue('messagetemplateattachment', '');\r\n        setValue('messagetemplatelanguage', '');\r\n        setValue('messagetemplatepriority', '');\r\n        await trigger('type');\r\n    }\r\n\r\n    const filterMessageTemplate = () => {\r\n        if (getValues('type') === \"MAIL\") {\r\n            var mailTemplate = filterPipe(dataMessageTemplate, 'type', getValues('type'));\r\n            var htmlTemplate = filterPipe(dataMessageTemplate, 'type', 'HTML');\r\n\r\n            return [...mailTemplate, ...htmlTemplate];\r\n        }\r\n        else {\r\n            return filterPipe(dataMessageTemplate, 'type', getValues('type'));\r\n        }\r\n    }\r\n\r\n    const onChangeMessageTemplateId = async (data: Dictionary) => {\r\n        setValue('messagetemplateid', data?.id || 0);\r\n        let messageTemplate = dataMessageTemplate.filter(d => d.id === data?.id)[0];\r\n        setValue('message', messageTemplate?.body);\r\n        setValue('messagetemplatename', messageTemplate?.name);\r\n        setValue('messagetemplatenamespace', messageTemplate?.namespace);\r\n        setValue('messagetemplatetype', messageTemplate?.templatetype);\r\n        setValue('messagetemplatelanguage', messageTemplate?.language);\r\n        setValue('messagetemplatepriority', messageTemplate?.priority);\r\n        if (data?.type === 'HSM') {\r\n            if (messageTemplate.headerenabled)\r\n                setValue('messagetemplateheader', { type: messageTemplate?.headertype, value: messageTemplate?.header });\r\n            else\r\n                setValue('messagetemplateheader', { type: '', value: '' });\r\n            if (messageTemplate.buttonsenabled)\r\n                setValue('messagetemplatebuttons', messageTemplate?.buttons || []);\r\n            else\r\n                setValue('messagetemplatebuttons', []);\r\n            if (messageTemplate.footerenabled)\r\n                setValue('messagetemplatefooter', messageTemplate?.footer || '');\r\n            else\r\n                setValue('messagetemplatefooter', '');\r\n        }\r\n        if (data?.type === 'MAIL' || data?.type === 'HTML') {\r\n            if (messageTemplate.header) {\r\n                setValue('messagetemplateheader', { type: \"TEXT\", value: messageTemplate?.header });\r\n                setValue('subject', messageTemplate?.header);\r\n            }\r\n            else {\r\n                setValue('messagetemplateheader', { type: '', value: '' });\r\n                setValue('subject', '');\r\n            }\r\n            if (messageTemplate.attachment)\r\n                setValue('messagetemplateattachment', messageTemplate?.attachment || '');\r\n            else\r\n                setValue('messagetemplateattachment', '');\r\n        }\r\n        await trigger(['messagetemplateid', 'messagetemplatename', 'messagetemplatenamespace', 'messagetemplatetype']);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.containerDetail}>\r\n                <div className=\"row-zyx\">\r\n                    {edit ?\r\n                        <FieldEdit\r\n                            label={t(langKeys.title)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues('title')}\r\n                            onChange={(value) => setValue('title', value)}\r\n                            error={errors?.title?.message}\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.title)}\r\n                            value={row?.title || \"\"}\r\n                            className=\"col-6\"\r\n                        />\r\n                    }\r\n                    {edit ?\r\n                        <FieldEdit\r\n                            label={t(langKeys.description)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues('description')}\r\n                            onChange={(value) => setValue('description', value)}\r\n                            error={errors?.description?.message}\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.description)}\r\n                            value={row?.description || \"\"}\r\n                            className=\"col-6\"\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"row-zyx\">\r\n                    {edit ?\r\n                        <FieldEdit\r\n                            type=\"date\"\r\n                            label={t(langKeys.startdate)}\r\n                            className=\"col-4\"\r\n                            valueDefault={getValues('startdate')}\r\n                            onChange={(value) => setValue('startdate', value)}\r\n                            error={errors?.startdate?.message}\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.startdate)}\r\n                            value={row?.startdate || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                    {edit ?\r\n                        <FieldEdit\r\n                            type=\"date\"\r\n                            label={t(langKeys.enddate)}\r\n                            className=\"col-4\"\r\n                            valueDefault={getValues('enddate')}\r\n                            onChange={(value) => setValue('enddate', value)}\r\n                            error={errors?.enddate?.message}\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.enddate)}\r\n                            value={row?.enddate || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                    {edit ?\r\n                        <div className=\"col-4\" style={{ display: 'flex' }}>\r\n                            <FieldSelect\r\n                                uset={true}\r\n                                label={t(langKeys.executiontype)}\r\n                                className={classes.flexgrow1}\r\n                                valueDefault={getValues('executiontype')}\r\n                                onChange={onChangeExecutionType}\r\n                                error={errors?.executiontype?.message}\r\n                                data={dictToArrayKV(dataExecutionType)}\r\n                                optionDesc=\"value\"\r\n                                optionValue=\"key\"\r\n                            />\r\n                            {getValues('executiontype') === 'SCHEDULED' ?\r\n                                <IconButton\r\n                                    style={{ flexGrow: 0 }}\r\n                                    aria-label=\"more\"\r\n                                    aria-controls=\"long-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    size=\"small\"\r\n                                    onClick={(e) => setOpenModal(true)}\r\n                                >\r\n                                    <EventIcon style={{ color: '#777777' }} />\r\n                                </IconButton>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.executiontype)}\r\n                            value={t(dataExecutionType[row?.executiontype]) || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"row-zyx\">\r\n                    {edit ?\r\n                        <FieldSelect\r\n                            label={t(langKeys.channel)}\r\n                            className=\"col-8\"\r\n                            valueDefault={getValues('communicationchannelid') as any}\r\n                            disabled={!getValues('isnew')}\r\n                            onChange={onChangeChannel}\r\n                            error={errors?.communicationchannelid?.message}\r\n                            data={dataChannel}\r\n                            optionDesc=\"communicationchanneldesc\"\r\n                            optionValue=\"communicationchannelid\"\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.type)}\r\n                            value={dataChannel.filter(d => d.communicationchannelid === row?.communicationchannelid)[0].communicationchanneldesc || \"\"}\r\n                            className=\"col-8\"\r\n                        />\r\n                    }\r\n                    {edit ?\r\n                        <FieldSelect\r\n                            label={t(langKeys.group)}\r\n                            className=\"col-4\"\r\n                            valueDefault={getValues('usergroup')}\r\n                            onChange={onChangeGroup}\r\n                            error={errors?.usergroup?.message}\r\n                            data={dataGroup}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.group)}\r\n                            value={dataGroup.filter(d => d.domainvalue === row?.usergroup)[0].domaindesc || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                </div>\r\n                <div className=\"row-zyx\">\r\n                    {edit ?\r\n                        <FieldSelect\r\n                            label={t(langKeys.status)}\r\n                            className=\"col-4\"\r\n                            valueDefault={getValues('status')}\r\n                            onChange={onChangeStatus}\r\n                            error={errors?.status?.message}\r\n                            data={dataStatus}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.status)}\r\n                            value={dataGroup.filter(d => d.domainvalue === row?.status)[0].domaindesc || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                    {edit ?\r\n                        <FieldSelect\r\n                            uset={true}\r\n                            label={t(langKeys.source)}\r\n                            className=\"col-4\"\r\n                            valueDefault={getValues('source')}\r\n                            onChange={onChangeSource}\r\n                            error={errors?.source?.message}\r\n                            data={filterDataSource()}\r\n                            optionDesc=\"value\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.source)}\r\n                            value={t(dataSource[row?.source]) || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                    {edit ?\r\n                        <FieldSelect\r\n                            uset={true}\r\n                            label={t(langKeys.messagetype)}\r\n                            className=\"col-4\"\r\n                            valueDefault={getValues('type')}\r\n                            disabled={!getValues('isnew')}\r\n                            onChange={onChangeType}\r\n                            error={errors?.type?.message}\r\n                            data={filterDataCampaignType()}\r\n                            optionDesc=\"value\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        :\r\n                        <FieldView\r\n                            label={t(langKeys.messagetype)}\r\n                            value={t(filterDataCampaignType().filter(d => d.key === row?.type)[0]?.value) || \"\"}\r\n                            className=\"col-4\"\r\n                        />\r\n                    }\r\n                </div>\r\n                {['HSM'].includes(getValues('type')) ?\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                fregister={{\r\n                                    ...register(`messagetemplateid`, {\r\n                                        validate: (value: any) => (value) || t(langKeys.field_required)\r\n                                    })\r\n                                }}\r\n                                label={t(langKeys.messagetemplate)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('messagetemplateid') as any}\r\n                                disabled={!getValues('isnew')}\r\n                                onChange={onChangeMessageTemplateId}\r\n                                error={errors?.messagetemplateid?.message}\r\n                                data={filterMessageTemplate()}\r\n                                optionDesc=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            :\r\n                            <FieldView\r\n                                label={t(langKeys.messagetemplate)}\r\n                                value={dataMessageTemplate.filter(d => d.id === row?.messagetemplateid)[0].name || \"\"}\r\n                                className=\"col-6\"\r\n                            />\r\n                        }\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                fregister={{\r\n                                    ...register(`messagetemplatenamespace`, {\r\n                                        validate: (value: any) => (getValues('type') !== 'HSM' ? true : value && value.length) || t(langKeys.field_required)\r\n                                    })\r\n                                }}\r\n                                label={t(langKeys.namespace)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('messagetemplatenamespace')}\r\n                                onChange={(value) => setValue('messagetemplatenamespace', value)}\r\n                                disabled={!getValues('isnew') || getValues('messagetemplateid') !== 0}\r\n                                error={errors?.messagetemplatenamespace?.message}\r\n                            />\r\n                            :\r\n                            <FieldView\r\n                                label={t(langKeys.namespace)}\r\n                                value={row?.messagetemplatenamespace || \"\"}\r\n                                className=\"col-4\"\r\n                            />\r\n                        }\r\n                    </div>\r\n                    : null}\r\n                {['SMS', 'MAIL'].includes(getValues('type')) ?\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                fregister={{\r\n                                    ...register(`messagetemplateid`, {\r\n                                        validate: (value: any) => (value) || t(langKeys.field_required)\r\n                                    })\r\n                                }}\r\n                                label={t(langKeys.messagetemplate)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('messagetemplateid') as any}\r\n                                disabled={!getValues('isnew')}\r\n                                onChange={onChangeMessageTemplateId}\r\n                                error={errors?.messagetemplateid?.message}\r\n                                data={filterMessageTemplate()}\r\n                                optionDesc=\"name\"\r\n                                optionValue=\"id\"\r\n                            />\r\n                            :\r\n                            <FieldView\r\n                                label={t(langKeys.messagetemplate)}\r\n                                value={dataMessageTemplate.filter(d => d.id === row?.messagetemplateid)[0].name || \"\"}\r\n                                className=\"col-6\"\r\n                            />\r\n                        }\r\n                    </div>\r\n                    : null}\r\n            </div>\r\n            <ModalCampaignSchedule\r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n                data={getValues('batchjson')}\r\n                parentSetValue={setValue}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface ModalProps {\r\n    openModal: boolean;\r\n    setOpenModal: (value: boolean) => any;\r\n    data: any[];\r\n    parentSetValue: (...param: any) => any;\r\n}\r\n\r\nconst ModalCampaignSchedule: React.FC<ModalProps> = ({ openModal, setOpenModal, data = [], parentSetValue }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const { control, register, handleSubmit, setValue, formState: { errors }, clearErrors } = useForm<any>({\r\n        defaultValues: {\r\n            batchjson: data\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        setValue('batchjson', data);\r\n    }, [data]);\r\n\r\n    const { fields: schedule, append: scheduleAppend, remove: scheduleRemove } = useFieldArray({\r\n        control,\r\n        name: \"batchjson\",\r\n    });\r\n\r\n    const onClickAddSchedule = async () => {\r\n        scheduleAppend({ date: '', time: '', quantity: 0 });\r\n    }\r\n\r\n    const onClickDeleteSchedule = async (index: number) => {\r\n        scheduleRemove(index);\r\n    }\r\n\r\n    const handleCancelModal = () => {\r\n        setOpenModal(false);\r\n        setValue('batchjson', data);\r\n        clearErrors();\r\n    }\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        parentSetValue('batchjson', data.batchjson.map((d: any, i: number) => ({ ...d, batchindex: i + 1 })));\r\n        setOpenModal(false);\r\n    });\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.scheduled)}\r\n            button1Type=\"button\"\r\n            buttonText1={t(langKeys.cancel)}\r\n            handleClickButton1={handleCancelModal}\r\n            button2Type=\"button\"\r\n            buttonText2={t(langKeys.save)}\r\n            handleClickButton2={onSubmit}\r\n        >\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <IconButton\r\n                                    size=\"small\"\r\n                                    onClick={() => onClickAddSchedule()}\r\n                                >\r\n                                    <AddIcon style={{ color: '#7721AD' }} />\r\n                                </IconButton>\r\n                            </TableCell>\r\n                            <TableCell>{t(langKeys.date)}</TableCell>\r\n                            <TableCell>{t(langKeys.hour)}</TableCell>\r\n                            <TableCell>{t(langKeys.quantity)}</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {schedule.map((item: any, i) =>\r\n                            <TableRow key={item.id}>\r\n                                <TableCell>\r\n                                    <IconButton\r\n                                        size=\"small\"\r\n                                        onClick={() => onClickDeleteSchedule(i)}\r\n                                    >\r\n                                        <DeleteIcon style={{ color: '#777777' }} />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FieldEditArray\r\n                                        fregister={{\r\n                                            ...register(`batchjson.${i}.date`, {\r\n                                                validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                            })\r\n                                        }}\r\n                                        type=\"date\"\r\n                                        valueDefault={item.date}\r\n                                        error={errors?.batchjson?.[i]?.date?.message}\r\n                                        onChange={(value) => setValue(`batchjson[${i}].date`, value)}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FieldEditArray\r\n                                        fregister={{\r\n                                            ...register(`batchjson.${i}.time`, {\r\n                                                validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                            })\r\n                                        }}\r\n                                        type=\"time\"\r\n                                        valueDefault={item.time}\r\n                                        error={errors?.batchjson?.[i]?.time?.message}\r\n                                        onChange={(value) => setValue(`batchjson[${i}].time`, value)}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FieldEditArray\r\n                                        fregister={{\r\n                                            ...register(`batchjson.${i}.quantity`, {\r\n                                                validate: (value: any) => (value && value > 0) || t(langKeys.field_required)\r\n                                            })\r\n                                        }}\r\n                                        type=\"number\"\r\n                                        valueDefault={item.quantity}\r\n                                        error={errors?.batchjson?.[i]?.quantity?.message}\r\n                                        onChange={(value) => setValue(`batchjson[${i}].quantity`, parseInt(value))}\r\n                                        inputProps={{ min: 0, step: 1 }}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </DialogZyx>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { DialogZyx } from 'components';\r\nimport { Dictionary, ICampaign, IFetchData, MultiData, SelectedColumns } from \"@types\";\r\nimport TablePaginated from 'components/fields/table-paginated';\r\nimport TableZyx from '../../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { getCampaignMemberSel, campaignPersonSel, uploadExcel, campaignLeadPersonSel, convertLocalDate } from 'common/helpers';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\r\nimport { useSelector } from 'hooks';\r\nimport { getCollectionAux, getCollectionPaginatedAux } from 'store/main/actions';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { FrameProps } from './CampaignDetail';\r\n\r\ninterface DetailProps {\r\n    row: Dictionary | null,\r\n    edit: boolean,\r\n    auxdata: Dictionary;\r\n    detaildata: ICampaign;\r\n    setDetaildata: (data: ICampaign) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n    frameProps: FrameProps;\r\n    setFrameProps: (value: FrameProps) => void;\r\n    setPageSelected: (page: number) => void;\r\n    setSave: (value: any) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    flexgrow1: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport const CampaignPerson: React.FC<DetailProps> = ({ row, edit, auxdata, detaildata, setDetaildata, multiData, fetchData, frameProps, setFrameProps, setPageSelected, setSave }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    \r\n    const auxResult = useSelector(state => state.main.mainAux);\r\n\r\n    const [valuefile, setvaluefile] = useState('');\r\n    const [openModal, setOpenModal] = useState<boolean | null>(null);\r\n    const [columnList, setColumnList] = useState<string[]>([]);\r\n    const [headers, setHeaders] = useState<any[]>(detaildata.source === 'EXTERNAL' && !detaildata.sourcechanged ? detaildata.headers || [] : []);\r\n    const [jsonData, setJsonData] = useState<any[]>(detaildata.source === 'EXTERNAL' && !detaildata.sourcechanged ? detaildata.jsonData || [] : []);\r\n    const [jsonDataTemp, setJsonDataTemp] = useState<any[]>([]);\r\n    const [selectedColumns, setSelectedColumns] = useState<SelectedColumns>(\r\n        detaildata.selectedColumns\r\n        ? detaildata.selectedColumns\r\n        : (detaildata.fields?.primarykey || '') !== ''\r\n            ? { ...detaildata.fields } as SelectedColumns\r\n            : new SelectedColumns());\r\n    const [selectedColumnsBackup, setSelectedColumnsBackup] = useState<SelectedColumns>(new SelectedColumns());\r\n    const [selectionKey, setSelectionKey] = useState<string| any>(\r\n        detaildata.source === 'EXTERNAL' ? selectedColumns.primarykey :\r\n        detaildata.source === 'PERSON' ? 'personid' :\r\n        detaildata.source === 'LEAD' ? 'leadid' :\r\n        'campaignmemberid')\r\n    const [selectedRows, setSelectedRows] = useState<any>(detaildata.sourcechanged ? {} : detaildata.selectedRows || {});\r\n    const [allRowsSelected, setAllRowsSelected] = useState<boolean>(false);\r\n\r\n    const fetchCampaignInternalData = (id: number) => dispatch(getCollectionAux(getCampaignMemberSel(id)));\r\n\r\n    const paginatedAuxResult = useSelector(state => state.main.mainPaginatedAux);\r\n    const [paginatedWait, setPaginatedWait] = useState(false);\r\n    const [fetchDataAux, setfetchDataAux] = useState<any>({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [totalrow, setTotalRow] = useState(0);\r\n    const fetchPaginatedData = ({ pageSize, pageIndex, filters, sorts, daterange }: IFetchData) => {\r\n        setPaginatedWait(true);\r\n        setfetchDataAux({ pageSize, pageIndex, filters, sorts, daterange })\r\n        const requestBody = {\r\n            startdate: daterange?.startDate || new Date(new Date().setUTCDate(1)),\r\n            enddate: daterange?.endDate || new Date(new Date().getUTCFullYear(), new Date().getUTCMonth() + 1, 0),\r\n            take: pageSize,\r\n            skip: pageIndex * pageSize,\r\n            sorts: sorts,\r\n            filters: {\r\n                ...filters,\r\n            }\r\n        };\r\n        switch (detaildata.source) {\r\n            case 'PERSON':\r\n                dispatch(getCollectionPaginatedAux(campaignPersonSel(requestBody)))\r\n                break;\r\n            case 'LEAD':\r\n                dispatch(getCollectionPaginatedAux(campaignLeadPersonSel(requestBody)))\r\n                break;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (frameProps.checkPage) {\r\n            const valid = changeStep(frameProps.page);\r\n            setFrameProps({...frameProps, executeSave: false, checkPage: false, valid: {...frameProps.valid, 1: valid}});\r\n            if (frameProps.page < 1 || valid) {\r\n                setPageSelected(frameProps.page);\r\n            }\r\n            if (valid && frameProps.executeSave) {\r\n                setSave('VALIDATION');\r\n            }\r\n        }\r\n    }, [frameProps.checkPage])\r\n    \r\n    useEffect(() => {\r\n        // Load Headers\r\n        switch (detaildata.source) {\r\n            case 'INTERNAL':\r\n                setHeaders([\r\n                    { Header: t(langKeys.name), accessor: 'displayname' },\r\n                    { Header: 'PCC', accessor: 'personcommunicationchannelowner' },\r\n                    { Header: t(langKeys.type), accessor: 'type' },\r\n                    { Header: t(langKeys.status), accessor: 'status' },\r\n                    { Header: `${t(langKeys.field)} 1`, accessor: 'field1' },\r\n                    { Header: `${t(langKeys.field)} 2`, accessor: 'field2' },\r\n                    { Header: `${t(langKeys.field)} 3`, accessor: 'field3' },\r\n                    { Header: `${t(langKeys.field)} 4`, accessor: 'field4' },\r\n                    { Header: `${t(langKeys.field)} 5`, accessor: 'field5' },\r\n                    { Header: `${t(langKeys.field)} 6`, accessor: 'field6' },\r\n                    { Header: `${t(langKeys.field)} 7`, accessor: 'field7' },\r\n                    { Header: `${t(langKeys.field)} 8`, accessor: 'field8' },\r\n                    { Header: `${t(langKeys.field)} 9`, accessor: 'field9' },\r\n                    { Header: `${t(langKeys.field)} 10`, accessor: 'field10' },\r\n                    { Header: `${t(langKeys.field)} 11`, accessor: 'field11' },\r\n                    { Header: `${t(langKeys.field)} 12`, accessor: 'field12' },\r\n                    { Header: `${t(langKeys.field)} 13`, accessor: 'field13' },\r\n                    { Header: `${t(langKeys.field)} 14`, accessor: 'field14' },\r\n                    { Header: `${t(langKeys.field)} 15`, accessor: 'field15' }\r\n                ]);    \r\n                fetchCampaignInternalData(row?.id);\r\n                break;\r\n            case 'EXTERNAL':\r\n                if (detaildata.operation === 'INSERT' && detaildata.sourcechanged) {\r\n                    setHeaders([]);\r\n                }\r\n                break;\r\n            case 'PERSON':\r\n                setHeaders([\r\n                    { Header: t(langKeys.firstname), accessor: 'firstname' },\r\n                    { Header: t(langKeys.lastname), accessor: 'lastname' },\r\n                    { Header: t(langKeys.documenttype), accessor: 'documenttype' },\r\n                    { Header: t(langKeys.documentnumber), accessor: 'documentnumber' },\r\n                    { Header: t(langKeys.personType), accessor: 'persontype' },\r\n                    { Header: t(langKeys.type), accessor: 'type' },\r\n                    { Header: t(langKeys.phone), accessor: 'phone' },\r\n                    { Header: t(langKeys.alternativePhone), accessor: 'alternativephone' },\r\n                    { Header: t(langKeys.email), accessor: 'email' },\r\n                    { Header: t(langKeys.alternativeEmail), accessor: 'alternativeemail' },\r\n                    { Header: t(langKeys.lastContactDate), accessor: 'lastcontact', type: 'date',\r\n                        Cell: (props: any) => {\r\n                            const row = props.cell.row.original;\r\n                            return convertLocalDate(row.lastcontact).toLocaleString()\r\n                        }\r\n                    },\r\n                    { Header: t(langKeys.agent), accessor: 'agent' },\r\n                    { Header: t(langKeys.opportunity), accessor: 'opportunity' },\r\n                    { Header: t(langKeys.birthday), accessor: 'birthday', type: 'date' },\r\n                    { Header: t(langKeys.gender), accessor: 'gender' },\r\n                    { Header: t(langKeys.educationLevel), accessor: 'educationlevel' },\r\n                    { Header: t(langKeys.comments), accessor: 'comments' },\r\n                ]);\r\n                break;\r\n            case 'LEAD':\r\n                setHeaders([\r\n                    { Header: t(langKeys.opportunity), accessor: 'opportunity' },\r\n                    { Header: t(langKeys.lastUpdate), accessor: 'changedate', type: 'date',\r\n                        Cell: (props: any) => {\r\n                            const row = props.cell.row.original;\r\n                            return convertLocalDate(row.changedate).toLocaleString()\r\n                        }\r\n                    },\r\n                    { Header: t(langKeys.name), accessor: 'name' },\r\n                    { Header: t(langKeys.email), accessor: 'email' },\r\n                    { Header: t(langKeys.phone), accessor: 'phone' },\r\n                    { Header: t(langKeys.expected_revenue), accessor: 'expected_revenue' },\r\n                    { Header: t(langKeys.endDate), accessor: 'date_deadline', type: 'date',\r\n                        Cell: (props: any) => {\r\n                            const row = props.cell.row.original;\r\n                            return convertLocalDate(row.date_deadline).toLocaleString()\r\n                        }\r\n                    },\r\n                    { Header: t(langKeys.tags), accessor: 'tags' },\r\n                    { Header: t(langKeys.agent), accessor: 'agent' },\r\n                    { Header: t(langKeys.priority), accessor: 'priority' },\r\n                    { Header: t(langKeys.campaign), accessor: 'campaign' },\r\n                    { Header: t(langKeys.product_plural), accessor: 'products' },\r\n                    { Header: t(langKeys.phase), accessor: 'phase' },\r\n                    { Header: t(langKeys.comments), accessor: 'comments' },\r\n                ]);\r\n                break;\r\n        }\r\n        // Clean selected data on source change\r\n        if (detaildata.sourcechanged) {\r\n            setDetaildata({...detaildata, sourcechanged: false, selectedRows: {}, person: [] });\r\n        }\r\n    }, [])\r\n    \r\n    // Internal data\r\n    useEffect(() => {\r\n        if (!auxResult.loading && !auxResult.error && auxResult.data.length > 0) {\r\n            if (detaildata.source === 'INTERNAL') {\r\n                setJsonData(auxResult.data);\r\n                let selectedRowsTemp = {};\r\n                if (detaildata.selectedRows) {\r\n                    selectedRowsTemp = {...detaildata.selectedRows};\r\n                }\r\n                else {\r\n                    selectedRowsTemp = {...auxResult.data.reduce((ad, d, i) => ({...ad, [d.campaignmemberid]: true }), {})};\r\n                }\r\n                setSelectedRows(selectedRowsTemp)\r\n                setDetaildata({\r\n                    ...detaildata,\r\n                    headers: setHeaderTableData(selectedColumns),\r\n                    jsonData: auxResult.data,\r\n                    selectedColumns: selectedColumns,\r\n                    selectedRows: selectedRowsTemp,\r\n                    person: auxResult.data.map(j => \r\n                        Object.keys(selectedRowsTemp).includes('' + j[selectionKey]) ? j : {...j, status: 'ELIMINADO'}\r\n                    )\r\n                });\r\n                setFrameProps({...frameProps, valid: {...frameProps.valid, 1: Object.keys(selectedRowsTemp).length > 0}});\r\n            }\r\n        }\r\n    }, [auxResult]);\r\n\r\n    // Person, Lead Data\r\n    useEffect(() => {\r\n        if (paginatedWait) {\r\n            if (!paginatedAuxResult.loading && !paginatedAuxResult.error) {\r\n                setPageCount(Math.ceil(paginatedAuxResult.count / fetchDataAux.pageSize));\r\n                setTotalRow(paginatedAuxResult.count);\r\n                setJsonData(paginatedAuxResult.data);\r\n                setPaginatedWait(false);\r\n            }\r\n        }\r\n    }, [paginatedAuxResult]);\r\n\r\n    // External Data Logic //\r\n    const handleUpload = async (files: any) => {\r\n        const file = files[0];\r\n        const data = await uploadExcel(file);\r\n        setvaluefile('')\r\n        if (data) {\r\n            uploadData(data);\r\n        }\r\n    }\r\n\r\n    const uploadData = (data: any) => {\r\n        if (data.length === 0) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.file_without_data)}));\r\n            return null;\r\n        }\r\n        if (data.length > 100000) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.too_many_records)}));\r\n            return null;\r\n        }\r\n        let actualHeaders = jsonData.length > 0 ? Object.keys(jsonData[0]) : null;\r\n        let newHeaders = Object.keys(data[0]);\r\n        if (actualHeaders) {\r\n            if (!actualHeaders.every(h => newHeaders?.includes(h))) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.file_incompatbile_with_previous_one)}));\r\n                return null;\r\n            }\r\n        }\r\n        // Set only new records\r\n        setJsonDataTemp(data.filter((d: any) => jsonData.findIndex((j: any) => JSON.stringify(j) === JSON.stringify(d)) === -1));\r\n        // Set actual headers or new headers\r\n        let localColumnList = actualHeaders ? actualHeaders : newHeaders;\r\n        setColumnList(localColumnList);\r\n        // Backup of columns if user cancel modal\r\n        setSelectedColumnsBackup({ ...selectedColumns });\r\n        // Initialize primary key\r\n        let localSelectedColumns = { ...selectedColumns };\r\n        if (!localColumnList.includes(localSelectedColumns.primarykey)) {\r\n            localSelectedColumns = {...localSelectedColumns, primarykey: ''};\r\n        }\r\n        // Initialize selected column booleans\r\n        if (selectedColumns.columns.length === 0) {\r\n            localSelectedColumns = {...localSelectedColumns, column: new Array(localColumnList.length).fill(false)};\r\n        }\r\n        // Code for reuse campaign\r\n        else if (detaildata.operation === 'UPDATE' && detaildata.source === 'EXTERNAL') {\r\n            // Asign [true, false] if columns has new order\r\n            // Asign columns that exist\r\n            localSelectedColumns = {\r\n                ...localSelectedColumns,\r\n                column: localColumnList.map(c => localSelectedColumns.columns.includes(c)),\r\n                columns: localColumnList.reduce((ac: any, c: any) => {\r\n                    if (localSelectedColumns.columns.includes(c)) {\r\n                        ac.push(c);\r\n                    }\r\n                    return ac;\r\n                }, [])\r\n            };\r\n        }\r\n        setSelectedColumns(localSelectedColumns);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    const cleanData = () => {\r\n        setJsonData([]);\r\n        setHeaders([]);\r\n        setJsonData([]);\r\n        setColumnList([]);\r\n        if (detaildata.operation === 'UPDATE' && detaildata.source === 'EXTERNAL' && (detaildata.fields?.primarykey || '') !== '') {\r\n            setSelectedColumns({...detaildata.fields} as SelectedColumns);\r\n        }\r\n        else {\r\n            setSelectedColumns(new SelectedColumns());\r\n        }\r\n        setSelectedRows({});\r\n        setDetaildata({\r\n            ...detaildata,\r\n            headers: [],\r\n            jsonData: [],\r\n            selectedColumns: (detaildata.operation === 'UPDATE' && detaildata.source === 'EXTERNAL' && (detaildata.fields?.primarykey || '') !== '')\r\n            ? {...detaildata.fields} as SelectedColumns\r\n            : new SelectedColumns(),\r\n            selectedRows: {},\r\n            person: [] \r\n        });\r\n    }\r\n\r\n    const handleCancelModal = () => {\r\n        setSelectedColumns({...selectedColumnsBackup} as SelectedColumns);\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleSaveModal = () => {\r\n        if (selectedColumns.primarykey !== '') {\r\n            let columns = columnList.reduce((h: string[], c: string, i: number) => {\r\n                if (c !== selectedColumns.primarykey && selectedColumns.column[i]) {\r\n                    h.push(c);\r\n                }\r\n                return h\r\n            }, []);\r\n            setSelectedColumns({...selectedColumns, columns: columns});\r\n            setJsonDataTemp(\r\n                JSON.parse(JSON.stringify(jsonDataTemp, [\r\n                    selectedColumns.primarykey,\r\n                    ...columns\r\n                ]))\r\n            )\r\n            let jsondatadata = [\r\n                ...JSON.parse(JSON.stringify(jsonData,\r\n                [\r\n                    selectedColumns.primarykey,\r\n                    ...columns\r\n                ])),\r\n                ...JSON.parse(JSON.stringify(jsonDataTemp.filter(j => \r\n                    !jsonData.map(jd => jd[selectedColumns.primarykey])\r\n                    .includes(j[selectedColumns.primarykey])),\r\n                [\r\n                    selectedColumns.primarykey,\r\n                    ...columns\r\n                ]))\r\n            ];\r\n            setJsonData(jsondatadata);\r\n            // Changing field(n) with new order\r\n            let message: string = detaildata.message || '';\r\n            if (detaildata.operation === 'UPDATE' && detaildata.source === 'EXTERNAL' && (detaildata.fields?.primarykey || '') !== '') {\r\n                detaildata.fields?.columns.forEach((c: string, i: number) => {\r\n                    let newi = selectedColumns.columns.findIndex(cs => cs === c);\r\n                    if (newi === -1) {\r\n                        message = message?.replace(`{{${c}}}`, `{{${i + 1}}}`);\r\n                        message = message?.replace(`{{field${i + 2}}}`, `{{${i + 1}}}`);\r\n                    }\r\n                    else {\r\n                        message = message?.replace(`{{field${i + 2}}}`, `{{${c}}}`);\r\n                    }\r\n                });\r\n                setDetaildata({...detaildata, message: message});\r\n            }\r\n            else if (detaildata.operation === 'UPDATE' && detaildata.source === 'EXTERNAL') {\r\n                message?.match(/({{)(.*?)(}})/g)?.forEach((c: string, i: number) => {\r\n                    message = message?.replace(`${c}`, `{{${i + 1}}}`);\r\n                });\r\n                setDetaildata({...detaildata, message: message});\r\n            }\r\n            setOpenModal(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openModal === false) {\r\n            setHeaderTableData(selectedColumns);\r\n            setAllRowsSelected(true)\r\n        }\r\n    }, [openModal])\r\n\r\n    const setHeaderTableData = (localSelectedColumns: SelectedColumns) => {\r\n        if (openModal === false && selectedColumns.primarykey !== '') {\r\n            setSelectionKey(selectedColumns.primarykey);\r\n            let headers = [\r\n                localSelectedColumns.primarykey,\r\n                ...localSelectedColumns.columns\r\n            ].map(c => {\r\n                return {\r\n                    Header: c,\r\n                    accessor: c\r\n                }\r\n            });\r\n            setHeaders(headers);\r\n            // setDetaildata({...detaildata, headers: headers});\r\n            return headers;\r\n        }\r\n    }\r\n    // External Data Logic //\r\n\r\n    const changeStep = (step: number) => {\r\n        if (Object.keys(selectedRows).length === 0) {\r\n            if (step === 2) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_person_selected)}));\r\n            }\r\n            return false;\r\n        }\r\n        switch (detaildata.source) {\r\n            case 'INTERNAL':\r\n                setDetaildata({\r\n                    ...detaildata,\r\n                    headers: setHeaderTableData(selectedColumns),\r\n                    jsonData: jsonData,\r\n                    selectedColumns: selectedColumns,\r\n                    selectedRows: selectedRows,\r\n                    person: jsonData.map(j => \r\n                        Object.keys(selectedRows).includes('' + j[selectionKey]) ? j : {...j, status: 'ELIMINADO'}\r\n                    )\r\n                });\r\n                break;\r\n            case 'EXTERNAL':\r\n                setDetaildata({\r\n                    ...detaildata,\r\n                    // Update headers only where upload has used\r\n                    headers: openModal === false ? setHeaderTableData(selectedColumns) : detaildata.headers,\r\n                    jsonData: jsonData,\r\n                    selectedColumns: selectedColumns,\r\n                    selectedRows: selectedRows,\r\n                    person: jsonData.filter(j => Object.keys(selectedRows).includes('' + j[selectionKey]))\r\n                });\r\n                break;\r\n            case 'PERSON':\r\n                setDetaildata({\r\n                    ...detaildata,\r\n                    selectedRows: selectedRows,\r\n                    person: Array.from(\r\n                        new Map([\r\n                            ...(detaildata.person || []),\r\n                            ...jsonData\r\n                        ].map(d => [d['personid'], d])).values()).filter(j => Object.keys(selectedRows).includes('' + j[selectionKey]))\r\n                });\r\n                break;\r\n            case 'LEAD':\r\n                setDetaildata({\r\n                    ...detaildata,\r\n                    selectedRows: selectedRows,\r\n                    person: Array.from(\r\n                        new Map([\r\n                            ...(detaildata.person || []),\r\n                            ...jsonData\r\n                        ].map(d => [d['leadid'], d])).values()).filter(j => Object.keys(selectedRows).includes('' + j[selectionKey]))\r\n                });\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const AdditionalButtons = () => {\r\n        if (detaildata.source === 'EXTERNAL') {\r\n            return (\r\n                <React.Fragment>\r\n                    <span>{t(langKeys.selected_plural)}: </span><b>{Object.keys(selectedRows).length}</b>\r\n                    <input\r\n                        id=\"upload-file\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        accept=\".xls,.xlsx\"\r\n                        value={valuefile}\r\n                        style={{ display: 'none' }}\r\n                        onChange={(e) => handleUpload(e.target.files)}\r\n                    />\r\n                    <label htmlFor=\"upload-file\">\r\n                        <Button\r\n                            component=\"span\"\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ backgroundColor: \"#53a6fa\" }}\r\n                        ><Trans i18nKey={langKeys.uploadFile} />\r\n                        </Button>\r\n                    </label> \r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => cleanData()}\r\n                        style={{ backgroundColor: \"#53a6fa\" }}\r\n                    ><Trans i18nKey={langKeys.clean} />\r\n                    </Button>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else {\r\n            return <>\r\n                <span>{t(langKeys.selected_plural)}: </span><b>{Object.keys(selectedRows).length}</b>\r\n            </>\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.containerDetail}>\r\n                {\r\n                    ['PERSON','LEAD'].includes(detaildata?.source || '') ?\r\n                    <TablePaginated\r\n                        columns={headers}\r\n                        data={jsonData}\r\n                        totalrow={totalrow}\r\n                        pageCount={pageCount}\r\n                        loading={paginatedAuxResult.loading}\r\n                        filterrange={true}\r\n                        FiltersElement={<></>}\r\n                        ButtonsElement={() => <>\r\n                            <span>{t(langKeys.selected_plural)}: </span><b>{Object.keys(selectedRows).length}</b>\r\n                         </>}\r\n                        fetchData={fetchPaginatedData}\r\n                        useSelection={true}\r\n                        selectionKey={selectionKey}\r\n                        initialSelectedRows={selectedRows}\r\n                        setSelectedRows={setSelectedRows}\r\n                        allRowsSelected={allRowsSelected}\r\n                        setAllRowsSelected={setAllRowsSelected}\r\n                    />\r\n                    :\r\n                    <TableZyx\r\n                        titlemodule=\" \"\r\n                        columns={headers}\r\n                        data={jsonData}\r\n                        download={false}\r\n                        loading={detaildata.source === 'INTERNAL' && auxResult.loading}\r\n                        filterGeneral={false}\r\n                        ButtonsElement={AdditionalButtons}\r\n                        useSelection={true}\r\n                        selectionKey={selectionKey}\r\n                        initialSelectedRows={selectedRows}\r\n                        setSelectedRows={setSelectedRows}\r\n                        allRowsSelected={allRowsSelected}\r\n                        setAllRowsSelected={setAllRowsSelected}\r\n                    />\r\n                }\r\n                \r\n            </div>\r\n            <ModalCampaignColumns\r\n                columnList={columnList}\r\n                selectedColumns={selectedColumns}\r\n                setSelectedColumns={setSelectedColumns}\r\n                openModal={openModal}\r\n                handleCancelModal={handleCancelModal}\r\n                handleSaveModal={handleSaveModal}\r\n            />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface ModalProps {\r\n    columnList: string[];\r\n    selectedColumns: SelectedColumns;\r\n    setSelectedColumns: (data: SelectedColumns) => void;\r\n    openModal: boolean | null;\r\n    handleCancelModal: () => void;\r\n    handleSaveModal: () => void;\r\n}\r\n\r\nconst ModalCampaignColumns: React.FC<ModalProps> = ({ columnList, selectedColumns, setSelectedColumns, openModal, handleCancelModal, handleSaveModal }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [checkboxEnable, setCheckboxEnable] = useState(true);\r\n    \r\n    const handleMaxColumns = () => {\r\n        setCheckboxEnable(selectedColumns.column.filter(c => c === true).length < 14 ? true : false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleMaxColumns();\r\n    }, [selectedColumns])\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal || false}\r\n            title={t(langKeys.select_column_plural)}\r\n            button1Type=\"button\"\r\n            buttonText1={t(langKeys.cancel)}\r\n            handleClickButton1={handleCancelModal}\r\n            button2Type=\"button\"\r\n            buttonText2={t(langKeys.save)}\r\n            handleClickButton2={handleSaveModal}\r\n        >\r\n            <TableContainer>\r\n                <Table>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>{t(langKeys.name)}</TableCell>\r\n                            <TableCell>{t(langKeys.key)}</TableCell>\r\n                            <TableCell>{t(langKeys.column)}</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {columnList.map((c, i) => \r\n                            <TableRow key={i}>\r\n                                <TableCell>{c}</TableCell>\r\n                                <TableCell>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        value={c}\r\n                                        checked={selectedColumns.primarykey === c || false}\r\n                                        onChange={(e) => {\r\n                                            setSelectedColumns({\r\n                                                ...selectedColumns,\r\n                                                primarykey: c || '',\r\n                                                column: selectedColumns.column.map((sc, sci) => sci === i ? false : sc) || []\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedColumns.column[i] || false}\r\n                                        disabled={selectedColumns.primarykey === c || (!checkboxEnable && selectedColumns.column[i] === false)}\r\n                                        onChange={(e) => {\r\n                                            setSelectedColumns({\r\n                                                ...selectedColumns,\r\n                                                column: selectedColumns.column.map((sc, sci) => sci === i ? e.target.checked : sc) || []\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </DialogZyx>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, FC, useCallback } from 'react'; // we need this to make JSX compile\r\nimport { FieldEdit, FieldEditWithSelect, FieldView, FieldSelect } from 'components';\r\nimport { Dictionary, ICampaign, MultiData } from \"@types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { filterPipe } from 'common/helpers';\r\nimport { FrameProps } from './CampaignDetail';\r\nimport { CircularProgress, IconButton, Paper, Box } from '@material-ui/core';\r\nimport { Close, FileCopy, GetApp } from '@material-ui/icons';\r\n\r\ninterface DetailProps {\r\n    row: Dictionary | null,\r\n    edit: boolean,\r\n    auxdata: Dictionary;\r\n    detaildata: ICampaign;\r\n    setDetaildata: (data: ICampaign) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n    tablevariable: any[];\r\n    frameProps: FrameProps;\r\n    setFrameProps: (value: FrameProps) => void;\r\n    setPageSelected: (page: number) => void;\r\n    setSave: (value: any) => void;\r\n    messageVariables: any[];\r\n    setMessageVariables: (value: any[]) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    flexgrow1: {\r\n        flexGrow: 1\r\n    },\r\n    mb1: {\r\n        marginBottom: '0.25rem',\r\n    },\r\n}));\r\n\r\nclass VariableHandler {\r\n    show: boolean;\r\n    item: any;\r\n    inputkey: string;\r\n    inputvalue: string;\r\n    range: number[];\r\n    top: number;\r\n    left: number;\r\n    changer: ({ ...param }) => any;\r\n    constructor() {\r\n        this.show = false;\r\n        this.item = null;\r\n        this.inputkey = '';\r\n        this.inputvalue = '';\r\n        this.range = [-1, -1];\r\n        this.changer = ({ ...param }) => null;\r\n        this.top = 0;\r\n        this.left = 0;\r\n    }\r\n}\r\n\r\nexport const CampaignMessage: React.FC<DetailProps> = ({ row, edit, auxdata, detaildata, setDetaildata, multiData, fetchData, tablevariable, frameProps, setFrameProps, setPageSelected, setSave, messageVariables, setMessageVariables }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const [tablevariableShow, setTableVariableShow] = useState<any[]>([]);\r\n\r\n    const [variableHandler, setVariableHandler] = useState<VariableHandler>(new VariableHandler());\r\n\r\n    useEffect(() => {\r\n        if (frameProps.checkPage) {\r\n            setFrameProps({ ...frameProps, executeSave: false, checkPage: false });\r\n            setPageSelected(frameProps.page);\r\n            if (frameProps.executeSave) {\r\n                setSave('VALIDATION');\r\n            }\r\n        }\r\n    }, [frameProps.checkPage])\r\n\r\n    const toggleVariableSelect = (e: React.ChangeEvent<any>, item: any, inputkey: string, changefunc: ({ ...param }) => void, filter = true) => {\r\n        let elem = e.target;\r\n        if (elem) {\r\n            let selectionStart = elem.selectionStart || 0;\r\n            let lines = (elem.value || '').substr(0, selectionStart).split('\\n');\r\n            let row = lines.length - 1;\r\n            let column = lines[row].length * 3;\r\n            let startIndex = (elem.value || '').slice(0, selectionStart || 0)?.lastIndexOf('{{');\r\n            let partialText = '';\r\n            if (startIndex !== -1) {\r\n                if (elem.value.slice(startIndex, selectionStart).indexOf(' ') === -1\r\n                    && elem.value.slice(startIndex, selectionStart).indexOf('}}') === -1\r\n                    && elem.value[selectionStart - 1] !== '}') {\r\n                    partialText = elem.value.slice(startIndex + 2, selectionStart);\r\n                    let rightText = (elem.value || '').slice(selectionStart, elem.value.length);\r\n                    let selectionEnd = rightText.indexOf('}}') !== -1 ? rightText.indexOf('}}') : 0;\r\n                    let endIndex = startIndex + partialText.length + selectionEnd + 4;\r\n                    setVariableHandler({\r\n                        show: true,\r\n                        item: item,\r\n                        inputkey: inputkey,\r\n                        inputvalue: elem.value,\r\n                        range: [startIndex, endIndex],\r\n                        changer: ({ ...param }) => changefunc({ ...param }),\r\n                        top: 24 + row * 21,\r\n                        left: column\r\n                    })\r\n                    if (filter) {\r\n                        setTableVariableShow(filterPipe(tablevariable, 'description', partialText, '%'));\r\n                    }\r\n                    else {\r\n                        setTableVariableShow(tablevariable);\r\n                    }\r\n                }\r\n                else {\r\n                    setVariableHandler(new VariableHandler());\r\n                }\r\n            }\r\n            else {\r\n                setVariableHandler(new VariableHandler());\r\n            }\r\n        }\r\n    }\r\n\r\n    const selectionVariableSelect = (e: React.ChangeEvent<any>, value: string) => {\r\n        const { item, inputkey, inputvalue, range, changer } = variableHandler;\r\n        if (range[1] !== -1 && (range[1] > range[0] || range[0] !== -1)) {\r\n            changer({\r\n                ...item,\r\n                [inputkey]: inputvalue.substring(0, range[0] + 2)\r\n                    + value\r\n                    + (inputvalue[range[1] - 2] !== '}' ? '}}' : '')\r\n                    + inputvalue.substring(range[1] - 2)\r\n            });\r\n            setVariableHandler(new VariableHandler());\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (detaildata.communicationchanneltype?.startsWith('MAI')) {\r\n            const variablesList = detaildata.message?.match(/({{)(.*?)(}})/g) || [];\r\n            const varaiblesCleaned = variablesList.map((x: string) => x.substring(x.indexOf(\"{{\") + 2, x.indexOf(\"}}\")))\r\n            setMessageVariables(varaiblesCleaned.map((x: string, i: number) => ({\r\n                name: x,\r\n                text: messageVariables[i]?.text || x,\r\n                type: 'text'\r\n            })));\r\n        }\r\n        else {\r\n            setMessageVariables([]);\r\n        }\r\n    }, [detaildata.message])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.containerDetail}>\r\n                {detaildata.communicationchanneltype?.startsWith('MAI') ?\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.subject)}\r\n                            className=\"col-12\"\r\n                            valueDefault={detaildata.messagetemplateheader?.value}\r\n                            onChange={(value) => setDetaildata({ ...detaildata, subject: value })}\r\n                            inputProps={{\r\n                                readOnly: ['HSM', 'SMS', 'MAIL'].includes(detaildata.type || '') && detaildata.messagetemplateid !== 0\r\n                            }}\r\n                        />\r\n                    </div> : null}\r\n                {(detaildata.messagetemplatetype === 'MULTIMEDIA'\r\n                    && (detaildata?.messagetemplateheader?.type || '') !== '') ?\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.header)}\r\n                            className=\"col-12\"\r\n                            valueDefault={detaildata.messagetemplateheader?.value}\r\n                            onChange={(value) => setDetaildata({\r\n                                ...detaildata,\r\n                                messagetemplateheader: { ...detaildata.messagetemplateheader, value: value }\r\n                            })}\r\n                            inputProps={{\r\n                                readOnly: detaildata.messagetemplateid !== 0\r\n                            }}\r\n                        />\r\n                    </div> : null}\r\n                {detaildata.communicationchanneltype?.startsWith('MAI')\r\n                    && ['MAIL', 'HTML'].includes(detaildata.type!!) ?\r\n                    <div className=\"row-zyx\">\r\n                        <React.Fragment>\r\n                            <div style={{ display: 'flex', justifyContent: 'center', flexFlow: 'row wrap', gap: '20px' }}>\r\n                                <div className=\"col-8\" style={{ overflow: 'auto', borderStyle: \"solid\", borderWidth: \"1px\", borderColor: \"#762AA9\", borderRadius: \"4px\", padding: \"20px\" }}>\r\n                                    <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">{t(langKeys.body)}</Box>\r\n                                    <div\r\n                                        onClick={(e) => console.log(e)}\r\n                                        dangerouslySetInnerHTML={{ __html: detaildata?.message || '' }}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-4\" style={{ width: '400px', borderStyle: \"solid\", borderWidth: \"1px\", borderColor: \"#762AA9\", borderRadius: \"4px\", padding: \"20px\" }}>\r\n                                    <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">{t(langKeys.parameters)}</Box>\r\n                                    {messageVariables.map((item: Dictionary, i) => (\r\n                                        <React.Fragment key={\"param_\" + i}>\r\n                                            <FieldSelect\r\n                                                key={\"var_\" + i}\r\n                                                label={`${i + 1}. ${t(langKeys.variable)} #${item.name}`}\r\n                                                valueDefault={messageVariables[i].text}\r\n                                                onChange={(value: { description: any; }) => {\r\n                                                    const datatemp = [...messageVariables];\r\n                                                    datatemp[i].text = value?.description;\r\n                                                    setMessageVariables(datatemp)\r\n                                                }}\r\n                                                data={tablevariable}\r\n                                                optionDesc=\"label\"\r\n                                                optionValue=\"description\"\r\n                                            />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    </div> :\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEditWithSelect\r\n                            label={t(langKeys.body)}\r\n                            className=\"col-12\"\r\n                            rows={10}\r\n                            valueDefault={detaildata.message}\r\n                            onChange={(value) => setDetaildata({ ...detaildata, message: value })}\r\n                            inputProps={{\r\n                                readOnly: ['HSM', 'SMS', 'MAIL'].includes(detaildata.type || '') && detaildata.messagetemplateid !== 0,\r\n                                onClick: (e: any) => toggleVariableSelect(e, detaildata, 'message', setDetaildata, detaildata.type === 'TEXTO'),\r\n                                onInput: (e: any) => toggleVariableSelect(e, detaildata, 'message', setDetaildata, detaildata.type === 'TEXTO'),\r\n                            }}\r\n                            show={variableHandler.show}\r\n                            data={tablevariableShow}\r\n                            datalabel=\"label\"\r\n                            datakey=\"description\"\r\n                            top={variableHandler.top}\r\n                            left={variableHandler.left}\r\n                            onClickSelection={(e, value) => selectionVariableSelect(e, value)}\r\n                            onClickAway={(variableHandler) => setVariableHandler({ ...variableHandler, show: false })}\r\n                        />\r\n                    </div>}\r\n                {(detaildata.messagetemplatetype === 'MULTIMEDIA'\r\n                    && (detaildata?.messagetemplatefooter || '') !== '') ?\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.footer)}\r\n                            className=\"col-12\"\r\n                            valueDefault={detaildata.messagetemplatefooter}\r\n                            onChange={(value) => setDetaildata({\r\n                                ...detaildata,\r\n                                messagetemplatefooter: value\r\n                            })}\r\n                            inputProps={{\r\n                                readOnly: detaildata.messagetemplateid !== 0\r\n                            }}\r\n                        />\r\n                    </div> : null}\r\n                {(detaildata.messagetemplatetype === 'MULTIMEDIA' && (detaildata?.messagetemplatebuttons || detaildata?.messagetemplatebuttons !== null)) && <div className=\"row-zyx\">\r\n                    <FieldView\r\n                        label={t(langKeys.buttons)}\r\n                        className=\"col-12\"\r\n                        value=''\r\n                    />\r\n                    <React.Fragment>\r\n                        {detaildata?.messagetemplatebuttons?.map((btn: any, i: number) => {\r\n                            return (<div key={`btn-${i}`} className=\"col-4\">\r\n                                <FieldView\r\n                                    label={t(langKeys.title)}\r\n                                    value={btn?.title || \"\"}\r\n                                    className={classes.mb1}\r\n                                />\r\n                                <FieldView\r\n                                    label={t(langKeys.type)}\r\n                                    value={t(`messagetemplate_${btn?.type || \"\"}`)}\r\n                                    className={classes.mb1}\r\n                                />\r\n                                <FieldView\r\n                                    label={t(langKeys.payload)}\r\n                                    value={btn?.payload || \"\"}\r\n                                    className={classes.mb1}\r\n                                />\r\n                            </div>)\r\n                        })}\r\n                    </React.Fragment>\r\n                </div>}\r\n                {(detaildata.communicationchanneltype === 'MAIL' && detaildata?.messagetemplateattachment) && <div className=\"row-zyx\">\r\n                    <FieldView label={t(langKeys.messagetemplate_attachment)} />\r\n                    <React.Fragment>\r\n                        {!!detaildata?.messagetemplateattachment && detaildata?.messagetemplateattachment?.split(',').map((f: string, i: number) => (\r\n                            <FilePreview key={`attachment-${i}`} src={f} />\r\n                        ))}\r\n                    </React.Fragment>\r\n                </div>}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface FilePreviewProps {\r\n    onClose?: (f: string) => void;\r\n    src: File | string;\r\n}\r\n\r\nconst useFilePreviewStyles = makeStyles(theme => ({\r\n    btnContainer: {\r\n        color: 'lightgrey',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    infoContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n    },\r\n    root: {\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        borderRadius: 4,\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: theme.spacing(1),\r\n        maxHeight: 80,\r\n        maxWidth: 300,\r\n        overflow: 'hidden',\r\n        padding: theme.spacing(1),\r\n        width: 'fit-content',\r\n    },\r\n}));\r\n\r\nconst FilePreview: FC<FilePreviewProps> = ({ src, onClose }) => {\r\n    const classes = useFilePreviewStyles();\r\n\r\n    const isUrl = useCallback(() => typeof src === \"string\" && src.includes('http'), [src]);\r\n\r\n    const getFileName = useCallback(() => {\r\n        if (isUrl()) {\r\n            const m = (src as string).match(/.*\\/(.+?)\\./);\r\n            return m && m.length > 1 ? m[1] : \"\";\r\n        };\r\n        return (src as File).name;\r\n    }, [isUrl, src]);\r\n\r\n    const getFileExt = useCallback(() => {\r\n        if (isUrl()) {\r\n            return (src as string).split('.').pop()?.toUpperCase() || \"-\";\r\n        }\r\n        return (src as File).name?.split('.').pop()?.toUpperCase() || \"-\";\r\n    }, [isUrl, src]);\r\n\r\n    return (\r\n        <Paper className={classes.root} elevation={2}>\r\n            <FileCopy />\r\n            <div style={{ width: '0.5em' }} />\r\n            <div className={classes.infoContainer}>\r\n                <div>\r\n                    <div style={{ fontWeight: 'bold', textOverflow: 'ellipsis', overflow: 'hidden', maxWidth: 190, whiteSpace: 'nowrap' }}>{getFileName()}</div>{getFileExt()}\r\n                </div>\r\n            </div>\r\n            <div style={{ width: '0.5em' }} />\r\n            {!isUrl() && !onClose && <CircularProgress color=\"primary\" />}\r\n            <div className={classes.btnContainer}>\r\n                {onClose && (\r\n                    <IconButton size=\"small\" onClick={() => onClose(src as string)}>\r\n                        <Close />\r\n                    </IconButton>\r\n                )}\r\n                {isUrl() && <div style={{ height: '10%' }} />}\r\n                {isUrl() && (\r\n                    <a href={src as string} target=\"_blank\" rel=\"noreferrer\" download={`${getFileName()}.${getFileExt()}`}>\r\n                        <IconButton size=\"small\">\r\n                            <GetApp />\r\n                        </IconButton>\r\n                    </a>\r\n                )}\r\n            </div>\r\n        </Paper>\r\n    );\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { extractVariables, getCampaignMemberSel, getCampaignSel, getCommChannelLst, getMessageTemplateLst, getUserGroupsSel, getValuesFromDomain, insCampaign, insCampaignMember } from 'common/helpers';\r\nimport { Dictionary, ICampaign, SelectedColumns } from \"@types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { execute, getMultiCollection, resetMainAux } from 'store/main/actions';\r\nimport { CampaignGeneral } from './CampaignGeneral';\r\nimport { CampaignPerson } from './CampaignPerson';\r\nimport { CampaignMessage } from './CampaignMessage';\r\nimport { manageConfirmation, showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { Button, Tabs } from '@material-ui/core';\r\nimport { langKeys } from 'lang/keys';\r\nimport { AntTab, TemplateBreadcrumbs, TitleDetail } from 'components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\n\r\ninterface DetailProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    fetchData: () => void\r\n}\r\n\r\nexport interface FrameProps {\r\n    page: number,\r\n    checkPage: boolean,\r\n    valid: Dictionary;\r\n    executeSave: boolean,\r\n}\r\n\r\nconst validateField = (origin: string | undefined, data: any, field: string) => {\r\n    try {\r\n        switch (origin) {\r\n            case 'PERSON':\r\n                switch (field) {\r\n                    case 'lastcontact':\r\n                        return data[field] ? new Date(data[field]).toLocaleString() : '';\r\n                }\r\n                break;\r\n            case 'LEAD':\r\n                switch (field) {\r\n                    case 'changedate':\r\n                    case 'date_deadline':\r\n                        return data[field] ? new Date(data[field]).toLocaleString() : '';\r\n                }\r\n                break;\r\n        }\r\n        return data[field] || '';\r\n    }\r\n    catch (e) {\r\n        return data[field] || ''\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    flexgrow1: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport const CampaignDetail: React.FC<DetailProps> = ({ data: { row, edit }, setViewSelected, fetchData }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const mainResult = useSelector(state => state.main);\r\n    const [pageSelected, setPageSelected] = useState<number>(0);\r\n    const [auxData, setAuxData] = useState<Dictionary[]>([]);\r\n    const [detaildata, setDetaildata] = useState<ICampaign>({});\r\n    const [waitView, setWaitView] = useState(false);\r\n\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const [save, setSave] = useState('');\r\n    const [campaignMembers, setCampaignMembers] = useState<any[]>([]);\r\n\r\n    const [tablevariable, setTableVariable] = useState<any[]>([]);\r\n    const [usedTablevariable, setUsedTableVariable] = useState<any>({});\r\n\r\n    const [frameProps, setFrameProps] = useState<FrameProps>({ executeSave: false, page: 0, checkPage: false, valid: { 0: false, 1: false, 2: false } });\r\n\r\n    const [messageVariables, setMessageVariables] = useState<any[]>([]);\r\n\r\n    const arrayBread = [\r\n        { id: \"view-1\", name: t(langKeys.campaign) },\r\n        { id: \"view-2\", name: `${t(langKeys.campaign)} ${t(langKeys.detail)}` }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (row !== null) {\r\n            dispatch(getMultiCollection([\r\n                getValuesFromDomain(\"ESTADOGENERICO\"),\r\n                getCommChannelLst(),\r\n                getUserGroupsSel(),\r\n                getMessageTemplateLst(''),\r\n                getCampaignSel(row?.id),\r\n                getCampaignMemberSel(row?.id)\r\n            ]));\r\n            dispatch(showBackdrop(true));\r\n            setWaitView(true);\r\n            return () => {\r\n                dispatch(resetMainAux());\r\n            };\r\n        }\r\n        else {\r\n            dispatch(getMultiCollection([\r\n                getValuesFromDomain(\"ESTADOGENERICO\"),\r\n                getCommChannelLst(),\r\n                getUserGroupsSel(),\r\n                getMessageTemplateLst(''),\r\n            ]));\r\n            setPageSelected(0);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitView) {\r\n            if (!mainResult.multiData.loading && !mainResult.multiData.error && row !== null) {\r\n                setAuxData(mainResult.multiData.data[4].data);\r\n                const data = mainResult.multiData.data[4].data[0];\r\n                if (data) {\r\n                    setDetaildata({\r\n                        isnew: false,\r\n                        id: row.id,\r\n                        communicationchannelid: data?.communicationchannelid,\r\n                        usergroup: data?.usergroup,\r\n                        type: data?.type,\r\n                        status: data?.status,\r\n                        title: data?.title,\r\n                        description: data?.description,\r\n                        subject: data?.subject,\r\n                        message: data?.message,\r\n                        startdate: data?.startdate,\r\n                        enddate: data?.enddate,\r\n                        repeatable: data?.repeatable,\r\n                        frecuency: data?.frecuency,\r\n                        source: data?.source || 'INTERNAL',\r\n                        messagetemplateid: data?.messagetemplateid,\r\n                        messagetemplatename: data?.messagetemplatename,\r\n                        messagetemplatenamespace: data?.messagetemplatenamespace,\r\n                        messagetemplatetype: data?.messagetemplatetype,\r\n                        messagetemplateheader: data?.messagetemplateheader || {},\r\n                        messagetemplatebuttons: data?.messagetemplatebuttons || [],\r\n                        messagetemplatefooter: data?.messagetemplatefooter || '',\r\n                        messagetemplateattachment: data?.messagetemplateattachment || '',\r\n                        messagetemplatelanguage: data?.messagetemplatelanguage || '',\r\n                        messagetemplatepriority: data?.messagetemplatepriority || '',\r\n                        executiontype: data?.executiontype,\r\n                        batchjson: data?.batchjson || [],\r\n                        fields: { ...new SelectedColumns(), ...data?.fields },\r\n                        operation: 'UPDATE',\r\n                        person: mainResult.multiData.data[5] && mainResult.multiData.data[5].success ? mainResult.multiData.data[5].data : []\r\n                    });\r\n                    setFrameProps({\r\n                        ...frameProps,\r\n                        valid: {\r\n                            0: !!data,\r\n                            1: (mainResult.multiData.data[5] && mainResult.multiData.data[5].success ? mainResult.multiData.data[5].data : []).length !== 0,\r\n                            2: !!data\r\n                        }\r\n                    });\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitView(false);\r\n                setPageSelected(0);\r\n            }\r\n        }\r\n    }, [mainResult, waitView]);\r\n\r\n    const formatMessage = () => {\r\n        let subject = detaildata.subject || '';\r\n        let header = detaildata.messagetemplateheader?.value || '';\r\n        let message = detaildata.message || '';\r\n        if (detaildata.communicationchanneltype?.startsWith('MAI')) {\r\n            let splitMessage = message.split('{{');\r\n            messageVariables.forEach((v, i) => {\r\n                splitMessage[i + 1] = splitMessage[i + 1]?.replace(`${v.name}}}`, `${v.text || i + 1}}}`);\r\n            });\r\n            message = splitMessage.join('{{');\r\n        }\r\n        if (['PERSON','LEAD'].includes(detaildata.source || '')) {\r\n            if (detaildata.person && detaildata.person?.length > 0) {\r\n                // field i + 2 because i + 1 is used for primary key, pccowner\r\n                if (detaildata.communicationchanneltype?.startsWith('MAI')) {\r\n                    let localmessageVariables = Array.from(new Map(messageVariables.map(d => [d['text'], d])).values())\r\n                    localmessageVariables.filter(mv => tablevariable.map(tv => tv.description).includes(mv.text)).forEach((v: any, i: number) => {\r\n                        message = message.replace(new RegExp(`{{${v.text}}}`, 'g'), `{{field${i + 2}}}`);\r\n                    });\r\n                }\r\n                else {\r\n                    let localtablevariable = Array.from(new Set([\r\n                        ...(subject.match(new RegExp(`{{.+?}}`, 'g')) || []),\r\n                        ...(header.match(new RegExp(`{{.+?}}`, 'g')) || []),\r\n                        ...(message.match(new RegExp(`{{.+?}}`, 'g')) || [])\r\n                    ]));\r\n                    localtablevariable = localtablevariable.map(x => x.slice(2,-2)).filter(ltv => tablevariable.map((tv: any) => tv.description).includes(ltv) || new RegExp(/field[0-9]+/, 'g').test(ltv));\r\n                    if (Object.keys(usedTablevariable).length > 0) {\r\n                        Object.entries(usedTablevariable).forEach((v: any) => {\r\n                            subject = subject.replace(new RegExp(`{{${v[0]}}}`, 'g'), `{{${v[1]}}}`);\r\n                            header = header.replace(new RegExp(`{{${v[0]}}}`, 'g'), `{{${v[1]}}}`);\r\n                            message = message.replace(new RegExp(`{{${v[0]}}}`, 'g'), `{{${v[1]}}}`);\r\n                        });\r\n                        localtablevariable = localtablevariable.map(x => usedTablevariable[x] ? usedTablevariable[x] : x)\r\n                    }\r\n                    localtablevariable = localtablevariable.reduce((actv, tv, tvi) => ({\r\n                        ...actv,\r\n                        [`field${tvi + 2}`]: tv\r\n                    }), {});\r\n                    setUsedTableVariable(localtablevariable);\r\n                    tablevariable.filter(tv => Object.values(localtablevariable).includes(tv.description)).forEach((v: any, i: number) => {\r\n                        subject = subject.replace(new RegExp(`{{${v.description}}}`, 'g'), `{{field${i + 2}}}`);\r\n                        header = header.replace(new RegExp(`{{${v.description}}}`, 'g'), `{{field${i + 2}}}`);\r\n                        message = message.replace(new RegExp(`{{${v.description}}}`, 'g'), `{{field${i + 2}}}`);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else if (['EXTERNAL'].includes(detaildata.source || '')) {\r\n            tablevariable.forEach((v: any, i: number) => {\r\n                subject = subject.replace(new RegExp(`{{${v.description}}}`, 'g'), `{{field${i + 1}}}`);\r\n                header = header.replace(new RegExp(`{{${v.description}}}`, 'g'), `{{field${i + 1}}}`);\r\n                message = message.replace(new RegExp(`{{${v.description}}}`, 'g'), `{{field${i + 1}}}`);\r\n            });\r\n        }\r\n        return { subject, header, message }\r\n    }\r\n\r\n    const checkValidation = () => {\r\n        if (!frameProps.valid[0]) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.required_fields_missing) }));\r\n        }\r\n        else if (!frameProps.valid[1]) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.missing_people) }));\r\n        }\r\n        else {\r\n            let valid = true;\r\n            if (detaildata.messagetemplatetype === 'MULTIMEDIA'\r\n                && (detaildata?.messagetemplateheader?.type || '') !== ''\r\n                && detaildata.messagetemplateheader?.value === '') {\r\n                valid = false;\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.missing_header) }));\r\n            }\r\n            let newmessages = formatMessage();\r\n            let localsubject = newmessages.subject || '';\r\n            let localheader = newmessages.header || '';\r\n            let localmessage = newmessages.message || '';\r\n            \r\n            let elemVariables: string[] = [];\r\n            let errorIndex = null;\r\n\r\n            if (detaildata.communicationchanneltype?.startsWith('MAI')) {\r\n                let vars = extractVariables(localsubject);\r\n                errorIndex = vars.findIndex(v => !(v.includes('field') || tablevariable.map(t => t.description).includes(v)));\r\n                if (errorIndex !== -1) {\r\n                    valid = false;\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: `${t(langKeys.missing_header)} ${vars[errorIndex]}` }));\r\n                }\r\n                elemVariables = Array.from(new Set([...elemVariables, ...(vars || [])]));\r\n            }\r\n            if (detaildata.messagetemplatetype === 'MULTIMEDIA' && localheader !== '') {\r\n                let vars = extractVariables(localheader);\r\n                errorIndex = vars.findIndex(v => !(v.includes('field') || tablevariable.map(t => t.description).includes(v)));\r\n                if (errorIndex !== -1 || localheader.includes('{{}}')) {\r\n                    valid = false;\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: `${t(langKeys.invalid_parameter)} ${vars[errorIndex] || '{{}}'}` }));\r\n                }\r\n                elemVariables = Array.from(new Set([...elemVariables, ...(vars || [])]));\r\n            }\r\n            if (localmessage !== '') {\r\n                let vars = extractVariables(localmessage)\r\n                errorIndex = vars.findIndex(v => !(v.includes('field') || tablevariable.map(t => t.description).includes(v)));\r\n                if (errorIndex !== -1 || localmessage.includes('{{}}')) {\r\n                    valid = false;\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: `${t(langKeys.invalid_parameter)} ${vars[errorIndex] || '{{}}'}` }));\r\n                }\r\n                elemVariables = Array.from(new Set([...elemVariables, ...(vars || [])]));\r\n            }\r\n            setDetaildata({\r\n                ...detaildata,\r\n                variablereplace: elemVariables,\r\n                batchjson: detaildata.executiontype === 'SCHEDULED' ? detaildata.batchjson : [],\r\n                subject: newmessages.subject,\r\n                messagetemplateheader: { ...detaildata.messagetemplateheader, value: newmessages.header },\r\n                message: newmessages.message,\r\n            });\r\n            setFrameProps({ ...frameProps, valid: { ...frameProps.valid, 2: valid } });\r\n        }\r\n    }\r\n\r\n    const buildingMembers = () => {\r\n        let campaignMemberList: any[] = [];\r\n        switch (detaildata.source) {\r\n            case 'INTERNAL':\r\n                campaignMemberList = detaildata.person?.reduce((ap, p) => {\r\n                    ap.push({\r\n                        id: p.campaignmemberid,\r\n                        personid: p.personid,\r\n                        personcommunicationchannel: p.personcommunicationchannel,\r\n                        personcommunicationchannelowner: p.personcommunicationchannelowner,\r\n                        type: p.type,\r\n                        displayname: p.displayname,\r\n                        status: p.status,\r\n                        field1: p.field1,\r\n                        field2: p.field2,\r\n                        field3: p.field3,\r\n                        field4: p.field4,\r\n                        field5: p.field5,\r\n                        field6: p.field6,\r\n                        field7: p.field7,\r\n                        field8: p.field8,\r\n                        field9: p.field9,\r\n                        field10: p.field10,\r\n                        field11: p.field11,\r\n                        field12: p.field12,\r\n                        field13: p.field13,\r\n                        field14: p.field14,\r\n                        field15: p.field15,\r\n                        batchindex: 0,\r\n                        operation: detaildata.operation\r\n                    })\r\n                    return ap;\r\n                }, []);\r\n                break;\r\n            case 'EXTERNAL':\r\n                campaignMemberList = detaildata.person?.reduce((ap, p) => {\r\n                    ap.push({\r\n                        id: 0,\r\n                        personid: 0,\r\n                        personcommunicationchannel: '',\r\n                        personcommunicationchannelowner: p[Object.keys(p)[0]] || '',\r\n                        type: 'EXTERNAL',\r\n                        displayname: '',\r\n                        status: 'ACTIVO',\r\n                        field1: p[Object.keys(p)[0]] || '',\r\n                        field2: p[Object.keys(p)[1]] || '',\r\n                        field3: p[Object.keys(p)[2]] || '',\r\n                        field4: p[Object.keys(p)[3]] || '',\r\n                        field5: p[Object.keys(p)[4]] || '',\r\n                        field6: p[Object.keys(p)[5]] || '',\r\n                        field7: p[Object.keys(p)[6]] || '',\r\n                        field8: p[Object.keys(p)[7]] || '',\r\n                        field9: p[Object.keys(p)[8]] || '',\r\n                        field10: p[Object.keys(p)[9]] || '',\r\n                        field11: p[Object.keys(p)[10]] || '',\r\n                        field12: p[Object.keys(p)[11]] || '',\r\n                        field13: p[Object.keys(p)[12]] || '',\r\n                        field14: p[Object.keys(p)[13]] || '',\r\n                        field15: p[Object.keys(p)[14]] || '',\r\n                        batchindex: 0,\r\n                        operation: detaildata.operation\r\n                    })\r\n                    return ap;\r\n                }, []);\r\n                break;\r\n            case 'PERSON': case 'LEAD':\r\n                if (detaildata.communicationchanneltype?.startsWith('MAI')) {\r\n                    campaignMemberList = detaildata.person?.reduce((ap, p) => {\r\n                        ap.push({\r\n                            id: 0,\r\n                            personid: p.personid || 0,\r\n                            personcommunicationchannel: '',\r\n                            personcommunicationchannelowner: p.email || p.alternativeemail || '',\r\n                            type: detaildata.source || '',\r\n                            displayname: detaildata.source === 'PERSON'\r\n                            ? `${p.firstname || ''} ${p.lastname || ''}`.trim()\r\n                            : detaildata.source === 'LEAD' ? `${p.name || ''}` : '',\r\n                            status: 'ACTIVO',\r\n                            field1: p.email || p.alternativeemail || '',\r\n                            field2: validateField(detaildata.source, p, messageVariables[0]?.text),\r\n                            field3: validateField(detaildata.source, p, messageVariables[1]?.text),\r\n                            field4: validateField(detaildata.source, p, messageVariables[2]?.text),\r\n                            field5: validateField(detaildata.source, p, messageVariables[3]?.text),\r\n                            field6: validateField(detaildata.source, p, messageVariables[4]?.text),\r\n                            field7: validateField(detaildata.source, p, messageVariables[5]?.text),\r\n                            field8: validateField(detaildata.source, p, messageVariables[6]?.text),\r\n                            field9: validateField(detaildata.source, p, messageVariables[7]?.text),\r\n                            field10: validateField(detaildata.source, p, messageVariables[8]?.text),\r\n                            field11: validateField(detaildata.source, p, messageVariables[9]?.text),\r\n                            field12: validateField(detaildata.source, p, messageVariables[10]?.text),\r\n                            field13: validateField(detaildata.source, p, messageVariables[11]?.text),\r\n                            field14: validateField(detaildata.source, p, messageVariables[12]?.text),\r\n                            field15: validateField(detaildata.source, p, messageVariables[13]?.text),\r\n                            batchindex: 0,\r\n                            operation: detaildata.operation\r\n                        })\r\n                        return ap;\r\n                    }, []);\r\n                }\r\n                else {\r\n                    campaignMemberList = detaildata.person?.reduce((ap, p) => {\r\n                        ap.push({\r\n                            id: 0,\r\n                            personid: p.personid || 0,\r\n                            personcommunicationchannel: '',\r\n                            personcommunicationchannelowner: p.phone || p.alternativephone || '',\r\n                            type: detaildata.source || '',\r\n                            displayname: detaildata.source === 'PERSON'\r\n                            ? `${p.firstname || ''} ${p.lastname || ''}`.trim()\r\n                            : detaildata.source === 'LEAD' ? `${p.name || ''}` : '',\r\n                            status: 'ACTIVO',\r\n                            field1: p.phone || p.alternativephone || '',\r\n                            field2: validateField(detaildata.source, p, usedTablevariable['field2']),\r\n                            field3: validateField(detaildata.source, p, usedTablevariable['field3']),\r\n                            field4: validateField(detaildata.source, p, usedTablevariable['field4']),\r\n                            field5: validateField(detaildata.source, p, usedTablevariable['field5']),\r\n                            field6: validateField(detaildata.source, p, usedTablevariable['field6']),\r\n                            field7: validateField(detaildata.source, p, usedTablevariable['field7']),\r\n                            field8: validateField(detaildata.source, p, usedTablevariable['field8']),\r\n                            field9: validateField(detaildata.source, p, usedTablevariable['field9']),\r\n                            field10: validateField(detaildata.source, p, usedTablevariable['field10']),\r\n                            field11: validateField(detaildata.source, p, usedTablevariable['field11']),\r\n                            field12: validateField(detaildata.source, p, usedTablevariable['field12']),\r\n                            field13: validateField(detaildata.source, p, usedTablevariable['field13']),\r\n                            field14: validateField(detaildata.source, p, usedTablevariable['field14']),\r\n                            field15: validateField(detaildata.source, p, usedTablevariable['field15']),\r\n                            batchindex: 0,\r\n                            operation: detaildata.operation\r\n                        })\r\n                        return ap;\r\n                    }, []);\r\n                }\r\n                break;\r\n        }\r\n        if (detaildata.executiontype === 'SCHEDULED') {\r\n            let batchjsontemp = [...(detaildata.batchjson || [])];\r\n            batchjsontemp = batchjsontemp.map((d: any, i: number) => ({ ...d, batchindex: i + 1 }));\r\n            setDetaildata({\r\n                ...detaildata,\r\n                batchjson: batchjsontemp,\r\n            });\r\n            batchjsontemp.reduce((bda, bdc, i) => {\r\n                campaignMemberList.filter((cm, j) => j >= bda && j < bda + parseInt(bdc.quantity)).map(cm => cm.batchindex = bdc.batchindex);\r\n                return bda + parseInt(bdc.quantity);\r\n            }, 0);\r\n        }\r\n        setCampaignMembers(campaignMemberList);\r\n        setSave('SUBMIT');\r\n    }\r\n\r\n    const saveCampaign = (data: any) => dispatch(execute(insCampaign(data)));\r\n    const saveCampaignMembers = (data: any, campaignid: number) => dispatch(execute({\r\n        header: null,\r\n        detail: [...data.map((x: any) => insCampaignMember({ ...x, campaignid: campaignid }))]\r\n    }, true));\r\n\r\n    const onSubmit = () => {\r\n        const callback = () => {\r\n            dispatch(showBackdrop(true));\r\n            setSave('PARENT');\r\n            saveCampaign(detaildata);\r\n        }\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (save === 'VALIDATION') {\r\n            checkValidation();\r\n            setSave('PREPARING');\r\n        }\r\n        if (!Object.values(frameProps.valid).includes(false)) {\r\n            if (save === 'PREPARING') {\r\n                buildingMembers();\r\n            }\r\n            else if (save === 'SUBMIT') {\r\n                onSubmit();\r\n            }\r\n            else if (save === 'PARENT') {\r\n                if (!executeRes.loading && !executeRes.error) {\r\n                    setSave('MEMBERS');\r\n                    saveCampaignMembers(campaignMembers, executeRes.data[0]?.p_campaignid);\r\n                } else if (executeRes.error) {\r\n                    const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.campaign).toLocaleLowerCase() })\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                    dispatch(showBackdrop(false));\r\n                    setSave('');\r\n                }\r\n            }\r\n            else if (save === 'MEMBERS') {\r\n                if (!executeRes.loading && !executeRes.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                    fetchData();\r\n                    dispatch(showBackdrop(false));\r\n                    setViewSelected(\"view-1\");\r\n                } else if (executeRes.error) {\r\n                    const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.campaign).toLocaleLowerCase() })\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                    dispatch(showBackdrop(false));\r\n                    setSave('');\r\n                }\r\n            }\r\n        }\r\n    }, [save, executeRes])\r\n\r\n    useEffect(() => {\r\n        if (pageSelected === 2) {\r\n            switch (detaildata.source) {\r\n                case 'INTERNAL':\r\n                    setTableVariable([\r\n                        { label: t(langKeys.name), description: \"displayname\", persistent: true },\r\n                        { label: \"PCC\", description: \"personcommunicationchannelowner\", persistent: true },\r\n                        { label: t(langKeys.type), description: \"type\", persistent: true },\r\n                        { label: t(langKeys.status), description: \"status\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 1`, description: \"field1\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 2`, description: \"field2\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 3`, description: \"field3\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 4`, description: \"field4\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 5`, description: \"field5\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 6`, description: \"field6\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 7`, description: \"field7\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 8`, description: \"field8\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 9`, description: \"field9\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 10`, description: \"field10\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 11`, description: \"field11\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 12`, description: \"field12\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 13`, description: \"field13\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 14`, description: \"field14\", persistent: true },\r\n                        { label: `${t(langKeys.field)} 15`, description: \"field15\", persistent: true },\r\n                    ]);\r\n                    break;\r\n                case 'EXTERNAL':\r\n                    setTableVariable(detaildata.selectedColumns?.columns.reduce((ac: any, c: string) => {\r\n                        ac.push({ label: c, description: c, persistent: false })\r\n                        return ac;\r\n                    }, [{ label: detaildata.selectedColumns.primarykey, description: detaildata.selectedColumns.primarykey, persistent: false }]));\r\n                    break;\r\n                case 'PERSON':\r\n                    setTableVariable([\r\n                        { label: t(langKeys.firstname), description: 'firstname', persistent: false },\r\n                        { label: t(langKeys.lastname), description: 'lastname', persistent: false },\r\n                        { label: t(langKeys.documenttype), description: 'documenttype', persistent: false },\r\n                        { label: t(langKeys.documentnumber), description: 'documentnumber', persistent: false },\r\n                        { label: t(langKeys.personType), description: 'persontype', persistent: false },\r\n                        { label: t(langKeys.type), description: 'type', persistent: false },\r\n                        { label: t(langKeys.phone), description: 'phone', persistent: false },\r\n                        { label: t(langKeys.alternativePhone), description: 'alternativephone', persistent: false },\r\n                        { label: t(langKeys.email), description: 'email', persistent: false },\r\n                        { label: t(langKeys.alternativeEmail), description: 'alternativeemail', persistent: false },\r\n                        { label: t(langKeys.lastContactDate), description: 'lastcontact', persistent: false },\r\n                        { label: t(langKeys.agent), description: 'agent', persistent: false },\r\n                        { label: t(langKeys.opportunity), description: 'opportunity', persistent: false },\r\n                        { label: t(langKeys.birthday), description: 'birthday', persistent: false },\r\n                        { label: t(langKeys.gender), description: 'gender', persistent: false },\r\n                        { label: t(langKeys.educationLevel), description: 'educationlevel', persistent: false },\r\n                        { label: t(langKeys.comments), description: 'comments', persistent: false },\r\n                    ]);\r\n                    break;\r\n                case 'LEAD':\r\n                    setTableVariable([\r\n                        { label: t(langKeys.opportunity), description: 'opportunity', persistent: false },\r\n                        { label: t(langKeys.lastUpdate), description: 'changedate', persistent: false },\r\n                        { label: t(langKeys.name), description: 'name', persistent: false },\r\n                        { label: t(langKeys.email), description: 'email', persistent: false },\r\n                        { label: t(langKeys.phone), description: 'phone', persistent: false },\r\n                        { label: t(langKeys.expected_revenue), description: 'expected_revenue', persistent: false },\r\n                        { label: t(langKeys.endDate), description: 'date_deadline', persistent: false },\r\n                        { label: t(langKeys.tags), description: 'tags', persistent: false },\r\n                        { label: t(langKeys.agent), description: 'agent', persistent: false },\r\n                        { label: t(langKeys.priority), description: 'priority', persistent: false },\r\n                        { label: t(langKeys.campaign), description: 'campaign', persistent: false },\r\n                        { label: t(langKeys.product_plural), description: 'products', persistent: false },\r\n                        { label: t(langKeys.phase), description: 'phase', persistent: false },\r\n                        { label: t(langKeys.comments), description: 'comments', persistent: false },\r\n                    ]);\r\n                    break;\r\n            }\r\n        }\r\n    }, [pageSelected]);\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={setViewSelected}\r\n                    />\r\n                    <TitleDetail\r\n                        title={row ? `${row.title}` : t(langKeys.newcampaign)}\r\n                    />\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        style={{ backgroundColor: \"#FB5F5F\" }}\r\n                        onClick={() => setViewSelected(\"view-1\")}\r\n                    >{t(langKeys.cancel)}</Button>\r\n                    {edit &&\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                            disabled={!frameProps.valid[0] || !frameProps.valid[1]}\r\n                            onClick={() => {\r\n                                setFrameProps({ ...frameProps, executeSave: true, checkPage: true });\r\n                            }}\r\n                        >{t(langKeys.save)}\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <Tabs\r\n                value={pageSelected}\r\n                indicatorColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n                style={{ borderBottom: '1px solid #EBEAED', backgroundColor: '#FFF', marginTop: 8 }}\r\n                textColor=\"primary\"\r\n                onChange={(_, value) => setFrameProps({ ...frameProps, page: value, checkPage: true })}\r\n            >\r\n                <AntTab label={t(langKeys.generalinformation)} />\r\n                <AntTab label={t(langKeys.person_plural)} />\r\n                <AntTab label={t(langKeys.message)} />\r\n            </Tabs>\r\n            {pageSelected === 0 ?\r\n                <CampaignGeneral\r\n                    row={row}\r\n                    edit={edit}\r\n                    auxdata={auxData}\r\n                    detaildata={detaildata}\r\n                    setDetaildata={setDetaildata}\r\n                    multiData={mainResult.multiData.data}\r\n                    fetchData={fetchData}\r\n                    frameProps={frameProps}\r\n                    setFrameProps={setFrameProps}\r\n                    setPageSelected={setPageSelected}\r\n                    setSave={setSave}\r\n                />\r\n                : null}\r\n            {pageSelected === 1 ?\r\n                <CampaignPerson\r\n                    row={row}\r\n                    edit={edit}\r\n                    auxdata={auxData}\r\n                    detaildata={detaildata}\r\n                    setDetaildata={setDetaildata}\r\n                    multiData={mainResult.multiData.data}\r\n                    fetchData={fetchData}\r\n                    frameProps={frameProps}\r\n                    setFrameProps={setFrameProps}\r\n                    setPageSelected={setPageSelected}\r\n                    setSave={setSave}\r\n                />\r\n                : null}\r\n            {pageSelected === 2 ?\r\n                <CampaignMessage\r\n                    row={row}\r\n                    edit={edit}\r\n                    auxdata={auxData}\r\n                    detaildata={detaildata}\r\n                    setDetaildata={setDetaildata}\r\n                    multiData={mainResult.multiData.data}\r\n                    fetchData={fetchData}\r\n                    tablevariable={tablevariable}\r\n                    frameProps={frameProps}\r\n                    setFrameProps={setFrameProps}\r\n                    setPageSelected={setPageSelected}\r\n                    setSave={setSave}\r\n                    messageVariables={messageVariables}\r\n                    setMessageVariables={setMessageVariables}\r\n                />\r\n                : null}\r\n        </div>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { convertLocalDate, getBlacklistExport, getBlacklistPaginated, insarrayBlacklist, insBlacklist, uploadExcel } from 'common/helpers';\r\nimport { Dictionary, IFetchData } from \"@types\";\r\nimport { execute, exportData, getCollectionPaginated, resetCollectionPaginated } from 'store/main/actions';\r\nimport { manageConfirmation, showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { DialogZyx, FieldEdit, TemplateBreadcrumbs, TemplateIcons, TitleDetail } from 'components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport TablePaginated from 'components/fields/table-paginated';\r\nimport { Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Add as AddIcon } from '@material-ui/icons';\r\n\r\ninterface DetailProps {\r\n    setViewSelected: (view: string) => void;\r\n}\r\n\r\nconst arrayBread = [\r\n    { id: \"view-1\", name: \"Campaign\" },\r\n    { id: \"view-2\", name: \"Campaign blacklist\" }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        // marginTop: theme.spacing(2),\r\n        // padding: theme.spacing(2),\r\n        // background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    flexgrow1: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nexport const Blacklist: React.FC<DetailProps> = ({ setViewSelected }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainPaginated = useSelector(state => state.main.mainPaginated);\r\n    const resExportData = useSelector(state => state.main.exportData);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [totalrow, settotalrow] = useState(0);\r\n    const [fetchDataAux, setfetchDataAux] = useState<IFetchData>({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n    const [waitExport, setWaitExport] = useState(false);\r\n    const [waitImport, setWaitImport] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [selectedRow, setSelectedRow] = useState<Dictionary | undefined>({});\r\n    \r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'id',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleDetail(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleDetail(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.phone),\r\n                accessor: 'phone'\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description'\r\n            },\r\n            {\r\n                Header: t(langKeys.creationdate),\r\n                accessor: 'createdate',\r\n                type: 'date',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <div>{convertLocalDate(row.createdate).toLocaleDateString(undefined, {year: \"numeric\", month: \"2-digit\", day: \"2-digit\"})}</div>\r\n                    )\r\n                }\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = ({ pageSize, pageIndex, filters, sorts }: IFetchData) => {\r\n        setfetchDataAux({...fetchDataAux, ...{ pageSize, pageIndex, filters, sorts }});\r\n        dispatch(getCollectionPaginated(getBlacklistPaginated(\r\n            {\r\n                sorts: sorts,\r\n                filters: filters,\r\n                take: pageSize,\r\n                skip: pageIndex * pageSize,\r\n            }\r\n        )));\r\n    };\r\n\r\n    const triggerExportData = ({ filters, sorts }: IFetchData) => {\r\n        dispatch(exportData(getBlacklistExport(\r\n            {\r\n                filters,\r\n                sorts,\r\n            })));\r\n        dispatch(showBackdrop(true));\r\n        setWaitExport(true);\r\n    };\r\n\r\n    const handleUpload = async (files: any[]) => {\r\n        const file = files[0];\r\n        if (file) {\r\n            const data: any = await uploadExcel(file, undefined);\r\n            if (data.length > 0) {\r\n                const validpk = Object.keys(data[0]).includes('phone');\r\n                const keys = Object.keys(data[0]);\r\n                dispatch(showBackdrop(true));\r\n                dispatch(execute(insarrayBlacklist(data.reduce((ad: any[], d: any) => {\r\n                    ad.push({\r\n                        ...d,\r\n                        id: d.id || 0,\r\n                        phone: (validpk ? d.phone : d[keys[0]]) || '',\r\n                        description: (validpk ? d.description : d[keys[1]]) || '',\r\n                        type: d.type || 'NINGUNO',\r\n                        status: d.status || 'ACTIVO',\r\n                        operation: d.operation || 'INSERT',\r\n                    })\r\n                    return ad;\r\n                }, []))));\r\n                setWaitImport(true)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insBlacklist({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.id })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    const handleDetail = (row?: Dictionary) => {\r\n        setSelectedRow(row);\r\n        setOpenModal(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(resetCollectionPaginated());\r\n        fetchData(fetchDataAux);\r\n        return () => {\r\n            dispatch(resetCollectionPaginated());\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (waitExport) {\r\n            if (!resExportData.loading && !resExportData.error) {\r\n                dispatch(showBackdrop(false));\r\n                setWaitExport(false);\r\n                resExportData.url?.split(\",\").forEach(x => window.open(x, '_blank'))\r\n            } else if (resExportData.error) {\r\n                const errormessage = t(resExportData.code || \"error_unexpected_error\", { module: t(langKeys.blacklist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitExport(false);\r\n            }\r\n        }\r\n    }, [resExportData, waitExport]);\r\n\r\n    useEffect(() => {\r\n        if (waitImport) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_transaction) }))\r\n                fetchData(fetchDataAux);\r\n                dispatch(showBackdrop(false));\r\n                setWaitImport(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.blacklist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitImport(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitImport]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                fetchData(fetchDataAux);\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.blacklist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave]);\r\n\r\n    useEffect(() => {\r\n        if (!mainPaginated.loading && !mainPaginated.error) {\r\n            setPageCount(Math.ceil(mainPaginated.count / fetchDataAux.pageSize));\r\n            settotalrow(mainPaginated.count);\r\n        }\r\n    }, [mainPaginated]);\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={setViewSelected}\r\n                    />\r\n                    <TitleDetail\r\n                        title={t(langKeys.blacklist)}\r\n                    />\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        style={{ backgroundColor: \"#FB5F5F\" }}\r\n                        onClick={() => setViewSelected(\"view-1\")}\r\n                    >{t(langKeys.back)}</Button>\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"button\"\r\n                        startIcon={<AddIcon color=\"secondary\" />}\r\n                        style={{ backgroundColor: \"#55BD84\" }}\r\n                        onClick={() => handleDetail()}\r\n                    >{t(langKeys.register)}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className={classes.containerDetail}>\r\n                <TablePaginated\r\n                    columns={columns}\r\n                    data={mainPaginated.data}\r\n                    totalrow={totalrow}\r\n                    loading={mainPaginated.loading}\r\n                    pageCount={pageCount}\r\n                    download={true}\r\n                    importCSV={handleUpload}\r\n                    fetchData={fetchData}\r\n                    exportPersonalized={triggerExportData}\r\n                    autotrigger={true}\r\n                />\r\n            </div>\r\n            {openModal && <ModalBlacklist\r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n                fetchData={() => fetchData(fetchDataAux)}\r\n                row={selectedRow}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface ModalProps {\r\n    openModal: boolean;\r\n    setOpenModal: (value: boolean) => any;\r\n    fetchData: () => any;\r\n    row: any;\r\n}\r\n\r\nconst ModalBlacklist: React.FC<ModalProps> = ({ openModal, setOpenModal, row, fetchData }) => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const { register, handleSubmit, setValue, getValues, trigger, clearErrors, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            isnew: row ? false : true,\r\n            id: row ? row.id : 0,\r\n            description: row ? row.description : '',\r\n            type: 'NINGUNO',\r\n            status: 'ACTIVO',\r\n            phone: row ? row.phone : '',\r\n            operation: row ? \"UPDATE\" : \"INSERT\"\r\n        }\r\n    });\r\n\r\n    const handleCancelModal = () => {\r\n        clearErrors();\r\n        setOpenModal(false);\r\n    }\r\n\r\n    const handleSaveModal = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(insBlacklist(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n        \r\n    });\r\n\r\n    useEffect(() => {\r\n        register('phone', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('description', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n    }, [register]);\r\n\r\n    useEffect(() => {\r\n        if (row) {\r\n            setValue('id', row.id);\r\n            setValue('phone', row.phone);\r\n            setValue('description', row.description);\r\n            trigger();\r\n        }\r\n    }, [row]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n                setOpenModal(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.blacklist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave]);\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.detail)}\r\n            button1Type=\"button\"\r\n            buttonText1={t(langKeys.cancel)}\r\n            handleClickButton1={handleCancelModal}\r\n            button2Type=\"button\"\r\n            buttonText2={t(langKeys.save)}\r\n            handleClickButton2={handleSaveModal}\r\n        >\r\n            <div className=\"row-zyx\">\r\n                <FieldEdit\r\n                    label={t(langKeys.phone)}\r\n                    className=\"col-6\"\r\n                    valueDefault={getValues('phone')}\r\n                    onChange={(value) => setValue('phone', value)}\r\n                    error={errors?.phone?.message}\r\n                />\r\n                <FieldEdit\r\n                    label={t(langKeys.description)}\r\n                    className=\"col-6\"\r\n                    valueDefault={getValues('description')}\r\n                    onChange={(value) => setValue('description', value)}\r\n                    error={errors?.description?.message}\r\n                />\r\n            </div>\r\n        </DialogZyx>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { getCampaignLst, delCampaign, getCampaignStatus, getCampaignStart, dateToLocalDate, todayDate, capitalize, stopCampaign } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation, Trans } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { getCollection, execute, getCollectionAux, resetAllMain } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport { CampaignDetail } from './CampaignDetail';\r\nimport { Blacklist } from './Blacklist';\r\nimport { CampaignReport } from './CampaignReport';\r\nimport { IconButton, ListItemIcon } from '@material-ui/core';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport StopIcon from '@material-ui/icons/Stop';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n}));\r\n\r\nconst IconOptions: React.FC<{\r\n    disabled?: boolean,\r\n    onHandlerDelete?: (e?: any) => void;\r\n}> = ({ disabled, onHandlerDelete }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const { t } = useTranslation();\r\n\r\n    const handleClose = (e: any) => {\r\n        e.stopPropagation()\r\n        setAnchorEl(null)\r\n    };\r\n    return (\r\n        <>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                size=\"small\"\r\n                disabled={disabled}\r\n                onClick={(e) => {\r\n                    e.stopPropagation()\r\n                    setAnchorEl(e.currentTarget)\r\n                }}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {onHandlerDelete &&\r\n                    <MenuItem onClick={(e: any) => {\r\n                        e.stopPropagation()\r\n                        setAnchorEl(null);\r\n                        onHandlerDelete();\r\n                    }}>\r\n                        <ListItemIcon color=\"inherit\">\r\n                            <DeleteIcon width={18} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        {t(langKeys.delete)}\r\n                    </MenuItem>\r\n                }\r\n            </Menu>\r\n        </>\r\n    )\r\n}\r\n\r\nexport const Campaign: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const auxResult = useSelector(state => state.main.mainAux);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [waitStart, setWaitStart] = useState(false);\r\n    const [waitStatus, setWaitStatus] = useState(false);\r\n    const [waitStop, setWaitStop] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'id',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <IconOptions\r\n                            onHandlerDelete={() => {\r\n                                handleDelete(row)\r\n                            }}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.campaign),\r\n                accessor: 'title',\r\n                NoFilter: false,\r\n                width: 'auto',\r\n                maxWidth: '200px'\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                NoFilter: false,\r\n                width: 'auto',\r\n                maxWidth: '200px'\r\n            },\r\n            {\r\n                Header: t(langKeys.startdate),\r\n                accessor: 'startdate',\r\n                NoFilter: false,\r\n                type: 'date',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <div>{dateToLocalDate(row.startdate)}</div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.enddate),\r\n                accessor: 'enddate',\r\n                NoFilter: false,\r\n                type: 'date',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <div>{dateToLocalDate(row.enddate)}</div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: false,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n            {\r\n                accessor: 'stop',\r\n                isComponent: true,\r\n                maxWidth: '80px',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    if (row?.status === 'EJECUTANDO') {\r\n                        return <StopIcon\r\n                            titleAccess={t(langKeys.stop)}\r\n                            fontSize='large'\r\n                            style={{ width:35, height:35, fill: '#ea2e49' }}\r\n                            onClick={(e) => {\r\n                                e.stopPropagation()\r\n                                handleStop(row)\r\n                            }}\r\n                        />\r\n                    }\r\n                    else {\r\n                        return null\r\n                    }\r\n                }\r\n            },\r\n            {\r\n                accessor: 'execute',\r\n                isComponent: true,\r\n                Cell: (props: any) => {\r\n                    const { id, status, startdate, enddate } = props.cell.row.original;\r\n                    if (dateToLocalDate(startdate, 'date') <= todayDate()\r\n                        && todayDate() <= dateToLocalDate(enddate, 'date')) {\r\n                        if (status === 'EJECUTANDO') {\r\n                            return <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    handleStatus(id)\r\n                                }}\r\n                                style={{ backgroundColor: \"#55bd84\" }}\r\n                            ><Trans i18nKey={langKeys.status} />\r\n                            </Button>\r\n                        }\r\n                        else if (status === 'ACTIVO') {\r\n                            return <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation()\r\n                                    handleStart(id)\r\n                                }}\r\n                                style={{ backgroundColor: \"#55bd84\" }}\r\n                            ><Trans i18nKey={langKeys.execute} />\r\n                            </Button>\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    }\r\n                    else {\r\n                        return null\r\n                    }\r\n                }\r\n            },\r\n        ],\r\n        []\r\n    )\r\n\r\n    const fetchData = () => dispatch(getCollection(getCampaignLst()));\r\n\r\n    const handleStatus = (id: number) => {\r\n        if (!waitStatus) {\r\n            dispatch(getCollectionAux(getCampaignStatus(id)));\r\n            setWaitStatus(true);\r\n        }\r\n    }\r\n\r\n    const handleStart = (id: number) => {\r\n        if (!waitStart) {\r\n            dispatch(getCollectionAux(getCampaignStart(id)));\r\n            setWaitStart(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.campaign).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n        if (waitStop) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_transaction) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitStop(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.campaign).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitStop(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave, waitStop]);\r\n\r\n    useEffect(() => {\r\n        if (waitStatus) {\r\n            if (!auxResult.loading && !auxResult.error) {\r\n                const { status, enviado, total } = auxResult.data[0];\r\n                if (status === 'EJECUTANDO') {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: `${(t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()}: ${t(langKeys.sent)} ${enviado}/${total}` }))\r\n                    setWaitStatus(false);\r\n                }\r\n                else if (status === 'ACTIVO') {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: `${capitalize(t(langKeys.sent))}` }))\r\n                    fetchData();\r\n                    setWaitStatus(false);\r\n                }\r\n            } else if (auxResult.error) {\r\n                const errormessage = t(auxResult.code || \"error_unexpected_error\", { module: t(langKeys.campaign).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitStatus(false);\r\n            }\r\n        }\r\n        if (waitStart) {\r\n            if (!auxResult.loading && !auxResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_transaction) }))\r\n                fetchData();\r\n                setWaitStart(false);\r\n            } else if (auxResult.error) {\r\n                const errormessage = t(auxResult.code || \"error_unexpected_error\", { module: t(langKeys.campaign).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitStart(false);\r\n            }\r\n        }\r\n    }, [auxResult, waitStatus, waitStart])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        if (row.status === 'EJECUTANDO') {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.campaign_in_execution) }));\r\n        }\r\n        else {\r\n            setViewSelected(\"view-2\");\r\n            setRowSelected({ row, edit: true });\r\n        }\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        if (row.status === 'EJECUTANDO') {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.campaign_in_execution) }));\r\n        }\r\n        else {\r\n            const callback = () => {\r\n                dispatch(execute(delCampaign({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.id })));\r\n                dispatch(showBackdrop(true));\r\n                setWaitSave(true);\r\n            }\r\n\r\n            dispatch(manageConfirmation({\r\n                visible: true,\r\n                question: t(langKeys.confirmation_delete),\r\n                callback\r\n            }))\r\n        }\r\n    }\r\n\r\n    const handleStop = (row: Dictionary) => {\r\n        if (row.status === 'EJECUTANDO') {\r\n            const callback = () => {\r\n                dispatch(execute(stopCampaign({ campaignid: row.id })));\r\n                dispatch(showBackdrop(true));\r\n                setWaitStop(true);\r\n            }\r\n\r\n            dispatch(manageConfirmation({\r\n                visible: true,\r\n                question: t(langKeys.confirmation_stop),\r\n                callback\r\n            }))\r\n        }\r\n    }\r\n\r\n    const AdditionalButtons = () => {\r\n        return (\r\n            <React.Fragment>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={mainResult.mainData.loading}\r\n                    // startIcon={<AddIcon color=\"secondary\" />}\r\n                    onClick={() => setViewSelected(\"blacklist\")}\r\n                    style={{ backgroundColor: \"#ea2e49\" }}\r\n                ><Trans i18nKey={langKeys.blacklist} />\r\n                </Button>\r\n                <Button\r\n                    className={classes.button}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={mainResult.mainData.loading}\r\n                    // startIcon={<AddIcon color=\"secondary\" />}\r\n                    onClick={() => setViewSelected(\"report\")}\r\n                    style={{ backgroundColor: \"#22b66e\" }}\r\n                ><Trans i18nKey={langKeys.report} />\r\n                </Button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        if (mainResult.mainData.error) {\r\n            return <h1>ERROR</h1>;\r\n        }\r\n\r\n        return (\r\n            <TableZyx\r\n                onClickRow={handleEdit}\r\n                columns={columns}\r\n                titlemodule={t(langKeys.campaign_plural, { count: 2 })}\r\n                data={mainResult.mainData.data}\r\n                download={true}\r\n                loading={mainResult.mainData.loading}\r\n                register={true}\r\n                ButtonsElement={AdditionalButtons}\r\n                handleRegister={handleRegister}\r\n            />\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <CampaignDetail\r\n                data={rowSelected}\r\n                setViewSelected={setViewSelected}\r\n                fetchData={fetchData}\r\n            />\r\n        )\r\n    }\r\n    else if (viewSelected === \"blacklist\") {\r\n        return (\r\n            <Blacklist\r\n                setViewSelected={setViewSelected}\r\n            />\r\n        )\r\n    }\r\n    else if (viewSelected === \"report\") {\r\n        return (\r\n            <CampaignReport\r\n                setViewSelected={setViewSelected}\r\n            />\r\n        )\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Campaign","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import React, { useState, useEffect, useMemo } from 'react';\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TableConfig, Pagination, Dictionary, ITablePaginatedFilter } from '@types'\r\nimport { Trans } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { langKeys } from 'lang/keys';\r\nimport { DownloadIcon, CalendarIcon } from 'icons';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport clsx from 'clsx';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Search as SearchIcon,\r\n    Add as AddIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n} from 'react-table'\r\nimport { Range } from 'react-date-range';\r\nimport { DateRangePicker } from 'components';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { BooleanOptionsMenuComponent, DateOptionsMenuComponent, SelectFilterTmp, OptionsMenuComponent, TimeOptionsMenuComponent } from './table-simple';\r\nimport { getDateToday, getFirstDayMonth, getLastDayMonth, getDateCleaned } from 'common/helpers';\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        padding: '4px 24px 4px 16px',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    containerButtonsNoFilters: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'end',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\n\r\nconst DefaultColumnFilter = ({ header, type, setFilters, filters, listSelectFilter }: any) => {\r\n    const [value, setValue] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [operator, setoperator] = useState(\"contains\");\r\n\r\n    useEffect(() => {\r\n        switch (type) {\r\n            case \"number\": case \"number-centered\": case \"date\": case \"datetime-local\": case \"time\": case \"select\":\r\n                setoperator(\"equals\");\r\n                break;\r\n            case \"boolean\":\r\n                setoperator(\"all\");\r\n                break;\r\n            case \"string\": case \"color\":\r\n            default:\r\n                setoperator(\"contains\");\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    useEffect(() => {\r\n        if (['number', 'number-centered'].includes(type))\r\n            setoperator(\"equals\");\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [type])\r\n\r\n    const keyPress = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            if (value || operator === \"noempty\" || operator === \"empty\")\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value,\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            else\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n        }\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickItemMenu = (op: any) => {\r\n        setAnchorEl(null);\r\n        setoperator(op)\r\n        if (type === 'boolean') {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: {\r\n                    value: op,\r\n                    operator: op\r\n                },\r\n            }, 0)\r\n        } else if (type === \"select\") {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: op === \"_ALL\" ? undefined : {\r\n                    value: op,\r\n                    operator: \"equals\"\r\n                },\r\n            }, 0)\r\n        } else if (type === \"text\" || !type) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else if (['number', 'number-centered'].includes(type)) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value !== '') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        }\r\n    };\r\n    const handleClickMenu = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDate = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toISOString().split('T')[0] || '',\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTime = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toLocaleTimeString(),\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(filters).length === 0) setValue('');\r\n        else if (header in filters) {\r\n            setValue(filters?.[header]?.value || '');\r\n            if (filters?.[header]) setoperator(filters[header].operator);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters]);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {type === 'boolean' ?\r\n                <BooleanOptionsMenuComponent\r\n                    value={value}\r\n                    handleClickItemMenu={handleClickItemMenu}\r\n                />\r\n                :\r\n                (type === \"select\" ?\r\n                    <SelectFilterTmp\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                        data={listSelectFilter || []}\r\n                    /> :\r\n\r\n                    <React.Fragment>\r\n                        {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                        {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                        {!['date', 'time'].includes(type) &&\r\n                            <Input\r\n                                style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                type={['number', 'number-centered'].includes(type) ? \"number\" : \"text\"}\r\n                                fullWidth\r\n                                value={value}\r\n                                onKeyDown={keyPress}\r\n                                onChange={e => setValue(e.target.value)}\r\n                            />}\r\n                        <IconButton\r\n                            onClick={handleClickMenu}\r\n                            size=\"small\"\r\n                        >\r\n                            <MoreVertIcon\r\n                                style={{ cursor: 'pointer' }}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"action\"\r\n                                fontSize=\"small\"\r\n                            />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleCloseMenu}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {OptionsMenuComponent(type || 'string', operator, handleClickItemMenu)}\r\n                        </Menu>\r\n                    </React.Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    filterrange,\r\n    totalrow,\r\n    pageCount: controlledPageCount,\r\n    download,\r\n    register,\r\n    handleRegister,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    exportPersonalized,\r\n    loading,\r\n    importCSV,\r\n    autotrigger = false,\r\n    autoRefresh,\r\n    useSelection,\r\n    selectionKey,\r\n    selectionFilter,\r\n    initialSelectedRows,\r\n    cleanSelection,\r\n    setCleanSelection,\r\n    setSelectedRows,\r\n    onClickRow,\r\n    FiltersElement,\r\n    filterRangeDate = \"month\",\r\n    onFilterChange,\r\n    initialEndDate = null,\r\n    initialStartDate = null,\r\n    initialFilters = {},\r\n    initialPageIndex = 0,\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const [pagination, setPagination] = useState<Pagination>({ sorts: {}, filters: initialFilters, pageIndex: initialPageIndex });\r\n    const [openDateRangeModal, setOpenDateRangeModal] = useState(false);\r\n    const [triggerSearch, setTriggerSearch] = useState(autotrigger);\r\n    const [tFilters, setTFilters] = useState<ITablePaginatedFilter>({\r\n        startDate: initialStartDate,\r\n        endDate: initialEndDate,\r\n        page: initialPageIndex,\r\n        filters: initialFilters,\r\n    });\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        setPageSize,\r\n        toggleAllRowsSelected,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: initialPageIndex, pageSize: 20, selectedRowIds: initialSelectedRows || {} },\r\n            manualPagination: true, // Tell the usePagination\r\n            pageCount: controlledPageCount,\r\n            useControlledState: (state: any) => {\r\n                return useMemo(() => ({\r\n                    ...state,\r\n                    pageIndex: pagination.pageIndex,\r\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                }), [state, pagination.pageIndex])\r\n            },\r\n            autoResetSelectedRows: false,\r\n            getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n                ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n                : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n            stateReducer: (newState, action) => {\r\n                switch (action.type) {\r\n                    case 'toggleAllRowsSelected':\r\n                        return {\r\n                            ...newState,\r\n                            selectedRowIds: {},\r\n                        };\r\n                    default:\r\n                        return newState;\r\n                }\r\n            }\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps, filteredRows }: any) => (\r\n                        !selectionFilter\r\n                            ?\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    {...getToggleAllPageRowsSelectedProps()}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={filteredRows\r\n                                        .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                        .every((p: any) => p.isSelected)\r\n                                    }\r\n                                    onChange={() => {\r\n                                        filteredRows\r\n                                            .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                            .forEach((p: any) => {\r\n                                                p.toggleRowSelected();\r\n                                            })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n                        !selectionFilter || row.original[selectionFilter?.key] === selectionFilter?.value\r\n                            ? <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />\r\n                            </div>\r\n                            : null\r\n                    ),\r\n                    NoFilter: true,\r\n                    isComponent: true\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    const setFilters = (filters: any, page: number) => {\r\n        setPagination(prev => {\r\n            // const pageIndex = !page ? prev.pageIndex : page;\r\n            return { ...prev, filters, pageIndex: 0, trigger: true }\r\n        });\r\n    };\r\n    const setPageIndex = (page: number) => {\r\n        setPagination(prev => ({ ...prev, pageIndex: page, trigger: true }));\r\n        setTFilters(prev => ({ ...prev, page }));\r\n    }\r\n    const handleClickSort = (column: string) => {\r\n        let newsorts: any = {};\r\n        if (Object.keys(pagination.sorts).includes(column)) {\r\n            newsorts = {\r\n                ...pagination.sorts\r\n            }\r\n        }\r\n\r\n        if (newsorts[column] === \"desc\") {\r\n            delete newsorts[column]\r\n        }\r\n        else {\r\n            if (newsorts[column] === \"asc\") {\r\n                newsorts[column] = \"desc\";\r\n            }\r\n            else {\r\n                newsorts[column] = \"asc\";\r\n            }\r\n        }\r\n\r\n        setPagination(prev => ({ ...prev, sorts: newsorts, trigger: true }))\r\n    }\r\n\r\n    const [dateRange, setdateRange] = useState<Range>({\r\n        startDate: initialStartDate ? new Date(initialStartDate) : filterRangeDate === \"month\" ? getFirstDayMonth() : getDateToday(),\r\n        endDate: initialEndDate ? new Date(initialEndDate) : filterRangeDate === \"month\" ? getLastDayMonth() : getDateToday(),\r\n        key: 'selection'\r\n    });\r\n\r\n    const triggertmp = (fromButton: boolean = false) => {\r\n        if (fromButton)\r\n            setPagination(prev => ({ ...prev, pageIndex: initialPageIndex, trigger: false }));\r\n\r\n        if (!fetchData) return;\r\n        fetchData({\r\n            ...pagination,\r\n            pageSize,\r\n            pageIndex: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n            }\r\n        });\r\n        setTFilters(prev => ({\r\n            ...prev,\r\n            page: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            startDate: dateRange.startDate ? (new Date(dateRange.startDate.setHours(10))).getTime() : null,\r\n            endDate: dateRange.endDate ? (new Date(dateRange.endDate.setHours(10))).getTime() : null,\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cleanSelection) {\r\n            toggleAllRowsSelected(false)\r\n            setSelectedRows && setSelectedRows({})\r\n            setCleanSelection && setCleanSelection(false)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cleanSelection])\r\n\r\n    useEffect(() => {\r\n        if (pagination?.trigger) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pagination, triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pageSize])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggerSearch && triggertmp(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (autoRefresh?.value) {\r\n            triggertmp();\r\n            autoRefresh?.callback(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoRefresh])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        onFilterChange?.(tFilters);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tFilters]);\r\n\r\n    const exportData = () => {\r\n        exportPersonalized && exportPersonalized({\r\n            ...pagination,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box width={1}>\r\n            {titlemodule && <div className={classes.title}>{titlemodule}</div>}\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\">\r\n                <div className={clsx({\r\n                    [classes.containerButtons]: !!FiltersElement,\r\n                    [classes.containerButtonsNoFilters]: !FiltersElement\r\n                })}>\r\n                    {filterrange && (\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                            <DateRangePicker\r\n                                open={openDateRangeModal}\r\n                                setOpen={setOpenDateRangeModal}\r\n                                range={dateRange}\r\n                                onSelect={setdateRange}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    style={{ border: '1px solid #bfbfc0', borderRadius: 4, color: 'rgb(143, 146, 161)' }}\r\n                                    startIcon={<CalendarIcon />}\r\n                                    onClick={() => setOpenDateRangeModal(!openDateRangeModal)}\r\n                                >\r\n                                    {getDateCleaned(dateRange.startDate!) + \" - \" + getDateCleaned(dateRange.endDate!)}\r\n                                </Button>\r\n                            </DateRangePicker>\r\n                            {FiltersElement && FiltersElement}\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<SearchIcon style={{ color: 'white' }} />}\r\n                                style={{ backgroundColor: '#55BD84', width: 120 }}\r\n                                onClick={() => {\r\n                                    if (triggerSearch)\r\n                                        triggertmp(true)\r\n                                    setTriggerSearch(true)\r\n                                }}\r\n                            >\r\n                                <Trans i18nKey={langKeys.search} />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                        {ButtonsElement && <ButtonsElement />}\r\n                        {importCSV && (\r\n                            <>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    id=\"laraigo-upload-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => importCSV(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        component=\"span\"\r\n                                        color=\"primary\"\r\n                                        disabled={loading}\r\n                                        startIcon={<BackupIcon color=\"secondary\" />}\r\n                                        style={{ backgroundColor: \"#55BD84\" }}\r\n                                    ><Trans i18nKey={langKeys.import} />\r\n                                    </Button>\r\n                                </label>\r\n                            </>\r\n                        )}\r\n                        {register && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                startIcon={<AddIcon color=\"secondary\" />}\r\n                                onClick={handleRegister}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            ><Trans i18nKey={langKeys.register} />\r\n                            </Button>\r\n                        )}\r\n                        {download && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                onClick={exportData}\r\n                                // exportPersonalized\r\n                                startIcon={<DownloadIcon />}\r\n                            ><Trans i18nKey={langKeys.download} />\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\">\r\n                    <MaUTable {...getTableProps()} aria-label=\"enhanced table\" size=\"small\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell\r\n                                                key={ii}\r\n                                            >\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header')\r\n                                                    :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n                                                                component=\"div\"\r\n                                                                {...column.getHeaderProps()}\r\n                                                                onClick={() => !column.NoSort && handleClickSort(column.id)}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {pagination.sorts[column.id] && (pagination.sorts[column.id] === \"asc\" ?\r\n                                                                    <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                    : <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />)\r\n                                                                }\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12, whiteSpace: 'break-spaces' }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        {!column.NoFilter &&\r\n                                                            <DefaultColumnFilter\r\n                                                                header={column.id}\r\n                                                                listSelectFilter={column.listSelectFilter || []}\r\n                                                                type={column.type}\r\n                                                                filters={pagination.filters}\r\n                                                                setFilters={(filters: any, page: number) => {\r\n                                                                    setFilters(filters, page);\r\n                                                                    setTFilters(prev => ({\r\n                                                                        ...prev,\r\n                                                                        filters,\r\n                                                                        page,\r\n                                                                    }));\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody {...getTableBodyProps()} style={{ backgroundColor: 'white' }}>\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                page.map((row: any) => {\r\n                                    prepareRow(row);\r\n                                    return (\r\n                                        <TableRow\r\n                                            {...row.getRowProps()}\r\n                                            hover\r\n                                            style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                        >\r\n                                            {row.cells.map((cell: any, i: number) =>\r\n                                                <TableCell\r\n                                                    {...cell.getCellProps({\r\n                                                        style: {\r\n                                                            minWidth: cell.column.minWidth,\r\n                                                            width: cell.column.width,\r\n                                                            overflow: 'hidden',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                        },\r\n                                                    })}\r\n                                                    onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original) : null}\r\n                                                >\r\n                                                    {cell.render('Cell')}\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </MaUTable>\r\n\r\n                </Box>\r\n                <Box className={classes.footerTable}>\r\n                    <Box>\r\n                        <IconButton onClick={() => setPageIndex(0)} disabled={!canPreviousPage} >\r\n                            <FirstPage />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex - 1)} disabled={!canPreviousPage} >\r\n                            <NavigateBefore />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex + 1)} disabled={!canNextPage} >\r\n                            <NavigateNext />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pageCount - 1)} disabled={!canNextPage} >\r\n                            <LastPage />\r\n                        </IconButton>\r\n                        <Box component=\"span\" fontSize={14}>\r\n                            <Trans\r\n                                i18nKey={langKeys.tablePageOf}\r\n                                values={{ currentPage: pageOptions.length === 0 ? 0 : pageIndex + 1, totalPages: pageOptions.length }}\r\n                                components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                            />\r\n                        </Box >\r\n\r\n                    </Box>\r\n                    <Box>\r\n                        <Trans\r\n                            i18nKey={(totalrow || 0) === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                            values={{ itemCount: page.length, totalItems: totalrow }}\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <Select\r\n                            disableUnderline\r\n                            style={{ display: 'inline-flex' }}\r\n                            value={pageSize}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                        >\r\n                            {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                <MenuItem key={pageSize} value={pageSize}>\r\n                                    {pageSize}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                        <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                            <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface IQueryMap {\r\n    [key: string]: {\r\n        value: string;\r\n        operator: string;\r\n    }\r\n}\r\n\r\ninterface IFilters {\r\n    startDate: number;\r\n    endDate: number;\r\n    page: number;\r\n    filters: IQueryMap;\r\n}\r\n\r\ninterface IOptions {\r\n    ignore?: string[];\r\n}\r\n\r\nexport function useQueryParams(query: URLSearchParams, options: IOptions = { ignore: [] }) {\r\n    return useMemo(() => {\r\n        const map: IFilters = {\r\n            endDate: Number(query.get('endDate')),\r\n            startDate: Number(query.get('startDate')),\r\n            page: Number(query.get('page')),\r\n            filters: {},\r\n        };\r\n        const { ignore } = options;\r\n\r\n        query.forEach((value, key) => {\r\n            if (key === \"endDate\" ||\r\n                key === \"startDate\" ||\r\n                key === \"page\" ||\r\n                key.includes('-operator') ||\r\n                (ignore || []).includes(key)) {\r\n                return;\r\n            }\r\n\r\n            const name = `${key}-operator`;\r\n            map.filters[key] = { value, operator: query.get(name)! };\r\n        });\r\n\r\n        return map;\r\n    }, [options, query]);\r\n}\r\n\r\nexport function buildQueryFilters(\r\n    filters: ITablePaginatedFilter,\r\n    init?: string | string[][] | Record<string, string>,\r\n) {\r\n    const params = new URLSearchParams(init);\r\n\r\n    for (const key in filters) {\r\n        const value = (filters as any)[key];\r\n        if (key === 'filters' || value === undefined || value === null) continue;\r\n        params.set(key, String(value));\r\n    }\r\n\r\n    const colFilters = filters.filters;\r\n    for (const key in colFilters) {\r\n        if (typeof colFilters[key] === 'object' && 'value' in colFilters[key] && 'operator' in colFilters[key]) {\r\n            params.set(key, String(colFilters[key].value));\r\n            params.set(`${key}-operator`, String(colFilters[key].operator));\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { convertLocalDate, dictToArrayKV, getCampaignReportExport, getCampaignReportPaginated, getCampaignReportProactiveExport, getDateCleaned } from 'common/helpers';\r\nimport { Dictionary, IFetchData } from \"@types\";\r\nimport { exportData, getCollectionAux, getCollectionPaginated, resetCollectionPaginated, resetMainAux } from 'store/main/actions';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { TemplateBreadcrumbs, TitleDetail, DialogZyx, FieldSelect, DateRangePicker } from 'components';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { Button } from '@material-ui/core';\r\nimport TablePaginated from 'components/fields/table-paginated';\r\nimport TableZyx from 'components/fields/table-simple';\r\nimport { Range } from 'react-date-range';\r\nimport { CalendarIcon } from 'icons';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\n\r\ninterface DetailProps {\r\n    setViewSelected?: (view: string) => void;\r\n    externalUse?: boolean;\r\n}\r\n\r\nconst arrayBread = [\r\n    { id: \"view-1\", name: \"Campaign\" },\r\n    { id: \"view-2\", name: \"Campaign report\" }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    select: {\r\n        width: '200px'\r\n    },\r\n    flexgrow1: {\r\n        flexGrow: 1\r\n    },\r\n    itemDate: {\r\n        minHeight: 40,\r\n        height: 40,\r\n        border: '1px solid #bfbfc0',\r\n        borderRadius: 4,\r\n        color: 'rgb(143, 146, 161)'\r\n    },\r\n}));\r\n\r\nconst dataReportType = {\r\n    default: 'default',\r\n    proactive: 'proactive'\r\n}\r\n\r\nconst selectionKey = 'id';\r\n\r\nconst initialRange = {\r\n    startDate: new Date(new Date().setDate(1)),\r\n    endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\r\n    key: 'selection'\r\n}\r\n\r\nexport const CampaignReport: React.FC<DetailProps> = ({ setViewSelected, externalUse }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainPaginated = useSelector(state => state.main.mainPaginated);\r\n    const resExportData = useSelector(state => state.main.exportData);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [totalrow, settotalrow] = useState(0);\r\n    const [fetchDataAux, setfetchDataAux] = useState<IFetchData>({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n    const [waitExport, setWaitExport] = useState(false);\r\n\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [selectedRow, setSelectedRow] = useState<Dictionary | undefined>({});\r\n    \r\n    const [selectedRows, setSelectedRows] = useState<any>({});\r\n    const [reportType, setReportType] = useState<string>('default');\r\n\r\n    const [openDateRangeCreateDateModal, setOpenDateRangeCreateDateModal] = useState(false);\r\n    const [dateRangeCreateDate, setDateRangeCreateDate] = useState<Range>(initialRange);\r\n    \r\n    const cell = (props: any) => {\r\n        const column = props.cell.column;\r\n        const row = props.cell.row.original;\r\n        return (\r\n            <div onClick={() => {\r\n                setSelectedRow(row);\r\n                setOpenModal(true);\r\n            }}>\r\n                {column.sortType === \"datetime\" && !!row[column.id]\r\n                ? convertLocalDate(row[column.id]).toLocaleString(undefined, {\r\n                    year: \"numeric\",\r\n                    month: \"2-digit\",\r\n                    day: \"2-digit\",\r\n                    hour: \"numeric\",\r\n                    minute: \"numeric\",\r\n                    second: \"numeric\"\r\n                })\r\n                : row[column.id]}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: t(langKeys.campaign),\r\n                accessor: 'title',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.templatetype),\r\n                accessor: 'templatetype',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.templatename),\r\n                accessor: 'templatename',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.channel),\r\n                accessor: 'channel',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.rundate),\r\n                accessor: 'rundate',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.total),\r\n                accessor: 'total',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.success),\r\n                accessor: 'success',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.success_percent),\r\n                accessor: 'successp',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.failed),\r\n                accessor: 'fail',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.failed_percent),\r\n                accessor: 'failp',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.attended),\r\n                accessor: 'attended',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.locked),\r\n                accessor: 'locked',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            },\r\n            {\r\n                Header: t(langKeys.blacklisted),\r\n                accessor: 'blacklisted',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: cell\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = ({ pageSize, pageIndex, filters, sorts }: IFetchData) => {\r\n        dispatch(showBackdrop(true))\r\n        setfetchDataAux({...fetchDataAux, ...{ pageSize, pageIndex, filters, sorts }});\r\n        dispatch(getCollectionPaginated(getCampaignReportPaginated(\r\n            {\r\n                startdate: dateRangeCreateDate.startDate,\r\n                enddate: dateRangeCreateDate.endDate,\r\n                sorts: sorts,\r\n                filters: filters,\r\n                take: pageSize,\r\n                skip: pageIndex * pageSize,\r\n            }\r\n        )));\r\n    };\r\n\r\n    const triggerExportData = () => {\r\n        if (Object.keys(selectedRows).length === 0) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_record_selected)}));\r\n            return null;\r\n        }\r\n        if (!reportType) {\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_type_selected)}));\r\n            return null;\r\n        }\r\n        if (reportType === dataReportType.default) {\r\n            dispatch(exportData(getCampaignReportExport(\r\n                Object.keys(selectedRows).reduce((ad: any[], d: any) => {\r\n                    ad.push({\r\n                        campaignid: d.split('_')[0],\r\n                        rundate: d.split('_')[1]\r\n                    })\r\n                    return ad;\r\n                }, [])),\r\n                `${t(langKeys.report)}`,\r\n                'excel',\r\n                true,\r\n                [\r\n                    {key: 'templatetype', alias: t(langKeys.templatetype)},\r\n                    {key: 'date', alias: t(langKeys.date)},\r\n                    {key: 'campaign', alias: t(langKeys.campaign)},\r\n                    {key: 'description', alias: t(langKeys.description)},\r\n                    {key: 'ticketnum', alias: t(langKeys.ticket)},\r\n                    {key: 'group', alias: t(langKeys.group)},\r\n                    {key: 'userid', alias: t(langKeys.userid)},\r\n                    {key: 'agent', alias: t(langKeys.agent)},\r\n                    {key: 'contact', alias: t(langKeys.contact)},\r\n                    {key: 'template', alias: t(langKeys.templatename)},\r\n                    {key: 'rundate', alias: t(langKeys.rundate)},\r\n                    {key: 'runtime', alias: t(langKeys.runtime)},\r\n                    {key: 'firstreplydate', alias: t(langKeys.firstreplydate)},\r\n                    {key: 'firstreplytime', alias: t(langKeys.firstreplytime)},\r\n                    {key: 'finishdate', alias: t(langKeys.finishconversationdate)},\r\n                    {key: 'finishtime', alias: t(langKeys.finishconversationtime)},\r\n                    {key: 'realduration', alias: t(langKeys.realduration)},\r\n                    {key: 'classification', alias: t(langKeys.classification)},\r\n                    {key: 'conversationid', alias: t(langKeys.conversationid)},\r\n                    {key: 'status', alias: t(langKeys.status)},\r\n                    {key: 'log', alias: t(langKeys.log)},\r\n                ]\r\n            ));\r\n            dispatch(showBackdrop(true));\r\n            setWaitExport(true);\r\n        }\r\n        else if (reportType === dataReportType.proactive) {\r\n            dispatch(exportData(getCampaignReportProactiveExport(\r\n                Object.keys(selectedRows).reduce((ad: any[], d: any) => {\r\n                    ad.push({\r\n                        campaignid: d.split('_')[0],\r\n                        rundate: d.split('_')[1]\r\n                    })\r\n                    return ad;\r\n                }, [])),\r\n                `${t(langKeys.report)}`,\r\n                'excel',\r\n                true,\r\n                [\r\n                    {key: 'templatetype', alias: t(langKeys.templatetype)},\r\n                    {key: 'campaign', alias: t(langKeys.campaign)},\r\n                    {key: 'description', alias: t(langKeys.description)},\r\n                    {key: 'template', alias: t(langKeys.template)},\r\n                    {key: 'ticketnum', alias: t(langKeys.ticket)},\r\n                    {key: 'year', alias: t(langKeys.year)},\r\n                    {key: 'month', alias: t(langKeys.month)},\r\n                    {key: 'ticketdate', alias: t(langKeys.ticketdate)},\r\n                    {key: 'tickettime', alias: t(langKeys.tickettime)},\r\n                    {key: 'contact', alias: t(langKeys.contact)},\r\n                    {key: 'client', alias: t(langKeys.client)},\r\n                    {key: 'channel', alias: t(langKeys.channel)},\r\n                    {key: 'group', alias: t(langKeys.group)},\r\n                    {key: 'firstagent', alias: t(langKeys.firstagent)},\r\n                    {key: 'message', alias: t(langKeys.message)},\r\n                    {key: 'classification', alias: t(langKeys.classification)},\r\n                    {key: 'lastagent', alias: t(langKeys.lastagent)},\r\n                    {key: 'status', alias: t(langKeys.status)},\r\n                    {key: 'log', alias: t(langKeys.log)},\r\n                ]\r\n            ));\r\n            dispatch(showBackdrop(true));\r\n            setWaitExport(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(resetCollectionPaginated());\r\n        fetchData(fetchDataAux);\r\n        return () => {\r\n            dispatch(resetCollectionPaginated());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitExport) {\r\n            if (!resExportData.loading && !resExportData.error) {\r\n                dispatch(showBackdrop(false));\r\n                setWaitExport(false);\r\n                resExportData.url?.split(\",\").forEach(x => window.open(x, '_blank'))\r\n            } else if (resExportData.error) {\r\n                const errormessage = t(resExportData.code || \"error_unexpected_error\", { module: t(langKeys.blacklist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitExport(false);\r\n            }\r\n        }\r\n    }, [resExportData, waitExport]);\r\n\r\n    useEffect(() => {\r\n        if (!mainPaginated.loading && !mainPaginated.error) {\r\n            setPageCount(Math.ceil(mainPaginated.count / fetchDataAux.pageSize));\r\n            settotalrow(mainPaginated.count);\r\n            dispatch(showBackdrop(false));\r\n        }\r\n    }, [mainPaginated]);\r\n\r\n    const ButtonsElement = () => {\r\n        return (\r\n            <div style={{display: 'flex', gap: '8px'}}>\r\n                <DateRangePicker\r\n                    open={openDateRangeCreateDateModal}\r\n                    setOpen={setOpenDateRangeCreateDateModal}\r\n                    range={dateRangeCreateDate}\r\n                    onSelect={setDateRangeCreateDate}\r\n                >\r\n                    <Button\r\n                        className={classes.itemDate}\r\n                        startIcon={<CalendarIcon />}\r\n                        onClick={() => setOpenDateRangeCreateDateModal(!openDateRangeCreateDateModal)}\r\n                    >\r\n                        {getDateCleaned(dateRangeCreateDate.startDate!) + \" - \" + getDateCleaned(dateRangeCreateDate.endDate!)}\r\n                    </Button>\r\n                </DateRangePicker>\r\n                <Button\r\n                    disabled={mainPaginated.loading}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SearchIcon style={{ color: 'white' }} />}\r\n                    style={{ width: 120, backgroundColor: \"#55BD84\" }}\r\n                    onClick={() => fetchData(fetchDataAux)}\r\n                >{t(langKeys.search)}\r\n                </Button>\r\n                <FieldSelect\r\n                    uset={true}\r\n                    variant=\"outlined\"\r\n                    label={t(langKeys.reporttype)}\r\n                    className={classes.select}\r\n                    valueDefault={reportType}\r\n                    onChange={(value) => setReportType(value?.key)}\r\n                    data={dictToArrayKV(dataReportType)}\r\n                    optionDesc=\"value\"\r\n                    optionValue=\"key\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            {!externalUse && <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={setViewSelected}\r\n                    />\r\n                    <TitleDetail\r\n                        title={t(langKeys.report)}\r\n                    />\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        style={{ backgroundColor: \"#FB5F5F\" }}\r\n                        onClick={() => setViewSelected && setViewSelected(\"view-1\")}\r\n                    >{t(langKeys.back)}</Button>\r\n                </div>\r\n            </div>}\r\n            {externalUse && <div style={{ height: 10 }}></div>}\r\n            <div className={externalUse ? '' : classes.containerDetail}>\r\n                <TablePaginated\r\n                    columns={columns}\r\n                    data={mainPaginated.data}\r\n                    totalrow={totalrow}\r\n                    loading={mainPaginated.loading}\r\n                    pageCount={pageCount}\r\n                    download={true}\r\n                    fetchData={fetchData}\r\n                    ButtonsElement={ButtonsElement}\r\n                    exportPersonalized={triggerExportData}\r\n                    useSelection={true}\r\n                    selectionKey={selectionKey}\r\n                    setSelectedRows={setSelectedRows}\r\n                />\r\n            </div>\r\n            {openModal && <ModalReport\r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n                row={selectedRow}\r\n            />}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface ModalProps {\r\n    openModal: boolean;\r\n    setOpenModal: (value: boolean) => any;\r\n    row: any;\r\n}\r\n\r\nconst ModalReport: React.FC<ModalProps> = ({ openModal, setOpenModal, row }) => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const mainAux = useSelector(state => state.main.mainAux);\r\n    const [waitView, setWaitView] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: t(langKeys.contact),\r\n                accessor: 'contact',\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n            },\r\n            {\r\n                Header: t(langKeys.log),\r\n                accessor: 'log',\r\n            }\r\n        ],\r\n        []\r\n    );\r\n\r\n    const handleCancelModal = () => {\r\n        setOpenModal(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (row !== null) {\r\n            dispatch(getCollectionAux(getCampaignReportExport(\r\n                [{\r\n                    campaignid: row.id.split('_')[0],\r\n                    rundate: row.id.split('_')[1],\r\n                }]\r\n            )))\r\n            setWaitView(true);\r\n            return () => {\r\n                dispatch(resetMainAux());\r\n            };\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitView) {\r\n            if (!mainAux.loading && !mainAux.error) {\r\n                setWaitView(false);\r\n            }\r\n        }\r\n    }, [mainAux, waitView]);\r\n\r\n    return (\r\n        <DialogZyx\r\n            maxWidth=\"md\"\r\n            open={openModal}\r\n            title={`${row.title} ${convertLocalDate(row.rundate).toLocaleString()}`}\r\n            button1Type=\"button\"\r\n            buttonText1={t(langKeys.close)}\r\n            handleClickButton1={handleCancelModal}\r\n        >\r\n            <div className=\"row-zyx\">\r\n                <TableZyx\r\n                    columns={columns}\r\n                    data={mainAux.data}\r\n                    loading={mainAux.loading}\r\n                    filterGeneral={false}\r\n                    download={false}\r\n                />\r\n            </div>\r\n        </DialogZyx>\r\n    )\r\n}"],"sourceRoot":""}