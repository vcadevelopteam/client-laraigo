{"version":3,"sources":["pages/SLA.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js"],"names":["useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","title","lineHeight","height","color","palette","text","primary","DetailSLA","data","row","edit","setViewSelected","multiData","fetchData","arrayBread","classes","useState","waitSave","setWaitSave","executeRes","useSelector","state","main","execute","dispatch","useDispatch","t","useTranslation","user","login","validateToken","dataStatus","success","dataSupplier","dataGroups","datachannels","useForm","defaultValues","type","id","slaid","description","company","communicationchannelid","usergroup","status","totaltmo","totaltmomin","totaltmopercentmax","usertmo","usertmomin","usertmopercentmax","usertme","productivitybyhour","usertmepercentmax","organization","operation","register","handleSubmit","setValue","errors","formState","React","useEffect","validate","value","length","langKeys","field_required","loading","error","errormessage","code","module","sla","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","onSubmit","manageConfirmation","visible","question","confirmation_save","callback","insSLA","style","width","display","justifyContent","breadcrumbs","name","detail","handleClick","newsla","gap","alignItems","variant","startIcon","backgroundColor","onClick","back","className","save","label","onChange","valueDefault","orgdesc","disabled","supplier","domainvalue","optionDesc","optionValue","channel_plural","map","o","join","group","uset","prefixTranslation","marginBottom","tmopercentobj","parseInt","SLA","history","useHistory","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","configuration_plural","app_sla","redirectFunc","view","push","paths","CONFIGURATION","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","extraOption","duplicate","extraFunction","handleDuplicate","ExtraICon","fill","deleteFunction","handleDelete","editFunction","handleEdit","Header","channel","sortType","Number","toFixed","toLowerCase","toUpperCase","getCollection","getSLASel","getMultiCollection","getValuesFromDomain","getCommChannelLst","resetAllMain","successful_delete","confirmation_delete","titlemodule","count","mainData","download","onClickRow","ButtonsElement","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/80.b01063fa.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldEdit, FieldSelect, FieldMultiSelect } from 'components';\r\nimport { getSLASel, getValuesFromDomain, insSLA,getCommChannelLst } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getCollection, resetAllMain, getMultiCollection, execute } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { DuplicateIcon } from 'icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport paths from 'common/constants/paths';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\ninterface DetailSLAProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n    arrayBread?: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        lineHeight: '48px',\r\n        // fontWeight: 'bold',\r\n        height: '48px',\r\n        color: theme.palette.text.primary,\r\n    },\r\n}));\r\n\r\nconst DetailSLA: React.FC<DetailSLAProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData,arrayBread }) => {\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n\r\n    const dataStatus = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const dataSupplier = multiData[1] && multiData[1].success ? multiData[1].data : [];\r\n    const dataGroups = multiData[2] && multiData[2].success ? multiData[2].data : [];\r\n    const datachannels = multiData[3] && multiData[3].success ? multiData[3].data : [];\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            type: 'NINGUNO',\r\n            id: edit? row?.slaid : 0,\r\n            description: edit? row?.description: '',\r\n            company: row?.company || '',\r\n            communicationchannelid:  row?.communicationchannelid || '',\r\n            usergroup: row?.usergroup || '',\r\n            status: row?.status || 'ACTIVO',\r\n            totaltmo: row?.totaltmo || '',\r\n            totaltmomin: row?.totaltmomin || '',\r\n            totaltmopercentmax: row?.totaltmopercentmax || 0,\r\n            usertmo: row?.usertmo || '',\r\n            usertmomin: row?.usertmomin || '',\r\n            usertmopercentmax: row?.usertmopercentmax || 0,\r\n            usertme: row?.usertme || '',\r\n            productivitybyhour: row?.productivitybyhour || 0,\r\n            usertmepercentmax: row?.usertmepercentmax || 0,\r\n\r\n            organization: row?.organization || '',\r\n            operation: edit ? \"EDIT\" : \"INSERT\"\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        register('type');\r\n        register('id');\r\n        register('description', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('company');\r\n        register('usergroup');\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('totaltmo', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('totaltmomin', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('totaltmopercentmax', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usertmo', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usertmomin', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usertmopercentmax', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usertme', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('productivitybyhour', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('usertmepercentmax', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n\r\n        register('communicationchannelid', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('organization');\r\n    }, [edit, register]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.sla).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n    \r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(insSLA(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread, { id: \"view-2\", name: `${t(langKeys.sla)} ${t(langKeys.detail)}` }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.description}` : t(langKeys.newsla)}\r\n                        />\r\n                    </div>\r\n            \r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            startIcon={<SaveIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        >{t(langKeys.save)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                            <FieldEdit\r\n                                label={t(langKeys.organization)} \r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('organization', value)}\r\n                                valueDefault={row ? (row.orgdesc || \"\") : user?.orgdesc}\r\n                                error={errors?.organization?.message}\r\n                                disabled={true}\r\n                            />\r\n                            <FieldSelect\r\n                                label={t(langKeys.supplier)} \r\n                                className=\"col-6\"\r\n                                valueDefault={row ? (row.company || \"\") : \"\"}\r\n                                onChange={(value) => setValue('company', value? value.domainvalue: '')}\r\n                                error={errors?.company?.message}\r\n                                data={dataSupplier}\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                    </div>  \r\n                    <div className=\"row-zyx\">\r\n                            <FieldEdit\r\n                                label={t(langKeys.description)} //transformar a multiselect\r\n                                className=\"col-12\"\r\n                                onChange={(value) => setValue('description', value)}\r\n                                valueDefault={edit? row?.description: ''}\r\n                                error={errors?.description?.message}\r\n                            />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                            <FieldMultiSelect\r\n                                label={t(langKeys.channel_plural)} //transformar a multiselect\r\n                                className=\"col-12\"\r\n                                onChange={(value) => setValue('communicationchannelid', value.map((o: Dictionary) => o.communicationchannelid).join())}\r\n                                valueDefault={row?.communicationchannelid || \"\"}\r\n                                error={errors?.communicationchannelid?.message}\r\n                                data={datachannels}\r\n                                optionDesc=\"communicationchanneldesc\"\r\n                                optionValue=\"communicationchannelid\"\r\n                            />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                            <FieldMultiSelect\r\n                                label={t(langKeys.group)} \r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('usergroup', value.map((o: Dictionary) => o.domainvalue).join())}\r\n                                valueDefault={row?.usergroup || \"\"}\r\n                                error={errors?.usergroup?.message}\r\n                                data={dataGroups}\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                            <FieldSelect\r\n                                label={t(langKeys.status)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row?.status || \"ACTIVO\"}\r\n                                onChange={(value) => setValue('status', value? value.domainvalue: '')}\r\n                                error={errors?.status?.message}\r\n                                uset={true}\r\n                                prefixTranslation=\"status_\"\r\n                                data={dataStatus}\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                    </div>\r\n                    <div style={{ marginBottom: '16px' }}>\r\n                        <div className={classes.title}>{t(langKeys.detail)}</div>\r\n                        <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                type=\"time\"\r\n                                label={\"TMO total min (HH:MM)\"} \r\n                                className=\"col-4\"\r\n                                onChange={(value) => setValue('totaltmomin', value)}\r\n                                valueDefault={row ? (row.totaltmomin || \"\") : \"\"}\r\n                                error={errors?.totaltmomin?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    type=\"time\"\r\n                                    label={\"TMO total max (HH:MM)\"} \r\n                                    className=\"col-4\"\r\n                                    onChange={(value) => setValue('totaltmo', value)}\r\n                                    valueDefault={row ? (row.totaltmo || \"\") : \"\"}\r\n                                    error={errors?.totaltmo?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    type=\"number\"\r\n                                    label={`${t(langKeys.tmopercentobj)}%`} \r\n                                    className=\"col-4\"\r\n                                    onChange={(value) => setValue('totaltmopercentmax', value)}\r\n                                    valueDefault={row ? (row.totaltmopercentmax || \"\") : \"\"}\r\n                                    error={errors?.totaltmopercentmax?.message}\r\n                                />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                type=\"time\"\r\n                                label={\"TMO user min (HH:MM)\"} \r\n                                className=\"col-4\"\r\n                                onChange={(value) => setValue('usertmomin', value)}\r\n                                valueDefault={row ? (row.usertmomin || \"\") : \"\"}\r\n                                error={errors?.usertmomin?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    type=\"time\"\r\n                                    label={\"TMO user max (HH:MM)\"} \r\n                                    className=\"col-4\"\r\n                                    onChange={(value) => setValue('usertmo', value)}\r\n                                    valueDefault={row ? (row.usertmo || \"\") : \"\"}\r\n                                    error={errors?.usertmo?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    type=\"number\"\r\n                                    label={`${t(langKeys.usertmopercentmax)}%`} \r\n                                    className=\"col-4\"\r\n                                    onChange={(value) => setValue('usertmopercentmax', value)}\r\n                                    valueDefault={row ? (row.usertmopercentmax || \"\") : \"\"}\r\n                                    error={errors?.usertmopercentmax?.message}\r\n                                />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                    type=\"time\"\r\n                                    label={\"TME user max (HH:MM)\"} \r\n                                    className=\"col-4\"\r\n                                    onChange={(value) => setValue('usertme', value)}\r\n                                    valueDefault={row ? (row.usertme || \"\") : \"\"}\r\n                                    error={errors?.usertme?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    type=\"number\"\r\n                                    label={`${t(langKeys.usertmepercentmax)}%`} \r\n                                    className=\"col-4\"\r\n                                    onChange={(value) => setValue('usertmepercentmax', value)}\r\n                                    valueDefault={row ? (row.usertmepercentmax || \"\") : \"\"}\r\n                                    error={errors?.usertmepercentmax?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.productivitybyhour)} \r\n                                    className=\"col-4\"\r\n                                    type='number'\r\n                                    onChange={(value) => setValue('productivitybyhour', value)}\r\n                                    valueDefault={row ? (parseInt(row.productivitybyhour) || \"\") : \"\"}\r\n                                    error={errors?.productivitybyhour?.message}\r\n                                />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst SLA: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const arrayBread = [\r\n        { id: \"view-0\", name: t(langKeys.configuration_plural) },\r\n        { id: \"view-1\", name: t(langKeys.app_sla) },\r\n    ];\r\n    function redirectFunc(view:string){\r\n        if(view ===\"view-0\"){\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'slaid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            extraOption={t(langKeys.duplicate)}\r\n                            extraFunction={() => handleDuplicate(row)}\r\n                            ExtraICon={() => <DuplicateIcon width={28} style={{ fill: '#7721AD' }} />}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.organization),\r\n                accessor: 'orgdesc',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.channel),\r\n                accessor: 'communicationchanneldesc',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.tmopercentobj),\r\n                accessor: 'totaltmopercentmax',\r\n                NoFilter: true,\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: (props: any) => {\r\n                    const { totaltmopercentmax } = props.cell.row.original;\r\n                    return `${(Number(totaltmopercentmax) || 0).toFixed(2)} %`;\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.usertmopercentmax),\r\n                accessor: 'usertmopercentmax',\r\n                NoFilter: true,\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: (props: any) => {\r\n                    const { usertmopercentmax } = props.cell.row.original;\r\n                    return `${(Number(usertmopercentmax) || 0).toFixed(2)} %`;\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.usertmepercentmax),\r\n                accessor: 'usertmepercentmax',\r\n                NoFilter: true,\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: (props: any) => {\r\n                    const { usertmepercentmax } = props.cell.row.original;\r\n                    return `${(Number(usertmepercentmax) || 0).toFixed(2)} %`;\r\n                }\r\n            },            \r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n            \r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getSLASel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"ESTADOGENERICO\"),\r\n            getValuesFromDomain(\"EMPRESA\"),\r\n            getValuesFromDomain(\"GRUPOS\"),\r\n            getCommChannelLst()\r\n        ]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.sla).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: false });\r\n    }\r\n\r\n    const handleDuplicate = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insSLA({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.slaid })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <div style={{ display: 'flex',  justifyContent: 'space-between',  alignItems: 'center'}}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={redirectFunc}\r\n                    />\r\n                </div>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.app_sla, { count: 2 })}\r\n                    data={mainResult.mainData.data}\r\n                    download={true}\r\n                    loading={mainResult.mainData.loading}\r\n                    register={true}\r\n                    onClickRow={handleEdit}\r\n                    ButtonsElement={() => (\r\n                        <Button\r\n                            disabled={mainResult.mainData.loading}\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => history.push(paths.CONFIGURATION)}\r\n                        >{t(langKeys.back)}</Button>\r\n                    )}\r\n                    handleRegister={handleRegister}\r\n                // fetchData={fetchData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailSLA\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default SLA;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}