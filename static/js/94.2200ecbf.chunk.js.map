{"version":3,"sources":["pages/Orders.tsx","../node_modules/@material-ui/icons/Clear.js"],"names":["useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","DetailOrders","data","row","multiData","edit","setViewSelected","fetchData","classes","t","useTranslation","mainResult","useSelector","state","main","dataorders","success","columns","React","useMemo","Header","langKeys","picture","accessor","NoFilter","Cell","props","cell","original","console","log","alt","title","src","imagelink","variant","style","margin","description","type","sortType","paddingLeft","quantity","paddingRight","currency","unitaryprice","unitprice","formatNumber","subtotal","amount","width","display","justifyContent","breadcrumbs","id","name","orders","ordersdetail","handleClick","ordernumber","orderid","gap","alignItems","color","startIcon","backgroundColor","onClick","back","client","phone","channel","ticket_numeroticket","ticketnum","className","titlemodule","orderlist","download","loading","toolsFooter","filterGeneral","total","reduce","acc","x","Orders","history","useHistory","dispatch","useDispatch","executeResult","execute","useState","mainData","setMainData","viewSelected","rowSelected","setRowSelected","waitSave","setWaitSave","isComponent","minWidth","extraFunction","handleEdit","extraOption","view","date","createdate","formatDate","withTime","orderstatus","getCollection","getOrderSel","useEffect","error","errormessage","code","module","corporation_plural","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_delete","map","typedesc","toLowerCase","toUpperCase","statusdesc","status","getMultiCollection","getOrderLineSel","count","onClickRow","push","paths","CONFIGURATION","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","_default","createElement","d"],"mappings":"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","file":"static/js/94.2200ecbf.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TemplateBreadcrumbs, TemplateIcons, TitleDetail } from 'components';\r\nimport { formatDate, formatNumber, getOrderLineSel, getOrderSel, insCorp } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCollection, execute, getMultiCollection } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport paths from 'common/constants/paths';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n}));\r\n\r\nconst Orders: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [mainData, setMainData] = useState<any>([]);\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'orderid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            extraFunction={() => handleEdit(row)}\r\n                            extraOption={t(langKeys.view)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.ordernumber),\r\n                accessor: 'ordernumber',\r\n                NoFilter: true,                \r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return row.orderid\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.date),\r\n                accessor: 'createdate',\r\n                NoFilter: true,\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original.createdate;\r\n                    let formatteddate = formatDate(row, {withTime: false})\r\n                    return formatteddate\r\n                }\r\n                // Cell: (props: any) => {\r\n                //     const { type } = props.cell.row.original;\r\n                //     return (t(`type_corp_${type}`.toLowerCase()) || \"\").toUpperCase()\r\n                // }\r\n            },\r\n            {\r\n                Header: t(langKeys.channel),\r\n                accessor: 'channel',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: `N° ${t(langKeys.ticket_numeroticket)}`,\r\n                accessor: 'ticketnum',\r\n                NoFilter: true,\r\n                // prefixTranslation: 'status_',\r\n                // Cell: (props: any) => {\r\n                //     const { status } = props.cell.row.original;\r\n                //     return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                // }\r\n            },\r\n            {\r\n                Header: t(langKeys.client),\r\n                accessor: 'name',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.phone),\r\n                accessor: 'phone',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.currency),\r\n                accessor: 'currency',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.total),\r\n                accessor: 'amount',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.orderstatus),\r\n                accessor: 'status',\r\n                NoFilter: true\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getOrderSel()));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.corporation_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    useEffect(() => {\r\n        setMainData(mainResult.mainData.data.map(x => ({\r\n            ...x,\r\n            typedesc: (t(`type_corp_${x.type}`.toLowerCase()) || \"\").toUpperCase(),\r\n            statusdesc: (t(`status_${x.status}`.toLowerCase()) || \"\").toUpperCase()\r\n        })))\r\n    }, [mainResult.mainData.data])\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        dispatch(getMultiCollection([\r\n            getOrderLineSel(row.orderid),\r\n        ]));\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    function redirectFunc(view: string) {\r\n        if (view === \"view-0\") {\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.orders, { count: 2 })}\r\n                    onClickRow={handleEdit}\r\n                    data={mainData}\r\n                    download={true}\r\n                    loading={mainResult.mainData.loading}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailOrders\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\ninterface DetailOrdersProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n}\r\n\r\nconst DetailOrders: React.FC<DetailOrdersProps> = ({ data: { row, edit }, multiData, fetchData, setViewSelected }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const dataorders = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: t(langKeys.picture),\r\n                accessor: 'imagelink',\r\n                NoFilter: true,                \r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    console.log(row)\r\n                    return <Avatar alt={row.title} src={row.imagelink} variant=\"square\" style={{margin: \"6px 24px 6px 16px\"}}/>\r\n\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                type: 'text',\r\n                sortType: 'text',\r\n                Cell: (props: any) => {\r\n                    const { description } = props.cell.row.original;\r\n                    return <div style={{paddingLeft: 16}}>{description}</div>\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.quantity),\r\n                accessor: 'quantity',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: (props: any) => {\r\n                    const { quantity } = props.cell.row.original;\r\n                    return <div style={{paddingRight: 24}}>{quantity}</div>\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.currency),\r\n                accessor: 'currency',\r\n                type: 'text',\r\n                sortType: 'text',\r\n                Cell: (props: any) => {\r\n                    const { currency } = props.cell.row.original;\r\n                    return <div style={{paddingLeft: 16}}>{currency}</div>\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.unitaryprice),\r\n                accessor: 'unitprice',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: (props: any) => {\r\n                    const { unitprice } = props.cell.row.original;\r\n                    return <div style={{paddingRight: 24}}>{formatNumber(unitprice || 0)}</div>\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.subtotal),\r\n                accessor: 'amount',\r\n                type: 'number',\r\n                sortType: 'number',\r\n                Cell: (props: any) => {\r\n                    const { amount } = props.cell.row.original;\r\n                    return <div style={{paddingRight: 24}}>{formatNumber(amount || 0)}</div>\r\n                }\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={[{ id: \"view-1\", name: t(langKeys.orders) }, { id: \"view-2\", name: t(langKeys.ordersdetail) }]}\r\n                        handleClick={setViewSelected}\r\n                    />\r\n                    <TitleDetail\r\n                        title={`${t(langKeys.ordernumber)}: ${row?.orderid}`}\r\n                    />\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        startIcon={<ClearIcon color=\"secondary\" />}\r\n                        style={{ backgroundColor: \"#FB5F5F\" }}\r\n                        onClick={() => setViewSelected(\"view-1\")}\r\n                    >{t(langKeys.back)}</Button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div style={{width: \"100%\", display: \"flex\", justifyContent: \"space-between\", padding: 10}}>\r\n                <div style={{fontSize: \"1.2em\"}}>{t(langKeys.client)}: {row?.name}</div>\r\n                <div style={{fontSize: \"1.2em\"}}>{t(langKeys.phone)}: {row?.phone}</div>\r\n                <div style={{fontSize: \"1.2em\"}}>{t(langKeys.channel)}: {row?.channel}</div>\r\n                <div style={{fontSize: \"1.2em\"}}>{t(langKeys.ticket_numeroticket)}: {row?.ticketnum}</div>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            </div>\r\n            <div className={classes.containerDetail}>\r\n                <div className=\"row-zyx\">\r\n                    <TableZyx\r\n                        columns={columns}\r\n                        titlemodule={t(langKeys.orderlist)}\r\n                        data={dataorders}\r\n                        download={true}\r\n                        loading={mainResult.multiData.loading}\r\n                        toolsFooter={false}\r\n                        filterGeneral={false}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div style={{width: \"100%\", display: \"flex\", justifyContent: \"space-between\", padding: 15}}>\r\n                <div style={{fontSize: \"1.2em\"}}></div>\r\n                <div style={{fontSize: \"1.2em\", fontWeight: \"bold\"}}>{t(langKeys.total)}: {row?.currency === \"PEN\"? \"S/ \": \"$ \"}{formatNumber(dataorders.reduce((acc,x)=>acc + x.amount,0))}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Orders;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;"],"sourceRoot":""}