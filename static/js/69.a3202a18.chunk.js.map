{"version":3,"sources":["pages/channels/ChannelAddChatWeb.tsx","store/channel/actions.ts","../node_modules/@material-ui/icons/esm/Close.js","../node_modules/@material-ui/icons/esm/CloudUpload.js"],"names":["getImgUrl","file","URL","createObjectURL","ex","console","error","isEmpty","str","length","useTabPanelStyles","makeStyles","theme","root","border","borderRadius","TabPanel","children","value","index","classes","role","hidden","className","id","style","display","p","useTabInterfacetyles","text","fontWeight","fontSize","color","icon","cursor","palette","primary","main","imgContainer","backgroundColor","width","height","alignItems","justifyContent","img","TabPanelInterface","form","setValue","getValues","errors","formState","t","useTranslation","useState","chatBtn","setChatBtn","headerBtn","setHeaderBtn","botBtn","setBotBtn","chatImgUrl","headerImgUrl","botImgUrl","container","direction","item","xs","sm","md","lg","xl","m","i18nKey","langKeys","title","variant","fullWidth","placeholder","chatHeaderTitle","name","size","defaultValue","onChange","e","target","interface","chattitle","message","helperText","subtitle","chatHeaderSubtitle","chatsubtitle","chatButton","flexDirection","flexWrap","src","alt","marginLeft","accept","type","files","onClick","document","getElementById","click","iconbutton","header","iconheader","botButton","iconbot","useTabColorStyles","backdrop","zIndex","drawer","colorOption","padding","minWidth","minHeight","TabPanelColors","headerColor","setHeaderColor","setBackgroundColor","borderColor","setBorderColor","clientMessageColor","setClientMessageColor","botMessageColor","setBotMessageColor","chatHeader","hex","chatBackground","chatBorder","clientMessage","count","botMessage","useTemplateStyles","spacing","margin","fieldContainer","headertitle","closeBtn","NameTemplate","data","onClose","required","setRequired","clsx","checked","_","v","label","errorText","validationtext","inputValidation","inputvalidation","validationOnKeychange","keyvalidation","useTabFormStyles","FIRSTNAME_FIELD","LASTNAME_FIELD","PHONE_FIELD","EMAIL_FIELD","DOCUMENT_FIELD","SUPPLYNUMBER_FIELD","CONTACT","templates","node","field","lastname","phone","email","supplynumber","contact","TabPanelForm","defFields","useRef","map","x","enable","setEnable","fieldTemplate","setFieldTemplate","current","fields","setFields","useEffect","handleCloseTemplate","key","newFields","filter","wantAddFormToSiteQuestion","selectField","marginRight","displayEmpty","select","temp","includes","push","getMenuTemplates","disabled","add","i","useTabBubbleStyles","TabPanelBubble","waitingImg","setWaitingImg","waitingImgUrl","enableWaitingMessage","textOfTheMessage","waitingMessageStyle","useTabExtrasStyles","TabPanelExtras","uploadFile","setUploadFile","uploadVideo","setUploadVideo","uploadImage","setUploadImage","uploadAudio","setUploadAudio","uploadLocation","setUploadLocation","reloadChat","setReloadChat","poweredBy","setPoweredBy","persistentInput","setPersistentInput","abandonEvent","setAbandonEvent","alertSound","setAlertSound","formHistory","setFormHistory","enableMetadata","setEnableMetadata","enableBotName","setEnableBotName","sendLocation","refreshChat","inputAlwaysEnabled","abandonmentEvent","newMessageRing","formBaseHistory","sendMetaData","multiline","minRows","maxRows","botName","useStyles","scriptPreview","position","overflowWrap","overflow","scriptPreviewGradient","backgroundImage","top","bottom","left","right","scriptPreviewCopyBtn","transform","alignSelf","scriptPreviewFullViewTxt","WebkitTouchCallout","WebkitUserSelect","KhtmlUserSelect","MozUserSelect","msUserSelect","userSelect","tabs","tab","maxWidth","flexGrow","activetab","ChannelAddChatWeb","edit","history","useHistory","location","useLocation","dispatch","useDispatch","tabIndex","setTabIndes","showFinalStep","setShowFinalStep","insertChannel","useSelector","state","channel","editChannel","service","servicecredentials","JSON","parse","paths","CHANNELS","resetInsertChannel","resetEditChannel","loading","showSnackbar","show","severity","channelcreatesuccess","success","channeleditsuccess","useForm","defaultValues","background","client","bot","bubble","active","messagebubble","iconbubble","extra","uploadfile","uploadaudio","uploadimage","uploadlocation","uploadvideo","reloadchat","poweredby","persistentinput","abandonevent","alertsound","formhistory","enablemetadata","customcss","customjs","botnameenabled","botnametext","mandatoryStrField","field_required","undefined","mandatoryFileField","register","validate","href","preventDefault","integrationid","previoustext","activeLaraigoOnYourWebsite","elevation","TabIndicatorProps","handleSubmit","next","ChannelAddEnd","integrationId","onSubmit","auto","hexIconColor","values","communicationchannelid","body","getEditChatWebChannel","getEditChannel","getInsertChatwebChannel","insertChannel2","useFinalStepStyles","textAlign","button","textTransform","communicationchanneldesc","setName","coloricon","setcoloricon","setHexIconColor","commchannelfinishreg","givechannelname","valueDefault","lineHeight","mb","givechannelcolor","fill","paddingLeft","finishreg","chatwebstep","pageBreakInside","fontFamily","wordWrap","close","getChannelsList","accessToken","appId","callAPI","ChannelsService","getPagelist","types","actionTypes","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","activateChannel","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deleteChannel","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","payload","a","chatIconFile","headerIconFile","botIconFile","bubbleIconFile","chatIcon","headerIcon","botIcon","bubbleIcon","fd","FormData","append","CommonService","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","INSERT_CHANNEL_RESET","channelType","editchnl","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","EDIT_CHANNEL_RESET","getFacebookPages","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","resetGetFacebookPages","FACEBOOK_PAGES_RESET","getMessengerPages","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","resetGetMessengerPages","MESSENGER_PAGES_RESET","getInstagramPages","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","resetGetInstagramPages","INSTAGRAM_PAGES_RESET","getInstagramDMPages","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","resetGetInstagramDMPages","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE","createSvgIcon","React","d"],"mappings":"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","file":"static/js/69.a3202a18.chunk.js","sourcesContent":["import React, { FC, useEffect, useRef, useState } from 'react';\r\nimport { AppBar, Box, Button, makeStyles, Link, Tab, Tabs, Typography, TextField, Grid, Select, IconButton, FormControl, MenuItem, Divider, Breadcrumbs, FormHelperText } from '@material-ui/core';\r\nimport { ColorInput, FieldEdit, IOSSwitch } from 'components';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport clsx from 'clsx';\r\nimport { langKeys } from 'lang/keys';\r\nimport { ColorChangeHandler } from 'react-color';\r\nimport { Close, CloudUpload } from '@material-ui/icons';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useForm, UseFormReturn } from 'react-hook-form';\r\nimport { IChannel, IChatWebAdd, IChatWebAddFormField } from '@types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { editChannel as getEditChannel, insertChannel2, resetInsertChannel, resetEditChannel } from 'store/channel/actions';\r\nimport { useSelector } from 'hooks';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { getEditChatWebChannel, getInsertChatwebChannel } from 'common/helpers';\r\nimport paths from 'common/constants/paths';\r\nimport { ZyxmeMessengerIcon } from 'icons';\r\n\r\ninterface TabPanelProps {\r\n    value: string;\r\n    index: string;\r\n}\r\n\r\ninterface FieldTemplate {\r\n    text: React.ReactNode;\r\n    node: (onClose: (key: string) => void, data: IChatWebAddFormField, form: UseFormReturn<IChatWebAdd>, index: number) => React.ReactNode;\r\n    data: IChatWebAddFormField;\r\n}\r\n\r\nconst getImgUrl = (file: File | string | null): string | null => {\r\n    if (!file) return null;\r\n\r\n    try {\r\n        if (typeof file === \"string\") {\r\n            return file;\r\n        } else if (typeof file === \"object\") {\r\n            return URL.createObjectURL(file);\r\n        }\r\n        return null;\r\n    } catch (ex) {\r\n        console.error(ex);\r\n        return null;\r\n    }\r\n}\r\n\r\nconst isEmpty = (str?: string) => {\r\n    return !str || str.length === 0;\r\n}\r\n\r\nconst useTabPanelStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n    },\r\n}));\r\n\r\nconst TabPanel: FC<TabPanelProps> = ({ children, value, index }) => {\r\n    const classes = useTabPanelStyles();\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            className={classes.root}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            style={{ display: value === index ? 'block' : 'none' }}\r\n        >\r\n            <Box p={3}>\r\n                {children}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabInterfacetyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst TabPanelInterface: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues, formState: { errors } } = form;\r\n    const classes = useTabInterfacetyles();\r\n    const { t } = useTranslation();\r\n    const [chatBtn, setChatBtn] = useState<File | string | null>(getValues('interface.iconbutton'));\r\n    const [headerBtn, setHeaderBtn] = useState<File | string | null>(getValues('interface.iconheader'));\r\n    const [botBtn, setBotBtn] = useState<File | string | null>(getValues('interface.iconbot'));\r\n\r\n    const handleChatBtnClick = () => {\r\n        const input = document.getElementById('chatBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleHeaderBtnClick = () => {\r\n        const input = document.getElementById('headerBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleBotBtnClick = () => {\r\n        const input = document.getElementById('botBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const onChangeChatInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setChatBtn(e.target.files[0]);\r\n        setValue(\"interface.iconbutton\", e.target.files[0]);\r\n    }\r\n\r\n    const onChangeHeaderInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setHeaderBtn(e.target.files[0]);\r\n        setValue('interface.iconheader', e.target.files[0]);\r\n    }\r\n\r\n    const onChangeBotInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setBotBtn(e.target.files[0]);\r\n        setValue('interface.iconbot', e.target.files[0]);\r\n    }\r\n\r\n    const handleCleanChatInput = () => {\r\n        if (!chatBtn) return;\r\n        const input = document.getElementById('chatBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setChatBtn(null);\r\n        setValue('interface.iconbutton', null);\r\n    }\r\n\r\n    const handleCleanHeaderInput = () => {\r\n        if (!headerBtn) return;\r\n        const input = document.getElementById('headerBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setHeaderBtn(null);\r\n        setValue('interface.iconheader', null);\r\n    }\r\n\r\n    const handleCleanBotInput = () => {\r\n        if (!botBtn) return;\r\n        const input = document.getElementById('botBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setBotBtn(null);\r\n        setValue('interface.iconbot', null);\r\n    }\r\n\r\n    const chatImgUrl = getImgUrl(chatBtn);\r\n    const headerImgUrl = getImgUrl(headerBtn);\r\n    const botImgUrl = getImgUrl(botBtn);\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.title} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                placeholder={t(langKeys.chatHeaderTitle)} // \"Título de la cabecera del chat\"\r\n                                name=\"titulo\"\r\n                                size=\"small\"\r\n                                defaultValue={getValues('interface.chattitle')}\r\n                                onChange={(e) => setValue('interface.chattitle', e.target.value)}\r\n                                error={!isEmpty(errors?.interface?.chattitle?.message)}\r\n                                helperText={errors?.interface?.chattitle?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.subtitle} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                placeholder={t(langKeys.chatHeaderSubtitle)}\r\n                                name=\"subtitulo\"\r\n                                size=\"small\"\r\n                                defaultValue={getValues('interface.chatsubtitle')}\r\n                                onChange={(e) => setValue('interface.chatsubtitle', e.target.value)}\r\n                                error={!isEmpty(errors?.interface?.chatsubtitle?.message)}\r\n                                helperText={errors?.interface?.chatsubtitle?.message}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.chatButton} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {chatImgUrl && <img src={chatImgUrl} alt=\"icon button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"chatBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeChatInput}\r\n                                    />\r\n                                    <IconButton onClick={handleChatBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanChatInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <FormHelperText error={!isEmpty(errors?.interface?.iconbutton?.message)} style={{ marginLeft: 14 }}>\r\n                                {errors?.interface?.iconbutton?.message}\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.header} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {headerImgUrl && <img src={headerImgUrl} alt=\"header button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"headerBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeHeaderInput}\r\n                                    />\r\n                                    <IconButton onClick={handleHeaderBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanHeaderInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <FormHelperText error={!isEmpty(errors?.interface?.iconheader?.message)} style={{ marginLeft: 14 }}>\r\n                                {errors?.interface?.iconheader?.message}\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.botButton} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {botImgUrl && <img src={botImgUrl} alt=\"bot button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"botBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeBotInput}\r\n                                    />\r\n                                    <IconButton onClick={handleBotBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanBotInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                            <FormHelperText error={!isEmpty(errors?.interface?.iconbot?.message)} style={{ marginLeft: 14 }}>\r\n                                {errors?.interface?.iconbot?.message}\r\n                            </FormHelperText>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useTabColorStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    colorOption: {\r\n        width: 28,\r\n        height: 28,\r\n        padding: 0,\r\n        minWidth: 28,\r\n        minHeight: 28,\r\n    },\r\n}));\r\n\r\nconst TabPanelColors: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabColorStyles();\r\n    const [headerColor, setHeaderColor] = useState(getValues('color.header'));\r\n    const [backgroundColor, setBackgroundColor] = useState(getValues('color.background'));\r\n    const [borderColor, setBorderColor] = useState(getValues('color.border'));\r\n    const [clientMessageColor, setClientMessageColor] = useState(getValues('color.client'));\r\n    const [botMessageColor, setBotMessageColor] = useState(getValues('color.bot'));\r\n\r\n    const handleHeaderColorChange: ColorChangeHandler = (e) => {\r\n        setHeaderColor(e.hex);\r\n        setValue('color.header', e.hex);\r\n    }\r\n\r\n    const handleBackgroundColorChange: ColorChangeHandler = (e) => {\r\n        setBackgroundColor(e.hex);\r\n        setValue('color.background', e.hex);\r\n    }\r\n\r\n    const handleBorderColorChange: ColorChangeHandler = (e) => {\r\n        setBorderColor(e.hex);\r\n        setValue('color.border', e.hex);\r\n    }\r\n\r\n    const handleClientMessageColorChange: ColorChangeHandler = (e) => {\r\n        setClientMessageColor(e.hex);\r\n        setValue('color.client', e.hex);\r\n    }\r\n\r\n    const handleBotMessageColorChange: ColorChangeHandler = (e) => {\r\n        setBotMessageColor(e.hex);\r\n        setValue('color.bot', e.hex);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"row\">\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.chatHeader} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={headerColor} onChange={handleHeaderColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.chatBackground} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={backgroundColor} onChange={handleBackgroundColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.chatBorder} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={borderColor} onChange={handleBorderColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.clientMessage} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={clientMessageColor} onChange={handleClientMessageColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.botMessage} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6} md={6} lg={6} xl={6}>\r\n                                <ColorInput hex={botMessageColor} onChange={handleBotMessageColorChange} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useTemplateStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: `${theme.palette.primary.main} 1px solid`,\r\n        borderRadius: 4,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: theme.spacing(3),\r\n        margin: theme.spacing(1),\r\n    },\r\n    title: {\r\n        fontWeight: 700,\r\n        fontSize: 20,\r\n        color: theme.palette.primary.main,\r\n        margin: '0 0 12 0',\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    fieldContainer: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    headertitle: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n    },\r\n    closeBtn: {\r\n        border: `${theme.palette.primary.main} 1px solid`,\r\n    },\r\n}));\r\n\r\ninterface NameTemplateProps {\r\n    onClose: () => void;\r\n    form: UseFormReturn<IChatWebAdd>;\r\n    title: React.ReactNode;\r\n    data: IChatWebAddFormField;\r\n    index: number;\r\n}\r\n\r\nconst NameTemplate: FC<NameTemplateProps> = ({ data, onClose, title, form, index }) => {\r\n    const classes = useTemplateStyles();\r\n    const { t } = useTranslation();\r\n    const [required, setRequired] = useState(data.required);\r\n\r\n    const handleRequired = (checked: boolean) => {\r\n        setRequired(checked);\r\n        data.required = checked;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.headertitle}>\r\n                <label className={clsx(classes.title, classes.fieldContainer)}>\r\n                    {title}\r\n                </label>\r\n                <IconButton color=\"primary\" onClick={onClose} className={classes.closeBtn}>\r\n                    <Close color=\"primary\" className=\"fa fa-plus-circle\" />\r\n                </IconButton>\r\n            </div>\r\n            <div style={{ height: 18 }} />\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={6}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\" style={{ minHeight: 40 }}>\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.required} />\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <IOSSwitch checked={required} onChange={(_, v) => { handleRequired(v); form.setValue(`form.${index}.required`, v) }} />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.label} />\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <TextField\r\n                                                    placeholder={t(langKeys.label)}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.label`, e.target.value)\r\n                                                        data.label = e.target.value\r\n                                                    }}\r\n                                                    defaultValue={data.label}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={12} lg={12} xl={6}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>Placeholder</label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <TextField\r\n                                                    placeholder=\"Placeholder\"\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.placeholder`, e.target.value)\r\n                                                        data.placeholder = e.target.value\r\n                                                    }}\r\n                                                    defaultValue={data.placeholder}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <Box m={1}>\r\n                                        <Grid container direction=\"row\">\r\n                                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                                <label className={classes.text}>\r\n                                                    <Trans i18nKey={langKeys.errorText} />\r\n                                                </label>\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                                <TextField\r\n                                                    placeholder={t(langKeys.errorText)}\r\n                                                    variant=\"outlined\"\r\n                                                    size=\"small\"\r\n                                                    fullWidth\r\n                                                    onChange={e => {\r\n                                                        form.setValue(`form.${index}.validationtext`, e.target.value)\r\n                                                        data.validationtext = e.target.value\r\n                                                    }}\r\n                                                    defaultValue={data.validationtext}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider style={{ margin: '22px 0' }} />\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Box m={1}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={2}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.inputValidation} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={10}>\r\n                                <TextField\r\n                                    placeholder={t(langKeys.inputValidation)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    fullWidth\r\n                                    onChange={e => {\r\n                                        form.setValue(`form.${index}.inputvalidation`, e.target.value)\r\n                                        data.inputvalidation = e.target.value\r\n                                    }}\r\n                                    defaultValue={data.inputvalidation}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Box m={1}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={2}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.validationOnKeychange} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={10}>\r\n                                <TextField\r\n                                    placeholder={t(langKeys.validationOnKeychange)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    fullWidth\r\n                                    onChange={e => {\r\n                                        form.setValue(`form.${index}.keyvalidation`, e.target.value)\r\n                                        data.keyvalidation = e.target.value\r\n                                    }}\r\n                                    defaultValue={data.keyvalidation}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabFormStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n}));\r\n\r\nconst FIRSTNAME_FIELD = \"FIRSTNAME_FIELD\";\r\nconst LASTNAME_FIELD = \"LASTNAME_FIELD\";\r\nconst PHONE_FIELD = \"PHONE_FIELD\";\r\nconst EMAIL_FIELD = \"EMAIL_FIELD\";\r\nconst DOCUMENT_FIELD = \"DOCUMENT_FIELD\";\r\nconst SUPPLYNUMBER_FIELD = \"SUPPLYNUMBER_FIELD\";\r\nconst CONTACT = \"CONTACT_FIELD\";\r\n\r\nconst templates: { [x: string]: FieldTemplate } = {\r\n    [FIRSTNAME_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.name} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(FIRSTNAME_FIELD)}\r\n                    key={FIRSTNAME_FIELD}\r\n                    title={<Trans i18nKey={langKeys.name} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"FIRSTNAME\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [LASTNAME_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.lastname} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(LASTNAME_FIELD)}\r\n                    key={LASTNAME_FIELD}\r\n                    title={<Trans i18nKey={langKeys.lastname} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"LASTNAME\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [PHONE_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.phone} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(PHONE_FIELD)}\r\n                    key={PHONE_FIELD}\r\n                    title={<Trans i18nKey={langKeys.phone} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"PHONE\",\r\n            type: \"phone\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [EMAIL_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.email} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(EMAIL_FIELD)}\r\n                    key={EMAIL_FIELD}\r\n                    title={<Trans i18nKey={langKeys.email} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"EMAIL\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [DOCUMENT_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.document} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(DOCUMENT_FIELD)}\r\n                    key={DOCUMENT_FIELD}\r\n                    title={<Trans i18nKey={langKeys.document} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"DOCUMENT\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [SUPPLYNUMBER_FIELD]: {\r\n        text: <Trans i18nKey={langKeys.supplynumber} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(SUPPLYNUMBER_FIELD)}\r\n                    key={SUPPLYNUMBER_FIELD}\r\n                    title={<Trans i18nKey={langKeys.supplynumber} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"SUPPLYNUMBER\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n    [CONTACT]: {\r\n        text: <Trans i18nKey={langKeys.contact} />,\r\n        node: (onClose, data, form, index) => {\r\n            return (\r\n                <NameTemplate\r\n                    form={form}\r\n                    index={index}\r\n                    data={data}\r\n                    onClose={() => onClose(CONTACT)}\r\n                    key={CONTACT}\r\n                    title={<Trans i18nKey={langKeys.contact} />}\r\n                />\r\n            );\r\n        },\r\n        data: {\r\n            field: \"CONTACT\",\r\n            type: \"text\",\r\n            required: true,\r\n            label: \"\",\r\n            placeholder: \"\",\r\n            validationtext: \"\",\r\n            inputvalidation: \"\",\r\n            keyvalidation: \"\",\r\n        },\r\n    },\r\n};\r\n\r\nconst TabPanelForm: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const classes = useTabFormStyles();\r\n    const defFields = useRef<FieldTemplate[]>((form.getValues('form') || []).map(x => {\r\n        return {\r\n            ...templates[`${x.field}_FIELD`],\r\n            data: x,\r\n        } as FieldTemplate;\r\n    }));\r\n\r\n    const [enable, setEnable] = useState(false);\r\n    const [fieldTemplate, setFieldTemplate] = useState<string>(\"\");\r\n    const [fields, setFields] = useState<FieldTemplate[]>(defFields.current);\r\n\r\n    useEffect(() => {\r\n        form.setValue('form', fields.map(x => x.data));\r\n    }, [fields, form]);\r\n\r\n    const handleCloseTemplate = (key: string) => {\r\n        const newFields = fields.filter(e => e.data.field !== templates[key].data.field)\r\n        setFields(newFields);\r\n    };\r\n\r\n    const handleAddTemplate = () => {\r\n        if (fieldTemplate === \"\") return;\r\n\r\n        setFields([...fields, templates[fieldTemplate]]);\r\n        setFieldTemplate(\"\");\r\n    }\r\n\r\n    const getMenuTemplates = () => {\r\n        const temp: React.ReactNode[] = [];\r\n        for (const key in templates) {\r\n            if (fields.includes(templates[key])) continue;\r\n            temp.push(<MenuItem key={key} value={key}>{templates[key].text}</MenuItem>);\r\n        }\r\n        return temp;\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Grid container direction=\"column\">\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <Typography className={classes.text}>\r\n                                <Trans i18nKey={langKeys.wantAddFormToSiteQuestion} />\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <IOSSwitch checked={enable} onChange={(_, v) => setEnable(v)} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ display: enable ? 'block' : 'none' }}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <Typography className={classes.text}>\r\n                                <Trans i18nKey={langKeys.selectField} />\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <FormControl style={{ width: 160, marginRight: 20 }}>\r\n                                <Select\r\n                                    variant=\"outlined\"\r\n                                    value={fieldTemplate}\r\n                                    onChange={e => setFieldTemplate(e.target.value as string)}\r\n                                    displayEmpty\r\n                                    style={{ height: 40 }}\r\n                                >\r\n                                    <MenuItem value={\"\"}>\r\n                                        <em><Trans i18nKey={langKeys.select} /> -</em>\r\n                                    </MenuItem>\r\n                                    {getMenuTemplates()}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <Button\r\n                                disabled={fieldTemplate === \"\"}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                style={{ height: 40, minHeight: 40 }}\r\n                                onClick={handleAddTemplate}\r\n                            >\r\n                                <Trans i18nKey={langKeys.add} /> +\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {fields.map((e, i) => e.node(handleCloseTemplate, e.data, form, i))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useTabBubbleStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst TabPanelBubble: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabBubbleStyles();\r\n    const { t } = useTranslation();\r\n    const [enable, setEnable] = useState(getValues('bubble.active'));\r\n    const [waitingImg, setWaitingImg] = useState<File | string | null>(getValues('bubble.iconbubble'));\r\n\r\n    const handleWaitingBtnClick = () => {\r\n        const input = document.getElementById('waitingBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const onChangeWaitingInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setWaitingImg(e.target.files[0]);\r\n        setValue('bubble.iconbubble', e.target.files[0]);\r\n    }\r\n\r\n    const handleCleanWaitingInput = () => {\r\n        if (!waitingImg) return;\r\n        const input = document.getElementById('waitingBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setWaitingImg(null);\r\n        setValue('bubble.iconbubble', null);\r\n    }\r\n\r\n    const handleEnableChange = (checked: boolean) => {\r\n        setEnable(checked);\r\n        setValue('bubble.active', checked);\r\n    }\r\n\r\n    const waitingImgUrl = getImgUrl(waitingImg);\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.enableWaitingMessage} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <IOSSwitch checked={enable} onChange={(_, v) => handleEnableChange(v)} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1} style={{ display: enable ? 'block' : 'none' }}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>{t(langKeys.text)}</label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                placeholder={t(langKeys.textOfTheMessage)}\r\n                                name=\"text\"\r\n                                size=\"small\"\r\n                                defaultValue={getValues('bubble.messagebubble')}\r\n                                onChange={e => setValue('bubble.messagebubble', e.target.value)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Box m={1} style={{ display: enable ? 'block' : 'none' }}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                            <label className={classes.text}>\r\n                                <Trans i18nKey={langKeys.waitingMessageStyle} />\r\n                            </label>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={8} lg={8} xl={8}>\r\n                            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                <div className={classes.imgContainer}>\r\n                                    {waitingImgUrl && <img src={waitingImgUrl} alt=\"bubble button\" className={classes.img} />}\r\n                                </div>\r\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: 'none' }}\r\n                                        id=\"waitingBtnInput\"\r\n                                        type=\"file\"\r\n                                        onChange={onChangeWaitingInput}\r\n                                    />\r\n                                    <IconButton onClick={handleWaitingBtnClick}>\r\n                                        <CloudUpload className={classes.icon} />\r\n                                    </IconButton>\r\n                                    <IconButton onClick={handleCleanWaitingInput}>\r\n                                        <Close className={classes.icon} />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useTabExtrasStyles = makeStyles(theme => ({\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n}));\r\n\r\nconst TabPanelExtras: FC<{ form: UseFormReturn<IChatWebAdd> }> = ({ form }) => {\r\n    const { setValue, getValues } = form;\r\n    const classes = useTabExtrasStyles();\r\n    const { t } = useTranslation();\r\n\r\n    const [uploadFile, setUploadFile] = useState(getValues('extra.uploadfile'));\r\n    const [uploadVideo, setUploadVideo] = useState(getValues('extra.uploadvideo'));\r\n    const [uploadImage, setUploadImage] = useState(getValues('extra.uploadimage'));\r\n    const [uploadAudio, setUploadAudio] = useState(getValues('extra.uploadaudio'));\r\n    const [uploadLocation, setUploadLocation] = useState(getValues('extra.uploadlocation'));\r\n    const [reloadChat, setReloadChat] = useState(getValues('extra.reloadchat'));\r\n    const [poweredBy, setPoweredBy] = useState(getValues('extra.poweredby'));\r\n\r\n    const [persistentInput, setPersistentInput] = useState(getValues('extra.persistentinput'));\r\n    const [abandonEvent, setAbandonEvent] = useState(getValues('extra.abandonevent'));\r\n    const [alertSound, setAlertSound] = useState(getValues('extra.alertsound'));\r\n    const [formHistory, setFormHistory] = useState(getValues('extra.formhistory'));\r\n    const [enableMetadata, setEnableMetadata] = useState(getValues('extra.enablemetadata'));\r\n\r\n    const [enableBotName, setEnableBotName] = useState(getValues('extra.botnameenabled'));\r\n\r\n    const handleUploadFileChange = (checked: boolean) => {\r\n        setUploadFile(checked);\r\n        setValue('extra.uploadfile', checked);\r\n    }\r\n\r\n    const handleUploadVideoChange = (checked: boolean) => {\r\n        setUploadVideo(checked);\r\n        setValue('extra.uploadvideo', checked);\r\n    }\r\n\r\n    const handleUploadImageChange = (checked: boolean) => {\r\n        setUploadImage(checked);\r\n        setValue('extra.uploadimage', checked);\r\n    }\r\n\r\n    const handleUploadAudioChange = (checked: boolean) => {\r\n        setUploadAudio(checked);\r\n        setValue('extra.uploadaudio', checked);\r\n    }\r\n\r\n    const handleUploadLocationChange = (checked: boolean) => {\r\n        setUploadLocation(checked);\r\n        setValue('extra.uploadlocation', checked);\r\n    }\r\n\r\n    const handleReloadChatChange = (checked: boolean) => {\r\n        setReloadChat(checked);\r\n        setValue('extra.reloadchat', checked);\r\n    }\r\n\r\n    const handlePoweredByChange = (checked: boolean) => {\r\n        setPoweredBy(checked);\r\n        setValue('extra.poweredby', checked);\r\n    }\r\n\r\n    const handlePersistentInputChange = (checked: boolean) => {\r\n        setPersistentInput(checked);\r\n        setValue('extra.persistentinput', checked);\r\n    }\r\n\r\n    const handleAbandonEventChange = (checked: boolean) => {\r\n        setAbandonEvent(checked);\r\n        setValue('extra.abandonevent', checked);\r\n    }\r\n\r\n    const handleAlertSoundChange = (checked: boolean) => {\r\n        setAlertSound(checked);\r\n        setValue('extra.alertsound', checked);\r\n    }\r\n\r\n    const handleFormHistoryChange = (checked: boolean) => {\r\n        setFormHistory(checked);\r\n        setValue('extra.formhistory', checked);\r\n    }\r\n\r\n    const handleEnableMetadataChange = (checked: boolean) => {\r\n        setEnableMetadata(checked);\r\n        setValue('extra.enablemetadata', checked);\r\n    }\r\n\r\n    const handleEnableBotNameChange = (checked: boolean) => {\r\n        setEnableBotName(checked);\r\n        setValue('extra.botnameenabled', checked);\r\n    }\r\n\r\n    return (\r\n        <Grid container direction=\"column\">\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadFile} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadFile} onChange={(_, v) => handleUploadFileChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadVideo} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadVideo} onChange={(_, v) => handleUploadVideoChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.sendLocation} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadLocation} onChange={(_, v) => handleUploadLocationChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadImage} count={2} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadImage} onChange={(_, v) => handleUploadImageChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.uploadAudio} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={uploadAudio} onChange={(_, v) => handleUploadAudioChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.refreshChat} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={reloadChat} onChange={(_, v) => handleReloadChatChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>Powered by</label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={poweredBy} onChange={(_, v) => handlePoweredByChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Divider style={{ margin: '22px 0 38px 0' }} />\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.inputAlwaysEnabled} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={persistentInput} onChange={(_, v) => handlePersistentInputChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.abandonmentEvent} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={abandonEvent} onChange={(_, v) => handleAbandonEventChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.newMessageRing} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={alertSound} onChange={(_, v) => handleAlertSoundChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.formBaseHistory} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={formHistory} onChange={(_, v) => handleFormHistoryChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.sendMetaData} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={enableMetadata} onChange={(_, v) => handleEnableMetadataChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder=\"CSS Header\"\r\n                    multiline\r\n                    minRows={5}\r\n                    maxRows={10}\r\n                    fullWidth\r\n                    defaultValue={getValues('extra.customcss')}\r\n                    onChange={e => setValue('extra.customcss', e.target.value)}\r\n                />\r\n            </Grid>\r\n            <div style={{ height: 20 }} />\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder=\"JS Script\"\r\n                    multiline\r\n                    minRows={5}\r\n                    maxRows={10}\r\n                    fullWidth\r\n                    defaultValue={getValues('extra.customjs')}\r\n                    onChange={e => setValue('extra.customjs', e.target.value)}\r\n                />\r\n            </Grid>\r\n            <Divider style={{ margin: '22px 0 38px 0' }} />\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={4} md={4} lg={4} xl={4}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={10} md={9} lg={9} xl={9}>\r\n                                <label className={classes.text}>\r\n                                    <Trans i18nKey={langKeys.enableBotName} />\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={2} md={3} lg={3} xl={3}>\r\n                                <IOSSwitch checked={enableBotName} onChange={(_, v) => handleEnableBotNameChange(v)} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={12} lg={12} xl={12} style={{ display: enableBotName ? 'block' : 'none' }}>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    placeholder={t(langKeys.botName)}\r\n                    fullWidth\r\n                    defaultValue={getValues('extra.botnametext')}\r\n                    onChange={e => setValue('extra.botnametext', e.target.value)}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: 'inherit',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    title: {\r\n        fontWeight: 500,\r\n        fontSize: 32,\r\n        margin: '20px 0',\r\n        color: theme.palette.primary.main,\r\n    },\r\n    subtitle: {\r\n        margin: '8px 0',\r\n        fontSize: 20,\r\n        fontWeight: 500,\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#A59F9F',\r\n    },\r\n    scriptPreview: {\r\n        width: 'inherit',\r\n        height: 111,\r\n        minHeight: 111,\r\n        backgroundColor: 'white',\r\n        border: '#A59F9F 1px solid',\r\n        margin: '24px 0',\r\n        padding: theme.spacing(2),\r\n        position: 'relative',\r\n        overflowWrap: 'break-word',\r\n        overflow: 'hidden',\r\n    },\r\n    scriptPreviewGradient: {\r\n        backgroundImage: 'linear-gradient(transparent, white)',\r\n        position: 'absolute',\r\n        top: 0,\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    scriptPreviewCopyBtn: {\r\n        height: 45,\r\n        width: 123,\r\n        minHeight: 45,\r\n        minWidth: 123,\r\n        top: '50%',\r\n        transform: 'translateY(-50%)',\r\n        right: theme.spacing(2),\r\n        position: 'absolute',\r\n        alignSelf: 'center',\r\n    },\r\n    scriptPreviewFullViewTxt: {\r\n        margin: 0,\r\n        position: 'absolute',\r\n        bottom: theme.spacing(1),\r\n        left: '50%',\r\n        transform: 'translateX(-50%)',\r\n        height: 24,\r\n\r\n        WebkitTouchCallout: 'none',\r\n        WebkitUserSelect: 'none',\r\n        KhtmlUserSelect: 'none',\r\n        MozUserSelect: 'none',\r\n        msUserSelect: 'none',\r\n        userSelect: 'none',\r\n\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n        }\r\n    },\r\n    tabs: {\r\n        color: '#989898',\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: 'inherit',\r\n    },\r\n    tab: {\r\n        // width: 130,\r\n        height: 45,\r\n        maxWidth: 'unset',\r\n        border: '#A59F9F 1px solid',\r\n        borderRadius: 6,\r\n        backgroundColor: 'white',\r\n        flexGrow: 1,\r\n    },\r\n    activetab: {\r\n        color: 'white',\r\n        backgroundColor: theme.palette.primary.main,\r\n    }\r\n}));\r\n\r\nexport const ChannelAddChatWeb: FC<{ edit: boolean }> = ({ edit }) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [tabIndex, setTabIndes] = useState('0');\r\n    const [showFinalStep, setShowFinalStep] = useState(false);\r\n\r\n    const insertChannel = useSelector(state => state.channel.insertChannel);\r\n    const editChannel = useSelector(state => state.channel.editChannel);\r\n\r\n    const channel = location.state as IChannel | null;\r\n\r\n    const service = useRef<IChatWebAdd | null>(null);\r\n\r\n    if (channel && !service.current && channel.servicecredentials.length > 0) {\r\n        service.current = JSON.parse(channel.servicecredentials);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (edit && !channel) {\r\n            history.push(paths.CHANNELS);\r\n        } else if (edit && channel && channel.servicecredentials.length === 0) {\r\n            history.push(paths.CHANNELS);\r\n        }\r\n\r\n        return () => {\r\n            dispatch(resetInsertChannel());\r\n            dispatch(resetEditChannel());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [history, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (insertChannel.loading) return;\r\n        if (insertChannel.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: insertChannel.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else if (insertChannel.value) {\r\n            dispatch(showSnackbar({\r\n                message: t(langKeys.channelcreatesuccess),\r\n                show: true,\r\n                severity: \"success\"\r\n            }));\r\n        }\r\n    }, [dispatch, insertChannel, t]);\r\n\r\n    useEffect(() => {\r\n        if (editChannel.loading) return;\r\n        if (editChannel.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: editChannel.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else if (editChannel.success) {\r\n            dispatch(showSnackbar({\r\n                message: t(langKeys.channeleditsuccess),\r\n                show: true,\r\n                severity: \"success\"\r\n            }));\r\n            history.push(paths.CHANNELS);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch, editChannel]);\r\n\r\n    const form: UseFormReturn<IChatWebAdd> = useForm<IChatWebAdd>({\r\n        defaultValues: service.current || {\r\n            interface: {\r\n                chattitle: \"\",\r\n                chatsubtitle: \"\",\r\n                iconbutton: null,\r\n                iconheader: null,\r\n                iconbot: null,\r\n            },\r\n            color: {\r\n                header: \"#fff\",\r\n                background: \"#F9F9FA\",\r\n                border: \"#EBEAED\",\r\n                client: \"#fff\",\r\n                bot: \"#aa53e0\",\r\n            },\r\n            form: [],\r\n            bubble: {\r\n                active: true,\r\n                messagebubble: \"\",\r\n                iconbubble: null,\r\n            },\r\n            extra: {\r\n                uploadfile: true,\r\n                uploadaudio: true,\r\n                uploadimage: true,\r\n                uploadlocation: true,\r\n                uploadvideo: true,\r\n                reloadchat: true,\r\n                poweredby: true,\r\n\r\n                persistentinput: true,\r\n                abandonevent: true,\r\n                alertsound: true,\r\n                formhistory: true,\r\n                enablemetadata: true,\r\n\r\n                customcss: \"\",\r\n                customjs: \"\",\r\n\r\n                botnameenabled: true,\r\n                botnametext: \"\",\r\n            },\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        const mandatoryStrField = (value: string) => {\r\n            return value.length === 0 ? t(langKeys.field_required) : undefined;\r\n        }\r\n\r\n        const mandatoryFileField = (value: string | File | null) => {\r\n            return !value ? t(langKeys.field_required) : undefined;\r\n        }\r\n\r\n        form.register('interface.chattitle', { validate: mandatoryStrField });\r\n        form.register('interface.chatsubtitle', { validate: mandatoryStrField });\r\n        form.register('interface.iconbutton', { validate: mandatoryFileField });\r\n        form.register('interface.iconheader', { validate: mandatoryFileField });\r\n        form.register('interface.iconbot', { validate: mandatoryFileField });\r\n    }, [form, t]);\r\n\r\n    const handleNext = () => {\r\n        form.handleSubmit((_) => setShowFinalStep(true))();\r\n    }\r\n\r\n    const handleSubmit = (name: string, auto: boolean, hexIconColor: string) => {\r\n        const values = form.getValues();\r\n        if (!channel) {\r\n            const body = getInsertChatwebChannel(name, auto, hexIconColor, values);\r\n            dispatch(insertChannel2(body));\r\n        } else {\r\n            const id = channel.communicationchannelid;\r\n            const body = getEditChatWebChannel(id, channel, values, name, auto, hexIconColor);\r\n            dispatch(getEditChannel(body, \"CHAZ\"));\r\n        }\r\n\r\n    }\r\n\r\n    const handleGoBack: React.MouseEventHandler = (e) => {\r\n        e.preventDefault();\r\n        if (!insertChannel.value?.integrationid) history.push(paths.CHANNELS);\r\n    }\r\n\r\n    if (edit && !channel) {\r\n        return <div />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div style={{ display: showFinalStep ? 'none' : 'flex', flexDirection: 'column' }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link color=\"textSecondary\" key=\"mainview\" href=\"/\" onClick={handleGoBack}>\r\n                        {t(langKeys.previoustext)}\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <h2 className={classes.title}>\r\n                    <Trans i18nKey={langKeys.activeLaraigoOnYourWebsite} />\r\n                </h2>\r\n                <div style={{ height: 20 }} />\r\n                <AppBar position=\"static\" elevation={0}>\r\n                    <Tabs\r\n                        value={tabIndex}\r\n                        onChange={(_, i: string) => setTabIndes(i)}\r\n                        className={classes.tabs}\r\n                        TabIndicatorProps={{ style: { display: 'none' } }}\r\n                    >\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"0\" && classes.activetab)} label={<Trans i18nKey={langKeys.interface} />} value=\"0\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"1\" && classes.activetab)} label={<Trans i18nKey={langKeys.color} count={2} />} value=\"1\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"2\" && classes.activetab)} label={<Trans i18nKey={langKeys.form} />} value=\"2\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"3\" && classes.activetab)} label={<Trans i18nKey={langKeys.bubble} />} value=\"3\" />\r\n                        <Tab className={clsx(classes.tab, tabIndex === \"4\" && classes.activetab)} label={<Trans i18nKey={langKeys.extra} count={2} />} value=\"4\" />\r\n                    </Tabs>\r\n                </AppBar>\r\n                <TabPanel value=\"0\" index={tabIndex}><TabPanelInterface form={form} /></TabPanel>\r\n                <TabPanel value=\"1\" index={tabIndex}><TabPanelColors form={form} /></TabPanel>\r\n                <TabPanel value=\"2\" index={tabIndex}><TabPanelForm form={form} /></TabPanel>\r\n                <TabPanel value=\"3\" index={tabIndex}><TabPanelBubble form={form} /></TabPanel>\r\n                <TabPanel value=\"4\" index={tabIndex}><TabPanelExtras form={form} /></TabPanel>\r\n                <div style={{ height: 20 }} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={handleNext}>\r\n                    <Trans i18nKey={langKeys.next} />\r\n                </Button>\r\n            </div>\r\n            <div style={{ display: showFinalStep ? 'block' : 'none' }}>\r\n                <ChannelAddEnd\r\n                    loading={insertChannel.loading || editChannel.loading}\r\n                    integrationId={insertChannel.value?.integrationid}\r\n                    onSubmit={handleSubmit}\r\n                    onClose={() => setShowFinalStep(false)}\r\n                    channel={channel}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useFinalStepStyles = makeStyles(theme => ({\r\n    title: {\r\n        textAlign: \"center\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"2em\",\r\n        color: \"#7721ad\",\r\n        padding: \"20px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        maxWidth: \"800px\",\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\ninterface ChannelAddEndProps {\r\n    loading: boolean;\r\n    integrationId?: string;\r\n    onSubmit: (name: string, auto: boolean, hexIconColor: string) => void;\r\n    onClose?: () => void;\r\n    channel: IChannel | null;\r\n}\r\n\r\nconst ChannelAddEnd: FC<ChannelAddEndProps> = ({ onClose, onSubmit, loading, integrationId, channel }) => {\r\n    const classes = useFinalStepStyles();\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const [name, setName] = useState(channel?.communicationchanneldesc || \"\");\r\n    const [coloricon, setcoloricon] = useState(\"#7721ad\");\r\n    const [auto] = useState(true);\r\n    const [hexIconColor, setHexIconColor] = useState(channel?.coloricon || \"#7721ad\");\r\n\r\n    const handleGoBack = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        if (!integrationId) onClose?.();\r\n    }\r\n\r\n    const handleSave = () => {\r\n        onSubmit(name, auto, hexIconColor);\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link color=\"textSecondary\" key=\"mainview\" href=\"/\" onClick={handleGoBack}>\r\n                    {t(langKeys.previoustext)}\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div>\r\n                <div className={classes.title}>\r\n                    <Trans i18nKey={langKeys.commchannelfinishreg} />\r\n                </div>\r\n                <div className=\"row-zyx\">\r\n                    <div className=\"col-3\"></div>\r\n                    <FieldEdit\r\n                        onChange={(value) => setName(value)}\r\n                        label={t(langKeys.givechannelname)}\r\n                        className=\"col-6\"\r\n                        disabled={loading || integrationId != null}\r\n                        valueDefault={channel?.communicationchanneldesc}\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\">\r\n                    <div className=\"col-3\"></div>\r\n                    <div className=\"col-6\">\r\n                        <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                            {t(langKeys.givechannelcolor)}\r\n                        </Box>\r\n                        <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                            <ZyxmeMessengerIcon style={{ fill: `${coloricon}`, width: \"100px\" }} />\r\n                            <ColorInput hex={hexIconColor} onChange={e => { setHexIconColor(e.hex); setcoloricon(e.hex) }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ paddingLeft: \"80%\" }}>\r\n                    <Button\r\n                        onClick={handleSave}\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading || integrationId != null}\r\n                    >\r\n                        <Trans i18nKey={langKeys.finishreg} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div style={{ display: integrationId ? 'flex' : 'none', height: 10 }} />\r\n            <div style={{ display: integrationId ? 'flex' : 'none', flexDirection: 'column', marginLeft: 120, marginRight: 120 }}>\r\n                {t(langKeys.chatwebstep)}\r\n            </div>\r\n            <div style={{ display: integrationId ? 'flex' : 'none', flexDirection: 'column', marginLeft: 120, marginRight: 120 }}><pre style={{ background: '#f4f4f4', border: '1px solid #ddd', color: '#666', pageBreakInside: 'avoid', fontFamily: 'monospace', lineHeight: 1.6, maxWidth: '100%', overflow: 'auto', padding: '1em 1.5em', display: 'block', wordWrap: 'break-word' }}><code>\r\n                {`<script src=\"https://zyxmelinux.zyxmeapp.com/zyxme/chat/src/chatwebclient.min.js\" integrationid=\"${integrationId}\"></script>`}\r\n            </code></pre><div style={{ height: 20 }} />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => history.push(paths.CHANNELS)}>\r\n                    {t(langKeys.close)}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ChannelAddChatWeb","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');"],"sourceRoot":""}