{"version":3,"sources":["pages/dashboard/DashboardManagerial.tsx","pages/dashboard/DashboardProductivity.tsx","pages/dashboard/DashboardOperationalPush.tsx","pages/dashboard/DashboardTagRanking.tsx","pages/dashboard/DashboardDisconnections.tsx","pages/dashboard/Dashboard.tsx","store/dashboard/actions.ts"],"names":["COLORS","arraymonth","useStyles","makeStyles","theme","createStyles","halfbox","backgroundColor","quarterbox","padding","boxtitle","fontWeight","fontSize","width","boxtitledata","textAlign","whiteSpace","boxtitlequarter","maintitle","rowstyles","margin","containerFields","display","containerFieldsTitle","containerFieldsQuarter","color","label","datafield","datafieldquarter","widthhalf","flex","columnCard","flexDirection","gap","spacing","widthsecondhalf","paddingTop","itemDate","minHeight","height","border","borderRadius","fieldsfilter","colorgreen","colorred","replacerowzyx","flexWrap","itemCard","alignItems","itemGraphic","dontshow","downloadiconcontainer","justifyContent","styleicon","cursor","containertitleboxes","initialRange","startDate","Date","setDate","endDate","getFullYear","getMonth","key","DashboardManagerial","classes","user","useSelector","state","login","validateToken","groups","split","filter","x","mainResultMulti","main","multiData","remultiaux","multiDataAux","resaux","mainAux","dispatch","useDispatch","t","useTranslation","useState","downloaddatafile","setdownloaddatafile","section","setSection","dataTMO","obj_min","obj_max","variaciontxt","variacioncolor","timeMax","timeMin","sla","variacionperccolor","variacionperc","tickets_comply","tickets_analyzed","tickets_total","data","setData","dataTME","setDataTME","tmrglobal","dataTMRBot","dataTMRAsesor","dataTMRCliente","maxavgtickethour","minvgtickethour","avgtickethour","maxavgtickethourdescdate","maxavgtickethourdeschour","minavgtickethourdescdate","minavgtickethourdeschour","maxavgticketasesorhour","minvgticketasesorhour","avgticketasesorhour","maxavgticketasesorhourdescdate","maxavgticketasesorhourdeschour","minavgticketasesorhourdescdate","minavgticketasesorhourdeschour","dataSummary","setDataSummary","dataNPS","nps_green","npsvariacioncolor","npsvariation","npspollssent","npspollsanswered","npstotalpromoters","npstotaldetractors","npstotalneutral","npstotalconversations","dataCSAT","csat_green","csatvariacioncolor","csatvariation","csatpollssent","csatpollsanswered","csattotalpromoters","csattotaldetractors","csattotalneutral","csattotalconversations","dataFCR","fcr_green","fcrvariacioncolor","fcrvariation","fcrpollssent","fcrpollsanswered","fcrtotalpromoters","fcrtotaldetractors","fcrtotalconversations","dataFIX","fix_green","fixvariacioncolor","fixvariation","fixpollssent","fixpollsanswered","fixtotalpromoters","fixtotaldetractors","fixtotalconversations","dataEncuesta","setDataEncuesta","totalconversations","avgconversationsattended","maxavgconversationsattendedasesor","maxavgconversationsattendedasesortotal","minvgconversationsattendedbot","minvgconversationsattendedbottotal","iconconversationsattendedasesor","iconconversationsattendedbot","tasaabandono","abandonados","dataDASHBOARD","setDataDASHBOARD","langKeys","meets","quantity","meetsnot","dataTMOgraph","setDataTMOgraph","dataTMEgraph","setDataTMEgraph","promoters","detractors","neutral","dataNPSgraph","setDataNPSgraph","satisfied","dissatisfied","dataCSATgraph","setDataCSATgraph","resolvedfirstcontact","notresolvedfirstcontact","dataFCRgraph","setDataFCRgraph","resolved","notresolved","dataFIXgraph","setDataFIXgraph","avginteractionsxconversations","maxavginteractionsxconversations","minvginteractionsxconversations","dataInteraction","setDataInteraction","avgasesoresconectados","dataAsesoreconectadosbar","setDataAsesoreconectadosbar","openDialog","setOpenDialog","openDialogPerRequest","setOpenDialogPerRequest","fieldToFilter","setFieldToFilter","resTMO","setResTMO","resTME","setResTME","titlefile","settitlefile","resSummary","setResSummary","resEncuesta","setResEncuesta","resDashboard","setResDashboard","resInteraction","setResInteraction","reschannels","setreschannels","resAsesoreconectadosbar","setResAsesoreconectadosbar","openDateRangeCreateDateModal","setOpenDateRangeCreateDateModal","dateRangeCreateDate","setDateRangeCreateDate","dataqueue","setdataqueue","dataprovider","setdataprovider","datachannels","setdatachannels","waitSave","setWaitSave","bringdataFilters","setbringdataFilters","waitSaveaux","setWaitSaveaux","setsla","queue","provider","channels","searchfields","setsearchfields","closedbyasesor","closedbybot","closedby","min","max","target","skipdown","skipup","limit","bd","searchfieldsOnlyOne","setsearchfieldsOnlyOne","funcsearch","a","showBackdrop","getMultiCollectionAux","gerencialTMOsel","startdate","enddate","channel","group","company","gerencialTMEsel","gerencialsummarysel","gerencialencuestasel","gerencialconversationsel","gerencialinteractionsel","gerencialasesoresconectadosbarsel","gerencialchannelsel","showSnackbar","show","severity","message","choosebotorasesor","getCollectionAux","gerencialEncuestassel","question","getdashboardgerencialconverstionxhoursel","useEffect","setViewChange","cleanViewChange","length","success","includes","domainvalue","loading","exportExcel","Object","keys","reduce","ac","c","Header","accessor","no_records","time_avg","target_max","target_min","time_max","time_min","target_percmax","seconds","timetoseconds","parseFloat","hh","Math","floor","mm","ss","objetivo_min","formattimeMinutes","objetivo_max","p","vartmo","sign","abs","secondsmax","secondsmin","toFixed","ticketstotal","txtmaxavgticketusername","formatname","maxavgticketusername","txtminavgticketusername","minavgticketusername","txtmaxavgticketasesorusername","maxavgticketasesorusername","txtminavgticketasesorusername","minavgticketasesorusername","maxavgtickethourdesc","mm1","minavgtickethourdesc","mm2","maxavgticketasesorhourdesc","mm3","minavgticketasesorhourdesc","formattime","averagereplytime","botaveragereplytime","useraveragereplytime","personaveragereplytime","minavgtickethour","parseInt","toLowerCase","minavgticketasesorhour","nps_high","total","nps_low","nps_medium","nps_total","csat_high","csat_low","csat_medium","csat_total","fcr_yes","fcr_no","fcr_total","total_bot","fix_yes","fix_no","fix_total","toshow","toshowcsat","toshowfcr","toshowfix","formatNumber","avgparam","ticketscerrados","ticketscerradosasesor","ticketscerradosbot","ticketsabandonados","avginteracciones","avginteraccionesasesor","avginteracionesbot","error","errormessage","code","module","quickreplies","toLocaleLowerCase","slajson","asesoretmp","arrayconbar","Array","map","_","i","hourFound","find","hora","asesoresconectados","avg","acc","Number","prev","high","tickets","low","green","medium","setDataEncuestanps","setDataEncuestacsat","setDataEncuestafix","setDataEncuestafcr","setDataaverageconversationsattendedbyhour","setDataaverageconversationsattendedbytheadvisorbyhour","totamtmomin","totaltmo","totaltmopercentmax","getMultiCollection","getValuesFromDomain","getCommChannelLst","downloaddata","tipeoffilter","gerencialTMOselData","gerencialTMEselData","gerencialEncuesta3selData","gerencialEncuesta2selData","averagenumberofadvisersconnectedbyhour","gerencialasesoresconectadosbarseldata","conversationsattended","gerencialconversationseldata","averageinteractionbyconversation","gerencialinteractionseldata","averageconversationsattendedbyhour","gerencialsummaryseldata","averageconversationsattendedbytheadvisorbyhour","summary","open","title","buttonText1","close","buttonText2","search","handleClickButton1","handleClickButton2","setOpen","range","onSelect","Button","className","startIcon","onClick","getDateCleaned","style","marginTop","variant","onChange","value","o","join","valueDefault","optionDesc","optionValue","channel_plural","communicationchannelid","configuration","funcsearchoneonly","agent","prevState","usertmomin","usertmo","usertmopercentmax","usertme","usertmepercentmax","TextField","lowesttime","e","type","higuesttime","timemin","timemax","targetvalue","numberoflabels","marginBottom","managerial","stablishfilters","Box","CircularProgress","tmotooltip","placement","objective","clsx","variation","highestTMO","lowestTMO","ResponsiveContainer","PieChart","Pie","dataKey","nameKey","cx","cy","innerRadius","fill","entry","index","Cell","totalsum","perc","marginRight","viewBox","version","verticalAlign","stroke","d","slaoptimum","quantitymeets","quantitymeetsnot","conversationsanalyzed","totalconversation","tmetooltip","highestTME","lowestTME","tmrtooltip","tmratooltip","tmrbtooltip","client","tmrctooltip","npstooltip","pollssent","survey","pollsanswered","totalpromoters","totaldetractors","totalneutral","csattooltip","totalsatisfied","totaldissatisfied","fcrtooltip","totalresolvedfirstcontact","totalnotresolvedfirstcontact","fixtooltip","totalresolved","totalnotresolved","highestvalue","maxavgtickethourtooltip","lowestvalue","minavgtickethourtooltip","maxavgticketasesorhourtooltip","minavgticketasesorhourtooltip","averagenumberofadviserstooltip","aspect","LineChart","Line","strokeWidth","CartesianGrid","XAxis","domain","Label","timeofday","offset","position","YAxis","allowDecimals","auto","ceil","assesor_plural","angle","attendedbyasesor","maxavgconversationsattendedasesortooltip","attendedbybot","minvgconversationsattendedbottooltip","productivitycard4","dropoutrate","uniqueclients","b","uniques","totalchannels","communicationchannel","maxavginteractionsxconversationstooltip","minvginteractionsxconversationstooltip","numberofconversationsperchannel","BarChart","top","right","bottom","left","interval","textAnchor","conversationquantity","Bar","isAnimationActive","LabelList","datafieldfooter","columnCard2","DashboardProductivity","mainResult","tasaabandonoperc","setTasaabandonoperc","tmoDistribution","settmoDistribution","tmeDistribution","settmeDistribution","dataLabel","setdataLabel","prodxHoralvl0","setprodxHoralvl0","prodxHoralvl1","setprodxHoralvl1","connected","notconnected","prodxHoraDist","setprodxHoraDist","prodlog","prodcon","prodbot","prodxHora","setprodxHora","prodxHoraLabel","setprodxHoraLabel","datasupervisors","setdatasupervisors","waitSaveAux","setWaitSaveAux","supervisor","tosend","getdashboardoperativoTMOGENERALSel","getdashboardoperativoTMEGENERALSel","getdashboardoperativoSummarySel","getdashboardoperativoProdxHoraSel","level","getdashboardoperativoProdxHoraDistSel","getdashboardoperativoEncuestaSel","getdashboardoperativoTMOGENERALSeldata","getdashboardoperativoTMEGENERALSeldata","distributionTMO","getdashboardoperativoTMOdistseldata","distributionTME","getdashboardoperativoTMEdistseldata","distributionProductivity","getdashboardoperativoProdxHoraDistSeldata","getdashboardoperativoEncuesta3Seldata","getdashboardoperativoEncuesta2Seldata","getdashboardoperativoEncuesta3Sel","timetomin","firstDate","String","secondDate","fullhours","getTime","horalogueo","horaconectado","ticketsasesor","ticketsbot","prodconofi","prodbotofi","dataacum","full","productivitylogueo","productivitybot","productivityconectado","productivity","productivitybyhour","horalogueotmp","horaconectadotmp","ticketstotalac","tmoasesorrange0","tmoasesorrange1","tmoasesorrange2","tmoasesorrange3","tmoasesorrange4","tmoasesorrange5","tmeasesorrange0","tmeasesorrange1","tmeasesorrange2","tmeasesorrange3","tmeasesorrange4","tmeasesorrange5","ticketstmeasesor","ticketstmoasesor","percentage","horaconectadorange0","horaconectadorange1","horaconectadorange2","horaconectadorange3","horaconectadorange4","horalogueorange0","horalogueorange1","horalogueorange2","horalogueorange3","horalogueorange4","getSupervisorsSel","getLabelsSel","resetMainAux","resetMultiMainAux","userid","labels","tmotooltipproductivity","tmeadvisortooltip","productivitycard1","productivitycard1tooltip","compliance","productivitycard2","productivitycard2tooltip","productivitycard3","productivitycard3tooltip","automaticClosingrate","productivitycard4tooltip","distributionTMOtooltip","minute_plural","name","tmo","distributionTMEtooltip","tme","distributionProductivitytooltip","ComposedChart","scale","ticketsxhour","numberofadvisers","advisorquantity","fullbox","quarterbox2","DashboardOperationalPush","datacategoriaHSM","setdatacategoriaHSM","dataHSMCATEGORYRANK","setdataHSMCATEGORYRANK","dataHSMRANK","setdataHSMRANK","dataAppRank","setdataAppRank","dataPushSUMMARYSel","setdataPushSUMMARYSel","dataMENSAJEXDIA","setdataMENSAJEXDIA","failMns","dataSuccessMns","totalMns","successMns","dataFailMns","attendedMns","dataAttendedMns","dataBot","dataAsesor","setdataSummary","categoriaHSM","category","getdashboardPushHSMCATEGORYRANKSel","getdashboardPushSUMMARYSel","getdashboardPushHSMRANKSel","getdashboardPushMENSAJEXDIASel","getdashboardPushAppSel","messagesentreceivedfailedanswered","getdashboardPushSUMMARYSelData","distributionbycategoryHSM","getdashboardPushHSMCATEGORYRANKSelData","getdashboardPushHSMRANKSelData","messagesbyday","getdashboardPushMENSAJEXDIASelData","numberofHSMShipments","getdashboardPushAppDataSel","fail","attended","bot","asesor","application","dataToExport","status","status_SENT","failed","operationalpush","sentmessages","sentmessagestooltip","messagessuccessfullydelivered","messagessuccessfullydeliveredtooltip","failedmessages","failedmessagestooltip","answeredmessages","answeredmessagestooltip","closedbyadviser","closedbyadvisertooltip","closedbybottooltip","distributionbycategoryHSMtooltip","Legend","rankinghsmtooltip","templatename","hsmquantitysimple","formatter","numberofHSMShipmentstooltip","employeeaplication","hsmperdaytooltip","day","barSize","DashboardTagRanking","getdashboardRankingPushSel","tagranking","getdashboardRankingPushDataSel","tagrankingtooltip","paddingRight","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","scope","tag","layout","strokeDasharray","DashboardDisconnections","dataasesors","setdataasesors","datatotaltime","setdatatotaltime","disconnectiontypes","setdisconnectiontypes","tcovstdc","settcovstdc","usersearch","setusersearch","asesorid","supervisorid","getDisconnectionTimes","arraydisconnectiontimes","userereasons","timestotal","forEach","desconectedtimejson","conectedtime","desconectedtime","arraydesconectionjson","JSON","parse","y","indexOf","time","totaltimeconnected","totaltimeoffline","getUserAsesorByOrgID","RADIAN","PI","seteddata","disconnections","totaltimeduetodisconnectionreasons","tickFormatter","v","timeconnectedvstimeoff","labelLine","midAngle","outerRadius","percent","radius","cos","sin","dominantBaseline","arrayBread","id","container","containerDetails","media","objectFit","containerSearch","breakpoints","up","containerFilter","filterComponent","containerFilterGeneral","palette","text","primary","containerHeader","mb2","useDashboardCardStyles","DashboardCard","dashboardtemplate","disabled","onEdit","onDelete","onDuplicate","anchorEl","setAnchorEl","Card","CardActionArea","href","paths","DASHBOARD_LAYOUT","resolve","dashboardtemplateid","CardMedia","image","description","CardContent","Typography","gutterBottom","IconButton","currentTarget","MoreVert","Menu","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","MenuItem","Trans","i18nKey","edit","duplicate","delete","Dashboard","history","useHistory","viewSelected","setViewSelected","dashboardtemplates","mainData","dashboardtemplateDelete","dashboard","searchValue","setSearchValue","allDashboards","setAllDashboards","allDashboardsToShow","setallDashboardsToShow","getCollection","getDashboardTemplateSel","resetCollectionPaginated","resetMultiMain","resetMain","resetDeleteDashboardTemplate","temparray","el","useCallback","template","manageConfirmation","visible","confirmation_delete","callback","deleteDashboardTemplate","getDashboardTemplateIns","operation","goToDashboardLayout","push","handleSelected","mb","dashboard_plural","counter","dashboardCounter","colorPlaceHolder","handleChangeOther","valor","lazy","Add","DASHBOARD_ADD","create_custom_dashboard","Grid","item","xs","md","lg","minWidth","event","preventDefault","DASHBOARD_EDIT","pathname","DASHBOARD_COPY","breadcrumbs","handleClick","getDashboard","parameters","callAPI","DashboardService","types","actionTypes","GET_DASHBOARD","GET_DASHBOARD_SUCCESS","failure","GET_DASHBOARD_FAILURE","resetGetDashboard","GET_DASHBOARD_RESET","getDashboardTemplate","body","CommonService","GET_DASHBOARDTEMPLATE","GET_DASHBOARDTEMPLATE_SUCCESS","GET_DASHBOARDTEMPLATE_FAILURE","setDashboardTemplate","payload","SET_DASHBOARDTEMPLATE","resetGetDashboardTemplate","GET_DASHBOARDTEMPLATE_RESET","saveDashboardTemplate","SAVE_DASHBOARDTEMPLATE","SAVE_DASHBOARDTEMPLATE_SUCCESS","SAVE_DASHBOARDTEMPLATE_FAILURE","resetSaveDashboardTemplate","SAVE_DASHBOARDTEMPLATE_RESET","DELETE_DASHBOARDTEMPLATE","DELETE_DASHBOARDTEMPLATE_SUCCESS","DELETE_DASHBOARDTEMPLATE_FAILURE","DELETE_DASHBOARDTEMPLATE_RESET"],"mappings":"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","file":"static/js/100.25d2a12b.chunk.js","sourcesContent":["import { Box, Button, CircularProgress, createStyles, makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport { DateRangePicker, DialogZyx, FieldMultiSelect, FieldSelect, TemplateSwitch } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { CalendarIcon } from \"icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { FC, Fragment, useEffect, useState } from \"react\";\r\nimport { getMultiCollection, getMultiCollectionAux, getCollectionAux, setViewChange, cleanViewChange } from 'store/main/actions';\r\nimport { Range } from 'react-date-range';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport clsx from 'clsx';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport AdbIcon from '@material-ui/icons/Adb';\r\nimport { exportExcel, formattimeMinutes, gerencialEncuesta2selData, gerencialEncuesta3selData, gerencialTMEselData, getDateCleaned } from 'common/helpers';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { gerencialasesoresconectadosbarsel, gerencialconversationsel,gerencialEncuestassel,getdashboardgerencialconverstionxhoursel,gerencialasesoresconectadosbarseldata,gerencialinteractionseldata, \r\n    gerencialconversationseldata,gerencialencuestasel, gerencialinteractionsel,gerencialsummaryseldata, gerencialsummarysel, gerencialTMEsel, gerencialTMOsel,gerencialchannelsel,\r\n    gerencialTMOselData, getCommChannelLst, getValuesFromDomain } from \"common/helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Dictionary } from \"@types\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, ResponsiveContainer, Tooltip as RechartsTooltip, PieChart, Pie, Cell, Label, BarChart, Bar, LabelList } from 'recharts';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport { formatNumber,formattime, timetoseconds, timetomin, formatname } from 'common/helpers';\r\n\r\nconst COLORS = ['#22b66e', '#b41a1a', '#ffcd56'];\r\n\r\nconst arraymonth = [\r\n    \"ene\",\r\n    \"feb\",\r\n    \"mar\",\r\n    \"abr\",\r\n    \"may\",\r\n    \"jun\",\r\n    \"jul\",\r\n    \"ago\",\r\n    \"sep\",\r\n    \"oct\",\r\n    \"nov\",\r\n    \"dic\",\r\n]\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        halfbox: {\r\n            backgroundColor: 'white',\r\n        },\r\n        quarterbox: {\r\n            backgroundColor: 'white',\r\n            padding: \"10px\"\r\n        },\r\n        boxtitle: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\"\r\n        },\r\n        boxtitledata: {\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\",\r\n            textAlign: \"end\",\r\n            whiteSpace: 'nowrap'\r\n        },\r\n        boxtitlequarter: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.5em\",\r\n        },\r\n        maintitle: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"2em\",\r\n        },\r\n        rowstyles: {\r\n            margin: \"0!important\"\r\n        },\r\n        containerFields: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            // padding: \"0 20px 10px 20px\"\r\n        },\r\n        containerFieldsTitle: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            // padding: \"0 20px 30px 20px\"\r\n        },\r\n        containerFieldsQuarter: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            color: \"white\"\r\n        },\r\n        label: {\r\n            width: \"60%\",\r\n            fontSize: \"1.2em\",\r\n        },\r\n        datafield: {\r\n            fontSize: \"1.2em\",\r\n            width: \"40%\",\r\n            textAlign: \"end\"\r\n        },\r\n        datafieldquarter: {\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        widthhalf: {\r\n            flex: 1\r\n        },\r\n        columnCard: {\r\n            // flex: 1,\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: theme.spacing(1)\r\n        },\r\n        widthsecondhalf: {\r\n            width: \"50%\",\r\n            paddingTop: \"5%\"\r\n        },\r\n        itemDate: {\r\n            minHeight: 40,\r\n            height: 40,\r\n            border: '1px solid #bfbfc0',\r\n            borderRadius: 4,\r\n            color: 'rgb(143, 146, 161)'\r\n        },\r\n        fieldsfilter: {\r\n            width: \"100%\",\r\n        },\r\n        colorgreen: {\r\n            color: \"#22B66E\"\r\n        },\r\n        colorred: {\r\n            color: \"rgb(180, 26, 26)\"\r\n        },\r\n        replacerowzyx: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            gap: theme.spacing(2),\r\n            flexWrap: \"wrap\",\r\n        },\r\n        itemCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            gap: 8,\r\n            flexWrap: 'wrap',\r\n            padding: theme.spacing(2),\r\n            alignItems: 'center'\r\n        },\r\n        itemGraphic: {\r\n            width: 200\r\n        },\r\n        dontshow: {\r\n            display: \"none\"\r\n        },\r\n        downloadiconcontainer:{\r\n            width:\"100%\",display: \"flex\",justifyContent: \"end\"\r\n        },\r\n        styleicon:{\r\n            width: \"18px\",\r\n            height: \"18px\",\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n            }\r\n        },\r\n        containertitleboxes:{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\"\r\n        }\r\n    }),\r\n);\r\nconst initialRange = {\r\n    startDate: new Date(new Date().setDate(1)),\r\n    endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\r\n    key: 'selection'\r\n}\r\n\r\nconst DashboardManagerial: FC = () => {\r\n    const classes = useStyles();\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const groups = user?.groups?.split(\",\").filter(x=>!!x) || [];\r\n    const mainResultMulti = useSelector(state => state.main.multiData);\r\n    const remultiaux = useSelector(state => state.main.multiDataAux);\r\n    const resaux = useSelector(state => state.main.mainAux);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [downloaddatafile, setdownloaddatafile] = useState(false)\r\n    const [section, setSection] = useState('')\r\n    const [data, setData] = useState({\r\n        dataTMO: \"0s\",\r\n        obj_min: \"\",\r\n        obj_max: \"< 0m\",\r\n        variaciontxt: \"0s\",\r\n        variacioncolor: true,\r\n        timeMax: \"0s\",\r\n        timeMin: \"0s\",\r\n        sla: \"0%\",\r\n        variacionperccolor: true,\r\n        variacionperc: 0,\r\n        tickets_comply: 0,\r\n        tickets_analyzed: 0,\r\n        tickets_total: 0,\r\n    });\r\n    const [dataTME, setDataTME] = useState({\r\n        dataTME: \"0s\",\r\n        obj_max: \"< 0m\",\r\n        variaciontxt: \"0s\",\r\n        variacioncolor: true,\r\n        timeMax: \"0s\",\r\n        timeMin: \"0s\",\r\n        sla: \"0%\",\r\n        variacionperccolor: true,\r\n        variacionperc: 0,\r\n        tickets_comply: 0,\r\n        tickets_analyzed: 0,\r\n        tickets_total: 0,\r\n    });\r\n    const [dataSummary, setDataSummary] = useState({\r\n        tmrglobal: \"0m\",\r\n        dataTMRBot: \"0m\",\r\n        dataTMRAsesor: \"0m\",\r\n        dataTMRCliente: \"0m\",\r\n        maxavgtickethour: \"0\",\r\n        minvgtickethour: \"0\",\r\n        avgtickethour: \"0\",\r\n        maxavgtickethourdescdate: \"\",\r\n        maxavgtickethourdeschour: \"\",\r\n        minavgtickethourdescdate: \"\",\r\n        minavgtickethourdeschour: \"\",\r\n        maxavgticketasesorhour: \"0\",\r\n        minvgticketasesorhour: \"0\",\r\n        avgticketasesorhour: \"0\",\r\n        maxavgticketasesorhourdescdate: \"\",\r\n        maxavgticketasesorhourdeschour: \"\",\r\n        minavgticketasesorhourdescdate: \"\",\r\n        minavgticketasesorhourdeschour: \"\",\r\n    });\r\n    const [dataEncuesta, setDataEncuesta] = useState({\r\n        dataNPS: \"0%\",\r\n        nps_green: \"0%\",\r\n        npsvariacioncolor: true,\r\n        npsvariation: \"0%\",\r\n        npspollssent: \"0\",\r\n        npspollsanswered: \"0\",\r\n        npstotalpromoters: 0,\r\n        npstotaldetractors: 0,\r\n        npstotalneutral: 0,\r\n        npstotalconversations: 0,\r\n        dataCSAT: \"0%\",\r\n        csat_green: \"0%\",\r\n        csatvariacioncolor: true,\r\n        csatvariation: \"0%\",\r\n        csatpollssent: \"0\",\r\n        csatpollsanswered: \"0\",\r\n        csattotalpromoters: 0,\r\n        csattotaldetractors: 0,\r\n        csattotalneutral: 0,\r\n        csattotalconversations: 0,\r\n        dataFCR: \"0%\",\r\n        fcr_green: \"0%\",\r\n        fcrvariacioncolor: true,\r\n        fcrvariation: \"0%\",\r\n        fcrpollssent: \"0\",\r\n        fcrpollsanswered: \"0\",\r\n        fcrtotalpromoters: 0,\r\n        fcrtotaldetractors: 0,\r\n        fcrtotalconversations: 0,\r\n        dataFIX: \"0%\",\r\n        fix_green: \"0%\",\r\n        fixvariacioncolor: true,\r\n        fixvariation: \"0%\",\r\n        fixpollssent: \"0\",\r\n        fixpollsanswered: \"0\",\r\n        fixtotalpromoters: 0,\r\n        fixtotaldetractors: 0,\r\n        fixtotalconversations: 0,\r\n    });\r\n    const [dataDASHBOARD, setDataDASHBOARD] = useState({\r\n        totalconversations: \"0\",\r\n        avgconversationsattended: \"0%\",\r\n        maxavgconversationsattendedasesor: \"0%\",\r\n        maxavgconversationsattendedasesortotal: \"0\",\r\n        minvgconversationsattendedbot: \"0%\",\r\n        minvgconversationsattendedbottotal: \"0\",\r\n        iconconversationsattendedasesor: true,\r\n        iconconversationsattendedbot: true,\r\n        tasaabandono: \"0%\",\r\n        abandonados: \"0\"\r\n    });\r\n    const [dataTMOgraph, setDataTMOgraph] = useState([\r\n        { label: t(langKeys.meets), quantity: 0 },\r\n        { label: t(langKeys.meetsnot), quantity: 0 }\r\n    ]);\r\n    const [dataTMEgraph, setDataTMEgraph] = useState([\r\n        { label: t(langKeys.meets), quantity: 0 },\r\n        { label: t(langKeys.meetsnot), quantity: 0 }\r\n    ]);\r\n    const [dataNPSgraph, setDataNPSgraph] = useState([\r\n        { label: t(langKeys.promoters), quantity: 0 },\r\n        { label: t(langKeys.detractors), quantity: 0 },\r\n        { label: t(langKeys.neutral), quantity: 0 }\r\n    ]);\r\n    const [dataCSATgraph, setDataCSATgraph] = useState([\r\n        { label: t(langKeys.satisfied), quantity: 0 },\r\n        { label: t(langKeys.dissatisfied), quantity: 0 },\r\n        { label: t(langKeys.neutral), quantity: 0 }\r\n    ]);\r\n    const [dataFCRgraph, setDataFCRgraph] = useState([\r\n        { label: t(langKeys.resolvedfirstcontact), quantity: 0 },\r\n        { label: t(langKeys.notresolvedfirstcontact), quantity: 0 },\r\n    ]);\r\n    const [dataFIXgraph, setDataFIXgraph] = useState([\r\n        { label: t(langKeys.resolved), quantity: 0 },\r\n        { label: t(langKeys.notresolved), quantity: 0 },\r\n    ]);\r\n    const [dataInteraction, setDataInteraction] = useState({\r\n        avginteractionsxconversations: \"0\",\r\n        maxavginteractionsxconversations: \"0\",\r\n        minvginteractionsxconversations: \"0\",\r\n    });\r\n    const [dataAsesoreconectadosbar, setDataAsesoreconectadosbar] = useState({\r\n        avgasesoresconectados: \"0\",\r\n    });\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openDialogPerRequest, setOpenDialogPerRequest] = useState(false);\r\n    const [fieldToFilter, setFieldToFilter] = useState(\"\");\r\n    const [resTMO, setResTMO] = useState<any>([]);\r\n    const [resTME, setResTME] = useState<any>([]);\r\n    const [titlefile, settitlefile] = useState('');\r\n    const [resSummary, setResSummary] = useState<any>([]);\r\n    const [resEncuesta, setResEncuesta] = useState<any>([]);\r\n    const [resDashboard, setResDashboard] = useState<any>([]);\r\n    const [resInteraction, setResInteraction] = useState<any>([]);\r\n    const [reschannels, setreschannels] = useState<any>([]);\r\n    const [resAsesoreconectadosbar, setResAsesoreconectadosbar] = useState<any>([]);\r\n    // const [resLabels, setResLabels] = useState<any>([]);\r\n    const [openDateRangeCreateDateModal, setOpenDateRangeCreateDateModal] = useState(false);\r\n    const [dateRangeCreateDate, setDateRangeCreateDate] = useState<Range>(initialRange);\r\n    const [dataqueue, setdataqueue] = useState<any>([]);\r\n    const [dataprovider, setdataprovider] = useState<any>([]);\r\n    const [datachannels, setdatachannels] = useState<any>([]);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [bringdataFilters, setbringdataFilters] = useState(false);\r\n    const [waitSaveaux, setWaitSaveaux] = useState(false);\r\n    const [sla, setsla] = useState<any>(null);\r\n    const [searchfields, setsearchfields] = useState({\r\n        queue: \"\",\r\n        provider: \"\",\r\n        channels: \"\"\r\n    });\r\n    const [searchfieldsOnlyOne, setsearchfieldsOnlyOne] = useState({\r\n        closedbyasesor: true,  \r\n        closedbybot:  true,\r\n        closedby: \"ASESOR,BOT\",\r\n        min: \"\", \r\n        max: \"\", \r\n        target:0, \r\n        skipdown:0, \r\n        skipup:0,\r\n        limit: 5,\r\n        bd: false\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(setViewChange(\"managerial\"))\r\n        return () => {\r\n            dispatch(cleanViewChange());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(() => {\r\n        if(bringdataFilters){\r\n            if (mainResultMulti.data.length !== 0) {\r\n                let multiData = mainResultMulti.data;\r\n                setdataqueue(multiData[0] && multiData[0].success ? multiData[0].data.filter(x => groups.length > 0 ? groups.includes(x.domainvalue) : true) : []);\r\n                setdataprovider(multiData[1] && multiData[1].success ? multiData[1].data : []);\r\n                setdatachannels(multiData[2] && multiData[2].success ? multiData[2].data : []);\r\n                setbringdataFilters(false)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResultMulti,bringdataFilters])\r\n\r\n    useEffect(() => {\r\n        if(downloaddatafile) {\r\n            if(!resaux.loading){\r\n                if (resaux.data.length > 0) {\r\n                    exportExcel(titlefile, resaux.data, Object.keys(resaux.data[0]).reduce((ac: any[], c: any) => (\r\n                        [\r\n                            ...ac,\r\n                            { Header: t((langKeys as any)[`dashboard_managerial_${section}_${c}`]), accessor: c }\r\n                        ]),\r\n                        []\r\n                    ))\r\n                }\r\n                else {\r\n                    exportExcel(titlefile, [{'': t(langKeys.no_records)}])\r\n                }\r\n                setdownloaddatafile(false)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resaux,downloaddatafile])\r\n    useEffect(() => {\r\n        setData({\r\n            dataTMO: \"0s\",\r\n            obj_min: \"\",\r\n            obj_max: \"< 0m\",\r\n            variaciontxt: \"0s\",\r\n            variacioncolor: true,\r\n            timeMax: \"0s\",\r\n            timeMin: \"0s\",\r\n            sla: \"0%\",\r\n            variacionperccolor: true,\r\n            variacionperc: 0,\r\n            tickets_comply: 0,\r\n            tickets_analyzed: 0,\r\n            tickets_total: 0,\r\n        });\r\n        setDataTMOgraph([\r\n            { label: t(langKeys.meets), quantity: 0 },\r\n            { label: t(langKeys.meetsnot), quantity: 0 }\r\n        ]);\r\n        if (resTMO.length) {\r\n            const { time_avg, tickets_comply, tickets_total, target_max, target_min, time_max, time_min, tickets_analyzed, target_percmax} = resTMO[0];\r\n            let seconds = timetoseconds(time_avg)\r\n            if (seconds >= 0) {\r\n                let variacionperc = (tickets_comply / tickets_analyzed - parseFloat(target_percmax))*100\r\n                variacionperc=variacionperc? variacionperc: 0;\r\n                let hh = (Math.floor(seconds / 3600)) === 0 ? \"\" : (Math.floor(seconds / 3600) + \"h \")\r\n                let mm = Math.floor((seconds % 3600) / 60) === 0 ? \"\" : (Math.floor((seconds % 3600) / 60) + \"m \")\r\n                let ss = seconds % 60 + \"s\"\r\n                let objetivo_min = formattimeMinutes(target_min)\r\n                let objetivo_max = formattimeMinutes(target_max)\r\n                let dataTMO = `${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, dataTMO: dataTMO }))\r\n                setData(p => ({ ...p, obj_max: `<${objetivo_max}`, obj_min: objetivo_min !== \"0m\" ? `${objetivo_min}< y ` : '' }))\r\n\r\n                let vartmo = timetoseconds(target_max) - seconds\r\n                vartmo = seconds < timetoseconds(target_min) ? Math.abs(vartmo) * -1 : vartmo\r\n                let sign = vartmo > 0 ? \"\" : \"-\"\r\n                vartmo = Math.abs(vartmo)\r\n                let variacioncolor = timetoseconds(target_min) <= seconds && timetoseconds(target_max) >= seconds\r\n\r\n                hh = (Math.floor(vartmo / 3600)) === 0 ? \"\" : (Math.floor(vartmo / 3600) + \"h \")\r\n                mm = Math.floor((vartmo % 3600) / 60) === 0 ? \"\" : (Math.floor((vartmo % 3600) / 60) + \"m \")\r\n                ss = vartmo % 60 + \"s\"\r\n                let variaciontxt = `${sign}${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, variaciontxt: variaciontxt }))\r\n                setData(p => ({ ...p, variacioncolor: variacioncolor }))\r\n\r\n                let secondsmax = timetoseconds(time_max)\r\n                hh = (Math.floor(secondsmax / 3600)) === 0 ? \"\" : (Math.floor(secondsmax / 3600) + \"h \")\r\n                mm = Math.floor((secondsmax % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmax % 3600) / 60) + \"m \")\r\n                ss = secondsmax % 60 + \"s\"\r\n                let timeMax = `${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, timeMax: timeMax }))\r\n\r\n                let secondsmin = timetoseconds(time_min)\r\n                hh = (Math.floor(secondsmin / 3600)) === 0 ? \"\" : (Math.floor(secondsmin / 3600) + \"h \")\r\n                mm = Math.floor((secondsmin % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmin % 3600) / 60) + \"m \")\r\n                ss = secondsmin % 60 + \"s\"\r\n                let timeMin = `${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, timeMin: timeMin }))\r\n                let sla = target_percmax?`${(parseFloat(target_percmax) * 100).toFixed(2)}%`:\"0%\"\r\n                setData(p => ({ ...p, sla: sla }))\r\n\r\n                let variacionperccolor = variacionperc >= 0;\r\n                setData(p => ({ ...p, variacionperc: variacionperc }))\r\n                setData(p => ({ ...p, variacionperccolor: variacionperccolor }))\r\n                setData(p => ({ ...p, tickets_comply: tickets_comply }))\r\n                setData(p => ({ ...p, tickets_analyzed: tickets_analyzed }))\r\n                setData(p => ({ ...p, tickets_total: tickets_total }))\r\n\r\n                setDataTMOgraph([\r\n                    { label: t(langKeys.meets), quantity: tickets_comply },\r\n                    { label: t(langKeys.meetsnot), quantity: tickets_analyzed - tickets_comply }\r\n                ]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resTMO])\r\n    useEffect(() => {\r\n        setDataTME({\r\n            dataTME: \"0s\",\r\n            obj_max: \"< 0m\",\r\n            variaciontxt: \"0s\",\r\n            variacioncolor: true,\r\n            timeMax: \"0s\",\r\n            timeMin: \"0s\",\r\n            sla: \"0%\",\r\n            variacionperccolor: true,\r\n            variacionperc: 0,\r\n            tickets_comply: 0,\r\n            tickets_analyzed: 0,\r\n            tickets_total: 0,\r\n        })\r\n        setDataTMEgraph([\r\n            { label: t(langKeys.meets), quantity: 0 },\r\n            { label: t(langKeys.meetsnot), quantity: 0 }\r\n        ]);\r\n        if (resTME.length) {\r\n            const { time_avg, tickets_comply, tickets_total, target_max, target_min, time_max, time_min, tickets_analyzed, target_percmax} = resTME[0];\r\n            let seconds = timetoseconds(time_avg)\r\n            if (seconds >= 0) {\r\n                let variacionperc = (tickets_comply / tickets_analyzed - parseFloat(target_percmax))*100\r\n                variacionperc=variacionperc? variacionperc: 0;\r\n                let hh = (Math.floor(seconds / 3600)) === 0 ? \"\" : (Math.floor(seconds / 3600) + \"h \")\r\n                let mm = Math.floor((seconds % 3600) / 60) === 0 ? \"\" : (Math.floor((seconds % 3600) / 60) + \"m \")\r\n                let ss = seconds % 60 + \"s\"\r\n                let objetivo_max = formattimeMinutes(target_max)\r\n                let dataTMO = `${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, dataTME: dataTMO }))\r\n                setDataTME(p => ({ ...p, obj_max: `<${objetivo_max}m` }))\r\n\r\n                let vartmo = timetoseconds(target_max) - seconds\r\n                vartmo = seconds < timetoseconds(target_min) ? Math.abs(vartmo) * -1 : vartmo\r\n                let sign = vartmo > 0 ? \"\" : \"-\"\r\n                vartmo = Math.abs(vartmo)\r\n                let variacioncolor = timetoseconds(target_min) <= seconds && timetoseconds(target_max) >= seconds\r\n\r\n                hh = (Math.floor(vartmo / 3600)) === 0 ? \"\" : (Math.floor(vartmo / 3600) + \"h \")\r\n                mm = Math.floor((vartmo % 3600) / 60) === 0 ? \"\" : (Math.floor((vartmo % 3600) / 60) + \"m \")\r\n                ss = vartmo % 60 + \"s\"\r\n                let variaciontxt = `${sign}${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, variaciontxt: variaciontxt }))\r\n                setDataTME(p => ({ ...p, variacioncolor: variacioncolor }))\r\n\r\n                let secondsmax = timetoseconds(time_max)\r\n                hh = (Math.floor(secondsmax / 3600)) === 0 ? \"\" : (Math.floor(secondsmax / 3600) + \"h \")\r\n                mm = Math.floor((secondsmax % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmax % 3600) / 60) + \"m \")\r\n                ss = secondsmax % 60 + \"s\"\r\n                let timeMax = `${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, timeMax: timeMax }))\r\n\r\n                let secondsmin = timetoseconds(time_min)\r\n                hh = (Math.floor(secondsmin / 3600)) === 0 ? \"\" : (Math.floor(secondsmin / 3600) + \"h \")\r\n                mm = Math.floor((secondsmin % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmin % 3600) / 60) + \"m \")\r\n                ss = secondsmin % 60 + \"s\"\r\n                let timeMin = `${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, timeMin: timeMin }))\r\n\r\n                let sla = target_percmax?`${(parseFloat(target_percmax) * 100).toFixed(2)}%`:\"0%\"\r\n                setDataTME(p => ({ ...p, sla: sla }))\r\n\r\n                let variacionperccolor = variacionperc >= 0;\r\n                setDataTME(p => ({ ...p, variacionperc: variacionperc }))\r\n                setDataTME(p => ({ ...p, variacionperccolor: variacionperccolor }))\r\n                setDataTME(p => ({ ...p, tickets_comply: tickets_comply }))\r\n                setDataTME(p => ({ ...p, tickets_analyzed: tickets_analyzed }))\r\n                setDataTME(p => ({ ...p, tickets_total: tickets_total }))\r\n                setDataTMEgraph([\r\n                    { label: t(langKeys.meets), quantity: tickets_comply },\r\n                    { label: t(langKeys.meetsnot), quantity: tickets_analyzed - tickets_comply }\r\n                ]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resTME])\r\n    useEffect(() => {\r\n        setDataSummary({\r\n            tmrglobal: \"0m\",\r\n            dataTMRBot: \"0m\",\r\n            dataTMRAsesor: \"0m\",\r\n            dataTMRCliente: \"0m\",\r\n            maxavgtickethour: \"0\",\r\n            minvgtickethour: \"0\",\r\n            avgtickethour: \"0\",\r\n            maxavgtickethourdescdate: \"\",\r\n            maxavgtickethourdeschour: \"\",\r\n            minavgtickethourdescdate: \"\",\r\n            minavgtickethourdeschour: \"\",\r\n            maxavgticketasesorhour: \"0\",\r\n            minvgticketasesorhour: \"0\",\r\n            avgticketasesorhour: \"0\",\r\n            maxavgticketasesorhourdescdate: \"\",\r\n            maxavgticketasesorhourdeschour: \"\",\r\n            minavgticketasesorhourdescdate: \"\",\r\n            minavgticketasesorhourdeschour: \"\",\r\n        })\r\n        if (resSummary?.length) {\r\n            if (resSummary[0] && resSummary[0].ticketstotal !== 0) {\r\n                let txtmaxavgticketusername = formatname(resSummary[0].maxavgticketusername)\r\n                let txtminavgticketusername = formatname(resSummary[0].minavgticketusername)\r\n                let txtmaxavgticketasesorusername = formatname(resSummary[0].maxavgticketasesorusername)\r\n                let txtminavgticketasesorusername = formatname(resSummary[0].minavgticketasesorusername)\r\n                const mm = resSummary[0].maxavgtickethourdesc ? resSummary[0].maxavgtickethourdesc.split(\" \") : null;\r\n                const mm1 = resSummary[0].minavgtickethourdesc ? resSummary[0].minavgtickethourdesc.split(\" \") : null;\r\n                const mm2 = resSummary[0].maxavgticketasesorhourdesc ? resSummary[0].maxavgticketasesorhourdesc.split(\" \") : null;\r\n                const mm3 = resSummary[0].minavgticketasesorhourdesc ? resSummary[0].minavgticketasesorhourdesc.split(\" \") : null;\r\n                setDataSummary({\r\n                    tmrglobal: formattime(timetoseconds(resSummary[0].averagereplytime)),\r\n                    dataTMRBot: formattime(timetoseconds(resSummary[0].botaveragereplytime)),\r\n                    dataTMRAsesor: formattime(timetoseconds(resSummary[0].useraveragereplytime)),\r\n                    dataTMRCliente: formattime(timetoseconds(resSummary[0].personaveragereplytime)),\r\n                    maxavgtickethour: `${resSummary[0].maxavgtickethour}(${txtmaxavgticketusername})`,\r\n                    minvgtickethour: `${resSummary[0].minavgtickethour} (${txtminavgticketusername})`,\r\n                    avgtickethour: resSummary[0].avgtickethour,\r\n                    maxavgtickethourdescdate: mm ? mm[0] + \" \" + arraymonth[parseInt(mm[1]) - 1] : \"\",\r\n                    maxavgtickethourdeschour: mm ? mm[2] + \" \" + mm[3].toLowerCase() : \"\",\r\n                    minavgtickethourdescdate: mm1 ? mm1[0] + \" \" + arraymonth[parseInt(mm1[1]) - 1] : \"\",\r\n                    minavgtickethourdeschour: mm1 ? mm1[2] + \" \" + mm1[3].toLowerCase() : \"\",\r\n                    maxavgticketasesorhour: `${resSummary[0].maxavgticketasesorhour} (${txtmaxavgticketasesorusername})`,\r\n                    minvgticketasesorhour: `${resSummary[0].minavgticketasesorhour} (${txtminavgticketasesorusername})`,\r\n                    avgticketasesorhour: resSummary[0].avgticketasesorhour,\r\n                    maxavgticketasesorhourdescdate: mm2 ? mm2[0] + \" \" + arraymonth[parseInt(mm2[1]) - 1] : \"\",\r\n                    maxavgticketasesorhourdeschour: mm2 ? mm2[2] + \" \" + mm2[3].toLowerCase() : \"\",\r\n                    minavgticketasesorhourdescdate: mm3 ? mm3[0] + \" \" + arraymonth[parseInt(mm3[1]) - 1] : \"\",\r\n                    minavgticketasesorhourdeschour: mm3 ? mm3[2] + \" \" + mm3[3].toLowerCase() : \"\",\r\n                })\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resSummary])\r\n    function setDataEncuestanps(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataNPS: \"0%\",\r\n            nps_green: \"0%\",\r\n            npsvariacioncolor: true,\r\n            npsvariation: \"0%\",\r\n            npspollssent: \"0\",\r\n            npspollsanswered: \"0\",\r\n            npstotalpromoters: 0,\r\n            npstotaldetractors: 0,\r\n            npstotalneutral: 0,\r\n            npstotalconversations: 0,\r\n        }))\r\n        setDataNPSgraph([\r\n            { label: t(langKeys.promoters), quantity: 0 },\r\n            { label: t(langKeys.detractors), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        if (data.length) {\r\n            const { high, tickets, low, green, medium, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataNPS: `${((toshow) * 100).toFixed(2)}%`,\r\n                npsvariacioncolor: variacioncolor,\r\n                nps_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                npsvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                npspollssent: `${formatNumber(tickets)}`,\r\n                npspollsanswered: `${formatNumber(total)}`,\r\n                npstotalpromoters: high,\r\n                npstotaldetractors: low,\r\n                npstotalneutral: medium,\r\n                npstotalconversations: tickets,\r\n            }))\r\n            setDataNPSgraph([\r\n                { label: t(langKeys.promoters), quantity: high },\r\n                { label: t(langKeys.detractors), quantity: low },\r\n                { label: t(langKeys.neutral), quantity: medium }\r\n            ]);\r\n        }\r\n    }\r\n    function setDataEncuestacsat(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataCSAT: \"0%\",\r\n            csat_green: \"0%\",\r\n            csatvariacioncolor: true,\r\n            csatvariation: \"0%\",\r\n            csatpollssent: \"0\",\r\n            csatpollsanswered: \"0\",\r\n            csattotalpromoters: 0,\r\n            csattotaldetractors: 0,\r\n            csattotalneutral: 0,\r\n            csattotalconversations: 0,\r\n        }))\r\n        setDataCSATgraph([\r\n            { label: t(langKeys.satisfied), quantity: 0 },\r\n            { label: t(langKeys.dissatisfied), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        if(data.length){\r\n            const { high, tickets, low, green, medium, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataCSAT: `${((toshow) * 100).toFixed(2)}%`,\r\n                csatvariacioncolor: variacioncolor,\r\n                csat_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                csatvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                csatpollssent: `${formatNumber(tickets)}`,\r\n                csatpollsanswered: `${formatNumber(total)}`,\r\n                csattotalpromoters: high,\r\n                csattotaldetractors: low,\r\n                csattotalneutral: medium,\r\n                csattotalconversations: tickets,\r\n            }))\r\n            setDataCSATgraph([\r\n                { label: t(langKeys.satisfied), quantity: high },\r\n                { label: t(langKeys.dissatisfied), quantity: low },\r\n                { label: t(langKeys.neutral), quantity: medium }\r\n            ]);\r\n        }\r\n    }\r\n    function setDataEncuestafcr(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataFCR: \"0%\",\r\n            fcr_green: \"0%\",\r\n            fcrvariacioncolor: true,\r\n            fcrvariation: \"0%\",\r\n            fcrpollssent: \"0\",\r\n            fcrpollsanswered: \"0\",\r\n            fcrtotalpromoters: 0,\r\n            fcrtotaldetractors: 0,\r\n            fcrtotalconversations: 0,\r\n        }))\r\n        setDataFCRgraph([\r\n            { label: t(langKeys.resolvedfirstcontact), quantity: 0 },\r\n            { label: t(langKeys.notresolvedfirstcontact), quantity: 0 },\r\n        ]);\r\n        if(data.length){\r\n            const { high, tickets, low, green, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataFCR: `${((toshow) * 100).toFixed(2)}%`,\r\n                fcrvariacioncolor: variacioncolor,\r\n                fcr_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                fcrvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                fcrpollssent: `${formatNumber(tickets)}`,\r\n                fcrpollsanswered: `${formatNumber(total)}`,\r\n                fcrtotalpromoters: high,\r\n                fcrtotaldetractors: low,\r\n                fcrtotalconversations: tickets,\r\n            }))\r\n            setDataFCRgraph([\r\n                { label: t(langKeys.resolvedfirstcontact), quantity: high },\r\n                { label: t(langKeys.notresolvedfirstcontact), quantity: low },\r\n            ]);\r\n        }\r\n    }\r\n    function setDataaverageconversationsattendedbyhour(data:any){\r\n        setDataSummary((prev)=>({...prev,\r\n            avgtickethour: \"0\",\r\n            maxavgtickethour: \"0\",\r\n            maxavgtickethourdescdate: \"\",\r\n            maxavgtickethourdeschour: \"\",\r\n            minvgtickethour: \"0\",\r\n            minavgtickethourdescdate: \"\",\r\n            minavgtickethourdeschour: \"\",\r\n        }))\r\n        if (data.length) {\r\n            let txtmaxavgticketusername = formatname(data[0].maxavgticketusername)\r\n            let txtminavgticketusername = formatname(data[0].minavgticketusername)\r\n            const mm = data[0].maxavgtickethourdesc ? data[0].maxavgtickethourdesc.split(\" \") : null;\r\n            const mm1 = data[0].minavgtickethourdesc ? data[0].minavgtickethourdesc.split(\" \") : null;\r\n            setDataSummary((prev)=>({...prev,\r\n                avgtickethour: data[0].avgtickethour,\r\n                maxavgtickethour: `${data[0].maxavgtickethour} (${txtmaxavgticketusername})`,\r\n                maxavgtickethourdescdate: mm ? mm[0] + \" \" + arraymonth[parseInt(mm[1]) - 1] : \"\",\r\n                maxavgtickethourdeschour: mm ? mm[2] + \" \" + mm[3].toLowerCase() : \"\",\r\n                minvgtickethour: `${data[0].minavgtickethour} (${txtminavgticketusername})`,\r\n                minavgtickethourdescdate: mm1 ? mm1[0] + \" \" + arraymonth[parseInt(mm1[1]) - 1] : \"\",\r\n                minavgtickethourdeschour: mm1 ? mm1[2] + \" \" + mm1[3].toLowerCase() : \"\",\r\n            }))\r\n        }\r\n    }\r\n    function setDataaverageconversationsattendedbytheadvisorbyhour(data:any){\r\n        setDataSummary((prev)=>({...prev,\r\n            avgticketasesorhour: \"0\",\r\n            maxavgticketasesorhour: \"0\",\r\n            maxavgticketasesorhourdescdate: \"\",\r\n            maxavgticketasesorhourdeschour: \"\",\r\n            minvgtickethour: \"0\",\r\n            minavgticketasesorhourdescdate: \"\",\r\n            minavgticketasesorhourdeschour: \"\",\r\n        }))\r\n        if (data.length) {\r\n            let txtminavgticketusername = formatname(resSummary[0].minavgticketusername)\r\n            let txtmaxavgticketasesorusername = formatname(resSummary[0].maxavgticketasesorusername)\r\n            const mm2 = resSummary[0].maxavgticketasesorhourdesc ? resSummary[0].maxavgticketasesorhourdesc.split(\" \") : null;\r\n            const mm3 = resSummary[0].minavgticketasesorhourdesc ? resSummary[0].minavgticketasesorhourdesc.split(\" \") : null;\r\n            setDataSummary((prev)=>({...prev,\r\n                avgticketasesorhour: resSummary[0].avgticketasesorhour,\r\n                maxavgticketasesorhour: `${resSummary[0].maxavgticketasesorhour} (${txtmaxavgticketasesorusername})`,\r\n                maxavgticketasesorhourdescdate: mm2 ? mm2[0] + \" \" + arraymonth[parseInt(mm2[1]) - 1] : \"\",\r\n                maxavgticketasesorhourdeschour: mm2 ? mm2[2] + \" \" + mm2[3].toLowerCase() : \"\",\r\n                minvgtickethour: `${resSummary[0].minavgtickethour} (${txtminavgticketusername})`,\r\n                minavgticketasesorhourdescdate: mm3 ? mm3[0] + \" \" + arraymonth[parseInt(mm3[1]) - 1] : \"\",\r\n                minavgticketasesorhourdeschour: mm3 ? mm3[2] + \" \" + mm3[3].toLowerCase() : \"\",\r\n            }))\r\n        }\r\n    }\r\n    function setDataEncuestafix(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataFIX: \"0%\",\r\n            fix_green: \"0%\",\r\n            fixvariacioncolor: true,\r\n            fixvariation: \"0%\",\r\n            fixpollssent: \"0\",\r\n            fixpollsanswered: \"0\",\r\n            fixtotalpromoters: 0,\r\n            fixtotaldetractors: 0,\r\n            fixtotalconversations: 0,\r\n        }))\r\n        setDataFIXgraph([\r\n            { label: t(langKeys.resolved), quantity: 0 },\r\n            { label: t(langKeys.notresolved), quantity: 0 },\r\n        ]);\r\n        if (data.length) {\r\n            const { high, tickets, low, green, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataFIX: `${((toshow) * 100).toFixed(2)}%`,\r\n                fixvariacioncolor: variacioncolor,\r\n                fix_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                fixvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                fixpollssent: `${formatNumber(tickets)}`,\r\n                fixpollsanswered: `${formatNumber(total)}`,\r\n                fixtotalpromoters: high,\r\n                fixtotaldetractors: low,\r\n                fixtotalconversations: tickets,\r\n            }))\r\n            setDataFIXgraph([\r\n                { label: t(langKeys.resolved), quantity: high },\r\n                { label: t(langKeys.notresolved), quantity: low },\r\n            ]);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        setDataEncuesta({\r\n            dataNPS: \"0%\",\r\n            npsvariacioncolor: true,\r\n            nps_green: \"0%\",\r\n            npsvariation: \"0%\",\r\n            npspollssent: \"0\",\r\n            npspollsanswered: \"0\",\r\n            npstotalpromoters: 0,\r\n            npstotaldetractors: 0,\r\n            npstotalneutral: 0,\r\n            npstotalconversations: 0,\r\n            dataCSAT: \"0%\",\r\n            csatvariacioncolor: true,\r\n            csat_green: \"0%\",\r\n            csatvariation: \"0%\",\r\n            csatpollssent: \"0\",\r\n            csatpollsanswered: \"0\",\r\n            csattotalpromoters: 0,\r\n            csattotaldetractors: 0,\r\n            csattotalneutral: 0,\r\n            csattotalconversations: 0,\r\n            dataFCR: \"0%\",\r\n            fcr_green: \"0%\",\r\n            fcrvariacioncolor: true,\r\n            fcrvariation: \"0%\",\r\n            fcrpollssent: \"0\",\r\n            fcrpollsanswered: \"0\",\r\n            fcrtotalpromoters: 0,\r\n            fcrtotaldetractors: 0,\r\n            fcrtotalconversations: 0,\r\n            dataFIX: \"0%\",\r\n            fix_green: \"0%\",\r\n            fixvariacioncolor: true,\r\n            fixvariation: \"0%\",\r\n            fixpollssent: \"0\",\r\n            fixpollsanswered: \"0\",\r\n            fixtotalpromoters: 0,\r\n            fixtotaldetractors: 0,\r\n            fixtotalconversations: 0,\r\n        })\r\n        setDataNPSgraph([\r\n            { label: t(langKeys.promoters), quantity: 0 },\r\n            { label: t(langKeys.detractors), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        setDataCSATgraph([\r\n            { label: t(langKeys.satisfied), quantity: 0 },\r\n            { label: t(langKeys.dissatisfied), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        setDataFCRgraph([\r\n            { label: t(langKeys.resolvedfirstcontact), quantity: 0 },\r\n            { label: t(langKeys.notresolvedfirstcontact), quantity: 0 },\r\n        ]);\r\n        setDataFIXgraph([\r\n            { label: t(langKeys.resolved), quantity: 0 },\r\n            { label: t(langKeys.notresolved), quantity: 0 },\r\n        ]);\r\n        if (resEncuesta.length) {\r\n            const { nps_high, total, nps_low, nps_green, nps_medium, nps_total } = resEncuesta[0]\r\n            const { csat_high, csat_low, csat_green, csat_medium, csat_total } = resEncuesta[0];\r\n            const { fcr_yes, fcr_no, fcr_green, fcr_total, total_bot } = resEncuesta[0];\r\n            const { fix_yes, fix_no, fix_green, fix_total } = resEncuesta[0];\r\n            const toshow = nps_total ? ((nps_high - nps_low) / nps_total) : 0;\r\n            const toshowcsat = csat_total ? ((csat_high - csat_low) / csat_total) : 0;\r\n            const toshowfcr = fcr_total ? ((fcr_yes - fcr_no) / fcr_total) : 0;\r\n            const toshowfix = fix_total ? ((fix_yes - fix_no) / fix_total) : 0;\r\n            let variacioncolor = (toshow - nps_green) * 100 >= 0\r\n            setDataEncuesta({\r\n                dataNPS: `${((toshow) * 100).toFixed(2)}%`,\r\n                npsvariacioncolor: variacioncolor,\r\n                nps_green: `${(parseFloat(nps_green) * 100).toFixed(2)}%`,\r\n                npsvariation: `${((toshow - nps_green) * 100).toFixed(2)}%`,\r\n                npspollssent: `${formatNumber(total)}`,\r\n                npspollsanswered: `${formatNumber(nps_total)}`,\r\n                npstotalpromoters: nps_high,\r\n                npstotaldetractors: nps_low,\r\n                npstotalneutral: nps_medium,\r\n                npstotalconversations: total,\r\n                dataCSAT: `${((toshowcsat) * 100).toFixed(2)}%`,\r\n                csatvariacioncolor: (toshowcsat - nps_green) * 100 >= 0,\r\n                csat_green: `${(parseFloat(csat_green) * 100).toFixed(2)}%`,\r\n                csatvariation: `${((toshowcsat - csat_green) * 100).toFixed(2)}%`,\r\n                csatpollssent: `${formatNumber(total)}`,\r\n                csatpollsanswered: `${formatNumber(csat_total)}`,\r\n                csattotalpromoters: csat_high,\r\n                csattotaldetractors: csat_low,\r\n                csattotalneutral: csat_medium,\r\n                csattotalconversations: total,\r\n                dataFCR: `${((toshowfcr) * 100).toFixed(2)}%`,\r\n                fcrvariacioncolor: (toshowfcr - nps_green) * 100 >= 0,\r\n                fcr_green: `${(parseFloat(fcr_green) * 100).toFixed(2)}%`,\r\n                fcrvariation: `${((toshowfcr - fcr_green) * 100).toFixed(2)}%`,\r\n                fcrpollssent: `${formatNumber(total)}`,\r\n                fcrpollsanswered: `${formatNumber(fcr_total)}`,\r\n                fcrtotalpromoters: fcr_yes,\r\n                fcrtotaldetractors: fcr_no,\r\n                fcrtotalconversations: total_bot,\r\n                dataFIX: `${((toshowfix) * 100).toFixed(2)}%`,\r\n                fixvariacioncolor: (toshowfix - nps_green) * 100 >= 0,\r\n                fix_green: `${(parseFloat(fix_green) * 100).toFixed(2)}%`,\r\n                fixvariation: `${((toshowfix - fix_green) * 100).toFixed(2)}%`,\r\n                fixpollssent: `${formatNumber(total)}`,\r\n                fixpollsanswered: `${formatNumber(fix_total)}`,\r\n                fixtotalpromoters: fix_yes,\r\n                fixtotaldetractors: fix_no,\r\n                fixtotalconversations: total,\r\n            })\r\n            setDataNPSgraph([\r\n                { label: t(langKeys.promoters), quantity: nps_high },\r\n                { label: t(langKeys.detractors), quantity: nps_low },\r\n                { label: t(langKeys.neutral), quantity: nps_medium }\r\n            ]);\r\n            setDataCSATgraph([\r\n                { label: t(langKeys.satisfied), quantity: csat_high },\r\n                { label: t(langKeys.dissatisfied), quantity: csat_low },\r\n                { label: t(langKeys.neutral), quantity: csat_medium }\r\n            ]);\r\n            setDataFCRgraph([\r\n                { label: t(langKeys.resolvedfirstcontact), quantity: fcr_yes },\r\n                { label: t(langKeys.notresolvedfirstcontact), quantity: fcr_no },\r\n            ]);\r\n            setDataFIXgraph([\r\n                { label: t(langKeys.resolved), quantity: fix_yes },\r\n                { label: t(langKeys.notresolved), quantity: fix_no },\r\n            ]);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resEncuesta]);\r\n    useEffect(() => {\r\n        setDataDASHBOARD({\r\n            totalconversations: \"0\",\r\n            avgconversationsattended: \"0%\",\r\n            maxavgconversationsattendedasesor: \"0%\",\r\n            maxavgconversationsattendedasesortotal: \"0\",\r\n            minvgconversationsattendedbot: \"0%\",\r\n            minvgconversationsattendedbottotal: \"0\",\r\n            iconconversationsattendedasesor: true,\r\n            iconconversationsattendedbot: true,\r\n            tasaabandono: \"0%\",\r\n            abandonados: \"0\"\r\n        })\r\n        if (resDashboard.length) {\r\n            const { avgparam,ticketscerrados, ticketstotal, ticketscerradosasesor, ticketscerradosbot, ticketsabandonados } = resDashboard[0];\r\n            let avgconversationsattended = ((ticketscerrados * 100) / ticketstotal).toFixed()\r\n            let maxavgconversationsattendedasesor = ((ticketscerradosasesor * 100) / ticketstotal).toFixed()\r\n            let minvgconversationsattendedbot = ((ticketscerradosbot * 100) / ticketstotal).toFixed()\r\n            setDataDASHBOARD({\r\n                totalconversations: ticketscerrados===\"\"?\"0\":ticketscerrados,\r\n                avgconversationsattended: avgconversationsattended + \"%\",\r\n                maxavgconversationsattendedasesor:  maxavgconversationsattendedasesor + \"%\",\r\n                maxavgconversationsattendedasesortotal: ticketscerradosasesor===\"\"?\"0\":ticketscerradosasesor,\r\n                minvgconversationsattendedbot:  minvgconversationsattendedbot + \"%\",\r\n                minvgconversationsattendedbottotal: ticketscerradosbot===\"\"?\"0\":ticketscerradosbot,\r\n                iconconversationsattendedasesor: parseFloat(avgparam) < (ticketscerradosasesor / ticketstotal),\r\n                iconconversationsattendedbot: parseFloat(avgparam) < (ticketscerradosbot / ticketstotal),\r\n                tasaabandono: ((ticketsabandonados * 100) / ticketstotal).toFixed() + \"%\",\r\n                abandonados: ticketsabandonados\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resDashboard]);\r\n    useEffect(() => {\r\n        setDataInteraction({\r\n            avginteractionsxconversations: \"0\",\r\n            maxavginteractionsxconversations: \"0\",\r\n            minvginteractionsxconversations: \"0\",\r\n        })\r\n        if (resInteraction.length) {\r\n            const { avginteracciones, avginteraccionesasesor, avginteracionesbot } = resInteraction[0];\r\n            setDataInteraction({\r\n                avginteractionsxconversations: avginteracciones,\r\n                maxavginteractionsxconversations: avginteraccionesasesor,\r\n                minvginteractionsxconversations: avginteracionesbot,\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resInteraction]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!remultiaux.loading && !remultiaux.error) {\r\n                setResTMO(remultiaux.data[0].data)\r\n                setResTME(remultiaux.data[1].data)\r\n                setResSummary(remultiaux.data[2].data)\r\n                setsla(remultiaux.data[2].data?.[0]?.slajson)\r\n                setResEncuesta(remultiaux.data[3].data)\r\n                setResDashboard(remultiaux.data[4].data)\r\n                setResInteraction(remultiaux.data[5].data)\r\n                setreschannels(remultiaux.data[7].data)\r\n                const asesoretmp = [...remultiaux.data[6].data];\r\n                const arrayconbar = [...Array(24)].map((_, i) => {\r\n                    const hourFound = asesoretmp.find((x: Dictionary) => x.hora === i);\r\n                    if (hourFound)\r\n                        return hourFound\r\n                    else\r\n                        return { hora: i, asesoresconectados: \"0\", avgasesoresconectados: \"0\" }\r\n                })\r\n                setResAsesoreconectadosbar(arrayconbar)\r\n                let avg= arrayconbar.reduce((acc, x) => acc + Number(x.asesoresconectados),0)/24\r\n                setDataAsesoreconectadosbar({\r\n                    avgasesoresconectados: avg.toFixed(2)\r\n                })\r\n\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (remultiaux.error) {\r\n                const errormessage = t(remultiaux.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [remultiaux, waitSave])\r\n    async function funcsearch() {\r\n        dispatch(showBackdrop(true));\r\n        setOpenDialog(false)\r\n        dispatch(getMultiCollectionAux([\r\n            gerencialTMOsel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialTMEsel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialsummarysel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialencuestasel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialconversationsel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialinteractionsel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialasesoresconectadosbarsel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n            gerencialchannelsel({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider }),\r\n        ]))\r\n        setWaitSave(true)\r\n    }\r\n    async function funcsearchoneonly() {\r\n        if(!searchfieldsOnlyOne.closedbybot && !searchfieldsOnlyOne.closedbyasesor){\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.choosebotorasesor) }))\r\n        }\r\n        if(searchfieldsOnlyOne.closedby){\r\n            setOpenDialogPerRequest(false)\r\n            \r\n            if(fieldToFilter===\"TMO\"){\r\n                setResTMO([])\r\n                dispatch(getCollectionAux(gerencialTMOsel({ ...searchfieldsOnlyOne,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })));\r\n            }\r\n            if(fieldToFilter===\"TME\"){\r\n                setResTME([])\r\n                dispatch(getCollectionAux(gerencialTMEsel({ ...searchfieldsOnlyOne,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n            }\r\n            if(fieldToFilter===\"NPS\"||fieldToFilter===\"CSAT\" || fieldToFilter===\"FCR\" || fieldToFilter===\"FIX\"){\r\n                dispatch(getCollectionAux(gerencialEncuestassel({ ...searchfieldsOnlyOne,question: fieldToFilter,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n            }\r\n            if(fieldToFilter===\"averageconversationsattendedbyhour\" || fieldToFilter===\"averageconversationsattendedbytheadvisorbyhour\"){\r\n                dispatch(getCollectionAux(getdashboardgerencialconverstionxhoursel({ ...searchfieldsOnlyOne,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n            }\r\n            // if(fieldToFilter===\"etiqueta\"){\r\n            //     setResLabels([])\r\n            //     dispatch(getCollectionAux(gerencialetiquetassel({ ...searchfieldsOnlyOne,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n            // }\r\n            setWaitSaveaux(true)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (waitSaveaux) {\r\n            if(!resaux.loading){\r\n                if(fieldToFilter===\"TMO\")\r\n                    setResTMO(resaux.data)\r\n                if(fieldToFilter===\"TME\")\r\n                    setResTME(resaux.data)\r\n                if(fieldToFilter===\"NPS\")\r\n                    setDataEncuestanps(resaux.data)\r\n                if(fieldToFilter===\"CSAT\")\r\n                    setDataEncuestacsat(resaux.data)\r\n                if(fieldToFilter===\"FIX\")\r\n                    setDataEncuestafix(resaux.data)\r\n                if(fieldToFilter===\"FCR\")\r\n                    setDataEncuestafcr(resaux.data)\r\n                if(fieldToFilter===\"averageconversationsattendedbyhour\")\r\n                    setDataaverageconversationsattendedbyhour(resaux.data)\r\n                if(fieldToFilter===\"averageconversationsattendedbytheadvisorbyhour\")\r\n                    setDataaverageconversationsattendedbytheadvisorbyhour(resaux.data)\r\n                // if(fieldToFilter===\"etiqueta\")\r\n                //     setResLabels(resaux.data)\r\n                setWaitSaveaux(false);\r\n            }\r\n        }\r\n        // eslint-disable-next-line\r\n    },[resaux,waitSaveaux])\r\n    useEffect(() => {\r\n        if (openDialogPerRequest && fieldToFilter!==\"TME\") {\r\n            setsearchfieldsOnlyOne({\r\n                closedbyasesor: true,  \r\n                closedbybot:  true,\r\n                closedby: \"ASESOR,BOT\",\r\n                min: sla?.totamtmomin || \"00:00:00\", \r\n                max: sla?.totaltmo, \r\n                target: sla?.totaltmopercentmax, \r\n                skipdown:0, \r\n                skipup:0,\r\n                limit: 5,\r\n                bd: false\r\n            })\r\n        }\r\n        // eslint-disable-next-line\r\n    },[openDialogPerRequest,fieldToFilter])\r\n\r\n\r\n    useEffect(() => {\r\n        setbringdataFilters(true)\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"GRUPOS\"),\r\n            getValuesFromDomain(\"EMPRESA\"),\r\n            getCommChannelLst()\r\n        ]));\r\n        funcsearch()\r\n        \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const downloaddata = (tipeoffilter:string) => {\r\n        setdownloaddatafile(true);\r\n        if (tipeoffilter === \"TMO\"){\r\n            settitlefile(tipeoffilter);\r\n            setSection('tmo')\r\n            dispatch(getCollectionAux(gerencialTMOselData({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else if(tipeoffilter === \"TME\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('tme')\r\n            dispatch(getCollectionAux(gerencialTMEselData({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else if (tipeoffilter === \"NPS\" || tipeoffilter === \"CSAT\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('survey3')\r\n            dispatch(getCollectionAux(gerencialEncuesta3selData({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider, question: tipeoffilter })))\r\n        } else if (tipeoffilter === \"FIX\" || tipeoffilter === \"FCR\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('survey2')\r\n            dispatch(getCollectionAux(gerencialEncuesta2selData({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider, question: tipeoffilter })))\r\n        } else if (tipeoffilter === \"asesoresconectados\") {\r\n            settitlefile(t(langKeys.averagenumberofadvisersconnectedbyhour));\r\n            setSection('asesoresconectados')\r\n            dispatch(getCollectionAux(gerencialasesoresconectadosbarseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else if (tipeoffilter === \"averageconversations\") {\r\n            settitlefile(t(langKeys.conversationsattended));\r\n            setSection('averageconversations')\r\n            dispatch(getCollectionAux(gerencialconversationseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else if (tipeoffilter === \"interaction\") {\r\n            settitlefile(t(langKeys.averageinteractionbyconversation));\r\n            setSection('interaction')\r\n            dispatch(getCollectionAux(gerencialinteractionseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        // } else if (tipeoffilter === \"etiqueta\") {\r\n        //     settitlefile(t(langKeys.top5labels));\r\n        //     setSection('etiqueta')\r\n        //     dispatch(getCollectionAux(gerencialetiquetasseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else if (tipeoffilter === \"averageconversationsattendedbyhour\") {\r\n            settitlefile(t(langKeys.averageconversationsattendedbyhour));\r\n            setSection('summary')\r\n            dispatch(getCollectionAux(gerencialsummaryseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else if (tipeoffilter === \"averageconversationsattendedbytheadvisorbyhour\") {\r\n            settitlefile(t(langKeys.averageconversationsattendedbytheadvisorbyhour));\r\n            setSection('summary')\r\n            dispatch(getCollectionAux(gerencialsummaryseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        } else {\r\n            settitlefile(t(langKeys.summary));\r\n            setSection('summary')\r\n            dispatch(getCollectionAux(gerencialsummaryseldata({ startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <DialogZyx\r\n                open={openDialog}\r\n                title=\"\"\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialog(false)}\r\n                handleClickButton2={() => funcsearch()}\r\n            >\r\n                <DateRangePicker\r\n                    open={openDateRangeCreateDateModal}\r\n                    setOpen={setOpenDateRangeCreateDateModal}\r\n                    range={dateRangeCreateDate}\r\n                    onSelect={setDateRangeCreateDate}\r\n                >\r\n                    <Button\r\n                        className={classes.itemDate}\r\n                        startIcon={<CalendarIcon />}\r\n                        onClick={() => setOpenDateRangeCreateDateModal(!openDateRangeCreateDateModal)}\r\n                    >\r\n                        {getDateCleaned(dateRangeCreateDate.startDate!) + \" - \" + getDateCleaned(dateRangeCreateDate.endDate!)}\r\n                    </Button>\r\n                </DateRangePicker>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.queue)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields(p => ({ ...p, queue: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.queue}\r\n                        data={dataqueue}\r\n                        optionDesc=\"domaindesc\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldSelect\r\n                        label={t(langKeys.provider)}\r\n                        className={classes.fieldsfilter}\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, provider: value?.domainvalue||\"\" })) }}\r\n                        valueDefault={searchfields.provider}\r\n                        data={dataprovider}\r\n                        optionDesc=\"domaindesc\"\r\n                        variant=\"outlined\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.channel_plural)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, channels: value.map((o: Dictionary) => o.communicationchannelid).join() })) }}\r\n                        valueDefault={searchfields.channels}\r\n                        data={datachannels}\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        optionValue=\"communicationchannelid\"\r\n                    />\r\n                </div>\r\n\r\n            </DialogZyx>\r\n            <DialogZyx\r\n                open={openDialogPerRequest}\r\n                title={`${t(langKeys.configuration)} ${fieldToFilter === \"averageconversationsattendedbytheadvisorbyhour\"? t(langKeys.averageconversationsattendedbytheadvisorbyhour): fieldToFilter === \"averageconversationsattendedbyhour\"? t(langKeys.averageconversationsattendedbyhour): fieldToFilter}`}\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialogPerRequest(false)}\r\n                handleClickButton2={() => funcsearchoneonly()}\r\n            >\r\n                <div>\r\n                    {(fieldToFilter!==\"FCR\" && fieldToFilter!==\"etiqueta\" && fieldToFilter!==\"averageconversationsattendedbytheadvisorbyhour\" && fieldToFilter!==\"averageconversationsattendedbyhour\" ) &&\r\n                        <div className=\"row-zyx\">\r\n                            <TemplateSwitch\r\n                                label={t(langKeys.agent)}\r\n                                valueDefault={searchfieldsOnlyOne.closedbyasesor}\r\n                                onChange={(value) => {\r\n                                    let closedby = \"\"\r\n                                    if(value && searchfieldsOnlyOne.closedbybot) {closedby=\"ASESOR,BOT\"} else\r\n                                    if (value) {closedby=\"ASESOR\"} else\r\n                                    if (searchfieldsOnlyOne.closedbybot) {closedby=\"BOT\"}\r\n                                    if(fieldToFilter===\"TMO\"){\r\n                                        if(closedby===\"ASESOR\"){\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbyasesor: value, closedby: closedby,min: sla?.usertmomin || \"00:00:00\", max: sla?.usertmo, target: sla?.usertmopercentmax}))\r\n                                        }else if(closedby===\"ASESOR,BOT\"){\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbyasesor: value,closedby: closedby,min: sla?.totamtmomin || \"00:00:00\", max: sla?.totaltmo, target: sla?.totaltmopercentmax}))\r\n                                        }\r\n                                        else{\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbyasesor: value,closedby: closedby,min: \"00:00:00\", max: \"00:00:00\", target: 0}))\r\n                                        }\r\n                                    }else{\r\n                                        if(closedby===\"\"){\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbyasesor: value,closedby: closedby,min: \"00:00:00\", max: \"00:00:00\", target: 0}))\r\n                                        }else{\r\n\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbyasesor: value, closedby: closedby,min: \"00:00:00\", max: sla?.usertme, target: sla?.usertmepercentmax}))\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                className=\"col-6\"\r\n                            />\r\n                            <TemplateSwitch\r\n                                label=\"Bot\"\r\n                                className=\"col-6\"\r\n                                valueDefault={searchfieldsOnlyOne.closedbybot}\r\n                                onChange={(value) =>{ \r\n                                    let closedby = \"\"\r\n                                    if(value && searchfieldsOnlyOne.closedbyasesor) {closedby=\"ASESOR,BOT\"} else\r\n                                    if (value) {closedby=\"BOT\"} else\r\n                                    if (searchfieldsOnlyOne.closedbyasesor) {closedby=\"ASESOR\"}\r\n                                    if(fieldToFilter===\"TMO\"){\r\n                                        if(closedby===\"ASESOR\"){\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbybot: value, closedby: closedby,min: sla?.usertmomin || \"00:00:00\", max: sla?.usertmo, target: sla?.usertmopercentmax}))\r\n                                        }else if(closedby===\"ASESOR,BOT\"){\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbybot: value,closedby: closedby,min: sla?.totamtmomin || \"00:00:00\", max: sla?.totaltmo, target: sla?.totaltmopercentmax}))\r\n                                        }\r\n                                        else{\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbybot: value,closedby: closedby,min: \"00:00:00\", max: \"00:00:00\", target: 0}))\r\n                                        }\r\n                                    }else{\r\n                                        if(closedby===\"\"){\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbyasesor: value,closedby: closedby,min: \"00:00:00\", max: \"00:00:00\", target: 0}))\r\n                                        }else{\r\n                                            setsearchfieldsOnlyOne((prevState) =>({...prevState, closedbybot: value, closedby: closedby,min: \"00:00:00\", max: sla?.usertme, target: sla?.usertmepercentmax}))\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {(fieldToFilter===\"TMO\" || fieldToFilter===\"TME\" || fieldToFilter===\"averageconversationsattendedbytheadvisorbyhour\" || fieldToFilter===\"averageconversationsattendedbyhour\" ) &&\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={`${t(langKeys.lowesttime)} (%)`} \r\n                                variant=\"outlined\" \r\n                                value={searchfieldsOnlyOne.skipdown}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, skipdown: e.target.value as any}))}\r\n                                type=\"number\"\r\n                                className=\"col-6\"\r\n                            />\r\n                            <TextField \r\n                                label={`${t(langKeys.higuesttime)} (%)`} \r\n                                variant=\"outlined\" \r\n                                value={searchfieldsOnlyOne.skipup}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, skipup: e.target.value as any}))}\r\n                                className=\"col-6\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    \r\n                    {fieldToFilter===\"TMO\" &&\r\n                        <div className=\"row-zyx\">\r\n                                <TextField \r\n                                    label={t(langKeys.timemin)} \r\n                                    variant=\"outlined\" \r\n                                    type=\"time\"\r\n                                    className=\"col-12\"\r\n                                    value={searchfieldsOnlyOne.min}\r\n                                    onChange={(e) => setsearchfieldsOnlyOne((prevState) =>({...prevState, min: e.target.value}))}\r\n                                />\r\n                        </div>\r\n                    }\r\n                    {(fieldToFilter===\"TMO\" || fieldToFilter===\"TME\") &&\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={t(langKeys.timemax)}\r\n                                variant=\"outlined\" \r\n                                type=\"time\"\r\n                                className=\"col-12\"\r\n                                value={searchfieldsOnlyOne.max}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, max: e.target.value}))}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    { (fieldToFilter!==\"etiqueta\" && fieldToFilter!==\"averageconversationsattendedbytheadvisorbyhour\" && fieldToFilter!==\"averageconversationsattendedbyhour\") &&\r\n\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={t(langKeys.targetvalue)}\r\n                                variant=\"outlined\" \r\n                                type=\"number\"\r\n                                className=\"col-12\"\r\n                                value={searchfieldsOnlyOne.target}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, target: e.target.value as any}))}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    { (fieldToFilter===\"etiqueta\") &&\r\n\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={t(langKeys.numberoflabels)}\r\n                                variant=\"outlined\" \r\n                                type=\"number\"\r\n                                className=\"col-12\"\r\n                                value={searchfieldsOnlyOne.limit}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, limit: e.target.value as any}))}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n            </DialogZyx>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n                <div className={classes.maintitle}> {t(langKeys.managerial)}</div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: 200, backgroundColor: \"#007bff\" }}\r\n                    onClick={() => setOpenDialog(true)}\r\n                >{t(langKeys.stablishfilters)}\r\n                </Button>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 16, flexDirection: 'column' }}>\r\n                <div className={classes.replacerowzyx}>\r\n                    { (resaux.loading && fieldToFilter===\"TMO\")?\r\n                        (<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}>\r\n                            <CircularProgress/>\r\n                        </Box>):\r\n                        (<Box\r\n                            className={classes.itemCard}\r\n                        >\r\n                            <div className={classes.downloadiconcontainer}>                            \r\n                                <CloudDownloadIcon onClick={()=>downloaddata(\"TMO\")} className={classes.styleicon}/>\r\n                                <SettingsIcon onClick={()=>{setFieldToFilter(\"TMO\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                            </div>\r\n                            <div className={classes.columnCard}>\r\n                                <div className={classes.containerFieldsTitle}>\r\n                                    <div className={classes.boxtitle}>TMO\r\n                                        <Tooltip title={`${t(langKeys.tmotooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div className={classes.boxtitledata}>{data.dataTMO}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                    <div className={classes.datafield}>{data.obj_min}{data.obj_max}</div>\r\n                                </div>\r\n                                <div className={clsx(classes.containerFields, data.variacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                    <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                    <div className={classes.datafield}>{data.variaciontxt}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.highestTMO)}</div>\r\n                                    <div className={classes.datafield}>{data.timeMax}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.lowestTMO)}</div>\r\n                                    <div className={classes.datafield}>{data.timeMin}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                    [classes.dontshow]: !data.tickets_total,\r\n\r\n                                })}>\r\n                                <ResponsiveContainer className={classes.itemGraphic}>\r\n                                    <PieChart>\r\n                                        <RechartsTooltip />\r\n                                        <Pie data={dataTMOgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                            {dataTMOgraph.map((entry: any, index: number) => (\r\n                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                            ))}\r\n                                        </Pie>\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                            <div className={classes.columnCard}>\r\n                                {(dataTMOgraph[0].quantity + dataTMOgraph[1].quantity) > 0 &&\r\n                                    <div className={classes.containerFields}>\r\n                                        <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                            {dataTMOgraph.map((entry: any, index: number) => {\r\n                                                let totalsum = dataTMOgraph[0].quantity + dataTMOgraph[1].quantity\r\n                                                let perc = (dataTMOgraph[index].quantity*100)/totalsum\r\n                                                return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataTMOgraphlegend-${index}`}>\r\n                                                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                    <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                    <span style={{color: COLORS[index % COLORS.length]}}>{dataTMOgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                                </li>\r\n                                                }\r\n                                            )}\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.slaoptimum)}</div>\r\n                                    <div className={classes.datafield}>{data.sla}</div>\r\n                                </div>\r\n                                <div className={clsx(classes.containerFields, data.variacionperccolor ? classes.colorgreen : classes.colorred)}>\r\n                                    <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                    <div className={classes.datafield}>{data.variacionperc.toFixed(2)}%</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.quantitymeets)}</div>\r\n                                    <div className={classes.datafield}>{data.tickets_comply}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.quantitymeetsnot)}</div>\r\n                                    <div className={classes.datafield}>{data.tickets_analyzed - data.tickets_comply}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.conversationsanalyzed)}</div>\r\n                                    <div className={classes.datafield}>{data.tickets_analyzed}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.totalconversation)}</div>\r\n                                    <div className={classes.datafield}>{data.tickets_total}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Box>)\r\n                    }\r\n\r\n                    { (resaux.loading && fieldToFilter===\"TME\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                        (<Box\r\n                            className={classes.itemCard}\r\n                        >\r\n                            <div className={classes.downloadiconcontainer}>\r\n                                <CloudDownloadIcon onClick={()=>downloaddata(\"TME\")}  className={classes.styleicon}/>\r\n                                <SettingsIcon onClick={()=>{setFieldToFilter(\"TME\"); setOpenDialogPerRequest(true);setsearchfieldsOnlyOne((prevState) =>({...prevState, min: \"00:00:00\",target:sla?.usertmepercentmax, max: sla?.usertme||\"00:00:00\"}))}} className={classes.styleicon}/>\r\n                            </div>\r\n                            <div className={classes.columnCard}>\r\n                                <div className={classes.containerFieldsTitle}>\r\n                                    <div className={classes.boxtitle}>TME\r\n                                        <Tooltip title={`${t(langKeys.tmetooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div className={classes.boxtitledata}>{dataTME.dataTME}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.obj_max}</div>\r\n                                </div>\r\n                                <div className={clsx(classes.containerFields, dataTME.variacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                    <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.variaciontxt}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.highestTME)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.timeMax}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.lowestTME)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.timeMin}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                    [classes.dontshow]: !dataTME.tickets_total,\r\n\r\n                                })}>\r\n                                <ResponsiveContainer className={classes.itemGraphic}>\r\n                                    <PieChart>\r\n                                        <RechartsTooltip />\r\n                                        <Pie data={dataTMEgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                            {dataTMEgraph.map((entry: any, index: number) => (\r\n                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                            ))}\r\n                                        </Pie>\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n                            <div className={classes.columnCard}>\r\n                                {(dataTMEgraph[0].quantity + dataTMEgraph[1].quantity) > 0 &&\r\n                                    <div className={classes.containerFields}>\r\n                                        <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                            {dataTMEgraph.map((entry: any, index: number) => {\r\n                                                let totalsum = dataTMEgraph[0].quantity + dataTMEgraph[1].quantity\r\n                                                let perc = (dataTMEgraph[index].quantity*100)/totalsum\r\n                                                return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataTMEgraphlegend-${index}`}>\r\n                                                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                    <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                    <span style={{color: COLORS[index % COLORS.length]}}>{dataTMEgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                                </li>\r\n                                                }\r\n                                            )}\r\n                                        </ul>\r\n                                    </div>\r\n                                }\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.slaoptimum)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.sla}</div>\r\n                                </div>\r\n                                <div className={clsx(classes.containerFields, dataTME.variacionperccolor ? classes.colorgreen : classes.colorred)}>\r\n                                    <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.variacionperc.toFixed(2)}%</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.quantitymeets)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.tickets_comply}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.quantitymeetsnot)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.tickets_analyzed - dataTME.tickets_comply}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.conversationsanalyzed)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.tickets_analyzed}</div>\r\n                                </div>\r\n                                <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.totalconversation)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.tickets_total}</div>\r\n                                </div>\r\n                            </div>\r\n                        </Box>)\r\n                    }\r\n\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#53a6fa\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <ChatIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR\r\n                                <Tooltip title={`${t(langKeys.tmrtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.tmrglobal}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#22b66e\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <PersonIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR {t(langKeys.agent)}\r\n                                <Tooltip title={`${t(langKeys.tmratooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.dataTMRAsesor}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#fdab29\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <AdbIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR Bot\r\n                                <Tooltip title={`${t(langKeys.tmrbtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.dataTMRBot}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#907eec\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <PersonIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR {t(langKeys.client)}\r\n                                <Tooltip title={`${t(langKeys.tmrctooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.dataTMRCliente}</div>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    { (resaux.loading && fieldToFilter===\"NPS\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"NPS\")} className={classes.styleicon}/>                            \r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"NPS\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>NPS\r\n                                    <Tooltip title={`${t(langKeys.npstooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataNPS}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.nps_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.npsvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npsvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'NPS' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npspollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'NPS' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npspollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.npspollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataNPSgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataNPSgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataNPSgraph[0].quantity + dataNPSgraph[1].quantity + dataNPSgraph[2].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataNPSgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataNPSgraph[0].quantity + dataNPSgraph[1].quantity + dataNPSgraph[2].quantity\r\n                                            let perc = (dataNPSgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataNPSgraphlegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataNPSgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalpromoters)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totaldetractors)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalneutral)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotalneutral}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                    { (resaux.loading && fieldToFilter===\"CSAT\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"CSAT\")} className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"CSAT\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>CSAT\r\n                                <Tooltip title={`${t(langKeys.csattooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataCSAT}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csat_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.csatvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csatvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'CSAT' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csatpollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'CSAT' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csatpollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.csatpollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataCSATgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataCSATgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataCSATgraph[0].quantity + dataCSATgraph[1].quantity + dataCSATgraph[2].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataCSATgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataCSATgraph[0].quantity + dataCSATgraph[1].quantity + dataCSATgraph[2].quantity\r\n                                            let perc = (dataCSATgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataCSATgraphlegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataCSATgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalsatisfied)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totaldissatisfied)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalneutral)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotalneutral}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                </div>\r\n                <div className={classes.replacerowzyx} >\r\n                    { (resaux.loading && fieldToFilter===\"FCR\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"FCR\")} className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"FCR\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>FCR\r\n                                <Tooltip title={`${t(langKeys.fcrtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataFCR}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcr_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.fcrvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'FCR' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrpollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'FCR' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrpollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.fcrpollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataFCRgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataFCRgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataFCRgraph[0].quantity + dataFCRgraph[1].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataFCRgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataFCRgraph[0].quantity + dataFCRgraph[1].quantity\r\n                                            let perc = (dataFCRgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataFCRgraphlegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataFCRgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalresolvedfirstcontact)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrtotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalnotresolvedfirstcontact)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrtotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrtotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                    { (resaux.loading && fieldToFilter===\"FIX\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"FIX\")} className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"FIX\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>FIX\r\n                                <Tooltip title={`${t(langKeys.fixtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataFIX}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fix_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.fixvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'FIX' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixpollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'FIX' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixpollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.fixpollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataFIXgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataFIXgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataFIXgraph[0].quantity + dataFIXgraph[1].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataFIXgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataFIXgraph[0].quantity + dataFIXgraph[1].quantity\r\n                                            let perc = (dataFIXgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataFIXgraphlegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataFIXgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalresolved)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixtotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalnotresolved)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixtotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixtotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    { (resaux.loading && fieldToFilter===\"averageconversationsattendedbyhour\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 1.91 }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"averageconversationsattendedbyhour\")} className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"averageconversationsattendedbyhour\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div className={classes.boxtitlequarter} style={{width: \"80%\"}}>{t(langKeys.averageconversationsattendedbyhour)}</div>\r\n                            <div className={classes.boxtitlequarter} style={{marginBottom: \"auto\",marginTop: \"auto\",marginRight:5}}>{dataSummary.avgtickethour}</div>\r\n                        </div>\r\n                        <div style={{display: \"flex\",  width: \"100%\"}}>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"10px\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{dataSummary.maxavgtickethour}</div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.maxavgtickethourdescdate}</div>\r\n                                </div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\"  }}>\r\n                                    <div style={{ width: \"50%\" }}>{t(langKeys.highestvalue)}\r\n                                        <Tooltip title={`${t(langKeys.maxavgtickethourtooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.maxavgtickethourdeschour}</div>\r\n                                </div>\r\n                            </div>\r\n                            <ArrowDropUpIcon style={{color:\"#55bd84\",marginTop: \"23px\"}}/>                        \r\n                        </div>\r\n                        <div style={{display: \"flex\",  width: \"100%\"}}>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"30px\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{dataSummary.minvgtickethour}</div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.minavgtickethourdescdate}</div>\r\n                                </div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{t(langKeys.lowestvalue)}\r\n                                        <Tooltip title={`${t(langKeys.minavgtickethourtooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.minavgtickethourdeschour}</div>\r\n                                </div>\r\n                            </div>\r\n                            <ArrowDropDownIcon style={{color:\"#fb5f5f\",marginTop: \"43px\"}}/>                        \r\n                        </div>\r\n                    </Box>)}\r\n                    { (resaux.loading && fieldToFilter===\"averageconversationsattendedbytheadvisorbyhour\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 1.91 }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"averageconversationsattendedbytheadvisorbyhour\")} className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"averageconversationsattendedbytheadvisorbyhour\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div className={classes.boxtitlequarter} style={{width: \"80%\"}}>{t(langKeys.averageconversationsattendedbytheadvisorbyhour)}</div>\r\n                            <div className={classes.boxtitlequarter} style={{marginBottom: \"auto\",marginTop: \"auto\",marginRight:5}}>{dataSummary.avgticketasesorhour}</div>\r\n                        </div>\r\n                        <div style={{display: \"flex\",  width: \"100%\"}}>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"10px\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{dataSummary.maxavgticketasesorhour}</div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.maxavgticketasesorhourdescdate}</div>\r\n                                </div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{t(langKeys.highestvalue)}\r\n                                        <Tooltip title={`${t(langKeys.maxavgticketasesorhourtooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.maxavgticketasesorhourdeschour}</div>\r\n                                </div>\r\n                            </div>\r\n                            <ArrowDropUpIcon style={{color:\"#55bd84\",marginTop: \"23px\"}}/>                        \r\n                        </div>\r\n                        <div style={{display: \"flex\",  width: \"100%\"}}>\r\n                            <div style={{width: \"100%\"}}>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"30px\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{dataSummary.minvgtickethour}</div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.minavgticketasesorhourdescdate}</div>\r\n                                </div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>\r\n                                    <div style={{ width: \"50%\" }}>{t(langKeys.lowestvalue)}\r\n                                        <Tooltip title={`${t(langKeys.minavgticketasesorhourtooltip)}`} placement=\"top-start\">\r\n                                            <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                    <div style={{ width: \"50%\", textAlign: \"end\" }}>{dataSummary.minavgticketasesorhourdeschour}</div>\r\n                                </div>\r\n                            </div>\r\n                            <ArrowDropDownIcon style={{color:\"#fb5f5f\",marginTop: \"43px\"}}/>                        \r\n                        </div>\r\n                    </Box>)}\r\n                    <Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 4 , width: \"50%\" }}\r\n                    >\r\n                        <div className={classes.containertitleboxes} style={{justifyContent: \"end\"}}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"asesoresconectados\")} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div style={{display: \"flex\"}}> \r\n                                <div className={classes.boxtitlequarter}>{t(langKeys.averagenumberofadvisersconnectedbyhour)}</div>\r\n                                <Tooltip title={`${t(langKeys.averagenumberofadviserstooltip)}`}>\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\"}}>{dataAsesoreconectadosbar.avgasesoresconectados}</div>\r\n                        </div>\r\n                        <div style={{ paddingTop: \"20px\" }}>\r\n                            <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\r\n                                <LineChart data={resAsesoreconectadosbar}>\r\n                                    <Line type=\"monotone\" dataKey=\"asesoresconectados\" stroke=\"#8884d8\" strokeWidth={2} />\r\n                                    <CartesianGrid stroke=\"#ccc\" />\r\n                                    <XAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"hora\"><Label value={` ${t(langKeys.timeofday)} `} offset={-5} position=\"insideBottom\" /></XAxis>\r\n                                    <YAxis allowDecimals={false} domain={[0, (auto:any) => Math.ceil(auto * 1.3)]}><Label value={` ${t(langKeys.assesor_plural)} `} angle={-90} offset={0} position=\"insideLeft\" /></YAxis>\r\n                                    <RechartsTooltip />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n\r\n                        </div>\r\n\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 1.91 }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}><CloudDownloadIcon onClick={()=>downloaddata(\"averageconversations\")} className={classes.styleicon}/></div>\r\n                        \r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div className={classes.boxtitlequarter} style={{width: \"80%\"}}>{t(langKeys.conversationsattended)}</div>\r\n                            <div className={classes.boxtitlequarter} style={{marginBottom: \"auto\",marginTop: \"auto\",marginRight:5}}>{dataDASHBOARD.avgconversationsattended} - {dataDASHBOARD.totalconversations}</div>\r\n                        </div>\r\n                        <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                            <div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"10px\", margin: 0 }}>{dataDASHBOARD.maxavgconversationsattendedasesor} - {dataDASHBOARD.maxavgconversationsattendedasesortotal}</div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>{t(langKeys.attendedbyasesor)}\r\n                                    <Tooltip title={`${t(langKeys.maxavgconversationsattendedasesortooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                dataDASHBOARD.iconconversationsattendedasesor?\r\n                                    <ArrowDropUpIcon style={{color:\"#55bd84\",marginTop: \"23px\"}}/>:<ArrowDropDownIcon style={{color:\"#fb5f5f\",marginTop: \"23px\"}}/>\r\n\r\n                            }\r\n                        </div>\r\n                        \r\n                        <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                            <div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"30px\", margin: 0 }}>{dataDASHBOARD.minvgconversationsattendedbot} - {dataDASHBOARD.minvgconversationsattendedbottotal}</div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>{t(langKeys.attendedbybot)}\r\n                                    <Tooltip title={`${t(langKeys.minvgconversationsattendedbottooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                dataDASHBOARD.iconconversationsattendedbot?\r\n                                    <ArrowDropUpIcon style={{color:\"#55bd84\",marginTop: \"23px\"}}/>:<ArrowDropDownIcon style={{color:\"#fb5f5f\",marginTop: \"23px\"}}/>\r\n\r\n                            }\r\n                        </div>\r\n                        <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                            <div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"30px\", margin: 0 }}>{dataDASHBOARD.tasaabandono} - {dataDASHBOARD.abandonados}</div>\r\n                                <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>{t(langKeys.productivitycard4)}\r\n                                    <Tooltip title={`${t(langKeys.dropoutrate)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 1.91 }}\r\n                    >\r\n                        {/*<div className={classes.downloadiconcontainer}><CloudDownloadIcon onClick={()=>downloaddata(\"interaction\")} className={classes.styleicon}/></div>*/}\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div className={classes.boxtitlequarter} style={{width: \"80%\"}}>{t(langKeys.uniqueclients)}</div>\r\n                            <div className={classes.boxtitlequarter} style={{marginBottom: \"auto\",marginTop: \"auto\",marginRight:5}}>{reschannels.reduce((a:any, b:any) => a + (b.uniques || 0), 0)}</div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>\r\n                            {reschannels.map(((x:any)=>{\r\n                            let totalchannels = reschannels.reduce((a:any, b:any) => a + (b.uniques || 0), 0)\r\n                            let width = x.uniques*100/totalchannels\r\n                            return (\r\n                            <div key={x.communicationchannelid}>\r\n                                <div style={{display:\"flex\", justifyContent: \"space-between\"}}>\r\n                                    <div>\r\n                                        {x.communicationchannel}\r\n                                    </div>\r\n                                    <div>\r\n                                        {x.uniques}\r\n                                    </div>\r\n                                </div> \r\n                                <div style={{display:\"flex\"}}>\r\n                                    <div style={{border: \"5px solid #53a6fa\", borderRadius: \"10px 0 0 10px\", width:`${width}%`}}></div>\r\n                                    <div style={{border: \"5px solid lightgrey\", borderRadius: \"0 10px 10px 0\", width:`${100-width}%`}}></div>\r\n                                </div>\r\n                                <br/> \r\n                            </div>)}\r\n                            ))}\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 1.91 }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}><CloudDownloadIcon onClick={()=>downloaddata(\"interaction\")} className={classes.styleicon}/></div>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div className={classes.boxtitlequarter} style={{width: \"80%\"}}>{t(langKeys.averageinteractionbyconversation)}</div>\r\n                            <div className={classes.boxtitlequarter} style={{marginBottom: \"auto\",marginTop: \"auto\",marginRight:5}}>{dataInteraction.avginteractionsxconversations}</div>\r\n                        </div>\r\n                        <div className=\"row-zyx\" style={{ paddingTop: \"10px\", margin: 0 }}>{dataInteraction.maxavginteractionsxconversations} </div>\r\n                        <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>{t(langKeys.agent)}\r\n                            <Tooltip title={`${t(langKeys.maxavginteractionsxconversationstooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className=\"row-zyx\" style={{ paddingTop: \"30px\", margin: 0 }}>{dataInteraction.minvginteractionsxconversations} </div>\r\n                        <div className=\"row-zyx\" style={{ paddingTop: \"0\" }}>Bot\r\n                            <Tooltip title={`${t(langKeys.minvginteractionsxconversationstooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        style={{ backgroundColor: \"white\", padding: \"10px\", flex: 4, width: \"50%\" }}\r\n                    >\r\n                        {/*<div className={classes.containertitleboxes} style={{justifyContent: \"end\"}}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"asesoresconectados\")} className={classes.styleicon}/>\r\n                            </div>*/}\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                            <div style={{display: \"flex\"}}> \r\n                                <div className={classes.boxtitlequarter}>{t(langKeys.numberofconversationsperchannel)}</div>\r\n                                {/*<Tooltip title={`${t(langKeys.averagenumberofadviserstooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>*/}\r\n                            </div>\r\n                            <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\"}}>{reschannels.reduce((a:any, b:any) => a + (b.tickets || 0), 0)}</div>\r\n                        </div>\r\n                        <div style={{ paddingTop: \"20px\" }}>\r\n                            <ResponsiveContainer width=\"100%\" aspect={4.0 / 2.0} >\r\n                                <BarChart data={reschannels} margin={{ top: 20, right: 5, bottom: 5, left: 5 }}>\r\n                                    <CartesianGrid stroke=\"#ccc\" />\r\n                                    <XAxis domain={[\"\",\"\"]} angle={-60} interval={0} textAnchor=\"end\" height={reschannels?.map((x:any)=> x.communicationchannel.length).length>0?Math.max(...reschannels?.map((x:any)=> x.communicationchannel.length))*8:10} type=\"category\" dataKey=\"communicationchannel\"><Label value={` ${t(langKeys.channel_plural)} `} offset={-5} position=\"insideBottom\" /></XAxis>\r\n                                    <YAxis ><Label value={` ${t(langKeys.conversationquantity)} `} angle={-90} offset={10} position=\"insideBottomLeft\"/></YAxis>\r\n                                    <RechartsTooltip />\r\n                                    <Bar dataKey=\"tickets\" fill=\"#8884d8\" isAnimationActive={false}>\r\n                                        <LabelList dataKey=\"tickets\" position=\"top\" fill=\"#000\" />\r\n                                    </Bar>\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n\r\n                        </div>\r\n\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DashboardManagerial;","import { Box, Button, CircularProgress, createStyles, makeStyles, TextField, Theme } from \"@material-ui/core\";\r\nimport { DateRangePicker, DialogZyx, FieldMultiSelect, FieldSelect } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { CalendarIcon } from \"icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { FC, Fragment, useEffect, useState } from \"react\";\r\nimport { getMultiCollection, getMultiCollectionAux, getCollectionAux, resetMainAux, resetMultiMainAux, setViewChange, cleanViewChange } from 'store/main/actions';\r\nimport { Range } from 'react-date-range';\r\nimport clsx from 'clsx';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport AdbIcon from '@material-ui/icons/Adb';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { exportExcel, getCommChannelLst, getdashboardoperativoEncuestaSel,getdashboardoperativoEncuesta3Sel, getdashboardoperativoProdxHoraDistSel, getdashboardoperativoProdxHoraSel, getdashboardoperativoSummarySel,getdashboardoperativoTMEGENERALSeldata, getdashboardoperativoTMEGENERALSel, getdashboardoperativoTMOGENERALSel, getdashboardoperativoTMOGENERALSeldata, getLabelsSel, getSupervisorsSel, getValuesFromDomain, getdashboardoperativoTMOdistseldata, getdashboardoperativoTMEdistseldata, getdashboardoperativoProdxHoraDistSeldata, getdashboardoperativoEncuesta3Seldata, getdashboardoperativoEncuesta2Seldata, getDateCleaned } from \"common/helpers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport { Dictionary } from \"@types\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport { Line, CartesianGrid, XAxis, YAxis, ResponsiveContainer, Tooltip as RechartsTooltip, BarChart, Bar, PieChart, Pie, Cell, ComposedChart } from 'recharts';\r\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { formatNumber,formattime, timetoseconds, timetomin } from 'common/helpers';\r\n\r\nconst COLORS = ['#22b66e', '#b41a1a', '#ffcd56'];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        halfbox: {\r\n            backgroundColor: 'white',\r\n        },\r\n        quarterbox: {\r\n            backgroundColor: 'white',\r\n            padding: \"10px\"\r\n        },\r\n        boxtitle: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\"\r\n        },\r\n        boxtitledata: {\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\",\r\n            textAlign: \"end\",\r\n            whiteSpace: 'nowrap'\r\n        },\r\n        boxtitlequarter: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.5em\",\r\n        },\r\n        maintitle: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"2em\",\r\n        },\r\n        rowstyles: {\r\n            margin: \"0!important\"\r\n        },\r\n        containerFields: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            // padding: \"0 20px 10px 20px\"\r\n        },\r\n        containerFieldsTitle: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            // padding: \"0 20px 30px 20px\"\r\n        },\r\n        containerFieldsQuarter: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            color: \"white\"\r\n        },\r\n        label: {\r\n            width: \"60%\",\r\n            fontSize: \"1.2em\",\r\n        },\r\n        datafield: {\r\n            fontSize: \"1.2em\",\r\n            width: \"40%\",\r\n            textAlign: \"end\"\r\n        },\r\n        datafieldquarter: {\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafieldfooter: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\"\r\n        },\r\n        widthhalf: {\r\n            flex: 1\r\n        },\r\n        columnCard2: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            textAlign: \"center\",\r\n            padding: theme.spacing(2),\r\n            flexDirection: 'column',\r\n            gap: theme.spacing(1)\r\n        },\r\n        columnCard: {\r\n            // flex: 1,\r\n            flex: 1,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: theme.spacing(1)\r\n        },\r\n        widthsecondhalf: {\r\n            width: \"50%\",\r\n            paddingTop: \"5%\"\r\n        },\r\n        itemDate: {\r\n            minHeight: 40,\r\n            height: 40,\r\n            border: '1px solid #bfbfc0',\r\n            borderRadius: 4,\r\n            color: 'rgb(143, 146, 161)'\r\n        },\r\n        fieldsfilter: {\r\n            width: \"100%\",\r\n        },\r\n        colorgreen: {\r\n            color: \"#22B66E\"\r\n        },\r\n        colorred: {\r\n            color: \"rgb(180, 26, 26)\"\r\n        },\r\n        replacerowzyx: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            gap: theme.spacing(2),\r\n            flexWrap: \"wrap\",\r\n        },\r\n        itemCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            gap: 8,\r\n            flexWrap: 'wrap',\r\n            padding: theme.spacing(2),\r\n            alignItems: 'center'\r\n        },\r\n        itemGraphic: {\r\n            width: 200\r\n        },\r\n        dontshow: {\r\n            display: \"none\"\r\n        },\r\n        downloadiconcontainer:{\r\n            width:\"100%\",display: \"flex\",justifyContent: \"end\"\r\n        },\r\n        styleicon:{\r\n            width: \"18px\",\r\n            height: \"18px\",\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n            }\r\n        },\r\n        containertitleboxes:{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\"\r\n        }\r\n    }),\r\n);\r\nconst initialRange = {\r\n    startDate: new Date(new Date().setDate(1)),\r\n    endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\r\n    key: 'selection'\r\n}\r\n\r\nconst DashboardProductivity: FC = () => {\r\n    const classes = useStyles();\r\n    const mainResult = useSelector(state => state.main);\r\n    const remultiaux = useSelector(state => state.main.multiDataAux);\r\n    const resaux = useSelector(state => state.main.mainAux);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const groups = user?.groups?.split(\",\").filter(x=>!!x) || [];\r\n    const [downloaddatafile,setdownloaddatafile]=useState(false)\r\n    const [section, setSection] = useState('')\r\n    const [titlefile, settitlefile] = useState('');\r\n    const [openDialogPerRequest, setOpenDialogPerRequest] = useState(false);\r\n    const [fieldToFilter, setFieldToFilter] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [searchfieldsOnlyOne, setsearchfieldsOnlyOne] = useState({\r\n        closedbyasesor: true,  \r\n        closedbybot:  false,\r\n        closedby: \"ASESOR\",\r\n        min: \"\", \r\n        max: \"\", \r\n        target:0, \r\n        skipdown:0, \r\n        skipup:0,\r\n        limit: 5,\r\n        bd: false\r\n    });\r\n    const [data, setData] = useState({\r\n        dataTMO: \"0s\",\r\n        obj_min: \"\",\r\n        obj_max: \"< 0m\",\r\n        variaciontxt: \"0s\",\r\n        variacioncolor: true,\r\n        timeMax: \"0s\",\r\n        timeMin: \"0s\",\r\n        sla: \"0%\",\r\n        variacionperccolor: true,\r\n        variacionperc: 0,\r\n        tickets_comply: 0,\r\n        tickets_analyzed: 0,\r\n        tickets_total: 0,\r\n    });\r\n    const [dataTME, setDataTME] = useState({\r\n        dataTME: \"0s\",\r\n        obj_max: \"< 0m\",\r\n        variaciontxt: \"0s\",\r\n        variacioncolor: true,\r\n        timeMax: \"0s\",\r\n        timeMin: \"0s\",\r\n        sla: \"0%\",\r\n        variacionperccolor: true,\r\n        variacionperc: 0,\r\n        tickets_comply: 0,\r\n        tickets_analyzed: 0,\r\n        tickets_total: 0,\r\n    });\r\n    const [dataSummary, setDataSummary] = useState({\r\n        tmrglobal: \"0m\",\r\n        dataTMRBot: \"0m\",\r\n        dataTMRAsesor: \"0m\",\r\n        dataTMRCliente: \"0m\",\r\n        tasaabandono: \"0\"\r\n    });\r\n    const [tasaabandonoperc, setTasaabandonoperc] = useState(0);\r\n    const [dataEncuesta, setDataEncuesta] = useState({\r\n        dataNPS: \"0%\",\r\n        nps_green: \"0%\",\r\n        npsvariacioncolor: true,\r\n        npsvariation: \"0%\",\r\n        npspollssent: \"0\",\r\n        npspollsanswered: \"0\",\r\n        npstotalpromoters: 0,\r\n        npstotaldetractors: 0,\r\n        npstotalneutral: 0,\r\n        npstotalconversations: 0,\r\n        dataCSAT: \"0%\",\r\n        csat_green: \"0%\",\r\n        csatvariacioncolor: true,\r\n        csatvariation: \"0%\",\r\n        csatpollssent: \"0\",\r\n        csatpollsanswered: \"0\",\r\n        csattotalpromoters: 0,\r\n        csattotaldetractors: 0,\r\n        csattotalneutral: 0,\r\n        csattotalconversations: 0,\r\n        dataFCR: \"0%\",\r\n        fcr_green: \"0%\",\r\n        fcrvariacioncolor: true,\r\n        fcrvariation: \"0%\",\r\n        fcrpollssent: \"0\",\r\n        fcrpollsanswered: \"0\",\r\n        fcrtotalpromoters: 0,\r\n        fcrtotaldetractors: 0,\r\n        fcrtotalconversations: 0,\r\n        dataFIX: \"0%\",\r\n        fix_green: \"0%\",\r\n        fixvariacioncolor: true,\r\n        fixvariation: \"0%\",\r\n        fixpollssent: \"0\",\r\n        fixpollsanswered: \"0\",\r\n        fixtotalpromoters: 0,\r\n        fixtotaldetractors: 0,\r\n        fixtotalconversations: 0,\r\n    });\r\n    const [dataTMOgraph, setDataTMOgraph] = useState([\r\n        { label: t(langKeys.meets), quantity: 0 },\r\n        { label: t(langKeys.meetsnot), quantity: 0 }\r\n    ]);\r\n    const [dataTMEgraph, setDataTMEgraph] = useState([\r\n        { label: t(langKeys.meets), quantity: 0 },\r\n        { label: t(langKeys.meetsnot), quantity: 0 }\r\n    ]);\r\n    const [dataNPSgraph, setDataNPSgraph] = useState([\r\n        { label: t(langKeys.promoters), quantity: 0 },\r\n        { label: t(langKeys.detractors), quantity: 0 },\r\n        { label: t(langKeys.neutral), quantity: 0 }\r\n    ]);\r\n    const [dataCSATgraph, setDataCSATgraph] = useState([\r\n        { label: t(langKeys.satisfied), quantity: 0 },\r\n        { label: t(langKeys.dissatisfied), quantity: 0 },\r\n        { label: t(langKeys.neutral), quantity: 0 }\r\n    ]);\r\n    const [dataFCRgraph, setDataFCRgraph] = useState([\r\n        { label: t(langKeys.resolvedfirstcontact), quantity: 0 },\r\n        { label: t(langKeys.notresolvedfirstcontact), quantity: 0 },\r\n    ]);\r\n    const [dataFIXgraph, setDataFIXgraph] = useState([\r\n        { label: t(langKeys.resolved), quantity: 0 },\r\n        { label: t(langKeys.notresolved), quantity: 0 },\r\n    ]);\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [resTMO, setResTMO] = useState<any>([]);\r\n    const [resTME, setResTME] = useState<any>([]);\r\n    const [resSummary, setResSummary] = useState<any>([]);\r\n    const [resEncuesta, setResEncuesta] = useState<any>([]);\r\n    const [tmoDistribution, settmoDistribution] = useState<any>([]);\r\n    const [tmeDistribution, settmeDistribution] = useState<any>([]);\r\n    const [openDateRangeCreateDateModal, setOpenDateRangeCreateDateModal] = useState(false);\r\n    const [dateRangeCreateDate, setDateRangeCreateDate] = useState<Range>(initialRange);\r\n    const [dataqueue, setdataqueue] = useState<any>([]);\r\n    const [dataLabel, setdataLabel] = useState<any>([]);\r\n    const [sla, setsla] = useState<any>(null);\r\n    const [prodxHoralvl0, setprodxHoralvl0] = useState<any>([]);\r\n    const [prodxHoralvl1, setprodxHoralvl1] = useState<any>([]);\r\n    const [prodxHoraDist, setprodxHoraDist] = useState(\r\n        [\r\n            {label:\"0 - 3\",connected:0, notconnected: 0},\r\n            {label:\"4 - 7\",connected:0, notconnected: 0},\r\n            {label:\"8 - 10\",connected:0, notconnected: 0},\r\n            {label:\"11 - 12\",connected:0, notconnected: 0},\r\n            {label:\"13 +\", connected:0, notconnected: 0}]\r\n    );\r\n    const [prodxHora, setprodxHora] = useState({\r\n        prodlog: \"0\",\r\n        prodcon: \"0\",\r\n        prodbot: \"0\",\r\n    });\r\n    const [prodxHoraLabel, setprodxHoraLabel] = useState({\r\n        prodlog: \"0\",\r\n        prodcon: \"0\",\r\n        prodbot: \"0\",\r\n    });\r\n    const [datasupervisors, setdatasupervisors] = useState<any>([]);\r\n    const [dataprovider, setdataprovider] = useState<any>([]);\r\n    const [datachannels, setdatachannels] = useState<any>([]);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [waitSaveAux, setWaitSaveAux] = useState(false);\r\n    const [searchfields, setsearchfields] = useState({\r\n        queue: \"\",\r\n        provider: \"\",\r\n        channels: \"\",\r\n        supervisor: \"\",\r\n        label: \"\",\r\n    });\r\n    useEffect(() => {\r\n        if (mainResult.multiData.data.length !== 0) {\r\n            let multiData = mainResult.multiData.data;\r\n            setdataqueue(multiData[0] && multiData[0].success ? multiData[0].data.filter(x => groups.length > 0 ? groups.includes(x.domainvalue) : true) : []);\r\n            setdataprovider(multiData[1] && multiData[1].success ? multiData[1].data : []);\r\n            setdatachannels(multiData[2] && multiData[2].success ? multiData[2].data : []);\r\n            setdatasupervisors(multiData[3] && multiData[3].success ? multiData[3].data : []);\r\n            setdataLabel(multiData[4] && multiData[4].success ? multiData[4].data : []);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResult])\r\n    useEffect(() => {\r\n        dispatch(setViewChange(\"productivity\"))\r\n        return () => {\r\n            dispatch(cleanViewChange());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(() => {\r\n        setData({\r\n            dataTMO: \"0s\",\r\n            obj_min: \"\",\r\n            obj_max: \"< 0m\",\r\n            variaciontxt: \"0s\",\r\n            variacioncolor: true,\r\n            timeMax: \"0s\",\r\n            timeMin: \"0s\",\r\n            sla: \"0%\",\r\n            variacionperccolor: true,\r\n            variacionperc: 0,\r\n            tickets_comply: 0,\r\n            tickets_analyzed: 0,\r\n            tickets_total: 0,\r\n        });\r\n        setDataTMOgraph([\r\n            { label: t(langKeys.meets), quantity: 0 },\r\n            { label: t(langKeys.meetsnot), quantity: 0 }\r\n        ]);\r\n        if (resTMO.length) {\r\n            const { time_avg, tickets_comply, tickets_total, target_max, target_min, time_max, time_min, tickets_analyzed, target_percmax} = resTMO[0];\r\n            let seconds = timetoseconds(time_avg)\r\n            if (seconds >= 0) {\r\n                let variacionperc = (tickets_comply / tickets_analyzed - parseFloat(target_percmax))*100\r\n                variacionperc=variacionperc? variacionperc: 0;\r\n                let hh = (Math.floor(seconds / 3600)) === 0 ? \"\" : (Math.floor(seconds / 3600) + \"h \")\r\n                let mm = Math.floor((seconds % 3600) / 60) === 0 ? \"\" : (Math.floor((seconds % 3600) / 60) + \"m \")\r\n                let ss = seconds % 60 + \"s\"\r\n                let objetivo_min = timetomin(target_min)\r\n                let objetivo_max = timetomin(target_max)\r\n                let dataTMO = `${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, dataTMO: dataTMO }))\r\n                setData(p => ({ ...p, obj_max: `< ${objetivo_max}m `, obj_min: objetivo_min > 0 ? ` y > ${objetivo_min}m ` : '' }))\r\n\r\n                let vartmo = timetoseconds(target_max) - seconds\r\n                vartmo = seconds < timetoseconds(target_min) ? Math.abs(vartmo) * -1 : vartmo\r\n                let sign = vartmo > 0 ? \"\" : \"-\"\r\n                vartmo = Math.abs(vartmo)\r\n                let variacioncolor = timetoseconds(target_min) <= seconds && timetoseconds(target_max) >= seconds\r\n\r\n                hh = (Math.floor(vartmo / 3600)) === 0 ? \"\" : (Math.floor(vartmo / 3600) + \"h \")\r\n                mm = Math.floor((vartmo % 3600) / 60) === 0 ? \"\" : (Math.floor((vartmo % 3600) / 60) + \"m \")\r\n                ss = vartmo % 60 + \"s\"\r\n                let variaciontxt = `${sign}${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, variaciontxt: variaciontxt }))\r\n                setData(p => ({ ...p, variacioncolor: variacioncolor }))\r\n\r\n                let secondsmax = timetoseconds(time_max)\r\n                hh = (Math.floor(secondsmax / 3600)) === 0 ? \"\" : (Math.floor(secondsmax / 3600) + \"h \")\r\n                mm = Math.floor((secondsmax % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmax % 3600) / 60) + \"m \")\r\n                ss = secondsmax % 60 + \"s\"\r\n                let timeMax = `${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, timeMax: timeMax }))\r\n\r\n                let secondsmin = timetoseconds(time_min)\r\n                hh = (Math.floor(secondsmin / 3600)) === 0 ? \"\" : (Math.floor(secondsmin / 3600) + \"h \")\r\n                mm = Math.floor((secondsmin % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmin % 3600) / 60) + \"m \")\r\n                ss = secondsmin % 60 + \"s\"\r\n                let timeMin = `${hh}${mm}${ss}`\r\n                setData(p => ({ ...p, timeMin: timeMin }))\r\n                let sla = target_percmax?`${(parseFloat(target_percmax) * 100).toFixed(2)}%`:\"0%\"\r\n                setData(p => ({ ...p, sla: sla }))\r\n\r\n                let variacionperccolor = variacionperc >= 0;\r\n                setData(p => ({ ...p, variacionperc: variacionperc }))\r\n                setData(p => ({ ...p, variacionperccolor: variacionperccolor }))\r\n                setData(p => ({ ...p, tickets_comply: tickets_comply }))\r\n                setData(p => ({ ...p, tickets_analyzed: tickets_analyzed }))\r\n                setData(p => ({ ...p, tickets_total: tickets_total }))\r\n\r\n                setDataTMOgraph([\r\n                    { label: t(langKeys.meets), quantity: tickets_comply },\r\n                    { label: t(langKeys.meetsnot), quantity: tickets_analyzed - tickets_comply }\r\n                ]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resTMO])\r\n    useEffect(() => {\r\n        setDataTME({\r\n            dataTME: \"0s\",\r\n            obj_max: \"< 0m\",\r\n            variaciontxt: \"0s\",\r\n            variacioncolor: true,\r\n            timeMax: \"0s\",\r\n            timeMin: \"0s\",\r\n            sla: \"0%\",\r\n            variacionperccolor: true,\r\n            variacionperc: 0,\r\n            tickets_comply: 0,\r\n            tickets_analyzed: 0,\r\n            tickets_total: 0,\r\n        })\r\n        setDataTMEgraph([\r\n            { label: t(langKeys.meets), quantity: 0 },\r\n            { label: t(langKeys.meetsnot), quantity: 0 }\r\n        ]);\r\n        if (resTME.length) {\r\n            const { time_avg, tickets_comply, tickets_total, target_max, target_min, time_max, time_min, tickets_analyzed, target_percmax} = resTME[0];\r\n            let seconds = timetoseconds(time_avg)\r\n            if (seconds >= 0) {\r\n                let variacionperc = (tickets_comply / tickets_analyzed - parseFloat(target_percmax))*100\r\n                variacionperc=variacionperc? variacionperc: 0;\r\n                let hh = (Math.floor(seconds / 3600)) === 0 ? \"\" : (Math.floor(seconds / 3600) + \"h \")\r\n                let mm = Math.floor((seconds % 3600) / 60) === 0 ? \"\" : (Math.floor((seconds % 3600) / 60) + \"m \")\r\n                let ss = seconds % 60 + \"s\"\r\n                let objetivo_max = timetomin(target_max)\r\n                let dataTMO = `${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, dataTME: dataTMO }))\r\n                setDataTME(p => ({ ...p, obj_max: `< ${objetivo_max}m ` }))\r\n\r\n                let vartmo = timetoseconds(target_max) - seconds\r\n                vartmo = seconds < timetoseconds(target_min) ? Math.abs(vartmo) * -1 : vartmo\r\n                let sign = vartmo > 0 ? \"\" : \"-\"\r\n                vartmo = Math.abs(vartmo)\r\n                let variacioncolor = timetoseconds(target_min) <= seconds && timetoseconds(target_max) >= seconds\r\n\r\n                hh = (Math.floor(vartmo / 3600)) === 0 ? \"\" : (Math.floor(vartmo / 3600) + \"h \")\r\n                mm = Math.floor((vartmo % 3600) / 60) === 0 ? \"\" : (Math.floor((vartmo % 3600) / 60) + \"m \")\r\n                ss = vartmo % 60 + \"s\"\r\n                let variaciontxt = `${sign}${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, variaciontxt: variaciontxt }))\r\n                setDataTME(p => ({ ...p, variacioncolor: variacioncolor }))\r\n\r\n                let secondsmax = timetoseconds(time_max)\r\n                hh = (Math.floor(secondsmax / 3600)) === 0 ? \"\" : (Math.floor(secondsmax / 3600) + \"h \")\r\n                mm = Math.floor((secondsmax % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmax % 3600) / 60) + \"m \")\r\n                ss = secondsmax % 60 + \"s\"\r\n                let timeMax = `${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, timeMax: timeMax }))\r\n\r\n                let secondsmin = timetoseconds(time_min)\r\n                hh = (Math.floor(secondsmin / 3600)) === 0 ? \"\" : (Math.floor(secondsmin / 3600) + \"h \")\r\n                mm = Math.floor((secondsmin % 3600) / 60) === 0 ? \"\" : (Math.floor((secondsmin % 3600) / 60) + \"m \")\r\n                ss = secondsmin % 60 + \"s\"\r\n                let timeMin = `${hh}${mm}${ss}`\r\n                setDataTME(p => ({ ...p, timeMin: timeMin }))\r\n\r\n                let sla = target_percmax?`${(parseFloat(target_percmax) * 100).toFixed(2)}%`:\"0%\"\r\n                setDataTME(p => ({ ...p, sla: sla }))\r\n\r\n                let variacionperccolor = variacionperc >= 0;\r\n                setDataTME(p => ({ ...p, variacionperc: variacionperc }))\r\n                setDataTME(p => ({ ...p, variacionperccolor: variacionperccolor }))\r\n                setDataTME(p => ({ ...p, tickets_comply: tickets_comply }))\r\n                setDataTME(p => ({ ...p, tickets_analyzed: tickets_analyzed }))\r\n                setDataTME(p => ({ ...p, tickets_total: tickets_total }))\r\n                setDataTMEgraph([\r\n                    { label: t(langKeys.meets), quantity: tickets_comply },\r\n                    { label: t(langKeys.meetsnot), quantity: tickets_analyzed - tickets_comply }\r\n                ]);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resTME])\r\n    useEffect(() => {\r\n        setprodxHora({\r\n            prodlog: \"0\",\r\n            prodcon: \"0\",\r\n            prodbot: \"0\",\r\n        });\r\n        if (prodxHoralvl0 && prodxHoralvl0.length > 0) {\r\n            const firstDate = new Date( String(dateRangeCreateDate.startDate));\r\n            const secondDate = new Date( String(dateRangeCreateDate.endDate));\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n\r\n            let diffDays = Math.ceil(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay)) + 1;\r\n            const fullhours = 24 * diffDays;\r\n            const { horalogueo, horaconectado, ticketsasesor, ticketsbot } = prodxHoralvl0[0];\r\n            const prodlogofi = horalogueo ? (ticketsasesor / horalogueo) : 0;\r\n            const prodconofi = horaconectado ? (ticketsasesor / horaconectado) : 0;\r\n            const prodbotofi = ticketsbot? (ticketsbot/ fullhours):0 ;\r\n            setprodxHora({\r\n                prodlog: prodlogofi.toFixed(2),\r\n                prodcon: prodconofi.toFixed(2),\r\n                prodbot: prodbotofi.toFixed(2),\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[prodxHoralvl0])\r\n    useEffect(() => {\r\n        setprodxHoraLabel({\r\n            prodlog: \"0\",\r\n            prodcon: \"0\",\r\n            prodbot: \"0\",\r\n        });\r\n        if (prodxHoralvl1 && prodxHoralvl1.length > 0) {\r\n            const firstDate = new Date( String(dateRangeCreateDate.startDate));\r\n            const secondDate = new Date( String(dateRangeCreateDate.endDate));\r\n            const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n\r\n            let diffDays = Math.ceil(Math.abs((firstDate.getTime() - secondDate.getTime()) / oneDay)) + 1;\r\n            const fullhours = 24 * diffDays;\r\n            \r\n            let dataacum: any = prodxHoralvl1.reduce((full: any, i: any) => {\r\n                const productivitylogueo = i.horalogueo ? i.ticketsasesor / i.horalogueo : 0;\r\n                const productivitybot = i.ticketsbot / fullhours;\r\n                const productivityconectado = i.horaconectado ? i.ticketsasesor / i.horaconectado : 0;\r\n                const productivity = i.productivitybyhour ? parseFloat(i.productivitybyhour) : 0;\r\n\r\n                full.horalogueotmp += productivity ? ((productivitylogueo / productivity) - 1) * 100 : 0;\r\n                full.horaconectadotmp += productivity ? ((productivityconectado / (productivity)) - 1) * 100 : 0;\r\n                full.productivitybyhour += productivity;\r\n                full.productivitybot += productivity ? ((productivitybot / (productivity)) - 1) * 100 : 0;\r\n                return full;\r\n            }, {\r\n                ticketstotalac: 0,\r\n                horalogueotmp: 0,\r\n                horaconectadotmp: 0,\r\n                productivitybyhour: 0,\r\n                productivitybot: 0\r\n            });\r\n            setprodxHoraLabel({\r\n                prodlog: (dataacum.horalogueotmp ? (dataacum.horalogueotmp / prodxHoralvl1.length) : 0).toFixed(),\r\n                prodcon: (dataacum.horaconectadotmp ? (dataacum.horaconectadotmp / prodxHoralvl1.length) : 0).toFixed(),\r\n                prodbot: (dataacum.productivitybot ? (dataacum.productivitybot / prodxHoralvl1.length) : 0).toFixed()\r\n            })\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[prodxHoralvl1])\r\n    useEffect(() => {\r\n        setDataSummary({\r\n            tmrglobal: \"0m\",\r\n            dataTMRBot: \"0m\",\r\n            dataTMRAsesor: \"0m\",\r\n            dataTMRCliente: \"0m\",\r\n            tasaabandono: \"0\"\r\n        })\r\n        settmoDistribution([\r\n            {label:\"0 - 5\", quantity: 0},\r\n            {label:\"5 - 10\", quantity: 0},\r\n            {label:\"10 - 15\", quantity: 0},\r\n            {label:\"15 - 20\", quantity: 0},\r\n            {label:\"20 - 30\", quantity: 0},\r\n            {label:\"30 +\", quantity: 0}\r\n        ])\r\n        settmeDistribution([\r\n            {label:\"0 - 5\", quantity: 0},\r\n            {label:\"5 - 10\", quantity: 0},\r\n            {label:\"10 - 15\", quantity: 0},\r\n            {label:\"15 - 20\", quantity: 0},\r\n            {label:\"20 - 30\", quantity: 0},\r\n            {label:\"30 +\", quantity: 0}\r\n        ])\r\n        if (resSummary?.length) {\r\n            if (resSummary[0] && resSummary[0].ticketstotal !== 0) {\r\n                const {averagereplytime,botaveragereplytime,useraveragereplytime,personaveragereplytime,tmoasesorrange0, tmoasesorrange1, tmoasesorrange2, tmoasesorrange3, tmoasesorrange4, tmoasesorrange5,\r\n                    tmeasesorrange0, tmeasesorrange1,  tmeasesorrange2, tmeasesorrange3, tmeasesorrange4, tmeasesorrange5,ticketsabandonados,ticketstmeasesor,ticketstmoasesor ,ticketstotal} = resSummary[0]\r\n                setDataSummary({\r\n                    tmrglobal: formattime(timetoseconds(averagereplytime)),\r\n                    dataTMRBot: formattime(timetoseconds(botaveragereplytime)),\r\n                    dataTMRAsesor: formattime(timetoseconds(useraveragereplytime)),\r\n                    dataTMRCliente: formattime(timetoseconds(personaveragereplytime)),\r\n                    tasaabandono: (ticketsabandonados * 100 / ticketstotal).toFixed(0)\r\n                })\r\n                settmoDistribution([\r\n                    {label:\"0 - 5\", percentage: (tmoasesorrange0/ticketstmoasesor*100).toFixed(2)},\r\n                    {label:\"5 - 10\", percentage: (tmoasesorrange1/ticketstmoasesor*100).toFixed(2)},\r\n                    {label:\"10 - 15\", percentage: (tmoasesorrange2/ticketstmoasesor*100).toFixed(2)},\r\n                    {label:\"15 - 20\", percentage: (tmoasesorrange3/ticketstmoasesor*100).toFixed(2)},\r\n                    {label:\"20 - 30\", percentage: (tmoasesorrange4/ticketstmoasesor*100).toFixed(2)},\r\n                    {label:\"30 +\", percentage: (tmoasesorrange5/ticketstmoasesor*100).toFixed(2)}\r\n\r\n                ])\r\n                settmeDistribution([\r\n                    {label:\"0 - 5\", percentage: (tmeasesorrange0/ticketstmeasesor*100).toFixed(2)},\r\n                    {label:\"5 - 10\", percentage: (tmeasesorrange1/ticketstmeasesor*100).toFixed(2)},\r\n                    {label:\"10 - 15\", percentage: (tmeasesorrange2/ticketstmeasesor*100).toFixed(2)},\r\n                    {label:\"15 - 20\", percentage: (tmeasesorrange3/ticketstmeasesor*100).toFixed(2)},\r\n                    {label:\"20 - 30\", percentage: (tmeasesorrange4/ticketstmeasesor*100).toFixed(2)},\r\n                    {label:\"30 +\", percentage: (tmeasesorrange5/ticketstmeasesor*100).toFixed(2)}\r\n\r\n                ])\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resSummary])\r\n    useEffect(() => {\r\n        setDataEncuesta({\r\n            dataNPS: \"0%\",\r\n            npsvariacioncolor: true,\r\n            nps_green: \"0%\",\r\n            npsvariation: \"0%\",\r\n            npspollssent: \"0\",\r\n            npspollsanswered: \"0\",\r\n            npstotalpromoters: 0,\r\n            npstotaldetractors: 0,\r\n            npstotalneutral: 0,\r\n            npstotalconversations: 0,\r\n            dataCSAT: \"0%\",\r\n            csatvariacioncolor: true,\r\n            csat_green: \"0%\",\r\n            csatvariation: \"0%\",\r\n            csatpollssent: \"0\",\r\n            csatpollsanswered: \"0\",\r\n            csattotalpromoters: 0,\r\n            csattotaldetractors: 0,\r\n            csattotalneutral: 0,\r\n            csattotalconversations: 0,\r\n            dataFCR: \"0%\",\r\n            fcr_green: \"0%\",\r\n            fcrvariacioncolor: true,\r\n            fcrvariation: \"0%\",\r\n            fcrpollssent: \"0\",\r\n            fcrpollsanswered: \"0\",\r\n            fcrtotalpromoters: 0,\r\n            fcrtotaldetractors: 0,\r\n            fcrtotalconversations: 0,\r\n            dataFIX: \"0%\",\r\n            fix_green: \"0%\",\r\n            fixvariacioncolor: true,\r\n            fixvariation: \"0%\",\r\n            fixpollssent: \"0\",\r\n            fixpollsanswered: \"0\",\r\n            fixtotalpromoters: 0,\r\n            fixtotaldetractors: 0,\r\n            fixtotalconversations: 0,\r\n        })\r\n        setDataNPSgraph([\r\n            { label: t(langKeys.promoters), quantity: 0 },\r\n            { label: t(langKeys.detractors), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        setDataCSATgraph([\r\n            { label: t(langKeys.satisfied), quantity: 0 },\r\n            { label: t(langKeys.dissatisfied), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        setDataFCRgraph([\r\n            { label: t(langKeys.resolvedfirstcontact), quantity: 0 },\r\n            { label: t(langKeys.notresolvedfirstcontact), quantity: 0 },\r\n        ]);\r\n        setDataFIXgraph([\r\n            { label: t(langKeys.resolved), quantity: 0 },\r\n            { label: t(langKeys.notresolved), quantity: 0 },\r\n        ]);\r\n        if (resEncuesta.length) {\r\n            const { nps_high, total, nps_low, nps_green, nps_medium, nps_total } = resEncuesta[0]\r\n            const { csat_high, csat_low, csat_green, csat_medium, csat_total } = resEncuesta[0];\r\n            const { fcr_yes, fcr_no, fcr_green, fcr_total, total_bot } = resEncuesta[0];\r\n            const { fix_yes, fix_no, fix_green, fix_total } = resEncuesta[0];\r\n            const toshow = nps_total ? ((nps_high - nps_low) / nps_total) : 0;\r\n            const toshowcsat = csat_total ? ((csat_high - csat_low) / csat_total) : 0;\r\n            const toshowfcr = fcr_total ? ((fcr_yes - fcr_no) / fcr_total) : 0;\r\n            const toshowfix = fix_total ? ((fix_yes - fix_no) / fix_total) : 0;\r\n            let variacioncolor = (toshow - nps_green) * 100 >= 0\r\n            setDataEncuesta({\r\n                dataNPS: `${((toshow) * 100).toFixed(2)}%`,\r\n                npsvariacioncolor: variacioncolor,\r\n                nps_green: `${(parseFloat(nps_green) * 100).toFixed(2)}%`,\r\n                npsvariation: `${((toshow - nps_green) * 100).toFixed(2)}%`,\r\n                npspollssent: `${formatNumber(total)}`,\r\n                npspollsanswered: `${formatNumber(nps_total)}`,\r\n                npstotalpromoters: nps_high,\r\n                npstotaldetractors: nps_low,\r\n                npstotalneutral: nps_medium,\r\n                npstotalconversations: total,\r\n                dataCSAT: `${((toshowcsat) * 100).toFixed(2)}%`,\r\n                csatvariacioncolor: (toshowcsat - nps_green) * 100 >= 0,\r\n                csat_green: `${(parseFloat(csat_green) * 100).toFixed(2)}%`,\r\n                csatvariation: `${((toshowcsat - csat_green) * 100).toFixed(2)}%`,\r\n                csatpollssent: `${formatNumber(total)}`,\r\n                csatpollsanswered: `${formatNumber(csat_total)}`,\r\n                csattotalpromoters: csat_high,\r\n                csattotaldetractors: csat_low,\r\n                csattotalneutral: csat_medium,\r\n                csattotalconversations: total,\r\n                dataFCR: `${((toshowfcr) * 100).toFixed(2)}%`,\r\n                fcrvariacioncolor: (toshowfcr - nps_green) * 100 >= 0,\r\n                fcr_green: `${(parseFloat(fcr_green) * 100).toFixed(2)}%`,\r\n                fcrvariation: `${((toshowfcr - fcr_green) * 100).toFixed(2)}%`,\r\n                fcrpollssent: `${formatNumber(total)}`,\r\n                fcrpollsanswered: `${formatNumber(fcr_total)}`,\r\n                fcrtotalpromoters: fcr_yes,\r\n                fcrtotaldetractors: fcr_no,\r\n                fcrtotalconversations: total_bot,\r\n                dataFIX: `${((toshowfix) * 100).toFixed(2)}%`,\r\n                fixvariacioncolor: (toshowfix - nps_green) * 100 >= 0,\r\n                fix_green: `${(parseFloat(fix_green) * 100).toFixed(2)}%`,\r\n                fixvariation: `${((toshowfix - fix_green) * 100).toFixed(2)}%`,\r\n                fixpollssent: `${formatNumber(total)}`,\r\n                fixpollsanswered: `${formatNumber(fix_total)}`,\r\n                fixtotalpromoters: fix_yes,\r\n                fixtotaldetractors: fix_no,\r\n                fixtotalconversations: total,\r\n            })\r\n            setDataNPSgraph([\r\n                { label: t(langKeys.promoters), quantity: nps_high },\r\n                { label: t(langKeys.detractors), quantity: nps_low },\r\n                { label: t(langKeys.neutral), quantity: nps_medium }\r\n            ]);\r\n            setDataCSATgraph([\r\n                { label: t(langKeys.satisfied), quantity: csat_high },\r\n                { label: t(langKeys.dissatisfied), quantity: csat_low },\r\n                { label: t(langKeys.neutral), quantity: csat_medium }\r\n            ]);\r\n            setDataFCRgraph([\r\n                { label: t(langKeys.resolvedfirstcontact), quantity: fcr_yes },\r\n                { label: t(langKeys.notresolvedfirstcontact), quantity: fcr_no },\r\n            ]);\r\n            setDataFIXgraph([\r\n                { label: t(langKeys.resolved), quantity: fix_yes },\r\n                { label: t(langKeys.notresolved), quantity: fix_no },\r\n            ]);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resEncuesta]);\r\n    function setDataEncuestanps(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataNPS: \"0%\",\r\n            nps_green: \"0%\",\r\n            npsvariacioncolor: true,\r\n            npsvariation: \"0%\",\r\n            npspollssent: \"0\",\r\n            npspollsanswered: \"0\",\r\n            npstotalpromoters: 0,\r\n            npstotaldetractors: 0,\r\n            npstotalneutral: 0,\r\n            npstotalconversations: 0,\r\n        }))\r\n        setDataNPSgraph([\r\n            { label: t(langKeys.promoters), quantity: 0 },\r\n            { label: t(langKeys.detractors), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        if (data.length) {\r\n            const { high, tickets, low, green, medium, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataNPS: `${((toshow) * 100).toFixed(2)}%`,\r\n                npsvariacioncolor: variacioncolor,\r\n                nps_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                npsvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                npspollssent: `${formatNumber(tickets)}`,\r\n                npspollsanswered: `${formatNumber(total)}`,\r\n                npstotalpromoters: high,\r\n                npstotaldetractors: low,\r\n                npstotalneutral: medium,\r\n                npstotalconversations: tickets,\r\n            }))\r\n            setDataNPSgraph([\r\n                { label: t(langKeys.promoters), quantity: high },\r\n                { label: t(langKeys.detractors), quantity: low },\r\n                { label: t(langKeys.neutral), quantity: medium }\r\n            ]);\r\n        }\r\n    }\r\n    function setDataEncuestacsat(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataCSAT: \"0%\",\r\n            csat_green: \"0%\",\r\n            csatvariacioncolor: true,\r\n            csatvariation: \"0%\",\r\n            csatpollssent: \"0\",\r\n            csatpollsanswered: \"0\",\r\n            csattotalpromoters: 0,\r\n            csattotaldetractors: 0,\r\n            csattotalneutral: 0,\r\n            csattotalconversations: 0,\r\n        }))\r\n        setDataCSATgraph([\r\n            { label: t(langKeys.satisfied), quantity: 0 },\r\n            { label: t(langKeys.dissatisfied), quantity: 0 },\r\n            { label: t(langKeys.neutral), quantity: 0 }\r\n        ]);\r\n        if (data.length) {\r\n            const { high, tickets, low, green, medium, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataCSAT: `${((toshow) * 100).toFixed(2)}%`,\r\n                csatvariacioncolor: variacioncolor,\r\n                csat_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                csatvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                csatpollssent: `${formatNumber(tickets)}`,\r\n                csatpollsanswered: `${formatNumber(total)}`,\r\n                csattotalpromoters: high,\r\n                csattotaldetractors: low,\r\n                csattotalneutral: medium,\r\n                csattotalconversations: tickets,\r\n            }))\r\n            setDataCSATgraph([\r\n                { label: t(langKeys.satisfied), quantity: high },\r\n                { label: t(langKeys.dissatisfied), quantity: low },\r\n                { label: t(langKeys.neutral), quantity: medium }\r\n            ]);\r\n        }\r\n    }\r\n    function setDataEncuestafcr(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataFCR: \"0%\",\r\n            fcr_green: \"0%\",\r\n            fcrvariacioncolor: true,\r\n            fcrvariation: \"0%\",\r\n            fcrpollssent: \"0\",\r\n            fcrpollsanswered: \"0\",\r\n            fcrtotalpromoters: 0,\r\n            fcrtotaldetractors: 0,\r\n            fcrtotalconversations: 0,\r\n        }))\r\n        setDataFCRgraph([\r\n            { label: t(langKeys.resolvedfirstcontact), quantity: 0 },\r\n            { label: t(langKeys.notresolvedfirstcontact), quantity: 0 },\r\n        ]);\r\n        if (data.length) {\r\n            const { high, tickets, low, green, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataFCR: `${((toshow) * 100).toFixed(2)}%`,\r\n                fcrvariacioncolor: variacioncolor,\r\n                fcr_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                fcrvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                fcrpollssent: `${formatNumber(tickets)}`,\r\n                fcrpollsanswered: `${formatNumber(total)}`,\r\n                fcrtotalpromoters: high,\r\n                fcrtotaldetractors: low,\r\n                fcrtotalconversations: tickets,\r\n            }))\r\n            setDataFCRgraph([\r\n                { label: t(langKeys.resolvedfirstcontact), quantity: high },\r\n                { label: t(langKeys.notresolvedfirstcontact), quantity: low },\r\n            ]);\r\n        }\r\n    }    \r\n    function setDataEncuestafix(data:any){\r\n        setDataEncuesta(prev =>({...prev,\r\n            dataFIX: \"0%\",\r\n            fix_green: \"0%\",\r\n            fixvariacioncolor: true,\r\n            fixvariation: \"0%\",\r\n            fixpollssent: \"0\",\r\n            fixpollsanswered: \"0\",\r\n            fixtotalpromoters: 0,\r\n            fixtotaldetractors: 0,\r\n            fixtotalconversations: 0,\r\n        }))\r\n        setDataFIXgraph([\r\n            { label: t(langKeys.resolved), quantity: 0 },\r\n            { label: t(langKeys.notresolved), quantity: 0 },\r\n        ]);\r\n        if (data.length) {\r\n            const { high, tickets, low, green, total } = data[0]\r\n            const toshow = total ? ((high - low) / total) : 0;\r\n            let variacioncolor = (toshow - green) * 100 >= 0\r\n            setDataEncuesta(prev =>({...prev,\r\n                dataFIX: `${((toshow) * 100).toFixed(2)}%`,\r\n                fixvariacioncolor: variacioncolor,\r\n                fix_green: `${(parseFloat(green) * 100).toFixed(2)}%`,\r\n                fixvariation: `${((toshow - green) * 100).toFixed(2)}%`,\r\n                fixpollssent: `${formatNumber(tickets)}`,\r\n                fixpollsanswered: `${formatNumber(total)}`,\r\n                fixtotalpromoters: high,\r\n                fixtotaldetractors: low,\r\n                fixtotalconversations: tickets,\r\n            }))\r\n            setDataFIXgraph([\r\n                { label: t(langKeys.resolved), quantity: high },\r\n                { label: t(langKeys.notresolved), quantity: low },\r\n            ]);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!remultiaux.loading && !remultiaux.error) {\r\n                setResTMO(remultiaux.data[0].data)\r\n                setResTME(remultiaux.data[1].data)\r\n                setResSummary(remultiaux.data[2].data)\r\n                setsla(remultiaux.data[2].data?.[0]?.slajson)\r\n                setTasaabandonoperc((+(remultiaux.data[2].data || [])[0]?.tasaabandonoperc || 0) * 100)\r\n                setprodxHoralvl0(remultiaux.data[3].data)\r\n                if(remultiaux.data[4].success){\r\n                    const {horaconectadorange0,horaconectadorange1,horaconectadorange2,horaconectadorange3,horaconectadorange4,\r\n                        horalogueorange0, horalogueorange1,  horalogueorange2, horalogueorange3, horalogueorange4} = remultiaux.data[4].data[0]\r\n                    setprodxHoraDist(\r\n                        [\r\n                            {label:\"0 - 3\",connected:horaconectadorange0, notconnected: horalogueorange0},\r\n                            {label:\"4 - 7\",connected:horaconectadorange1, notconnected: horalogueorange1},\r\n                            {label:\"8 - 10\",connected:horaconectadorange2, notconnected: horalogueorange2},\r\n                            {label:\"11 - 12\",connected:horaconectadorange3, notconnected: horalogueorange3},\r\n                            {label:\"13 +\", connected:horaconectadorange4, notconnected: horalogueorange4}]\r\n                    );\r\n                }\r\n                setResEncuesta(remultiaux.data[5].data)\r\n                setprodxHoralvl1(remultiaux.data[6].data)\r\n\r\n                //setprodxHoraDist(remultiaux.data[4].data)\r\n                //setResLabels(remultiaux.data[6].data)\r\n\r\n\r\n\r\n                /*const asesoretmp = [...remultiaux.data[7].data];\r\n\r\n                setResAsesoreconectadosbar([...Array(24)].map((_, i) => {\r\n                    const hourFound = asesoretmp.find((x: Dictionary) => x.hora === i);\r\n                    if (hourFound)\r\n                        return hourFound\r\n                    else\r\n                        return { hora: i, asesoresconectados: \"0\", avgasesoresconectados: \"0\" }\r\n                }))*/\r\n\r\n\r\n\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (remultiaux.error) {\r\n                const errormessage = t(remultiaux.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [remultiaux, waitSave])\r\n    async function funcsearch() {\r\n        let tosend = { \r\n            startdate: dateRangeCreateDate.startDate, \r\n            enddate: dateRangeCreateDate.endDate, \r\n            channel: searchfields.channels, \r\n            group: searchfields.queue, \r\n            company: searchfields.provider,\r\n            label: searchfields.label,\r\n            supervisor: searchfields.supervisor\r\n        }\r\n        dispatch(showBackdrop(true));\r\n        setOpenDialog(false)\r\n        dispatch(getMultiCollectionAux([\r\n            getdashboardoperativoTMOGENERALSel(tosend),\r\n            getdashboardoperativoTMEGENERALSel(tosend),\r\n            getdashboardoperativoSummarySel(tosend),\r\n            getdashboardoperativoProdxHoraSel({...tosend,level:0}),\r\n            getdashboardoperativoProdxHoraDistSel(tosend),\r\n            getdashboardoperativoEncuestaSel(tosend),\r\n            getdashboardoperativoProdxHoraSel({...tosend,level:1}),\r\n        ]))\r\n        setWaitSave(true)\r\n    }\r\n    useEffect(() => {\r\n        \r\n        if (waitSaveAux && !mainResult.mainAux.loading) {\r\n            \r\n            if(fieldToFilter===\"TMO\")\r\n                setResTMO(mainResult.mainAux.data)\r\n            if(fieldToFilter===\"TME\")\r\n                setResTME(mainResult.mainAux.data)\r\n            if(fieldToFilter===\"NPS\")\r\n                setDataEncuestanps(mainResult.mainAux.data)\r\n            if(fieldToFilter===\"CSAT\")\r\n                setDataEncuestacsat(mainResult.mainAux.data)\r\n            if(fieldToFilter===\"FIX\")\r\n                setDataEncuestafix(mainResult.mainAux.data)\r\n            if(fieldToFilter===\"FCR\")\r\n                setDataEncuestafcr(mainResult.mainAux.data)\r\n            setWaitSaveAux(false);\r\n        }\r\n        // eslint-disable-next-line\r\n    },[mainResult.mainAux,waitSaveAux])\r\n\r\n    useEffect(() => {\r\n        if (openDialogPerRequest && fieldToFilter!==\"TME\") {\r\n            setsearchfieldsOnlyOne({\r\n                closedbyasesor: true,  \r\n                closedbybot:  false,\r\n                closedby: \"ASESOR\",\r\n                min: sla?.usertmomin||\"00:00:00\", \r\n                max: sla?.usertmo||\"00:00:00\", \r\n                target: sla?.usertmopercentmax||0, \r\n                skipdown:0, \r\n                skipup:0,\r\n                limit: 5,\r\n                bd: false\r\n            })\r\n        }\r\n        // eslint-disable-next-line\r\n    },[openDialogPerRequest,fieldToFilter])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"GRUPOS\"),\r\n            getValuesFromDomain(\"EMPRESA\"),\r\n            getCommChannelLst(),\r\n            getSupervisorsSel(),\r\n            getLabelsSel(),\r\n        ]));\r\n        funcsearch()\r\n        return () => {\r\n            dispatch(resetMainAux());\r\n            dispatch(resetMultiMainAux());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    useEffect(() => {\r\n        if(downloaddatafile) {\r\n            if(!resaux.loading){\r\n                if (resaux.data.length > 0) {\r\n                    exportExcel(titlefile, resaux.data, Object.keys(resaux.data[0]).reduce((ac: any[], c: any) => (\r\n                        [\r\n                            ...ac,\r\n                            { Header: t((langKeys as any)[`dashboard_productivity_${section}_${c}`]), accessor: c }\r\n                        ]),\r\n                        []\r\n                    ))\r\n                }\r\n                else {\r\n                    exportExcel(titlefile, [{'': t(langKeys.no_records)}])\r\n                }\r\n                setdownloaddatafile(false)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resaux,downloaddatafile])\r\n    async function downloaddata(tipeoffilter:string){\r\n        let tosend = { \r\n            startdate: dateRangeCreateDate.startDate, \r\n            enddate: dateRangeCreateDate.endDate, \r\n            channel: searchfields.channels, \r\n            group: searchfields.queue, \r\n            company: searchfields.provider,\r\n            label: searchfields.label,\r\n            supervisor: searchfields.supervisor\r\n        }\r\n        setdownloaddatafile(true)\r\n        if (tipeoffilter === \"TMO\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('tmo')\r\n            dispatch(getCollectionAux(getdashboardoperativoTMOGENERALSeldata(tosend)))\r\n        } else if (tipeoffilter === \"TME\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('tme')\r\n            dispatch(getCollectionAux(getdashboardoperativoTMEGENERALSeldata(tosend)))\r\n        } else if (tipeoffilter === \"TMODistribution\") {\r\n            settitlefile(t(langKeys.distributionTMO));\r\n            setSection('tmodistribution')\r\n            dispatch(getCollectionAux(getdashboardoperativoTMOdistseldata(tosend)))\r\n        } else if (tipeoffilter === \"TMEDistribution\") {\r\n            settitlefile(t(langKeys.distributionTME));\r\n            setSection('tmedistribution')\r\n            dispatch(getCollectionAux(getdashboardoperativoTMEdistseldata(tosend)))\r\n        } else if (tipeoffilter === \"prodxHoraDist\") {\r\n            settitlefile(t(langKeys.distributionProductivity));\r\n            setSection('prodxhoradist')\r\n            dispatch(getCollectionAux(getdashboardoperativoProdxHoraDistSeldata(tosend)))\r\n        } else if (tipeoffilter === \"NPS\" || tipeoffilter === \"CSAT\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('survey3')\r\n            dispatch(getCollectionAux(getdashboardoperativoEncuesta3Seldata({...tosend, question: tipeoffilter})))\r\n        } else if (tipeoffilter === \"FIX\" || tipeoffilter === \"FCR\") {\r\n            settitlefile(tipeoffilter);\r\n            setSection('survey2')\r\n            dispatch(getCollectionAux(getdashboardoperativoEncuesta2Seldata({...tosend, question: tipeoffilter})))\r\n        }\r\n    }\r\n    async function funcsearchoneonly() {\r\n        setOpenDialogPerRequest(false)\r\n        \r\n        if(fieldToFilter===\"TMO\"){\r\n            setResTMO([])\r\n            dispatch(getCollectionAux(getdashboardoperativoTMOGENERALSel({ ...searchfieldsOnlyOne,supervisor: searchfields.supervisor, label:searchfields.label,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })));\r\n        }\r\n        if(fieldToFilter===\"TME\"){\r\n            setResTME([])\r\n            dispatch(getCollectionAux(getdashboardoperativoTMEGENERALSel({ ...searchfieldsOnlyOne,supervisor: searchfields.supervisor, label:searchfields.label,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        }\r\n        if(fieldToFilter===\"NPS\"||fieldToFilter===\"CSAT\" || fieldToFilter===\"FCR\" || fieldToFilter===\"FIX\"){\r\n            dispatch(getCollectionAux(getdashboardoperativoEncuesta3Sel({ ...searchfieldsOnlyOne,supervisor: searchfields.supervisor, label:searchfields.label,question: fieldToFilter,startdate: dateRangeCreateDate.startDate, enddate: dateRangeCreateDate.endDate, channel: searchfields.channels, group: searchfields.queue, company: searchfields.provider })))\r\n        }\r\n        setWaitSaveAux(true)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <DialogZyx\r\n                open={openDialog}\r\n                title=\"\"\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialog(false)}\r\n                handleClickButton2={() => funcsearch()}\r\n            >\r\n                <DateRangePicker\r\n                    open={openDateRangeCreateDateModal}\r\n                    setOpen={setOpenDateRangeCreateDateModal}\r\n                    range={dateRangeCreateDate}\r\n                    onSelect={setDateRangeCreateDate}\r\n                >\r\n                    <Button\r\n                        className={classes.itemDate}\r\n                        startIcon={<CalendarIcon />}\r\n                        onClick={() => setOpenDateRangeCreateDateModal(!openDateRangeCreateDateModal)}\r\n                    >\r\n                        {getDateCleaned(dateRangeCreateDate.startDate!) + \" - \" + getDateCleaned(dateRangeCreateDate.endDate!)}\r\n                    </Button>\r\n                </DateRangePicker>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.queue)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields(p => ({ ...p, queue: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.queue}\r\n                        data={dataqueue}\r\n                        optionDesc=\"domaindesc\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldSelect\r\n                        label={t(langKeys.provider)}\r\n                        className={classes.fieldsfilter}\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, provider: value?.domainvalue||\"\" })) }}\r\n                        valueDefault={searchfields.provider}\r\n                        data={dataprovider}\r\n                        optionDesc=\"domaindesc\"\r\n                        variant=\"outlined\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.channel_plural)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, channels: value.map((o: Dictionary) => o.communicationchannelid).join() })) }}\r\n                        valueDefault={searchfields.channels}\r\n                        data={datachannels}\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        optionValue=\"communicationchannelid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.supervisor)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, supervisor: value.map((o: Dictionary) => o.userid).join() })) }}\r\n                        valueDefault={searchfields.supervisor}\r\n                        data={datasupervisors}\r\n                        optionDesc=\"userdesc\"\r\n                        optionValue=\"userid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.labels)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, label: value.map((o: Dictionary) => o.userid).join() })) }}\r\n                        valueDefault={searchfields.label}\r\n                        data={dataLabel}\r\n                        optionDesc=\"description\"\r\n                        optionValue=\"labelid\"\r\n                    />\r\n                </div>\r\n\r\n            </DialogZyx>\r\n            \r\n            <DialogZyx\r\n                open={openDialogPerRequest}\r\n                title={`${t(langKeys.configuration)} ${fieldToFilter}`}\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialogPerRequest(false)}\r\n                handleClickButton2={() => funcsearchoneonly()}\r\n            >\r\n                <div>\r\n                    {(fieldToFilter===\"TMO\" || fieldToFilter===\"TME\" ) &&\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={`${t(langKeys.lowesttime)} (%)`} \r\n                                variant=\"outlined\" \r\n                                value={searchfieldsOnlyOne.skipdown}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, skipdown: e.target.value as any}))}\r\n                                type=\"number\"\r\n                                className=\"col-6\"\r\n                            />\r\n                            <TextField \r\n                                label={`${t(langKeys.higuesttime)} (%)`} \r\n                                variant=\"outlined\" \r\n                                value={searchfieldsOnlyOne.skipup}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, skipup: e.target.value as any}))}\r\n                                className=\"col-6\"\r\n                                type=\"number\"\r\n                            />\r\n                        </div>\r\n                    }\r\n                    \r\n                    {fieldToFilter===\"TMO\" &&\r\n                        <div className=\"row-zyx\">\r\n                                <TextField \r\n                                    label={t(langKeys.timemin)} \r\n                                    variant=\"outlined\" \r\n                                    type=\"time\"\r\n                                    className=\"col-12\"\r\n                                    value={searchfieldsOnlyOne.min}\r\n                                    onChange={(e) => setsearchfieldsOnlyOne((prevState) =>({...prevState, min: e.target.value}))}\r\n                                />\r\n                        </div>\r\n                    }\r\n                    {(fieldToFilter===\"TMO\" || fieldToFilter===\"TME\") &&\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={t(langKeys.timemax)}\r\n                                variant=\"outlined\" \r\n                                type=\"time\"\r\n                                className=\"col-12\"\r\n                                value={searchfieldsOnlyOne.max}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, max: e.target.value}))}\r\n                            />\r\n                        </div>\r\n                    }\r\n                    {\r\n\r\n                        <div className=\"row-zyx\">\r\n                            <TextField \r\n                                label={t(langKeys.targetvalue)}\r\n                                variant=\"outlined\" \r\n                                type=\"number\"\r\n                                className=\"col-12\"\r\n                                value={searchfieldsOnlyOne.target}\r\n                                onChange={(e) => setsearchfieldsOnlyOne(prevState =>({...prevState, target: e.target.value as any}))}\r\n                            />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n            </DialogZyx>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n                <div className={classes.maintitle}> {t(langKeys.productivity)}</div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: 200, backgroundColor: \"#007bff\" }}\r\n                    onClick={() => setOpenDialog(true)}\r\n                >{t(langKeys.stablishfilters)}\r\n                </Button>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 16, flexDirection: 'column' }}>\r\n                <div className={classes.replacerowzyx}>\r\n                    { (resaux.loading && fieldToFilter===\"TMO\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>                            \r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"TMO\")} className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"TMO\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>TMO\r\n                                    <Tooltip title={`${t(langKeys.tmotooltipproductivity)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div className={classes.boxtitledata}>{data.dataTMO}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{data.obj_max}{data.obj_min}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, data.variacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{data.variaciontxt}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.highestTMO)}</div>\r\n                                <div className={classes.datafield}>{data.timeMax}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.lowestTMO)}</div>\r\n                                <div className={classes.datafield}>{data.timeMin}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: !data.tickets_total,\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataTMOgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataTMOgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataTMOgraph[0].quantity + dataTMOgraph[1].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataTMOgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataTMOgraph[0].quantity + dataTMOgraph[1].quantity\r\n                                            let perc = (dataTMOgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataTMOgraphLegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataTMOgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.slaoptimum)}</div>\r\n                                <div className={classes.datafield}>{data.sla}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, data.variacionperccolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{data.variacionperc.toFixed(2)}%</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.quantitymeets)}</div>\r\n                                <div className={classes.datafield}>{data.tickets_comply}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.quantitymeetsnot)}</div>\r\n                                <div className={classes.datafield}>{data.tickets_analyzed - data.tickets_comply}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.conversationsanalyzed)}</div>\r\n                                <div className={classes.datafield}>{data.tickets_analyzed}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversation)}</div>\r\n                                <div className={classes.datafield}>{data.tickets_total}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n\r\n                    { (resaux.loading && fieldToFilter===\"TME\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"TME\")}  className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"TME\"); setOpenDialogPerRequest(true);setsearchfieldsOnlyOne((prevState) =>({...prevState, min: \"00:00:00\",target:sla?.usertmepercentmax, max: sla?.usertme||\"00:00:00\"}))}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>TME\r\n                                    <Tooltip title={`${t(langKeys.tmeadvisortooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div className={classes.boxtitledata}>{dataTME.dataTME}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataTME.obj_max}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataTME.variacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataTME.variaciontxt}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.highestTME)}</div>\r\n                                <div className={classes.datafield}>{dataTME.timeMax}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.lowestTME)}</div>\r\n                                <div className={classes.datafield}>{dataTME.timeMin}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: !dataTME.tickets_total,\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataTMEgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataTMEgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataTMEgraph[0].quantity + dataTMEgraph[1].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataTMEgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataTMEgraph[0].quantity + dataTMEgraph[1].quantity\r\n                                            let perc = (dataTMEgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataTMEgraphLegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataTMEgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.slaoptimum)}</div>\r\n                                <div className={classes.datafield}>{dataTME.sla}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataTME.variacionperccolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataTME.variacionperc.toFixed(2)}%</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.quantitymeets)}</div>\r\n                                <div className={classes.datafield}>{dataTME.tickets_comply}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.quantitymeetsnot)}</div>\r\n                                <div className={classes.datafield}>{dataTME.tickets_analyzed - dataTME.tickets_comply}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                    <div className={classes.label}>{t(langKeys.conversationsanalyzed)}</div>\r\n                                    <div className={classes.datafield}>{dataTME.tickets_analyzed}</div>\r\n                                </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversation)}</div>\r\n                                <div className={classes.datafield}>{dataTME.tickets_total}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#53a6fa\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <ChatIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR\r\n                                <Tooltip title={`${t(langKeys.tmrtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.tmrglobal}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#22b66e\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <PersonIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR {t(langKeys.agent)}\r\n                                <Tooltip title={`${t(langKeys.tmratooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.dataTMRAsesor}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#fdab29\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <AdbIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR Bot\r\n                                <Tooltip title={`${t(langKeys.tmrbtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.dataTMRBot}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#907eec\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <PersonIcon style={{color:\"white\",margin: \"3px 5px\"}}/>\r\n                            <div className={classes.boxtitle} style={{ padding: 0 }}>TMR {t(langKeys.client)}\r\n                                <Tooltip title={`${t(langKeys.tmrctooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata} style={{ padding: 0 }}>{dataSummary.dataTMRCliente}</div>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.columnCard2}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.productivitycard1)}\r\n                            <Tooltip title={`${t(langKeys.productivitycard1tooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{prodxHora.prodlog}</div>\r\n                        <div className={classes.datafieldfooter}>\r\n                            <div>% {t(langKeys.compliance)}</div>\r\n                            <div>{+prodxHoraLabel.prodlog>0?<ArrowDropUpIcon style={{color: \"green\", height: \"15px\"}}/>:<ArrowDropDownIcon style={{color: \"red\", height: \"15px\"}}/>}{prodxHoraLabel.prodlog} %</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.columnCard2}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.productivitycard2)}\r\n                            <Tooltip title={`${t(langKeys.productivitycard2tooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{prodxHora.prodcon}</div>\r\n                        <div className={classes.datafieldfooter}>\r\n                            <div>% {t(langKeys.compliance)}</div>\r\n                            <div>{+prodxHoraLabel.prodcon>0?<ArrowDropUpIcon style={{color: \"green\", height: \"15px\"}}/>:<ArrowDropDownIcon style={{color: \"red\", height: \"15px\"}}/>}{prodxHoraLabel.prodcon} %</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.columnCard2}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.productivitycard3)}\r\n                            <Tooltip title={`${t(langKeys.productivitycard3tooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{prodxHora.prodbot}</div>\r\n                        <div className={classes.datafieldfooter}>\r\n                            <div>% {t(langKeys.compliance)}</div>\r\n                            <div>{+prodxHoraLabel.prodbot>0?<ArrowDropUpIcon style={{color: \"green\", height: \"15px\"}}/>:<ArrowDropDownIcon style={{color: \"red\", height: \"15px\"}}/>}{prodxHoraLabel.prodbot} %</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.columnCard2}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.automaticClosingrate)}\r\n                            <Tooltip title={`${t(langKeys.productivitycard4tooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{dataSummary.tasaabandono} %</div>                    \r\n                        <div className={classes.datafieldfooter}>\r\n                            <div>% {t(langKeys.compliance)}</div>\r\n                            <div>{+dataSummary.tasaabandono - tasaabandonoperc>0?<ArrowDropUpIcon style={{color: \"green\", height: \"15px\"}}/>:<ArrowDropDownIcon style={{color: \"red\", height: \"15px\"}}/>}{+dataSummary.tasaabandono - tasaabandonoperc} %</div>\r\n                        </div> \r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx} >\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.containertitleboxes}>\r\n                            <div style={{display: \"flex\"}}> \r\n                                <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\"}}>{t(langKeys.distributionTMO)}</div>\r\n                                <Tooltip title={`${t(langKeys.distributionTMOtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <CloudDownloadIcon  onClick={()=>downloaddata(\"TMODistribution\")} className={classes.styleicon}/>\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\r\n                            <BarChart data={tmoDistribution}>\r\n                                <XAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"label\" label={{ value: `${t(langKeys.minute_plural)}`, position: 'insideBottom', offset:-5 }} />\r\n                                <YAxis domain={[0,100]} label={{ value: `% TMO`, angle: -90, position: 'insideLeft' }}/>\r\n                                <RechartsTooltip />\r\n                                <Bar dataKey=\"percentage\" fill=\"#8884d8\" name={`% ${t(langKeys.tmo)}`}>\r\n                                </Bar>\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                        \r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.containertitleboxes}>\r\n                            <div style={{display: \"flex\"}}> \r\n                                <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\"}}>{t(langKeys.distributionTME)}</div>\r\n                                <Tooltip title={`${t(langKeys.distributionTMEtooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"TMEDistribution\")} className={classes.styleicon}/>\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\r\n                            <BarChart data={tmeDistribution}>\r\n                                <XAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"label\" label={{ value: `${t(langKeys.minute_plural)}`, position: 'insideBottom', offset:-5 }} />\r\n                                <YAxis domain={[0,100]} label={{ value: `% TME`, angle: -90, position: 'insideLeft' }}/>\r\n                                <RechartsTooltip />\r\n                                <Bar dataKey=\"percentage\" fill=\"#8884d8\" name={`% ${t(langKeys.tme)}`}/>\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                        \r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx} style={{width:\"50%\"}} >\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.containertitleboxes} >\r\n                            <div style={{display: \"flex\"}}> \r\n                                <div  style={{ fontWeight: \"bold\", fontSize: \"1.6em\"}}>{t(langKeys.distributionProductivity)}</div>\r\n                                <Tooltip title={`${t(langKeys.distributionProductivitytooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <CloudDownloadIcon className={classes.styleicon} onClick={()=>downloaddata(\"prodxHoraDist\")} />\r\n                        </div>\r\n                        <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\r\n                            <ComposedChart\r\n                                data={prodxHoraDist}\r\n                                >\r\n                                <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                <XAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"label\" scale=\"band\"  label={{ value: `${t(langKeys.ticketsxhour)}`, position: 'insideBottom', offset:-5 }} />\r\n                                <YAxis label={{ value: `${t(langKeys.numberofadvisers)}`, angle: -90, position: 'insideBottomLeft' }}/>\r\n                                <RechartsTooltip />\r\n                                <Line type=\"monotone\" dataKey=\"notconnected\" stroke=\"#52307c\" name={t(langKeys.advisorquantity)}/>\r\n                                {\r\n                                    //<Bar dataKey=\"connected\" barSize={20} fill=\"#2499ee\" name={t(langKeys.hourconnected)}/>\r\n                                }\r\n                            </ComposedChart>\r\n                        </ResponsiveContainer>\r\n                        \r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    { (resaux.loading && fieldToFilter===\"NPS\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"NPS\")}  className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"NPS\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>NPS\r\n                                    <Tooltip title={`${t(langKeys.npstooltip)}`} placement=\"top-start\">\r\n                                        <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                    </Tooltip>\r\n                                </div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataNPS}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.nps_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.npsvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npsvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'NPS' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npspollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'NPS' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npspollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.npspollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataNPSgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataNPSgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataNPSgraph[0].quantity + dataNPSgraph[1].quantity + dataNPSgraph[2].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataNPSgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataNPSgraph[0].quantity + dataNPSgraph[1].quantity + dataNPSgraph[2].quantity\r\n                                            let perc = (dataNPSgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataNPSgraphLegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataNPSgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalpromoters)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totaldetractors)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalneutral)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotalneutral}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.npstotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                    { (resaux.loading && fieldToFilter===\"CSAT\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"CSAT\")}  className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"CSAT\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>CSAT\r\n                                <Tooltip title={`${t(langKeys.csattooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip></div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataCSAT}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csat_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.csatvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csatvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'CSAT' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csatpollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'CSAT' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csatpollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.csatpollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataCSATgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataCSATgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataCSATgraph[0].quantity + dataCSATgraph[1].quantity + dataCSATgraph[2].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataCSATgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataCSATgraph[0].quantity + dataCSATgraph[1].quantity + dataCSATgraph[2].quantity\r\n                                            let perc = (dataCSATgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataCSATgraphLegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataCSATgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalsatisfied)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totaldissatisfied)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalneutral)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotalneutral}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.csattotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                </div>\r\n                <div className={classes.replacerowzyx} >\r\n                    { (resaux.loading && fieldToFilter===\"FCR\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"FCR\")}  className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"FCR\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>FCR\r\n                                <Tooltip title={`${t(langKeys.fcrtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip></div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataFCR}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcr_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.fcrvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'FCR' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrpollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'FCR' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrpollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.fcrpollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataFCRgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataFCRgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataFCRgraph[0].quantity + dataFCRgraph[1].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataFCRgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataFCRgraph[0].quantity + dataFCRgraph[1].quantity\r\n                                            let perc = (dataFCRgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataFCRgraphLegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataFCRgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalresolvedfirstcontact)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrtotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalnotresolvedfirstcontact)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrtotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fcrtotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                    { (resaux.loading && fieldToFilter===\"FIX\")?(<Box  className={classes.itemCard} style={{display: \"flex\", alignItems: 'center', justifyContent: \"center\"}}><CircularProgress/> </Box>):\r\n                    (<Box\r\n                        className={classes.itemCard}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"FIX\")}  className={classes.styleicon}/>\r\n                            <SettingsIcon onClick={()=>{setFieldToFilter(\"FIX\"); setOpenDialogPerRequest(true)}} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            <div className={classes.containerFieldsTitle}>\r\n                                <div className={classes.boxtitle}>FIX\r\n                                <Tooltip title={`${t(langKeys.fixtooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip></div>\r\n                                <div className={classes.boxtitledata}>{dataEncuesta.dataFIX}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.objective)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fix_green}</div>\r\n                            </div>\r\n                            <div className={clsx(classes.containerFields, dataEncuesta.fixvariacioncolor ? classes.colorgreen : classes.colorred)}>\r\n                                <div className={classes.label}>{t(langKeys.variation)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixvariation}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollssent, { survey: 'FIX' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixpollsanswered}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.pollsanswered, { survey: 'FIX' })}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixpollsanswered}</div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ flex: '0 0 200px', height: 200 }} className={clsx({\r\n                                [classes.dontshow]: dataEncuesta.fixpollsanswered===\"0\",\r\n\r\n                            })}>\r\n                            <ResponsiveContainer className={classes.itemGraphic}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataFIXgraph} dataKey=\"quantity\" nameKey=\"label\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataFIXgraph.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                        <div className={classes.columnCard}>\r\n                            {(dataFIXgraph[0].quantity + dataFIXgraph[1].quantity) > 0 &&\r\n                                <div className={classes.containerFields}>\r\n                                    <ul style={{padding: 0, margin: 0, textAlign: \"center\"}}>\r\n                                        {dataFIXgraph.map((entry: any, index: number) => {\r\n                                            let totalsum = dataFIXgraph[0].quantity + dataFIXgraph[1].quantity\r\n                                            let perc = (dataFIXgraph[index].quantity*100)/totalsum\r\n                                            return <li style={{display: \"inline-block\", marginRight: 10}} key={`dataFIXgraphLegend-${index}`}>\r\n                                                <svg width=\"14\" height=\"14\" viewBox=\"0 0 32 32\" version=\"1.1\" style={{display: \"inline-block\", verticalAlign: \"middle\", marginRight: 4}}>\r\n                                                <path stroke=\"none\" fill={COLORS[index % COLORS.length]} d=\"M0,4h32v24h-32z\"></path></svg>\r\n                                                <span style={{color: COLORS[index % COLORS.length]}}>{dataFIXgraph[index].label} {perc.toFixed(2)}%</span>\r\n                                            </li>\r\n                                            }\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            }\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalresolved)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixtotalpromoters}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalnotresolved)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixtotaldetractors}</div>\r\n                            </div>\r\n                            <div className={classes.containerFields}>\r\n                                <div className={classes.label}>{t(langKeys.totalconversations)}</div>\r\n                                <div className={classes.datafield}>{dataEncuesta.fixtotalconversations}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>)}\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DashboardProductivity;","import { Box, Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Dictionary } from \"@types\";\r\nimport { exportExcel, getCommChannelLst, getdashboardPushAppDataSel, getdashboardPushAppSel, getdashboardPushHSMCATEGORYRANKSel, getdashboardPushHSMCATEGORYRANKSelData, getdashboardPushHSMRANKSel, getdashboardPushHSMRANKSelData, getdashboardPushMENSAJEXDIASel, getdashboardPushMENSAJEXDIASelData, getdashboardPushSUMMARYSel, getdashboardPushSUMMARYSelData, getDateCleaned, getLabelsSel, getSupervisorsSel, getValuesFromDomain } from \"common/helpers\";\r\nimport { DateRangePicker, DialogZyx, FieldMultiSelect } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { CalendarIcon } from \"icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { FC, Fragment, useEffect, useState } from \"react\";\r\nimport { Range } from 'react-date-range';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport AdbIcon from '@material-ui/icons/Adb';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Bar, BarChart, CartesianGrid, Cell, ComposedChart, Legend, Line, Pie, PieChart, ResponsiveContainer, Tooltip as RechartsTooltip, XAxis, YAxis, Label } from \"recharts\";\r\nimport { cleanViewChange, getCollectionAux, getMultiCollection, getMultiCollectionAux, resetMainAux, resetMultiMainAux, setViewChange } from \"store/main/actions\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst COLORS = [\"#0f8fe5\", \"#067713\", \"#296680\", \"#fc3617\", \"#e8187a\", \"#7cfa57\", \"#cfbace\", \"#4cd45f\", \"#fd5055\", \"#7e1be4\", \"#bf1490\", \"#66c6cf\", \"#011c3d\", \"#1a9595\", \"#4ae2c7\", \"#515496\", \"#a2aa65\", \"#df909c\", \"#3aa343\", \"#e0606e\"];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        halfbox: {\r\n            width: \"49%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n        },\r\n        fullbox: {\r\n            width: \"100%\",\r\n            margin: \"0 0 2% 0\",\r\n            backgroundColor: 'white',\r\n        },\r\n        quarterbox: {\r\n            textAlign: \"center\",\r\n            width: \"24%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n            padding: \"15px\"\r\n        },\r\n        quarterbox2: {\r\n            width: \"24%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n            padding: \"15px\"\r\n        },\r\n        boxtitle: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\"\r\n        },\r\n        boxtitledata: {\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\",\r\n            textAlign: \"end\"\r\n        },\r\n        boxtitlequarter: {\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.5em\",\r\n        },\r\n        maintitle: {\r\n            fontWeight: \"bold\",\r\n            fontSize: \"2em\",\r\n            padding: \"0 0 20px;\"\r\n        },\r\n        rowstyles: {\r\n            margin: \"0!important\"\r\n        },\r\n        containerFields: {\r\n            border: \"black 1px solid\",\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            padding: \"0 15px\"\r\n        },\r\n        label: {\r\n            width: \"60%\",\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafield: {\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafieldquarter: {\r\n            fontSize: \"1.2em\",\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            padding: \"5px\"\r\n        },\r\n        containerFieldsQuarter: {\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            color: \"white\"\r\n        },\r\n        itemDate: {\r\n            minHeight: 40,\r\n            height: 40,\r\n            border: '1px solid #bfbfc0',\r\n            borderRadius: 4,\r\n            color: 'rgb(143, 146, 161)'\r\n        },\r\n        fieldsfilter: {\r\n            width: \"100%\",\r\n        },\r\n        replacerowzyx: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            gap: theme.spacing(2),\r\n            flexWrap: \"wrap\",\r\n        },\r\n        itemCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            gap: 8,\r\n            flexWrap: 'wrap',\r\n            padding: theme.spacing(2),\r\n            alignItems: 'center'\r\n        },\r\n        columnCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            minHeight: 136,\r\n            padding: theme.spacing(2),\r\n            flexDirection: 'column',\r\n            gap: theme.spacing(1)\r\n        },\r\n        itemGraphic: {\r\n            width: 200\r\n        },\r\n        dontshow: {\r\n            display: \"none\"\r\n        },\r\n        downloadiconcontainer: {\r\n            width: \"100%\", display: \"flex\", justifyContent: \"end\"\r\n        },\r\n        styleicon: {\r\n            width: \"18px\",\r\n            height: \"18px\",\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n            }\r\n        },\r\n    })\r\n);\r\n\r\nconst initialRange = {\r\n    startDate: new Date(new Date().setDate(1)),\r\n    endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\r\n    key: 'selection'\r\n}\r\n\r\nconst DashboardOperationalPush: FC = () => {\r\n    const classes = useStyles();\r\n    const mainResult = useSelector(state => state.main);\r\n    const remultiaux = useSelector(state => state.main.multiDataAux);\r\n    const resaux = useSelector(state => state.main.mainAux);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const groups = user?.groups?.split(\",\").filter(x=>!!x) || [];\r\n    const [downloaddatafile, setdownloaddatafile] = useState(false);\r\n    const [section, setSection] = useState('')\r\n    const [titlefile, settitlefile] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const { t } = useTranslation();\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openDateRangeCreateDateModal, setOpenDateRangeCreateDateModal] = useState(false);\r\n    const [dateRangeCreateDate, setDateRangeCreateDate] = useState<Range>(initialRange);\r\n    const [dataqueue, setdataqueue] = useState<any>([]);\r\n    const [dataprovider, setdataprovider] = useState<any>([]);\r\n    const [datachannels, setdatachannels] = useState<any>([]);\r\n    const [datasupervisors, setdatasupervisors] = useState<any>([]);\r\n    const [dataLabel, setdataLabel] = useState<any>([]);\r\n    const [datacategoriaHSM, setdatacategoriaHSM] = useState<any>([]);\r\n    const [dataHSMCATEGORYRANK, setdataHSMCATEGORYRANK] = useState<any>([]);\r\n    const [dataHSMRANK, setdataHSMRANK] = useState<any>([]);\r\n    const [dataAppRank, setdataAppRank] = useState<any>([]);\r\n    const [dataPushSUMMARYSel, setdataPushSUMMARYSel] = useState<any>([]);\r\n    const [dataMENSAJEXDIA, setdataMENSAJEXDIA] = useState<any>([]);\r\n    const [dataSummary, setdataSummary] = useState({\r\n        failMns: \"0\",\r\n        dataSuccessMns: \"0\",\r\n        totalMns: \"0\",\r\n        successMns: \"0\",\r\n        dataFailMns: \"0\",\r\n        attendedMns: \"0\",\r\n        dataAttendedMns: \"0\",\r\n        dataBot: \"0\",\r\n        dataAsesor: \"0\"\r\n    });\r\n    const [searchfields, setsearchfields] = useState({\r\n        queue: \"\",\r\n        provider: \"\",\r\n        channels: \"\",\r\n        supervisor: \"\",\r\n        label: \"\",\r\n        categoriaHSM: \"\"\r\n    });\r\n    useEffect(() => {\r\n        dispatch(setViewChange(\"operationalpush\"))\r\n        return () => {\r\n            dispatch(cleanViewChange());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    async function funcsearch() {\r\n        let tosend = {\r\n            startdate: dateRangeCreateDate.startDate,\r\n            enddate: dateRangeCreateDate.endDate,\r\n            channel: searchfields.channels,\r\n            group: searchfields.queue,\r\n            company: searchfields.provider,\r\n            label: searchfields.label,\r\n            category: searchfields.categoriaHSM,\r\n            supervisor: searchfields.supervisor\r\n        }\r\n        dispatch(showBackdrop(true));\r\n        setOpenDialog(false)\r\n        dispatch(getMultiCollectionAux([\r\n            getdashboardPushHSMCATEGORYRANKSel(tosend),\r\n            getdashboardPushSUMMARYSel(tosend),\r\n            getdashboardPushHSMRANKSel(tosend),\r\n            getdashboardPushMENSAJEXDIASel(tosend),\r\n            getdashboardPushAppSel(tosend)\r\n        ]))\r\n        setWaitSave(true)\r\n    }\r\n    useEffect(() => {\r\n        setdataSummary({\r\n            failMns: \"0\",\r\n            dataSuccessMns: \"0\",\r\n            totalMns: \"0\",\r\n            successMns: \"0\",\r\n            dataFailMns: \"0\",\r\n            attendedMns: \"0\",\r\n            dataAttendedMns: \"0\",\r\n            dataBot: \"0\",\r\n            dataAsesor: \"0\"\r\n        });\r\n        if (dataPushSUMMARYSel && dataPushSUMMARYSel.length) {\r\n            const { fail, success, total, attended, bot, asesor } = dataPushSUMMARYSel[0];\r\n            setdataSummary({\r\n                failMns: fail,\r\n                dataSuccessMns: (success * 100 / total).toFixed() + \" %\",\r\n                totalMns: total,\r\n                successMns: success,\r\n                dataFailMns: (fail * 100 / total).toFixed() + \" %\",\r\n                attendedMns: attended,\r\n                dataAttendedMns: (attended * 100 / total).toFixed() + \" %\",\r\n                dataBot: bot,\r\n                dataAsesor: asesor\r\n            });\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dataPushSUMMARYSel])\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!remultiaux.loading && !remultiaux.error) {\r\n                setdataHSMCATEGORYRANK(remultiaux.data[0].data)\r\n                setdataPushSUMMARYSel(remultiaux.data[1].data)\r\n                setdataHSMRANK(remultiaux.data[2].data)\r\n                setdataMENSAJEXDIA(remultiaux.data[3].data)\r\n                setdataAppRank(remultiaux.data[4].data.map(x=>{ return ({...x, application: t((x.application).toLowerCase())})}))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (remultiaux.error) {\r\n                const errormessage = t(remultiaux.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [remultiaux, waitSave])\r\n    useEffect(() => {\r\n        if (mainResult.multiData.data.length !== 0) {\r\n            let multiData = mainResult.multiData.data;\r\n            setdataqueue(multiData[0] && multiData[0].success ? multiData[0].data.filter(x => groups.length > 0 ? groups.includes(x.domainvalue) : true) : []);\r\n            setdataprovider(multiData[1] && multiData[1].success ? multiData[1].data : []);\r\n            setdatachannels(multiData[2] && multiData[2].success ? multiData[2].data : []);\r\n            setdatasupervisors(multiData[3] && multiData[3].success ? multiData[3].data : []);\r\n            setdataLabel(multiData[4] && multiData[4].success ? multiData[4].data : []);\r\n            setdatacategoriaHSM(multiData[5] && multiData[5].success ? multiData[5].data : []);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResult])\r\n    useEffect(() => {\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"GRUPOS\"),\r\n            getValuesFromDomain(\"EMPRESA\"),\r\n            getCommChannelLst(),\r\n            getSupervisorsSel(),\r\n            getLabelsSel(),\r\n            getValuesFromDomain(\"CATEGORIAHSM\"),\r\n        ]));\r\n        funcsearch()\r\n        return () => {\r\n            dispatch(resetMainAux());\r\n            dispatch(resetMultiMainAux());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    useEffect(() => {\r\n        if (downloaddatafile) {\r\n            if (!resaux.loading) {\r\n                if (resaux.data.length > 0) {\r\n                    const dataToExport = resaux.data.map(x => ({\r\n                        ...x,\r\n                        status: x.status === \"success\" ? t(langKeys.status_SENT) : t(langKeys.failed),\r\n                    }))\r\n                    exportExcel(titlefile, dataToExport, Object.keys(resaux.data[0]).reduce((ac: any[], c: any) => (\r\n                        [\r\n                            ...ac,\r\n                            {\r\n                                Header: t((langKeys as any)[`dashboard_operationalpush_${section}_${c}`]),\r\n                                accessor: c\r\n                            }\r\n                        ]),\r\n                        []\r\n                    ))\r\n                }\r\n                else {\r\n                    exportExcel(titlefile, [{ '': t(langKeys.no_records) }])\r\n                }\r\n                setdownloaddatafile(false)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resaux, downloaddatafile])\r\n    async function downloaddata(tipeoffilter: string) {\r\n        let tosend = {\r\n            startdate: dateRangeCreateDate.startDate,\r\n            enddate: dateRangeCreateDate.endDate,\r\n            channel: searchfields.channels,\r\n            group: searchfields.queue,\r\n            company: searchfields.provider,\r\n            label: searchfields.label,\r\n            category: searchfields.categoriaHSM,\r\n            supervisor: searchfields.supervisor\r\n        }\r\n        setdownloaddatafile(true)\r\n        if (tipeoffilter === \"SUMMARY\") {\r\n            settitlefile(t(langKeys.messagesentreceivedfailedanswered));\r\n            setSection('summary')\r\n            dispatch(getCollectionAux(getdashboardPushSUMMARYSelData(tosend)))\r\n        } else if (tipeoffilter === \"CATEGORYRANK\") {\r\n            settitlefile(t(langKeys.distributionbycategoryHSM));\r\n            setSection('categoryrank')\r\n            dispatch(getCollectionAux(getdashboardPushHSMCATEGORYRANKSelData(tosend)))\r\n        } else if (tipeoffilter === \"HSMRANK\") {\r\n            settitlefile('Ranking HSM');\r\n            setSection('hsmrank')\r\n            dispatch(getCollectionAux(getdashboardPushHSMRANKSelData(tosend)))\r\n        } else if (tipeoffilter === \"MESSAGEPERDAY\") {\r\n            settitlefile(t(langKeys.messagesbyday));\r\n            setSection('messageperday')\r\n            dispatch(getCollectionAux(getdashboardPushMENSAJEXDIASelData(tosend)))\r\n        } else {\r\n            settitlefile(t(langKeys.numberofHSMShipments));\r\n            setSection('application')\r\n            dispatch(getCollectionAux(getdashboardPushAppDataSel(tosend)))\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <DialogZyx\r\n                open={openDialog}\r\n                title=\"\"\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialog(false)}\r\n                handleClickButton2={() => funcsearch()}\r\n            >\r\n                <DateRangePicker\r\n                    open={openDateRangeCreateDateModal}\r\n                    setOpen={setOpenDateRangeCreateDateModal}\r\n                    range={dateRangeCreateDate}\r\n                    onSelect={setDateRangeCreateDate}\r\n                >\r\n                    <Button\r\n                        className={classes.itemDate}\r\n                        startIcon={<CalendarIcon />}\r\n                        onClick={() => setOpenDateRangeCreateDateModal(!openDateRangeCreateDateModal)}\r\n                    >\r\n                        {getDateCleaned(dateRangeCreateDate.startDate!) + \" - \" + getDateCleaned(dateRangeCreateDate.endDate!)}\r\n                    </Button>\r\n                </DateRangePicker>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.queue)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields(p => ({ ...p, queue: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.queue}\r\n                        data={dataqueue}\r\n                        optionDesc=\"domaindesc\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.provider)}\r\n                        className={classes.fieldsfilter}\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, provider: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.provider}\r\n                        data={dataprovider}\r\n                        optionDesc=\"domaindesc\"\r\n                        variant=\"outlined\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.channel_plural)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, channels: value.map((o: Dictionary) => o.communicationchannelid).join() })) }}\r\n                        valueDefault={searchfields.channels}\r\n                        data={datachannels}\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        optionValue=\"communicationchannelid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.supervisor)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, supervisor: value.map((o: Dictionary) => o.userid).join() })) }}\r\n                        valueDefault={searchfields.supervisor}\r\n                        data={datasupervisors}\r\n                        optionDesc=\"userdesc\"\r\n                        optionValue=\"userid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.labels)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, label: value.map((o: Dictionary) => o.userid).join() })) }}\r\n                        valueDefault={searchfields.label}\r\n                        data={dataLabel}\r\n                        optionDesc=\"description\"\r\n                        optionValue=\"labelid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.categoriaHSM)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, categoriaHSM: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.categoriaHSM}\r\n                        data={datacategoriaHSM}\r\n                        optionDesc=\"domaindesc\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n\r\n            </DialogZyx>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n                <div className={classes.maintitle}> {t(langKeys.operationalpush)}</div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: 200, backgroundColor: \"#007bff\" }}\r\n                    onClick={() => setOpenDialog(true)}\r\n                >{t(langKeys.stablishfilters)}\r\n                </Button>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 16, flexDirection: 'column' }}>\r\n                <div className={classes.replacerowzyx}>\r\n                    <div className={classes.downloadiconcontainer}>\r\n                        <CloudDownloadIcon onClick={() => downloaddata(\"SUMMARY\")} className={classes.styleicon} />\r\n                    </div>\r\n                    <Box\r\n                        className={classes.columnCard}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.sentmessages)}\r\n                            <Tooltip title={`${t(langKeys.sentmessagestooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{dataSummary.totalMns}</div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.columnCard}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.messagessuccessfullydelivered)}\r\n                            <Tooltip title={`${t(langKeys.messagessuccessfullydeliveredtooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{dataSummary.successMns}</div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.columnCard}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.failedmessages)}\r\n                            <Tooltip title={`${t(langKeys.failedmessagestooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{dataSummary.failMns}</div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.columnCard}\r\n                    >\r\n                        <div className={classes.boxtitlequarter}>{t(langKeys.answeredmessages)}\r\n                            <Tooltip title={`${t(langKeys.answeredmessagestooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div className={classes.datafieldquarter}>{dataSummary.attendedMns}</div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#53a6fa\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <ChatIcon style={{ color: \"white\", margin: \"3px 5px\" }} />\r\n                            <div className={classes.boxtitle}>{t(langKeys.closedbyadviser)}\r\n                                <Tooltip title={`${t(langKeys.closedbyadvisertooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata}>{dataSummary.dataAsesor}</div>\r\n                        </div>\r\n                    </Box>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ backgroundColor: \"#fdab29\", display: 'flex', flex: 1, gap: 8 }}\r\n                    >\r\n                        <div className={classes.containerFieldsQuarter}>\r\n                            <AdbIcon style={{ color: \"white\", margin: \"3px 5px\" }} />\r\n                            <div className={classes.boxtitle}>{t(langKeys.closedbybot)}\r\n                                <Tooltip title={`${t(langKeys.closedbybottooltip)}`} placement=\"top-start\">\r\n                                    <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                            <div className={classes.boxtitledata}>{dataSummary.dataBot}</div>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx} >\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ width: \"50%\" }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={() => downloaddata(\"CATEGORYRANK\")} className={classes.styleicon} />\r\n                        </div>\r\n                        <div className={classes.boxtitle} style={{ width: \"100%\" }}>{t(langKeys.distributionbycategoryHSM)}\r\n                            <Tooltip title={`${t(langKeys.distributionbycategoryHSMtooltip)}`} placement=\"top-start\">\r\n                                <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                            </Tooltip>\r\n                        </div>\r\n                        <div style={{ height: 240, margin: 'auto' }} >\r\n                            <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.3}>\r\n                                <PieChart>\r\n                                    <RechartsTooltip />\r\n                                    <Pie data={dataHSMCATEGORYRANK} dataKey=\"quantity\" nameKey=\"categoria\" cx=\"50%\" cy=\"50%\" innerRadius={40} fill=\"#8884d8\">\r\n                                        {dataHSMCATEGORYRANK.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Pie>\r\n                                    <Legend verticalAlign=\"bottom\" height={36} />\r\n                                </PieChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx} >\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ width: \"50%\" }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={() => downloaddata(\"HSMRANK\")} className={classes.styleicon} />\r\n                        </div>\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div style={{ display: \"flex\" }}>\r\n                                <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\", }}> Ranking HSM </div>\r\n                                <Tooltip title={`${t(langKeys.rankinghsmtooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ height: 240 }}>\r\n                            <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\r\n                                <BarChart data={dataHSMRANK}>\r\n                                    <XAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"templatename\" height={50} label={{ value: `${t(langKeys.templatename)}`, position: 'insideBottom', offset: 5 }} />\r\n                                    <YAxis label={{ value: `${t(langKeys.hsmquantitysimple)}`, angle: -90, position: 'insideLeft' }} />\r\n                                    <RechartsTooltip formatter={(value: any, name: any) => [value, t(name)]} />\r\n                                    <Bar dataKey=\"quantity\" fill=\"#8884d8\" >\r\n                                        {dataHSMRANK.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Bar>\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ width: \"50%\" }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={() => downloaddata(\"aPPHSM\")} className={classes.styleicon} />\r\n                        </div>\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div style={{ display: \"flex\" }}>\r\n                                <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\", }}> {t(langKeys.numberofHSMShipments)} </div>\r\n                                <Tooltip title={`${t(langKeys.numberofHSMShipmentstooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ height: 240 }}>\r\n                            <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0}>\r\n                                <BarChart data={dataAppRank}>\r\n                                    <XAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"application\" height={50} label={{ value: `${t(langKeys.employeeaplication)}`, position: 'insideBottom', offset: 5 }} />\r\n                                    <YAxis label={{ value: `${t(langKeys.hsmquantitysimple)}`, angle: -90, position: 'insideLeft' }} />\r\n                                    <RechartsTooltip formatter={(value: any, name: any) => [value, t(name)]} />\r\n                                    <Bar dataKey=\"quantity\" fill=\"#8884d8\" >\r\n                                        {dataAppRank.map((entry: any, index: number) => (\r\n                                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                        ))}\r\n                                    </Bar>\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div className={classes.replacerowzyx} >\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{ width: \"50%\" }}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>\r\n                            <CloudDownloadIcon onClick={() => downloaddata(\"MESSAGEPERDAY\")} className={classes.styleicon} />\r\n                        </div>\r\n                        <div style={{ width: \"100%\" }}>\r\n                            <div style={{ display: \"flex\" }}>\r\n                                <div style={{ fontWeight: \"bold\", fontSize: \"1.6em\", }}>{t(langKeys.messagesbyday)}</div>\r\n                                <Tooltip title={`${t(langKeys.hsmperdaytooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{ padding: \"5px 0 0 5px\" }} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ height: 240 }}>\r\n                            <ResponsiveContainer width=\"100%\" aspect={4.0 / 1.0} >\r\n                                <ComposedChart\r\n                                    data={dataMENSAJEXDIA}\r\n                                >\r\n                                    <CartesianGrid stroke=\"#f5f5f5\" />\r\n                                    <XAxis domain={[\"\",\"\"]} type=\"category\" height={50} dataKey=\"fecha\" scale=\"band\">\r\n                                        <Label\r\n                                            value={`${t(langKeys.day)}`}\r\n                                            position=\"insideBottom\"\r\n                                            offset={5}\r\n                                        />\r\n                                    </XAxis>\r\n                                    <YAxis label={{ value: `${t(langKeys.hsmquantitysimple)}`, angle: -90, position: 'insideLeft' }} />\r\n                                    <RechartsTooltip formatter={(value: any, name: any) => [value, t(name)]} />\r\n                                    <Legend verticalAlign=\"top\" formatter={(value: any, entry: any) => t(value)} />\r\n                                    <Bar dataKey=\"total\" barSize={20} fill=\"#2499ee\" />\r\n                                    <Line type=\"monotone\" dataKey=\"attended\" stroke=\"#52307c\" />\r\n                                </ComposedChart>\r\n                            </ResponsiveContainer>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DashboardOperationalPush;","import { Box, Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Dictionary } from \"@types\";\r\nimport { exportExcel, getCommChannelLst, getdashboardRankingPushDataSel, getdashboardRankingPushSel, getDateCleaned, getLabelsSel, getValuesFromDomain} from \"common/helpers\";\r\nimport { DateRangePicker, DialogZyx, FieldMultiSelect } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { CalendarIcon } from \"icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { FC, Fragment, useEffect, useState } from \"react\";\r\nimport { Range } from 'react-date-range';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Bar, BarChart, Cell, ResponsiveContainer, Tooltip as RechartsTooltip, XAxis, YAxis, CartesianGrid } from \"recharts\";\r\nimport { cleanViewChange, getCollectionAux, getMultiCollection, getMultiCollectionAux, resetMainAux, resetMultiMainAux, setViewChange } from \"store/main/actions\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport Tooltip from \"@material-ui/core/Tooltip\"\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst COLORS = [\"#0f8fe5\", \"#067713\", \"#296680\", \"#fc3617\", \"#e8187a\", \"#7cfa57\", \"#cfbace\", \"#4cd45f\", \"#fd5055\", \"#7e1be4\", \"#bf1490\", \"#66c6cf\", \"#011c3d\", \"#1a9595\", \"#4ae2c7\", \"#515496\", \"#a2aa65\", \"#df909c\", \"#3aa343\", \"#e0606e\"];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        halfbox: {\r\n            width: \"49%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n        },\r\n        fullbox: {\r\n            width: \"100%\",\r\n            margin: \"0 0 2% 0\",\r\n            backgroundColor: 'white',\r\n        },\r\n        quarterbox: {            \r\n            textAlign: \"center\",\r\n            width: \"24%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n            padding: \"15px\"\r\n        },\r\n        quarterbox2: {\r\n            width: \"24%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n            padding: \"15px\"\r\n        },\r\n        boxtitle:{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\"\r\n        },\r\n        boxtitledata:{\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\",\r\n            textAlign: \"end\"\r\n        },\r\n        boxtitlequarter:{\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.5em\",\r\n        },\r\n        maintitle:{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"2em\",\r\n            padding: \"0 0 20px;\"\r\n        },\r\n        rowstyles:{\r\n            margin:\"0!important\"\r\n        },\r\n        containerFields:{\r\n            border: \"black 1px solid\",\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            padding: \"0 15px\"\r\n        },\r\n        label:{\r\n            width: \"60%\",\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafield:{\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafieldquarter:{\r\n            fontSize: \"1.2em\",\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            padding: \"5px\"\r\n        },\r\n        containerFieldsQuarter:{\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            color: \"white\"\r\n        },\r\n        itemDate: {\r\n            minHeight: 40,\r\n            height: 40,\r\n            border: '1px solid #bfbfc0',\r\n            borderRadius: 4,\r\n            color: 'rgb(143, 146, 161)'\r\n        },\r\n        fieldsfilter: {\r\n            width: \"100%\",\r\n        },\r\n        replacerowzyx: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            gap: theme.spacing(2),\r\n            flexWrap: \"wrap\",\r\n        },\r\n        itemCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            gap: 8,\r\n            flexWrap: 'wrap',\r\n            padding: theme.spacing(2),\r\n            alignItems: 'center'\r\n        },\r\n        columnCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            padding: theme.spacing(2),\r\n            flexDirection: 'column',\r\n            gap: theme.spacing(1)\r\n        },\r\n        itemGraphic: {\r\n            width: 200\r\n        },\r\n        dontshow: {\r\n            display: \"none\"\r\n        },\r\n        downloadiconcontainer:{\r\n            width:\"100%\",display: \"flex\",justifyContent: \"end\"\r\n        },\r\n        styleicon:{\r\n            width: \"18px\",\r\n            height: \"18px\",\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n            }\r\n        },\r\n    })\r\n);\r\n\r\n\r\nconst initialRange = {\r\n    startDate: new Date(new Date().setDate(1)),\r\n    endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\r\n    key: 'selection'\r\n}\r\n\r\nconst DashboardTagRanking: FC = () => {\r\n    const classes = useStyles();\r\n    const mainResult = useSelector(state => state.main);\r\n    const remultiaux = useSelector(state => state.main.multiDataAux);\r\n    const resaux = useSelector(state => state.main.mainAux);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const groups = user?.groups?.split(\",\").filter(x=>!!x) || [];\r\n    const [downloaddatafile,setdownloaddatafile]=useState(false);\r\n    const [section, setSection] = useState('')\r\n    const [titlefile, settitlefile] = useState('');\r\n    const dispatch = useDispatch();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const { t } = useTranslation();\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openDateRangeCreateDateModal, setOpenDateRangeCreateDateModal] = useState(false);\r\n    const [dateRangeCreateDate, setDateRangeCreateDate] = useState<Range>(initialRange);\r\n    const [dataqueue, setdataqueue] = useState<any>([]);\r\n    const [dataprovider, setdataprovider] = useState<any>([]);\r\n    const [datachannels, setdatachannels] = useState<any>([]);\r\n    const [dataLabel, setdataLabel] = useState<any>([]);\r\n    const [datacategoriaHSM, setdatacategoriaHSM] = useState<any>([]);\r\n    const [dataAppRank, setdataAppRank] = useState<any>([]);\r\n    const [searchfields, setsearchfields] = useState({\r\n        queue: \"\",\r\n        provider: \"\",\r\n        channels: \"\",\r\n        label: \"\",\r\n        categoriaHSM: \"\"\r\n    });\r\n    async function funcsearch() {\r\n        let tosend = { \r\n            startdate: dateRangeCreateDate.startDate, \r\n            enddate: dateRangeCreateDate.endDate, \r\n            channel: searchfields.channels, \r\n            group: searchfields.queue, \r\n            company: searchfields.provider,\r\n            label: searchfields.label,\r\n            category: searchfields.categoriaHSM,\r\n        }\r\n        dispatch(showBackdrop(true));\r\n        setOpenDialog(false)\r\n        dispatch(getMultiCollectionAux([\r\n            getdashboardRankingPushSel(tosend)\r\n        ]))\r\n        setWaitSave(true)\r\n    }\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!remultiaux.loading && !remultiaux.error) {\r\n                setdataAppRank(remultiaux.data[0].data)\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (remultiaux.error) {\r\n                const errormessage = t(remultiaux.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [remultiaux, waitSave])\r\n    useEffect(() => {\r\n        if (mainResult.multiData.data.length !== 0) {\r\n            let multiData = mainResult.multiData.data;\r\n            setdataqueue(multiData[0] && multiData[0].success ? multiData[0].data.filter(x => groups.length > 0 ? groups.includes(x.domainvalue) : true) : []);\r\n            setdataprovider(multiData[1] && multiData[1].success ? multiData[1].data : []);\r\n            setdatachannels(multiData[2] && multiData[2].success ? multiData[2].data : []);\r\n            setdataLabel(multiData[3] && multiData[3].success ? multiData[3].data : []);\r\n            setdatacategoriaHSM(multiData[4] && multiData[4].success ? multiData[4].data : []);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResult])\r\n    \r\n    useEffect(() => {\r\n        dispatch(setViewChange(\"tagranking\"))\r\n        return () => {\r\n            dispatch(cleanViewChange());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    useEffect(() => {\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"GRUPOS\"),\r\n            getValuesFromDomain(\"EMPRESA\"),\r\n            getCommChannelLst(),\r\n            getLabelsSel(),\r\n            getValuesFromDomain(\"CATEGORIAHSM\"),\r\n        ]));\r\n        funcsearch()\r\n        return () => {\r\n            dispatch(resetMainAux());\r\n            dispatch(resetMultiMainAux());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    useEffect(() => {\r\n        if(downloaddatafile) {\r\n            if(!resaux.loading){\r\n                if (resaux.data.length > 0) {\r\n                    exportExcel(titlefile, resaux.data, Object.keys(resaux.data[0]).reduce((ac: any[], c: any) => (\r\n                        [\r\n                            ...ac,\r\n                            { Header: t((langKeys as any)[`dashboard_operationalpush_${section}_${c}`]), accessor: c }\r\n                        ]),\r\n                        []\r\n                    ))\r\n                }\r\n                else {\r\n                    exportExcel(titlefile, [{'': t(langKeys.no_records)}])\r\n                }\r\n                setdownloaddatafile(false)\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [resaux,downloaddatafile])\r\n    async function downloaddata(tipeoffilter:string){\r\n        let tosend = { \r\n            startdate: dateRangeCreateDate.startDate, \r\n            enddate: dateRangeCreateDate.endDate, \r\n            channel: searchfields.channels, \r\n            group: searchfields.queue, \r\n            company: searchfields.provider,\r\n            label: searchfields.label,\r\n            category: searchfields.categoriaHSM,\r\n        }\r\n        setdownloaddatafile(true)\r\n        settitlefile(t(langKeys.tagranking));\r\n        setSection('application')\r\n        dispatch(getCollectionAux(getdashboardRankingPushDataSel(tosend)))\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <DialogZyx\r\n                open={openDialog}\r\n                title=\"\"\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialog(false)}\r\n                handleClickButton2={() => funcsearch()}\r\n            >\r\n                <DateRangePicker\r\n                    open={openDateRangeCreateDateModal}\r\n                    setOpen={setOpenDateRangeCreateDateModal}\r\n                    range={dateRangeCreateDate}\r\n                    onSelect={setDateRangeCreateDate}\r\n                >\r\n                    <Button\r\n                        className={classes.itemDate}\r\n                        startIcon={<CalendarIcon />}\r\n                        onClick={() => setOpenDateRangeCreateDateModal(!openDateRangeCreateDateModal)}\r\n                    >\r\n                        {getDateCleaned(dateRangeCreateDate.startDate!) + \" - \" + getDateCleaned(dateRangeCreateDate.endDate!)}\r\n                    </Button>\r\n                </DateRangePicker>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.queue)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields(p => ({ ...p, queue: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.queue}\r\n                        data={dataqueue}\r\n                        optionDesc=\"domaindesc\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.provider)}\r\n                        className={classes.fieldsfilter}\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, provider: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.provider}\r\n                        data={dataprovider}\r\n                        optionDesc=\"domaindesc\"\r\n                        variant=\"outlined\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.channel_plural)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, channels: value.map((o: Dictionary) => o.communicationchannelid).join() })) }}\r\n                        valueDefault={searchfields.channels}\r\n                        data={datachannels}\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        optionValue=\"communicationchannelid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.labels)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, label: value.map((o: Dictionary) => o.userid).join() })) }}\r\n                        valueDefault={searchfields.label}\r\n                        data={dataLabel}\r\n                        optionDesc=\"description\"\r\n                        optionValue=\"labelid\"\r\n                    />\r\n                </div>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldMultiSelect\r\n                        label={t(langKeys.categoriaHSM)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => { setsearchfields((p) => ({ ...p, categoriaHSM: value.map((o: Dictionary) => o.domainvalue).join() })) }}\r\n                        valueDefault={searchfields.categoriaHSM}\r\n                        data={datacategoriaHSM}\r\n                        optionDesc=\"domaindesc\"\r\n                        optionValue=\"domainvalue\"\r\n                    />\r\n                </div>\r\n\r\n            </DialogZyx>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n                <div className={classes.maintitle}> {t(langKeys.tagranking)}</div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: 200, backgroundColor: \"#007bff\" }}\r\n                    onClick={() => setOpenDialog(true)}\r\n                >{t(langKeys.stablishfilters)}\r\n                </Button>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 16, flexDirection: 'column' }}>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{width:\"100%\"}}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>                            \r\n                            <CloudDownloadIcon onClick={()=>downloaddata(\"aPPHSM\")} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div style={{width: \"100%\"}}> \r\n                            <div style={{display: \"flex\"}}>\r\n                                <div style={{fontWeight: \"bold\",fontSize: \"1.6em\",}}> {t(langKeys.tagranking)} </div>\r\n                                <Tooltip title={`${t(langKeys.tagrankingtooltip)}`} placement=\"top-end\">\r\n                                    <InfoIcon style={{padding: \"5px 0 0 5px\"}} />\r\n                                </Tooltip>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{width: \"100%\", display:\"flex\"}}>\r\n                            {dataAppRank.length && <div style={{width: \"20%\", paddingRight: 20}}>\r\n                                <TableContainer component={Paper}>\r\n                                    <Table aria-label=\"simple table\">\r\n                                        <TableHead style={{backgroundColor: \"#aa53e0\", color:\"white\"}}>\r\n                                            <TableRow>\r\n                                                <TableCell align=\"right\">Tag</TableCell>\r\n                                                <TableCell>{t(langKeys.quantity)}</TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                        {dataAppRank.map((row:any) => (\r\n                                            <TableRow key={row.tag}>\r\n                                                <TableCell component=\"th\" scope=\"row\" align=\"right\">\r\n                                                    {row.tag}\r\n                                                </TableCell>\r\n                                                <TableCell>{row.quantity}</TableCell>\r\n                                            </TableRow>\r\n                                        ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </TableContainer>\r\n                            </div>}\r\n                            <div style={{width: \"80%\", paddingTop: 50}}>\r\n                                <ResponsiveContainer width=\"100%\" minHeight={dataAppRank.length*60||300}>\r\n                                    <BarChart data={dataAppRank} layout=\"vertical\"  barSize={40}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis type=\"number\" height={50} domain={[0, 'dataMax']}  label={{ value: `${t(langKeys.quantity)}`, position: 'insideBottom' }}/>\r\n                                        <YAxis domain={[\"\",\"\"]} type=\"category\" dataKey=\"tag\"  label={{ width:80, value: `Tags`, angle: -90, position: 'insideLeft' }}\r\n                                            width={dataAppRank?.map((x:any)=> x.tag.length).length>0?Math.max(...dataAppRank?.map((x:any)=> x.tag.length))*11:10}\r\n                                        />\r\n                                        <RechartsTooltip formatter={(value: any, name: any) => [value, t(name)]} />\r\n                                        <Bar dataKey=\"quantity\" fill=\"#8884d8\">\r\n                                            {dataAppRank?.map((entry: any, index: number) => (\r\n                                                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                            ))}\r\n                                        </Bar>\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DashboardTagRanking;","import { Box, Button, createStyles, makeStyles, Theme } from \"@material-ui/core\";\r\nimport { Dictionary } from \"@types\";\r\nimport { getDisconnectionTimes, getDateCleaned, getUserAsesorByOrgID, getValuesFromDomain, timetoseconds, formattime, exportExcel} from \"common/helpers\";\r\nimport { DateRangePicker, DialogZyx, FieldSelect } from \"components\";\r\nimport { useSelector } from \"hooks\";\r\nimport { CalendarIcon } from \"icons\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { FC, Fragment, useEffect, useState } from \"react\";\r\nimport { Range } from 'react-date-range';\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Bar, BarChart, Cell, ResponsiveContainer, Tooltip as RechartsTooltip, XAxis, YAxis, Pie, PieChart, Legend } from \"recharts\";\r\nimport { cleanViewChange, getMultiCollection, getMultiCollectionAux, resetMainAux, resetMultiMainAux, setViewChange } from \"store/main/actions\";\r\nimport { showBackdrop, showSnackbar } from \"store/popus/actions\";\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\n\r\nconst COLORS = [\"#0087e0\", \"#ff0000\", \"#296680\", \"#fc3617\", \"#e8187a\", \"#7cfa57\", \"#cfbace\", \"#4cd45f\", \"#fd5055\", \"#7e1be4\", \"#bf1490\", \"#66c6cf\", \"#011c3d\", \"#1a9595\", \"#4ae2c7\", \"#515496\", \"#a2aa65\", \"#df909c\", \"#3aa343\", \"#e0606e\"];\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        halfbox: {\r\n            width: \"49%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n        },\r\n        fullbox: {\r\n            width: \"100%\",\r\n            margin: \"0 0 2% 0\",\r\n            backgroundColor: 'white',\r\n        },\r\n        quarterbox: {            \r\n            textAlign: \"center\",\r\n            width: \"24%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n            padding: \"15px\"\r\n        },\r\n        quarterbox2: {\r\n            width: \"24%\",\r\n            margin: \"0 1% 2% 0\",\r\n            backgroundColor: 'white',\r\n            padding: \"15px\"\r\n        },\r\n        boxtitle:{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\"\r\n        },\r\n        boxtitledata:{\r\n            fontSize: \"1.6em\",\r\n            width: \"50%\",\r\n            textAlign: \"end\"\r\n        },\r\n        boxtitlequarter:{\r\n            width: \"100%\",\r\n            textAlign: \"center\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"1.5em\",\r\n        },\r\n        maintitle:{\r\n            fontWeight: \"bold\",\r\n            fontSize: \"2em\",\r\n            padding: \"0 0 20px;\"\r\n        },\r\n        rowstyles:{\r\n            margin:\"0!important\"\r\n        },\r\n        containerFields:{\r\n            border: \"black 1px solid\",\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            padding: \"0 15px\"\r\n        },\r\n        label:{\r\n            width: \"60%\",\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafield:{\r\n            fontSize: \"1.2em\",\r\n            padding: \"5px\"\r\n        },\r\n        datafieldquarter:{\r\n            fontSize: \"1.2em\",\r\n            textAlign: \"center\",\r\n            width: \"100%\",\r\n            padding: \"5px\"\r\n        },\r\n        containerFieldsQuarter:{\r\n            margin: \"0!important\",\r\n            display: \"flex\",\r\n            width: \"100%\",\r\n            color: \"white\"\r\n        },\r\n        itemDate: {\r\n            minHeight: 40,\r\n            height: 40,\r\n            border: '1px solid #bfbfc0',\r\n            borderRadius: 4,\r\n            color: 'rgb(143, 146, 161)'\r\n        },\r\n        fieldsfilter: {\r\n            width: \"100%\",\r\n        },\r\n        replacerowzyx: {\r\n            display: 'flex',\r\n            flex: 1,\r\n            gap: theme.spacing(2),\r\n            flexWrap: \"wrap\",\r\n        },\r\n        itemCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            gap: 8,\r\n            flexWrap: 'wrap',\r\n            padding: theme.spacing(2),\r\n            alignItems: 'center'\r\n        },\r\n        columnCard: {\r\n            backgroundColor: \"#FFF\",\r\n            display: 'flex',\r\n            height: '100%',\r\n            flex: 1,\r\n            padding: theme.spacing(2),\r\n            flexDirection: 'column',\r\n            gap: theme.spacing(1)\r\n        },\r\n        itemGraphic: {\r\n            width: 200\r\n        },\r\n        dontshow: {\r\n            display: \"none\"\r\n        },\r\n        downloadiconcontainer:{\r\n            width:\"100%\",display: \"flex\",justifyContent: \"end\"\r\n        },\r\n        styleicon:{\r\n            width: \"18px\",\r\n            height: \"18px\",\r\n            '&:hover': {\r\n                cursor: 'pointer',\r\n            }\r\n        },\r\n    })\r\n);\r\n\r\n\r\nconst initialRange = {\r\n    startDate: new Date(new Date().setDate(1)),\r\n    endDate: new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0),\r\n    key: 'selection'\r\n}\r\n\r\nconst DashboardDisconnections: FC = () => {\r\n    const classes = useStyles();\r\n    const mainResult = useSelector(state => state.main);\r\n    const remultiaux = useSelector(state => state.main.multiDataAux);\r\n    const dispatch = useDispatch();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const { t } = useTranslation();\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n    const [openDateRangeCreateDateModal, setOpenDateRangeCreateDateModal] = useState(false);\r\n    const [dateRangeCreateDate, setDateRangeCreateDate] = useState<Range>(initialRange);\r\n    const [dataasesors, setdataasesors] = useState<any>([]);\r\n    const [datatotaltime, setdatatotaltime] = useState<any>([]);\r\n    const [disconnectiontypes, setdisconnectiontypes] = useState<any>([]);\r\n    const [tcovstdc, settcovstdc] = useState<any>([]);\r\n    const [usersearch, setusersearch] = useState(0);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    \r\n    async function funcsearch() {\r\n        let tosend = { \r\n            startdate: dateRangeCreateDate.startDate, \r\n            enddate: dateRangeCreateDate.endDate, \r\n            asesorid: usersearch, \r\n            supervisorid: user?.userid||0,\r\n        }\r\n        dispatch(showBackdrop(true));\r\n        setOpenDialog(false)\r\n        dispatch(getMultiCollectionAux([\r\n            getDisconnectionTimes(tosend)\r\n        ]))\r\n        setWaitSave(true)\r\n    }\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!remultiaux.loading && !remultiaux.error) {\r\n                let arraydisconnectiontimes =disconnectiontypes.map((x:any)=>0)\r\n                let userereasons = remultiaux?.data[0]?.data || []\r\n                let timestotal = [0,0]\r\n                userereasons.forEach(x=>{\r\n                    if(x.desconectedtimejson){\r\n                        timestotal[0]+=timetoseconds(x.conectedtime)\r\n                        timestotal[1]+=timetoseconds(x.desconectedtime)\r\n                        let arraydesconectionjson = JSON.parse(x.desconectedtimejson)\r\n                        let times = Object.keys(arraydesconectionjson)\r\n                        times.forEach(y=>{\r\n                            arraydisconnectiontimes[disconnectiontypes.indexOf(y)]+=timetoseconds(arraydesconectionjson[y])\r\n                        })\r\n                    }\r\n                })\r\n                setdatatotaltime(disconnectiontypes.reduce((acc:any,x:string, i:number)=>[...acc,{type:x, time: arraydisconnectiontimes[i]}],[]).filter((x:any)=>x.time!==0))\r\n                settcovstdc([{title: t(langKeys.totaltimeconnected), time: timestotal[0]},{title: t(langKeys.totaltimeoffline), time: timestotal[1]}])\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (remultiaux.error) {\r\n                const errormessage = t(remultiaux.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [remultiaux, waitSave])\r\n    useEffect(() => {\r\n        if (mainResult.multiData.data.length !== 0) {\r\n            let multiData = mainResult.multiData.data;\r\n            setdataasesors(multiData[0] && multiData[0].success ? multiData[0].data : []);\r\n            setdisconnectiontypes(multiData[1]?.data?.reduce((acc:any,x)=>[...acc,x.domainvalue],[]))\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [mainResult])\r\n    useEffect(() => {\r\n        dispatch(getMultiCollection([\r\n            getUserAsesorByOrgID(),\r\n            getValuesFromDomain(\"TIPODESCONEXION\"),\r\n        ]));\r\n        funcsearch()\r\n        return () => {\r\n            dispatch(resetMainAux());\r\n            dispatch(resetMultiMainAux());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(setViewChange(\"disconnections\"))\r\n        return () => {\r\n            dispatch(cleanViewChange());\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    const RADIAN = Math.PI / 180;\r\n    const renderCustomizedLabel = ({cx, cy, midAngle, innerRadius, outerRadius, percent, index,}:Dictionary) => {\r\n        const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n        const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n        const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n    return (\r\n            <text x={x} y={y} fill=\"white\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n            {`${formattime(tcovstdc[index].time)}`}\r\n            </text>\r\n        );\r\n    }\r\n\r\n    function downloaddata(data:any,title:string) {\r\n        if (data.length !== 0) {\r\n            let seteddata = data.map((x:any)=>{return {...x,time:formattime(x.time)}})\r\n            exportExcel(title, seteddata, Object.keys(seteddata[0]).reduce((ac: any[], c: any) => (\r\n                [\r\n                    ...ac,\r\n                    { Header: t((langKeys as any)[`dashboard_operationalpush_disconnections_${c}`]), accessor: c }\r\n                ]),\r\n                []\r\n            ))\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <DialogZyx\r\n                open={openDialog}\r\n                title=\"\"\r\n                buttonText1={t(langKeys.close)}\r\n                buttonText2={t(langKeys.search)}\r\n                handleClickButton1={() => setOpenDialog(false)}\r\n                handleClickButton2={() => funcsearch()}\r\n            >\r\n                <DateRangePicker\r\n                    open={openDateRangeCreateDateModal}\r\n                    setOpen={setOpenDateRangeCreateDateModal}\r\n                    range={dateRangeCreateDate}\r\n                    onSelect={setDateRangeCreateDate}\r\n                >\r\n                    <Button\r\n                        className={classes.itemDate}\r\n                        startIcon={<CalendarIcon />}\r\n                        onClick={() => setOpenDateRangeCreateDateModal(!openDateRangeCreateDateModal)}\r\n                    >\r\n                        {getDateCleaned(dateRangeCreateDate.startDate!) + \" - \" + getDateCleaned(dateRangeCreateDate.endDate!)}\r\n                    </Button>\r\n                </DateRangePicker>\r\n                <div className=\"row-zyx\" style={{ marginTop: \"15px\" }}>\r\n                    <FieldSelect\r\n                        label={t(langKeys.user)}\r\n                        className={classes.fieldsfilter}\r\n                        variant=\"outlined\"\r\n                        onChange={(value) => setusersearch(value?.userid||0)}\r\n                        valueDefault={usersearch}\r\n                        data={dataasesors}\r\n                        optionDesc=\"userdesc\"\r\n                        optionValue=\"userid\"\r\n                    />\r\n                </div>\r\n            </DialogZyx>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: 16 }}>\r\n                <div className={classes.maintitle}> {t(langKeys.disconnections)}</div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ width: 200, backgroundColor: \"#007bff\" }}\r\n                    onClick={() => setOpenDialog(true)}\r\n                >{t(langKeys.stablishfilters)}\r\n                </Button>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 16, flexDirection: 'column' }}>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{width:\"100%\"}}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>                            \r\n                            <CloudDownloadIcon onClick={()=>downloaddata(datatotaltime,t(langKeys.totaltimeduetodisconnectionreasons))} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div style={{width: \"100%\"}}> \r\n                            <div style={{display: \"flex\"}}>\r\n                                <div style={{fontWeight: \"bold\",fontSize: \"1.6em\",}}> {t(langKeys.totaltimeduetodisconnectionreasons)} </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{width: \"100%\", display:\"flex\"}}>\r\n                            <div style={{width: \"100%\", paddingTop: 50}}>\r\n                                <ResponsiveContainer width=\"100%\" aspect={5.0 / 2.0}>\r\n                                    <BarChart data={datatotaltime}>\r\n                                        <XAxis domain={[\"\",\"\"]} angle={-40} interval={0} textAnchor=\"end\"  type=\"category\" dataKey=\"type\" height={95}/>\r\n                                        <YAxis tickFormatter={v=>formattime(v)} width={100}/>\r\n                                        <RechartsTooltip formatter={(value: any, name: any) => [formattime(value), t(name)]} />\r\n                                        <Bar dataKey=\"time\" fill=\"#8884d8\" > </Bar>\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n            <div style={{ display: 'flex', gap: 16, flexDirection: 'column' }}>\r\n                <div className={classes.replacerowzyx}>\r\n                    <Box\r\n                        className={classes.itemCard}\r\n                        style={{width:\"100%\"}}\r\n                    >\r\n                        <div className={classes.downloadiconcontainer}>                            \r\n                            <CloudDownloadIcon onClick={()=>downloaddata(tcovstdc,t(langKeys.timeconnectedvstimeoff))} className={classes.styleicon}/>\r\n                        </div>\r\n                        <div style={{width: \"100%\"}}> \r\n                            <div style={{display: \"flex\"}}>\r\n                                <div style={{fontWeight: \"bold\",fontSize: \"1.6em\",}}> {t(langKeys.timeconnectedvstimeoff)} </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{width: \"100%\", display:\"flex\"}}>\r\n                            <div style={{width: \"100%\", paddingTop: 50}}>\r\n                                <ResponsiveContainer width=\"100%\" aspect={5.0 / 2.0}>\r\n                                    <PieChart>\r\n                                        <RechartsTooltip formatter={(value: any, name: any) => [formattime(value), t(name)]} />\r\n                                        <Pie isAnimationActive={false} data={tcovstdc} dataKey=\"time\" nameKey=\"title\" cx=\"50%\" cy=\"50%\" fill=\"#8884d8\" labelLine={false} label={renderCustomizedLabel}>\r\n                                            {\r\n                                                tcovstdc.map((entry:any, index:number) => <Cell key={entry.title} fill={COLORS[index % COLORS.length]}/>)\r\n                                            }\r\n                                        </Pie>\r\n                                        <Legend verticalAlign=\"bottom\"/>\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default DashboardDisconnections;","import { FC, Fragment, useCallback, useEffect, useState } from 'react';\r\nimport { Box, Button, Card, CardActionArea, CardContent, CardMedia, CircularProgress, Grid, IconButton, makeStyles, Menu, MenuItem, Typography } from '@material-ui/core';\r\nimport { Add as AddIcon, MoreVert as MoreVertIcon } from '@material-ui/icons';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { getDashboardTemplateIns, getDashboardTemplateSel } from 'common/helpers';\r\nimport { getCollection, resetMain, resetCollectionPaginated, resetMultiMain, resetMainAux } from 'store/main/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { default as DashboardManagerial } from './DashboardManagerial';\r\nimport { default as DashboardProductivity } from './DashboardProductivity';\r\nimport { default as DashboardOperationalPush } from './DashboardOperationalPush';\r\nimport { default as DashboardTagRanking } from './DashboardTagRanking';\r\nimport { default as DashboardDisconnections } from './DashboardDisconnections';\r\nimport { SearchField, TemplateBreadcrumbs } from 'components';\r\nimport paths from 'common/constants/paths';\r\nimport { useHistory } from 'react-router';\r\nimport { useSelector } from 'hooks';\r\nimport { manageConfirmation, showSnackbar } from 'store/popus/actions';\r\nimport { DashboardTemplate, IListStatePaginated } from '@types';\r\nimport { deleteDashboardTemplate, resetDeleteDashboardTemplate } from 'store/dashboard/actions';\r\n\r\n\r\nconst arrayBread = [\r\n    { id: \"view-1\", name: \"Dashboard\" }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        width: '100%'\r\n    },\r\n    containerDetails: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    media: {\r\n        objectFit: \"cover\"\r\n    },\r\n    containerSearch: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%',\r\n        },\r\n    },\r\n    containerFilter: {\r\n        width: '100%',\r\n        marginBottom: theme.spacing(2),\r\n        display: 'flex',\r\n        gap: 16,\r\n        flexWrap: 'wrap'\r\n    },\r\n    filterComponent: {\r\n        width: '220px'\r\n    },\r\n    containerFilterGeneral: {\r\n        display: 'flex',\r\n        justifyContent: 'end',\r\n        alignItems: 'center',\r\n        gap: 8,\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(2),\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        marginBottom: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    mb2: {\r\n        marginBottom: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nconst Dashboard: FC = () => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const dashboardtemplates = useSelector(state => state.main.mainData) as IListStatePaginated<DashboardTemplate>;\r\n    const dashboardtemplateDelete = useSelector(state => state.dashboard.dashboardtemplateDelete);    \r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [allDashboards, setAllDashboards] = useState<any>([]);\r\n    const [allDashboardsToShow, setallDashboardsToShow] = useState<any[]>([]);\r\n\r\n    \r\n    useEffect(() => {\r\n        dispatch(getCollection(getDashboardTemplateSel()));\r\n\r\n        return () => {\r\n            dispatch(resetMainAux());\r\n            dispatch(resetCollectionPaginated());\r\n            dispatch(resetMultiMain());\r\n            dispatch(resetMain());\r\n            dispatch(resetDeleteDashboardTemplate());\r\n        };\r\n\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        let temparray = allDashboards.filter((el:any)=> String(el.description).toLowerCase().includes(searchValue.toLowerCase()))\r\n        setallDashboardsToShow(temparray)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [searchValue]);\r\n    useEffect(() => {\r\n        if (dashboardtemplates.loading) return;\r\n        if (dashboardtemplates.error) {\r\n            const error = t(dashboardtemplates.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() });\r\n            dispatch(showSnackbar({\r\n                message: error,\r\n                severity: \"error\",\r\n                show: true,\r\n            }));\r\n        }else{\r\n            \r\n            setAllDashboards(dashboardtemplates.data)\r\n            setallDashboardsToShow(dashboardtemplates.data)\r\n        }\r\n    }, [dashboardtemplates, t, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (dashboardtemplateDelete.loading) return;\r\n        if (dashboardtemplateDelete.error) {\r\n            const error = t(dashboardtemplateDelete.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() });\r\n            dispatch(showSnackbar({\r\n                message: error,\r\n                severity: \"error\",\r\n                show: true,\r\n            }));\r\n            dispatch(resetDeleteDashboardTemplate());\r\n        } else if (dashboardtemplateDelete.success) {\r\n            dispatch(showSnackbar({\r\n                message: \"Se eliminó el dashboard\",\r\n                severity: \"success\",\r\n                show: true,\r\n            }));\r\n            dispatch(getCollection(getDashboardTemplateSel()));\r\n            dispatch(resetDeleteDashboardTemplate());\r\n        }\r\n    }, [dashboardtemplateDelete, history, t, dispatch]);\r\n\r\n    const onDelete = useCallback((template: DashboardTemplate) => {\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback: () => {\r\n                dispatch(deleteDashboardTemplate(getDashboardTemplateIns({\r\n                    ...template,\r\n                    id: template.dashboardtemplateid,\r\n                    status: 'ELIMINADO',\r\n                    operation: 'DELETE',\r\n                })));\r\n            },\r\n        }))\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dispatch]);\r\n\r\n    const goToDashboardLayout = useCallback((dashboardtemplateid: number) => {\r\n        history.push(paths.DASHBOARD_LAYOUT.resolve(dashboardtemplateid));\r\n    }, [history]);\r\n\r\n    const handleSelected = (key:string) => {\r\n        setViewSelected(key);\r\n    }\r\n\r\n    if (dashboardtemplates.loading) {\r\n        return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\r\n                <CircularProgress />\r\n            </div>\r\n        );\r\n    }\r\n    const handleFiend = (valor: string) => {\r\n        setSearchValue(valor);\r\n    }\r\n\r\n    const dashboardCounter = () => {\r\n        let counter = 0;\r\n        if (t(langKeys.managerial).toLowerCase().includes(searchValue.toLowerCase())) {\r\n            counter++;\r\n        }\r\n        if (t(langKeys.productivity).toLowerCase().includes(searchValue.toLowerCase())) {\r\n            counter++;\r\n        }\r\n        if (t(langKeys.operationalpush).toLowerCase().includes(searchValue.toLowerCase())) {\r\n            counter++;\r\n        }\r\n\r\n        return counter += allDashboardsToShow.length;\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n        return (\r\n            <div className={classes.container}>\r\n                <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                    <span className={classes.title}>\r\n                        {t(langKeys.dashboard_plural)} ({dashboardCounter()})\r\n                    </span>\r\n                </Box>\r\n                <Box className={classes.containerFilterGeneral}>\r\n                    <div className={classes.containerSearch}>\r\n                        <SearchField\r\n                            colorPlaceHolder='#FFF'\r\n                            handleChangeOther={handleFiend}\r\n                            disabled={dashboardtemplates.loading}\r\n                            lazy\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={dashboardtemplates.loading}\r\n                        startIcon={<AddIcon color=\"secondary\" />}\r\n                        onClick={() => history.push(paths.DASHBOARD_ADD)}\r\n                        style={{ backgroundColor: \"#55BD84\" }}\r\n                    >\r\n                        <Trans i18nKey={langKeys.create_custom_dashboard} />\r\n                    </Button>\r\n                </Box>\r\n                <div className={classes.containerDetails}>\r\n                    <Grid container spacing={3}>\r\n                        { t(langKeys.managerial).toLowerCase().includes(searchValue.toLowerCase()) && <Grid item xs={12} md={4} lg={3} style={{ minWidth: 360 }}>\r\n                            <Card>\r\n                                <CardActionArea onClick={() => handleSelected(\"dashboardgerencial\")}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"140\"\r\n                                        className={classes.media}\r\n                                        image={'https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/1gerencial.png'}\r\n                                        title={t(langKeys.managerial)}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                            {t(langKeys.managerial)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>}\r\n                        {t(langKeys.productivity).toLowerCase().includes(searchValue.toLowerCase()) && <Grid item xs={12} md={4} lg={3} style={{ minWidth: 360 }}>\r\n                            <Card>\r\n                                <CardActionArea onClick={() => handleSelected(\"dashboardproductivity\")}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"140\"\r\n                                        className={classes.media}\r\n                                        image={'https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/2productividad.png'}\r\n                                        title={t(langKeys.productivity)}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                            {t(langKeys.productivity)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>}\r\n                        {t(langKeys.operationalpush).toLowerCase().includes(searchValue.toLowerCase()) && <Grid item xs={12} md={4} lg={3} style={{ minWidth: 360 }}>\r\n                            <Card>\r\n                                <CardActionArea onClick={() => handleSelected(\"dashboardoperationalpush\")}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"140\"\r\n                                        className={classes.media}\r\n                                        image={'https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/3operativoPush.png'}\r\n                                        title={t(langKeys.operationalpush)}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                            {t(langKeys.operationalpush)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>}\r\n                        {t(langKeys.tagranking).toLowerCase().includes(searchValue.toLowerCase()) && <Grid item xs={12} md={4} lg={3} style={{ minWidth: 360 }}>\r\n                            <Card>\r\n                                <CardActionArea onClick={() => handleSelected(\"dashboardtagranking\")}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"140\"\r\n                                        className={classes.media}\r\n                                        image={'https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/randkinfg.png'}\r\n                                        title={t(langKeys.tagranking)}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                            {t(langKeys.tagranking)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>}\r\n                        {t(langKeys.disconnections).toLowerCase().includes(searchValue.toLowerCase()) && <Grid item xs={12} md={4} lg={3} style={{ minWidth: 360 }}>\r\n                            <Card>\r\n                                <CardActionArea onClick={() => handleSelected(\"dashboarddisconnections\")}>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        height=\"140\"\r\n                                        style={{objectFit: \"contain\"}}\r\n                                        className={classes.media}\r\n                                        image={'https://staticfileszyxme.s3.us-east.cloud-object-storage.appdomain.cloud/PROCESOSYCONSULTORIA/d4a7c4c3-1ff8-48ea-b10a-6a74a03142e4/desconexionestickets.png'}\r\n                                        title={t(langKeys.disconnections)}\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                                            {t(langKeys.disconnections)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>}\r\n                        {allDashboardsToShow.map((e:any, i:number) => (\r\n                            <Grid item xs={12} md={4} lg={3} style={{ minWidth: 360 }} key={i}>\r\n                                <DashboardCard\r\n                                    dashboardtemplate={e}\r\n                                    disabled={dashboardtemplateDelete.loading}\r\n                                    onClick={(event) => {\r\n                                        event.preventDefault();\r\n                                        goToDashboardLayout(e.dashboardtemplateid);\r\n                                    }}\r\n                                    onEdit={() => {\r\n                                        history.push(paths.DASHBOARD_EDIT.resolve(e.dashboardtemplateid));\r\n                                    }}\r\n                                    onDuplicate={() => {\r\n                                        history.push({\r\n                                            pathname: paths.DASHBOARD_COPY,\r\n                                            state: e,\r\n                                        });\r\n                                    }}\r\n                                    onDelete={() => onDelete(e)}\r\n                                />\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n    else if(viewSelected === \"dashboardgerencial\"){\r\n        return(\r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={[...arrayBread, {id: 'dashboardgerencial', name: t(langKeys.managerial) }]}\r\n                        handleClick={handleSelected}\r\n                    />\r\n                    <DashboardManagerial/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else if(viewSelected === \"dashboardproductivity\"){\r\n        return(\r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={[...arrayBread, {id: 'dashboardproductivity', name: t(langKeys.productivity) }]}\r\n                        handleClick={handleSelected}\r\n                    />\r\n                    <DashboardProductivity/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n    else if(viewSelected === \"dashboardoperationalpush\"){\r\n        return(\r\n            \r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={[...arrayBread, {id: 'dashboardoperationalpush', name: t(langKeys.operationalpush) }]}\r\n                        handleClick={handleSelected}\r\n                    />\r\n                    <DashboardOperationalPush/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }    \r\n    else if(viewSelected === \"dashboardtagranking\"){\r\n        return(\r\n            \r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={[...arrayBread, {id: 'dashboardtagranking', name: t(langKeys.tagranking) }]}\r\n                        handleClick={handleSelected}\r\n                    />\r\n                    <DashboardTagRanking/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }    \r\n    else if(viewSelected === \"dashboarddisconnections\"){\r\n        return(\r\n            \r\n            <Fragment>\r\n                <div style={{ width: '100%' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={[...arrayBread, {id: 'dashboarddisconnections', name: t(langKeys.disconnections) }]}\r\n                        handleClick={handleSelected}\r\n                    />\r\n                    <DashboardDisconnections/>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }    \r\n    else{\r\n        return (\r\n            <div>error</div>\r\n        )\r\n    }\r\n}\r\n\r\ninterface DashboardCardProps {\r\n    disabled: boolean;\r\n    dashboardtemplate: DashboardTemplate;\r\n    onClick: (e: React.MouseEvent<HTMLAnchorElement>) => void;\r\n    onEdit: (e: React.MouseEvent<HTMLLIElement>) => void;\r\n    onDelete: (e: React.MouseEvent<HTMLLIElement>) => void;\r\n    onDuplicate: (e: React.MouseEvent<HTMLLIElement>) => void;\r\n}\r\n\r\nconst useDashboardCardStyles = makeStyles(theme => ({\r\n    media: {\r\n        objectFit: \"none\"\r\n    },\r\n}));\r\n\r\nconst DashboardCard: FC<DashboardCardProps> = ({\r\n    dashboardtemplate,\r\n    disabled,\r\n    onClick,\r\n    onEdit,\r\n    onDelete,\r\n    onDuplicate,\r\n}) => {\r\n    const classes = useDashboardCardStyles();\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n    return (\r\n        <Card style={{ position: 'relative' }}>\r\n            <CardActionArea\r\n                href={paths.DASHBOARD_LAYOUT.resolve(dashboardtemplate.dashboardtemplateid)}\r\n                onClick={onClick}\r\n            >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"140\"\r\n                    className={classes.media}\r\n                    image=\"https://www.datacrm.com/upload/article/b201902121011569.jpg\"\r\n                    title={dashboardtemplate.description}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n                        {dashboardtemplate.description}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <IconButton\r\n                aria-label=\"settings\"\r\n                aria-describedby={`${dashboardtemplate.dashboardtemplateid}reporttemplate`}\r\n                aria-haspopup\r\n                style={{ position: 'absolute', right: 0, top: 0 }}\r\n                onClick={(e) => setAnchorEl(e.currentTarget)}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => setAnchorEl(null)}\r\n            >\r\n                <MenuItem\r\n                    onClick={e => {\r\n                        onEdit(e);\r\n                        setAnchorEl(null);\r\n                    }}\r\n                    disabled={disabled}\r\n                >\r\n                    <Trans i18nKey={langKeys.edit} />\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={e => {\r\n                        onDuplicate(e);\r\n                        setAnchorEl(null);\r\n                    }}\r\n                    disabled={disabled}\r\n                >\r\n                    <Trans i18nKey={langKeys.duplicate} />\r\n                </MenuItem>\r\n                <MenuItem\r\n                    onClick={e => {\r\n                        onDelete(e);\r\n                        setAnchorEl(null);\r\n                    }}\r\n                    disabled={disabled}\r\n                >\r\n                    <Trans i18nKey={langKeys.delete} />\r\n                </MenuItem>\r\n            </Menu>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { DashboardTemplate, IActionCall, IRequestBody } from \"@types\";\r\nimport { DashboardService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\ninterface GetDashboardParams {\r\n    dashboardtemplateid: number | string;\r\n    startdate: string;\r\n    enddate: string;\r\n    offset: number;\r\n}\r\n\r\nexport const getDashboard = (parameters: GetDashboardParams): IActionCall => ({\r\n    callAPI: () => DashboardService.getDashboard({ parameters }),\r\n    types: {\r\n        loading: actionTypes.GET_DASHBOARD,\r\n        success: actionTypes.GET_DASHBOARD_SUCCESS,\r\n        failure: actionTypes.GET_DASHBOARD_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetDashboard = (): IActionCall => ({type: actionTypes.GET_DASHBOARD_RESET});\r\n\r\nexport const getDashboardTemplate = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_DASHBOARDTEMPLATE,\r\n        success: actionTypes.GET_DASHBOARDTEMPLATE_SUCCESS,\r\n        failure: actionTypes.GET_DASHBOARDTEMPLATE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const setDashboardTemplate = (payload: DashboardTemplate): IActionCall => ({\r\n    payload,\r\n    type: actionTypes.SET_DASHBOARDTEMPLATE,\r\n});\r\n\r\nexport const resetGetDashboardTemplate = (): IActionCall => ({type: actionTypes.GET_DASHBOARDTEMPLATE_RESET});\r\n\r\nexport const saveDashboardTemplate = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.SAVE_DASHBOARDTEMPLATE,\r\n        success: actionTypes.SAVE_DASHBOARDTEMPLATE_SUCCESS,\r\n        failure: actionTypes.SAVE_DASHBOARDTEMPLATE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSaveDashboardTemplate = (): IActionCall => ({type: actionTypes.SAVE_DASHBOARDTEMPLATE_RESET});\r\n\r\nexport const deleteDashboardTemplate = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.DELETE_DASHBOARDTEMPLATE,\r\n        success: actionTypes.DELETE_DASHBOARDTEMPLATE_SUCCESS,\r\n        failure: actionTypes.DELETE_DASHBOARDTEMPLATE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteDashboardTemplate = (): IActionCall => ({type: actionTypes.DELETE_DASHBOARDTEMPLATE_RESET});\r\n"],"sourceRoot":""}