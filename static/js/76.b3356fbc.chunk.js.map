{"version":3,"sources":["pages/GroupConfig.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js"],"names":["arrayBread","id","name","useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","DetailGroupConfig","data","row","edit","setViewSelected","multiData","fetchData","classes","useState","waitSave","setWaitSave","executeRes","useSelector","state","main","execute","dispatch","useDispatch","t","useTranslation","dataStatus","success","dataDomain","useForm","defaultValues","type","groupconfigurationid","description","status","quantity","domainid","validationtext","operation","register","handleSubmit","setValue","errors","formState","React","useEffect","validate","value","length","langKeys","field_required","loading","error","errormessage","code","module","groupconfig","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","onSubmit","manageConfirmation","visible","question","confirmation_save","callback","insGroupConfig","style","width","display","justifyContent","breadcrumbs","handleClick","title","newgroupconfig","gap","alignItems","variant","color","startIcon","backgroundColor","onClick","back","className","save","label","domain","valueDefault","onChange","optionDesc","optionValue","domaindesc","domainvalue","uset","prefixTranslation","parseInt","GroupConfig","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","columns","useMemo","accessor","NoFilter","isComponent","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","getCollection","getGroupConfigSel","getMultiCollection","getValuesFromDomain","resetMain","successful_delete","confirmation_delete","titlemodule","count","mainData","download","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d"],"mappings":"iTAoCMA,EAAa,CACf,CAAEC,GAAI,SAAUC,KAAM,uBACtB,CAAED,GAAI,SAAUC,KAAM,+BAGpBC,EAAYC,aAAW,SAACC,GAAK,MAAM,CACrCC,gBAAiB,CACbC,UAAWF,EAAMG,QAAQ,GACzBC,QAASJ,EAAMG,QAAQ,GACvBE,WAAY,QAEhBC,OAAQ,CACJF,QAAS,GACTG,WAAY,IACZC,SAAU,OACVC,cAAe,eAIjBC,EAAsD,SAAH,GAAwE,IAAD,cAAjEC,KAAQC,EAAG,EAAHA,IAAKC,EAAI,EAAJA,KAAQC,EAAe,EAAfA,gBAAiBC,EAAS,EAATA,UAAWC,EAAS,EAATA,UACtGC,EAAUnB,IAChB,EAAgCoB,oBAAS,GAAM,mBAAxCC,EAAQ,KAAEC,EAAW,KACtBC,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,WAC7CC,EAAWC,cACTC,EAAMC,cAAND,EAEFE,EAAaf,EAAU,IAAMA,EAAU,GAAGgB,QAAUhB,EAAU,GAAGJ,KAAO,GACxEqB,EAAajB,EAAU,IAAMA,EAAU,GAAGgB,QAAUhB,EAAU,GAAGJ,KAAO,GAE9E,EAAoEsB,YAAQ,CACxEC,cAAe,CACXC,KAAM,UACNvC,GAAIgB,EAAMA,EAAIwB,qBAAuB,EACrCC,YAAazB,GAAOA,EAAIyB,aAAqB,GAC7CC,QAAW,OAAH1B,QAAG,IAAHA,OAAG,EAAHA,EAAK0B,SAAU,SACvBC,SAAU3B,EAAMA,EAAI2B,SAAW,EAC/BC,SAAU5B,EAAMA,EAAI4B,SAAW,EAC/BC,eAAgB7B,EAAMA,EAAI6B,eAAiB,GAC3CC,UAAW9B,EAAM,OAAS,YAT1B+B,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAAcC,EAAQ,EAARA,SAAuBC,EAAM,EAAnBC,UAAaD,OAavDE,IAAMC,WAAU,WACZN,EAAS,QACTA,EAAS,MACTA,EAAS,cAAe,CAAEO,SAAU,SAACC,GAAK,OAAMA,GAASA,EAAMC,QAAWxB,EAAEyB,IAASC,mBACrFX,EAAS,SAAU,CAAEO,SAAU,SAACC,GAAK,OAAMA,GAASA,EAAMC,QAAWxB,EAAEyB,IAASC,mBAChFX,EAAS,WAAY,CAAEO,SAAU,SAACC,GAAK,OAAMA,GAASA,EAAQ,GAAMvB,EAAEyB,IAASC,mBAC/EX,EAAS,WAAY,CAAEO,SAAU,SAACC,GAAK,OAAMA,GAASA,EAAQ,GAAMvB,EAAEyB,IAASC,mBAC/EX,EAAS,iBAAkB,CAAEO,SAAU,SAACC,GAAK,OAAMA,GAASA,EAAMC,QAAWxB,EAAEyB,IAASC,qBACzF,CAACzC,EAAM8B,IAEVM,qBAAU,WACN,GAAI9B,EACA,GAAKE,EAAWkC,SAAYlC,EAAWmC,OAKhC,GAAInC,EAAWmC,MAAO,CACzB,IAAMC,EAAe7B,EAAEP,EAAWqC,MAAQ,yBAA0B,CAAEC,OAAQ/B,EAAEyB,IAASO,aAAaC,sBACtGnC,EAASoC,YAAa,CAAEC,MAAM,EAAMC,SAAU,QAASC,QAASR,KAChErC,GAAY,GACZM,EAASwC,aAAa,UARtBxC,EAASoC,YAAa,CAAEC,MAAM,EAAMC,SAAU,UAAWC,QAASrC,EAAEhB,EAAMyC,IAASc,gBAAkBd,IAASe,wBAC9GpD,GAAaA,IACbU,EAASwC,aAAa,IACtBpD,EAAgB,YAQzB,CAACO,EAAYF,IAEhB,IAAMkD,EAAWzB,GAAa,SAACjC,GAO3Be,EAAS4C,YAAmB,CACxBC,SAAS,EACTC,SAAU5C,EAAEyB,IAASoB,mBACrBC,SATa,WACbhD,EAASD,YAAQkD,aAAehE,KAChCe,EAASwC,aAAa,IACtB9C,GAAY,UAUpB,OACI,qBAAKwD,MAAO,CAACC,MAAO,QAAQ,SACxB,uBAAMR,SAAUA,EAAS,UACrB,sBAAKO,MAAO,CAAEE,QAAS,OAAQC,eAAgB,iBAAkB,UAC7D,gCACI,cAAC,IAAmB,CAChBC,YAAarF,EACbsF,YAAanE,IAEjB,cAAC,IAAW,CACRoE,MAAOtE,EAAG,UAAMA,EAAIyB,aAAgBT,EAAEyB,IAAS8B,qBAGvD,sBAAKP,MAAO,CAAEE,QAAS,OAAQM,IAAK,OAAQC,WAAY,UAAW,UAC/D,cAAC,IAAM,CACHC,QAAQ,YACRnD,KAAK,SACLoD,MAAM,UACNC,UAAW,cAAC,IAAS,CAACD,MAAM,cAC5BX,MAAO,CAAEa,gBAAiB,WAC1BC,QAAS,kBAAM5E,EAAgB,WAAU,SAC3Cc,EAAEyB,IAASsC,QACZ9E,GACD,cAAC,IAAM,CACH+E,UAAW3E,EAAQX,OACnBgF,QAAQ,YACRC,MAAM,UACNpD,KAAK,SACLqD,UAAW,cAAC,IAAQ,CAACD,MAAM,cAC3BX,MAAO,CAAEa,gBAAiB,WAAY,SACxC7D,EAAEyB,IAASwC,cAKrB,sBAAKD,UAAW3E,EAAQhB,gBAAgB,UACpC,sBAAK2F,UAAU,UAAS,UACnB/E,EACG,cAAC,IAAW,CACRiF,MAAOlE,EAAEyB,IAAS0C,QAClBH,UAAU,QACVI,aAAcpF,GAAOA,EAAI4B,UAAkB,GAC3CyD,SAAU,SAAC9C,GAAK,OAAKN,EAAS,WAAaM,EAAMA,EAAMX,SAAS,IAChEgB,MAAa,OAANV,QAAM,IAANA,GAAgB,QAAV,EAANA,EAAQN,gBAAQ,WAAV,EAAN,EAAkByB,QACzBtD,KAAMqB,EACNkE,WAAW,aACXC,YAAY,aAEd,cAAC,IAAS,CACRL,MAAOlE,EAAEyB,IAAS0C,QAClB5C,MAAOvC,GAAOA,EAAIwF,YAAoB,GACtCR,UAAU,UAEjB/E,EACG,cAAC,IAAS,CACNiF,MAAOlE,EAAEyB,IAAShB,aAClBuD,UAAU,QACVK,SAAU,SAAC9C,GAAK,OAAKN,EAAS,cAAeM,IAC7C6C,aAAcpF,GAAOA,EAAIyB,aAAqB,GAC9CmB,MAAa,OAANV,QAAM,IAANA,GAAmB,QAAb,EAANA,EAAQT,mBAAW,WAAb,EAAN,EAAqB4B,UAE9B,cAAC,IAAS,CACR6B,MAAOlE,EAAEyB,IAAShB,aAClBc,MAAOvC,GAAOA,EAAIyB,aAAqB,GACvCuD,UAAU,aAGtB,sBAAKA,UAAU,UAAS,UACnB/E,EACG,cAAC,IAAW,CACRiF,MAAOlE,EAAEyB,IAASf,QAClBsD,UAAU,QACVI,cAAiB,OAAHpF,QAAG,IAAHA,OAAG,EAAHA,EAAK0B,SAAU,SAC7B2D,SAAU,SAAC9C,GAAK,OAAKN,EAAS,SAAWM,EAAMA,EAAMkD,YAAY,KACjE7C,MAAa,OAANV,QAAM,IAANA,GAAc,QAAR,EAANA,EAAQR,cAAM,WAAR,EAAN,EAAgB2B,QACvBtD,KAAMmB,EACNwE,MAAM,EACNC,kBAAkB,UAClBL,WAAW,aACXC,YAAY,gBAEd,cAAC,IAAS,CACRL,MAAOlE,EAAEyB,IAASf,QAClBa,MAAOvC,GAAOA,EAAI0B,QAAgB,GAClCsD,UAAU,UAEjB/E,EACG,cAAC,IAAS,CACNiF,MAAOlE,EAAEyB,IAASd,UAClBiB,MAAa,OAANV,QAAM,IAANA,GAAgB,QAAV,EAANA,EAAQP,gBAAQ,WAAV,EAAN,EAAkB0B,QACzBgC,SAAU,SAAC9C,GAAK,OAAKN,EAAS,WAAYM,EAAQqD,SAASrD,GAAS,IACpEhB,KAAK,SACLyD,UAAU,QACVI,aAAcpF,GAAOA,EAAI2B,UAAkB,KAE7C,cAAC,IAAS,CACRuD,MAAOlE,EAAEyB,IAASd,UAClBY,MAAOvC,GAAOA,EAAI2B,UAAkB,GACpCqD,UAAU,aAItB,qBAAKA,UAAU,UAAS,SACnB/E,EACG,cAAC,IAAS,CACNiF,MAAOlE,EAAEyB,IAASZ,gBAClBmD,UAAU,QACVI,aAAcpF,GAAOA,EAAI6B,gBAAwB,GACjDwD,SAAU,SAAC9C,GAAK,OAAKN,EAAS,iBAAkBM,IAChDK,MAAa,OAANV,QAAM,IAANA,GAAsB,QAAhB,EAANA,EAAQL,sBAAc,WAAhB,EAAN,EAAwBwB,UAEjC,cAAC,IAAS,CACR6B,MAAOlE,EAAEyB,IAASZ,gBAClBU,MAAOvC,GAAOA,EAAI6B,gBAAwB,GAC1CmD,UAAU,qBAwJ3Ba,UA/IS,WAEpB,IAAM/E,EAAWC,cACTC,EAAMC,cAAND,EACF8E,EAAapF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QACxCmF,EAAgBrF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,WAEtD,EAAwCP,mBAAS,UAAS,mBAAnD0F,EAAY,KAAE9F,EAAe,KACpC,EAAsCI,mBAAsB,CAAEN,IAAK,KAAMC,MAAM,IAAQ,mBAAhFgG,EAAW,KAAEC,EAAc,KAClC,EAAgC5F,oBAAS,GAAM,mBAAxCC,EAAQ,KAAEC,EAAW,KAEtB2F,EAAU/D,IAAMgE,SAClB,iBAAM,CACF,CACIC,SAAU,SACVC,UAAU,EACVC,aAAa,EACbC,KAAM,SAACC,GACH,IAAMzG,EAAMyG,EAAMC,KAAK1G,IAAI2G,SAC3B,OACI,cAAC,IAAa,CACVC,aAAc,kBAAMC,EAAW7G,IAE/B8G,eAAgB,kBAAMC,EAAa/G,IACnCgH,aAAc,kBAAMC,EAAWjH,QAK/C,CACIkH,OAAQlG,EAAEyB,IAAS0C,QACnBkB,SAAU,aACVC,UAAU,GAEd,CACIY,OAAQlG,EAAEyB,IAAShB,aACnB4E,SAAU,cACVC,UAAU,GAEd,CACIY,OAAQlG,EAAEyB,IAASf,QACnB2E,SAAU,SACVC,UAAU,GAEd,CACIY,OAAQlG,EAAEyB,IAASd,UACnB0E,SAAU,WACVC,UAAU,GAEd,CACIY,OAAQlG,EAAEyB,IAASZ,gBACnBwE,SAAU,iBACVC,UAAU,MAIlB,IAGElG,EAAY,WAAH,OAASU,EAASqG,YAAcC,aAAkB,MAEjE/E,qBAAU,WAGN,OAFAjC,IACAU,EAASuG,YAAmB,CAACC,aAAoB,UAAWA,aAAoB,qBACzE,WACHxG,EAASyG,kBAEd,IAEHlF,qBAAU,WACN,GAAI9B,EACA,GAAKwF,EAAcpD,SAAYoD,EAAcnD,OAKtC,GAAImD,EAAcnD,MAAO,CAC5B,IAAMC,EAAe7B,EAAE+E,EAAcjD,MAAQ,yBAA0B,CAAEC,OAAQ/B,EAAEyB,IAASO,aAAaC,sBACzGnC,EAASoC,YAAa,CAAEC,MAAM,EAAMC,SAAU,QAASC,QAASR,KAChE/B,EAASwC,aAAa,IACtB9C,GAAY,SARZM,EAASoC,YAAa,CAAEC,MAAM,EAAMC,SAAU,UAAWC,QAASrC,EAAEyB,IAAS+E,sBAC7EpH,IACAU,EAASwC,aAAa,IACtB9C,GAAY,KAQrB,CAACuF,EAAexF,IAEnB,IAKMsG,EAAa,SAAC7G,GAChBE,EAAgB,UAChBgG,EAAe,CAAElG,MAAKC,MAAM,KAG1BgH,EAAa,SAACjH,GAChBE,EAAgB,UAChBgG,EAAe,CAAElG,MAAKC,MAAM,KAG1B8G,EAAe,SAAC/G,GAOlBc,EAAS4C,YAAmB,CACxBC,SAAS,EACTC,SAAU5C,EAAEyB,IAASgF,qBACrB3D,SATa,WACbhD,EAASD,YAAQkD,aAAe,2BAAK/D,GAAG,IAAE8B,UAAW,SAAUJ,OAAQ,YAAa1C,GAAIgB,EAAIwB,0BAC5FV,EAASwC,aAAa,IACtB9C,GAAY,QAUpB,MAAqB,WAAjBwF,EAGI,cAAC,IAAQ,CACLG,QAASA,EACTuB,YAAa1G,EAAEyB,IAASO,YAAa,CAAE2E,MAAO,IAC9C5H,KAAM+F,EAAW8B,SAAS7H,KAC1B8H,UAAU,EACVlF,QAASmD,EAAW8B,SAASjF,QAC7BZ,UAAU,EACV+F,eAvCW,WACnB5H,EAAgB,UAChBgG,EAAe,CAAElG,IAAK,KAAMC,MAAM,OA0CZ,WAAjB+F,EAED,cAAClG,EAAiB,CACdC,KAAMkG,EACN/F,gBAAiBA,EACjBC,UAAW2F,EAAW3F,UAAUJ,KAChCK,UAAWA,IAIZ,O,iCC1Xf,IAAI2H,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3C7F,OAAO,IAET6F,EAAQC,aAAU,EAElB,IAAIjG,EAAQ6F,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBK,SAAuBjG,EAAMmG,cAAc,OAAQ,CACnFC,EAAG,0GACD,SAEJJ,EAAQC,QAAUC,G,iCCjBlB,IAAIP,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,IAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3C7F,OAAO,IAET6F,EAAQC,aAAU,EAElB,IAAIjG,EAAQ6F,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,KAElBK,SAAuBjG,EAAMmG,cAAc,OAAQ,CACnFC,EAAG,mJACD,QAEJJ,EAAQC,QAAUC","file":"static/js/76.b3356fbc.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldView, FieldEdit, FieldSelect } from 'components';\r\nimport { getGroupConfigSel, getValuesFromDomain, insGroupConfig } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport {\r\n    getCollection, resetMain, getMultiCollection,\r\n    execute\r\n} from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n// import { useHistory } from 'react-router-dom';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\ninterface DetailGroupConfigProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void\r\n}\r\nconst arrayBread = [\r\n    { id: \"view-1\", name: \"Group Configuration\" },\r\n    { id: \"view-2\", name: \"Group Configuration Detail\" }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n}));\r\n\r\nconst DetailGroupConfig: React.FC<DetailGroupConfigProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData }) => {\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const dataStatus = multiData[1] && multiData[1].success ? multiData[1].data : [];\r\n    const dataDomain = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            type: 'NINGUNO',\r\n            id: row ? row.groupconfigurationid : 0,\r\n            description: row ? (row.description || '') : '',\r\n            status: row?.status || 'ACTIVO',\r\n            quantity: row ? row.quantity : 0,\r\n            domainid: row ? row.domainid : 0,\r\n            validationtext: row ? row.validationtext : '',\r\n            operation: row ? \"EDIT\" : \"INSERT\"\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        register('type');\r\n        register('id');\r\n        register('description', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('quantity', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('domainid', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('validationtext', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n    }, [edit, register]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.groupconfig).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n    \r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(insGroupConfig(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={arrayBread}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.description}` : t(langKeys.newgroupconfig)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        {edit &&\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            startIcon={<SaveIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        >{t(langKeys.save)}\r\n                        </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                label={t(langKeys.domain)}                                \r\n                                className=\"col-6\"\r\n                                valueDefault={row ? (row.domainid || \"\") : \"\"}\r\n                                onChange={(value) => setValue('domainid', (value?value.domainid:0))}\r\n                                error={errors?.domainid?.message}\r\n                                data={dataDomain}\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainid\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.domain)}\r\n                                value={row ? (row.domaindesc || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.description)} \r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('description', value)}\r\n                                valueDefault={row ? (row.description || \"\") : \"\"}\r\n                                error={errors?.description?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.description)}\r\n                                value={row ? (row.description || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                label={t(langKeys.status)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row?.status || \"ACTIVO\"}\r\n                                onChange={(value) => setValue('status', (value?value.domainvalue:\"\"))}\r\n                                error={errors?.status?.message}\r\n                                data={dataStatus}\r\n                                uset={true}\r\n                                prefixTranslation=\"status_\"\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.status)}\r\n                                value={row ? (row.status || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.quantity)} \r\n                                error={errors?.quantity?.message}\r\n                                onChange={(value) => setValue('quantity', value ? parseInt(value) : 0)}\r\n                                type=\"number\"\r\n                                className=\"col-6\"\r\n                                valueDefault={row ? (row.quantity || \"\") : \"\"}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.quantity)}\r\n                                value={row ? (row.quantity || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.validationtext)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row ? (row.validationtext || \"\") : \"\"}\r\n                                onChange={(value) => setValue('validationtext', value)}\r\n                                error={errors?.validationtext?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.validationtext)}\r\n                                value={row ? (row.validationtext || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst GroupConfig: FC = () => {\r\n    // const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'userid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            // viewFunction={() => history.push(`/properties/${row.GroupConfigid}`)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.domain),\r\n                accessor: 'domaindesc',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.quantity),\r\n                accessor: 'quantity',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.validationtext),\r\n                accessor: 'validationtext',\r\n                NoFilter: true\r\n            },\r\n            \r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getGroupConfigSel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([getValuesFromDomain(\"GRUPOS\"), getValuesFromDomain(\"ESTADOGENERICO\")]));\r\n        return () => {\r\n            dispatch(resetMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.groupconfig).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n    \r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insGroupConfig({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.groupconfigurationid })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            <TableZyx\r\n                columns={columns}\r\n                titlemodule={t(langKeys.groupconfig, { count: 2 })}\r\n                data={mainResult.mainData.data}\r\n                download={true}\r\n                loading={mainResult.mainData.loading}\r\n                register={true}\r\n                handleRegister={handleRegister}\r\n            // fetchData={fetchData}\r\n            />\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailGroupConfig\r\n                data={rowSelected}\r\n                setViewSelected={setViewSelected}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default GroupConfig;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}