{"version":3,"sources":["pages/IntelligentModels.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js"],"names":["arrayBread","id","name","useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","DetailIntelligentModels","data","row","edit","setViewSelected","multiData","fetchData","classes","useState","waitSave","setWaitSave","executeRes","useSelector","state","main","execute","dispatch","useDispatch","t","useTranslation","dataDomainStatus","success","useForm","defaultValues","type","endpoint","modelid","apikey","description","provider","status","operation","register","handleSubmit","setValue","errors","formState","React","useEffect","validate","value","length","langKeys","field_required","loading","error","errormessage","code","module","intelligentmodels","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","onSubmit","manageConfirmation","visible","question","confirmation_save","callback","insIntelligentModels","style","width","display","justifyContent","breadcrumbs","handleClick","title","newintelligentmodel","gap","alignItems","variant","color","startIcon","backgroundColor","onClick","back","className","save","label","onChange","valueDefault","domainvalue","optionDesc","optionValue","IntelligentModels","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","prefixTranslation","toLowerCase","toUpperCase","getCollection","getIntelligentModelsSel","getMultiCollection","getValuesFromDomain","resetAllMain","successful_delete","confirmation_delete","onClickRow","titlemodule","count","mainData","download","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/79.98c9a220.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldView, FieldEdit, FieldSelect } from 'components';\r\nimport { getIntelligentModelsSel, getValuesFromDomain, insIntelligentModels } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getCollection, resetAllMain, execute, getMultiCollection } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\ninterface DetailIntelligentModelsProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void\r\n}\r\nconst arrayBread = [\r\n    { id: \"view-1\", name: \"Intelligent models\" },\r\n    { id: \"view-2\", name: \"Intelligent models detail\" }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n}));\r\n\r\nconst DetailIntelligentModels: React.FC<DetailIntelligentModelsProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData }) => {\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const dataDomainStatus = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            type: 'NINGUNO',\r\n            id: row ? row.id : 0,\r\n            endpoint: row ? (row.endpoint || '') : '',\r\n            modelid: row ? (row.modelid || '') : '',\r\n            apikey: row ? (row.apikey || '') : '',\r\n            description: row ? (row.description || '') : '',\r\n            provider: row ? (row.provider || '') : '',\r\n            status: row ? row.status : 'ACTIVO',\r\n            operation: row ? \"EDIT\" : \"INSERT\"\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        register('type');\r\n        register('id');\r\n        register('endpoint', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('apikey', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('modelid');\r\n        register('description', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('provider', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n    }, [edit, register]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.intelligentmodels).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(insIntelligentModels(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={arrayBread}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.endpoint}` : t(langKeys.newintelligentmodel)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        {edit &&\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                startIcon={<SaveIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >{t(langKeys.save)}\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.endpoint)}\r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('endpoint', value)}\r\n                                valueDefault={row ? (row.endpoint || \"\") : \"\"}\r\n                                error={errors?.endpoint?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.endpoint)}\r\n                                value={row ? (row.endpoint || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.modelid)}\r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('modelid', value)}\r\n                                valueDefault={row ? (row.modelid || \"\") : \"\"}\r\n                                error={errors?.modelid?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.modelid)}\r\n                                value={row ? (row.modelid || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.apikey)}\r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('apikey', value)}\r\n                                valueDefault={row ? (row.apikey || \"\") : \"\"}\r\n                                error={errors?.apikey?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.apikey)}\r\n                                value={row ? (row.apikey || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.description)}\r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('description', value)}\r\n                                valueDefault={row ? (row.description || \"\") : \"\"}\r\n                                error={errors?.description?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.description)}\r\n                                value={row ? (row.description || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldEdit\r\n                                label={t(langKeys.provider)}\r\n                                className=\"col-6\"\r\n                                onChange={(value) => setValue('provider', value)}\r\n                                valueDefault={row ? (row.provider || \"\") : \"\"}\r\n                                error={errors?.provider?.message}\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.provider)}\r\n                                value={row ? (row.provider || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                label={t(langKeys.type)}\r\n                                className=\"col-6\"\r\n                                valueDefault={row ? (row.type || \"\") : \"\"}\r\n                                onChange={(value) => setValue('type', value ? value.domainvalue : 0)}\r\n                                error={errors?.type?.message}\r\n                                data={dataDomainStatus}\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.type)}\r\n                                value={row ? (row.type || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst IntelligentModels: FC = () => {\r\n    // const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'userid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.endpoint),\r\n                accessor: 'endpoint',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.modelid),\r\n                accessor: 'modelid',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.apikey),\r\n                accessor: 'apikey',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.provider),\r\n                accessor: 'provider',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.description),\r\n                accessor: 'description',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.type),\r\n                accessor: 'type',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getIntelligentModelsSel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"TIPOMODELO\"),\r\n        ]));\r\n\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.intelligentmodels).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insIntelligentModels({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.id })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            <TableZyx\r\n                onClickRow={handleEdit}\r\n                columns={columns}\r\n                titlemodule={t(langKeys.intelligentmodels, { count: 2 })}\r\n                data={mainResult.mainData.data}\r\n                download={true}\r\n                loading={mainResult.mainData.loading}\r\n                register={true}\r\n                handleRegister={handleRegister}\r\n            // fetchData={fetchData}\r\n            />\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailIntelligentModels\r\n                data={rowSelected}\r\n                setViewSelected={setViewSelected}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default IntelligentModels;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}