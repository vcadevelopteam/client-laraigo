{"version":3,"sources":["pages/ReportScheduler.tsx","../node_modules/@material-ui/icons/Add.js","components/fields/RichText.tsx"],"names":["useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","subtitle","fontWeight","fontSize","paddingBottom","subtitle2","button","marginRight","DetailReportScheduler","data","row","edit","setViewSelected","multiData","fetchData","arrayBread","t","useTranslation","dispatch","useDispatch","useState","filterjson","Object","entries","reduce","acc","key","value","filters","setfilters","classes","waitSave","setWaitSave","executeRes","useSelector","state","main","execute","origin","setOrigin","mailbodyobject","mailbody","bodyobject","setBodyobject","dataDomainStatus","success","dataReportSimpleAll","dataReportSimple","filter","x","dataRanges","JSON","parse","find","reportname","type","filterData","setfilterData","showError","setShowError","useForm","defaultValues","id","reportschedulerid","title","status","origintype","reportid","frecuency","group","schedule","datarange","mailto","mailcc","mailsubject","operation","register","handleSubmit","setValue","getValues","errors","formState","setValuefilter","field","i","p","map","index","useEffect","loading","error","errormessage","code","module","langKeys","domain","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","React","validate","length","field_required","validation","isemail","split","some","match","emailverification","resetMainAux","getCollectionAux","getDomainValueSel","domainname","onSubmit","renderToString","toElement","manageConfirmation","visible","question","confirmation_save","callback","filtertosend","accumulator","element","reportSchedulerIns","stringify","style","width","display","justifyContent","breadcrumbs","name","reportscheduler_singular","detail","handleClick","new","gap","alignItems","variant","color","startIcon","backgroundColor","onClick","cancel","className","save","reportschedulerdetail1","label","valueDefault","onChange","domainvalue","optionDesc","uset","prefixTranslation","optionValue","desc","report_plural","ticket_plural","campaign_plural","report","disabled","reporttype","defaulttype","proactivetype","endIcon","addfilter","columnname","paddingTop","e","deleteitem","periodicity","day","week","month","shippingschedule","shippingrange","reportschedulerdetail2","to","o","domaindesc","join","concat","subject","Fragment","lineHeight","mb","body","spellCheck","onlyurl","ReportScheduler","history","useHistory","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","user","login","validateToken","superadmin","includes","roledesc","reportscheduler","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","toLowerCase","toUpperCase","sent_plural","getCollection","getReportSchedulerSel","getMultiCollection","getValuesFromDomain","getReportschedulerreportsSel","resetAllMain","successful_delete","confirmation_delete","mainData","titlemodule","count","download","onClickRow","handleRegister","view","push","paths","CONFIGURATION","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d","EMOJISINDEXED","emojis","item","emojihex","ReactDomServer","root","children","hasOwnProperty","renderElement","isStatic","attributes","text","renderLeaf","leaf","LIST_TYPES","useRichTextStyles","toolbar","editable","height","overflowY","overflowX","direction","littleboxes","cursor","QuickResponseStyles","iconResponse","containerQuickReply","boxShadow","headerQuickReply","paddingLeft","QuickReply","quickReplies","editor","open","setOpen","quickRepliesToShow","setquickRepliesToShow","showSearch","setShowSearch","search","setSearch","ticketSelected","inbox","favorite","description","onClickAway","send_quickreply","arrow","placement","prev","position","bottom","fullWidth","autoFocus","placeholder","onBlur","target","InputProps","endAdornment","size","edge","component","disablePadding","maxHeight","insertText","quickreply","replace","ticketnum","displayname","firstname","lastname","handlerClickItem","primary","quickreplyid","EmojiPickerZyx","emojisIndexed","emojisNoShow","emojiFavorite","onSelect","icon","send_emoji","native","sheetSize","i18n","categories","search_result","recent","favorites","people","emoticons","nature","animals","foods","food","activity","activities","places","travel","objects","symbols","flags","undefined","emojisToShowFilter","emoji","indexOf","unified","TEXT_ALIGN_TYPES","RichText","refresh","image","positionEditable","endinput","emojiNoShow","boxProps","withImages","withHistory","withReact","createEditor","upload","uploadFile","selection","anchor","path","offset","focus","FontFamily","tooltip","FormatSizeMenu","MarkButton","format","TextColor","Alignment","BlockButton","OnlyURLInsertImageButton","flexDirection","i18nKey","loadingImage","marginLeft","borderTop","textAlign","align","StaticImage","Image","bold","italic","underline","fontfamily","fontFamily","fontsize","backgroundcolor","useSlate","marks","Editor","font","labelId","preventDefault","removeMark","addMark","toggleFontFamily","anchorEl","setAnchorEl","Boolean","handleClose","toggleFontSize","event","currentTarget","keepMounted","onClose","anchorOrigin","vertical","horizontal","transformOrigin","small","normal","large","huge","textalign","newProperties","isBlockActive","Transforms","setNodes","toggleAlignment","ColorBoxes","other","toggleBackgroundColor","toggleColor","marginBottom","textcolor","isMarkActive","blockType","Array","from","nodes","at","unhangRange","n","isEditor","SlateElement","isElement","active","toggleMark","isActive","isList","unwrapNodes","block","wrapNodes","toggleBlock","useInsertImageButtonStyles","rootPopup","paddingRight","rootTab","hidden","attachTab","useSlateStatic","url","setUrl","waitUploadFile","setWaitUploadFile","resetUploadFile","insertImage","clearUrl","useCallback","addNewUrlImage","isUrl","onMouseDown","MenuListProps","role","clsx","enterTheUrl","accept","src","insertNodes","next","endDummyElement","useImageStyles","img","maxWidth","btn","left","top","ReactEditor","findPath","selected","useSelected","focused","useFocused","contentEditable","alt","insertData","isVoid","getData","files","file","reader","FileReader","addEventListener","result","readAsDataURL","test"],"mappings":"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","file":"static/js/75.eb3af492.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { TemplateIcons, TemplateBreadcrumbs, FieldEdit, FieldSelect, TitleDetail, FieldMultiSelectEmails } from 'components';\r\nimport { getDomainValueSel, getReportSchedulerSel, getValuesFromDomain, reportSchedulerIns , getReportschedulerreportsSel} from 'common/helpers';\r\nimport { Dictionary, MultiData } from \"@types\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getCollection, getMultiCollection, execute, getCollectionAux, resetMainAux, resetAllMain } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport paths from 'common/constants/paths';\r\nimport Box from '@material-ui/core/Box';\r\nimport { IconButton } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Descendant } from 'slate';\r\nimport { RichText, renderToString, toElement } from 'components/fields/RichText';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null;\r\n    domainname: string | \"\";\r\n    edit: boolean;\r\n}\r\n\r\ninterface DetailProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData?: () => void;\r\n    arrayBread: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    subtitle: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"20px\",\r\n        paddingBottom: \"10px\",\r\n    },\r\n    subtitle2: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"15px\",\r\n        paddingBottom: \"10px\",\r\n    },\r\n    button: {\r\n        marginRight: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nconst DetailReportScheduler: React.FC<DetailProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData,arrayBread }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [filters, setfilters] = useState<any[]>(row?.filterjson ? Object.entries(row.filterjson).reduce((acc:any,[key,value]) => [...acc, {\"filter\": key, \"value\": value} ] ,[]): [])\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const [origin, setOrigin] = useState(row?.origin || '');\r\n    const [bodyobject, setBodyobject] = useState<Descendant[]>(row?.mailbodyobject || [{ \"type\": \"paragraph\", \"children\": [{ \"text\": row?.mailbody || \"\" }] }])\r\n    const dataDomainStatus = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const dataReportSimpleAll = multiData[1] && multiData[1].success ? multiData[1].data: [];\r\n    const dataReportSimple = dataReportSimpleAll.filter(x=>x.origin !== \"TICKET\") \r\n    const dataRanges = multiData[2] && multiData[2].success ? multiData[2].data : [];\r\n    const [filterData, setfilterData] = useState(origin===\"TICKET\"?JSON.parse(dataReportSimpleAll.filter(x=>x.origin===\"TICKET\")?.[0].filterjson|| \"[]\"):JSON.parse(dataReportSimple.find(x=>(x.reportname===(row?.reportname)))?.filterjson|| \"[]\").filter((x:any)=>x.type!==\"timestamp without time zone\"));\r\n    const [showError, setShowError] = useState(\"\");\r\n\r\n    const { register, handleSubmit, setValue, getValues, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            id: row?.reportschedulerid || 0,\r\n            title: row?.title || '',\r\n            status: row?.status || 'ACTIVO',\r\n            origin: row?.origin || '',\r\n            origintype: row?.origintype || '',\r\n            reportid: row?.reportid || 0,\r\n            reportname: row?.reportname || '',\r\n            filterjson: row?.filterjson || '',\r\n            frecuency: row?.frecuency || '',\r\n            group: row?.group || \"\",\r\n            schedule: row?.schedule || \"\",\r\n            datarange: row?.datarange || \"\",\r\n            mailto: row?.mailto || \"\",\r\n            mailcc: row?.mailcc || \"\",\r\n            mailsubject: row?.mailsubject || \"\",\r\n            mailbody: row?.mailbody || \"\",\r\n            operation: row ? \"EDIT\" : \"INSERT\",\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\");\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.domain).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    React.useEffect(() => {\r\n        register('id');\r\n        register('title', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('origin', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('origintype');\r\n        register('reportname', { validate: (value) => (getValues(\"origin\") ===\"REPORT\" || getValues(\"origin\") ===\"CAMPAIGN\") ? (value && value.length) || t(langKeys.field_required) : true });\r\n        register('frecuency', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        //register('group', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('schedule', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('datarange', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('mailto', { validate: {\r\n            validation: (value) => (value && value.length) || t(langKeys.field_required) ,\r\n            isemail: (value)=> (value.split(\",\").some((x:any)=>x.match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g))) || t(langKeys.emailverification) \r\n        }});\r\n        register('mailcc', { validate: {\r\n            isemail: (value)=> value?(value.split(\",\").some((x:any)=>x.match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g))) || t(langKeys.emailverification) : true\r\n        }});\r\n        register('mailsubject', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n\r\n        dispatch(resetMainAux());\r\n        dispatch(getCollectionAux(getDomainValueSel((row?.domainname || \"\"))));\r\n    }, [register]);\r\n\r\n    function addfilter() {\r\n        setfilters((p) => [...p, { filter: \"\", value: \"\" }])\r\n    }\r\n    function deleteitem(i: number) {\r\n        setfilters(filters.filter((e, index) => index !== i))\r\n\r\n    }\r\n    function setValuefilter(field: string, value: string, i: number) {\r\n        setfilters((p: Dictionary[]) => p.map((x, index) => index === i ? { ...x, [field]: value } : x))\r\n    }\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        data.mailbody = renderToString(toElement(bodyobject));\r\n        if (data.mailbody === `<div data-reactroot=\"\"><p><span></span></p></div>`) {\r\n            setShowError(t(langKeys.field_required));\r\n            return\r\n        }\r\n\r\n        setShowError(\"\");\r\n\r\n        const callback = () => {\r\n            data.mailbody = renderToString(toElement(bodyobject));\r\n            if (data.mailbody === '<div data-reactroot=\"\"><p><span></span></p></div>')\r\n                return;\r\n                \r\n            const filtertosend = filters.reduce((accumulator, element) => {\r\n                return {...accumulator, [element.filter]: element.value};\r\n              }, {});\r\n            \r\n            dispatch(execute(reportSchedulerIns({ ...data, filterjson: JSON.stringify(filtertosend), mailbodyobject: bodyobject })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n    \r\n    return (\r\n        <div style={{width: \"100%\"}}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread,{ id: \"view-2\", name: `${t(langKeys.reportscheduler_singular)} ${t(langKeys.detail)}` }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={edit ? (row ? `${row.title}` : `${t(langKeys.new)} ${t(langKeys.reportscheduler_singular)}`) : `${t(langKeys.new)} ${t(langKeys.reportscheduler_singular)}`}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}>\r\n                            {t(langKeys.cancel)}\r\n                        </Button>\r\n                        {edit &&\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                startIcon={<SaveIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#55BD84\" }}>\r\n                                {t(langKeys.save)}\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className={classes.subtitle}>{t(langKeys.reportschedulerdetail1)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.title)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.title || \"\"}\r\n                            onChange={(value) => setValue('title', value)}\r\n                            error={errors?.title?.message}\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.status)}\r\n                            className=\"col-6\"\r\n                            valueDefault={row?.status || \"ACTIVO\"}\r\n                            onChange={(value) => setValue('status', value?.domainvalue || '')}\r\n                            error={errors?.status?.message}\r\n                            data={dataDomainStatus}\r\n                            optionDesc=\"domaindesc\"\r\n                            uset={true}\r\n                            prefixTranslation=\"status_\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        {/* {value:\"DASHBOARD\", desc: t(langKeys.dashboard)},*/ }\r\n                        <FieldSelect\r\n                            label={t(langKeys.origin)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"origin\")}\r\n                            onChange={(value) =>{ \r\n                                setOrigin(value?.value || '');\r\n                                setValue('origin', value?.value || '')\r\n                                setfilterData([])\r\n                                if(value?.value===\"TICKET\"){\r\n                                    setfilterData(JSON.parse(dataReportSimpleAll.filter(x=>x.origin===\"TICKET\")?.[0].filterjson|| \"[]\"))\r\n                                }\r\n                                if(value?.value!==\"REPORT\"){\r\n                                    setfilters([])\r\n                                }\r\n                            }}\r\n                            error={errors?.origin?.message}\r\n                            data={[\r\n                                {value:\"REPORT\", desc: t(langKeys.report_plural)},\r\n                                {value:\"TICKET\", desc: t(langKeys.ticket_plural)},\r\n                                {value:\"CAMPAIGN\", desc: t(langKeys.campaign_plural)},\r\n                            ]}\r\n                            optionDesc=\"desc\"\r\n                            optionValue=\"value\"\r\n                        />\r\n                        {!((origin!==\"REPORT\") && (origin!==\"DASHBOARD\")) && <FieldSelect\r\n                            label={t(langKeys.report)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"reportname\")}\r\n                            onChange={(value) => {\r\n                                setValue('reportname', value?.reportname || '')\r\n                                setValue('origintype', value?.origintype || '')\r\n                                setValue('reportid', value?.reportid || 0)\r\n                                setfilterData(JSON.parse(value?.filterjson || \"[]\").filter((x:any)=>x.type!==\"timestamp without time zone\"))\r\n                                setfilters([])\r\n                            }}\r\n                            error={errors?.reportname?.message}\r\n                            disabled={(origin!==\"REPORT\") && (origin!==\"DASHBOARD\")}\r\n                            data={dataReportSimple}\r\n                            optionDesc=\"reportname\"\r\n                            optionValue=\"reportname\"\r\n                            uset={true}\r\n                            prefixTranslation=\"\"\r\n                        />}\r\n                        {!((origin!==\"CAMPAIGN\") && (origin!==\"DASHBOARD\")) && <FieldSelect\r\n                            label={t(langKeys.reporttype)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"reportname\")}\r\n                            onChange={(value) => {\r\n                                setValue('reportname', value?.value || '');\r\n                                setValue('origintype', 'STANDARD');\r\n                                setValue('reportid', 0);\r\n                                setfilterData(JSON.parse(\"[]\").filter((x:any)=>x.type!==\"timestamp without time zone\"))\r\n                                setfilters([])\r\n                            }}\r\n                            error={errors?.reportname?.message}\r\n                            disabled={(origin!==\"CAMPAIGN\") && (origin!==\"DASHBOARD\")}\r\n                            data={[\r\n                                {value: \"DEFAULT\", desc: t(langKeys.defaulttype)},\r\n                                {value: \"PROACTIVE\", desc: t(langKeys.proactivetype)},\r\n                            ]}\r\n                            optionDesc=\"desc\"\r\n                            optionValue=\"value\"\r\n                        />}\r\n                    </div>\r\n                    {((filterData && filters) && (filterData.length > 0)) &&<div className=\"row-zyx\">\r\n                        \r\n                        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                            <div className={classes.subtitle2}>{t(langKeys.filters)}</div>\r\n                            <div>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    endIcon={<AddIcon style={{ color: \"#deac32\" }} />}\r\n                                    style={{ backgroundColor: \"#6c757d\" }}\r\n                                    onClick={() => addfilter()}\r\n                                >{t(langKeys.addfilter)}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        {filters.map((x,i)=> (\r\n                            <div className=\"row-zyx\" key={i}>                                \r\n                                <FieldSelect\r\n                                    label={t(langKeys.filter)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={x?.filter || \"\"}\r\n                                    onChange={(value) => {\r\n                                        setValuefilter('filter', value.columnname, i)\r\n                                    }}\r\n                                    data={filterData}\r\n                                    optionDesc=\"columnname\"\r\n                                    optionValue=\"columnname\"\r\n                                    uset={true}\r\n                                    prefixTranslation=\"personalizedreport_\"\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.value)}\r\n                                    className=\"col-5\"\r\n                                    valueDefault={x?.value || \"\"}\r\n                                    onChange={(value) => setValuefilter('value', value, i)}\r\n                                />                                \r\n                                <div className=\"col-1\" style={{ paddingTop: \"15px\" }}>\r\n                                    <IconButton aria-label=\"delete\" onClick={() => deleteitem(i)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>}\r\n                    <div className=\"row-zyx\">\r\n                        <FieldSelect\r\n                            label={t(langKeys.periodicity)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"frecuency\")}\r\n                            onChange={(value) => setValue('frecuency', value?.value || '')}\r\n                            error={errors?.frecuency?.message}\r\n                            data={[\r\n                                {value:\"DAY\", desc: t(langKeys.day)},\r\n                                {value:\"WEEK\", desc: t(langKeys.week)},\r\n                                {value:\"MONTH\", desc: t(langKeys.month)},\r\n                            ]}\r\n                            optionDesc=\"desc\"\r\n                            optionValue=\"value\"\r\n                        />\r\n                        {\r\n                            /*<FieldSelect\r\n                            label={t(langKeys.group)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"group\")}\r\n                            onChange={(value) => setValue('group', value?.value || '')}\r\n                            error={errors?.group?.message}\r\n                            data={[\r\n                                {value:\"day\", desc: t(langKeys.day)},\r\n                                {value:\"week\", desc: t(langKeys.week)},\r\n                                {value:\"month\", desc: t(langKeys.month)},\r\n                            ]}\r\n                            optionDesc=\"desc\"\r\n                            optionValue=\"value\"\r\n                        />*/}\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.shippingschedule)}\r\n                            className=\"col-6\"\r\n                            type=\"time\"\r\n                            valueDefault={getValues(\"schedule\")}\r\n                            onChange={(value) => setValue('schedule', value)}\r\n                            error={errors?.schedule?.message}\r\n                        />\r\n                        <FieldSelect\r\n                            label={t(langKeys.shippingrange)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues(\"datarange\")}\r\n                            onChange={(value) => setValue('datarange', value?.domainvalue || '')}\r\n                            error={errors?.datarange?.message}\r\n                            data={dataRanges}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                            uset={true}\r\n                            prefixTranslation=\"datarange_\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className={classes.subtitle}>{t(langKeys.reportschedulerdetail2)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldMultiSelectEmails\r\n                            label={t(langKeys.to)}\r\n                            className=\"col-12\"\r\n                            valueDefault={getValues(\"mailto\")}\r\n                            onChange={(value: ({domaindesc: string} | string)[]) => {\r\n                                const mailto = value.map((o: any) => o.domaindesc || o).join();\r\n                                setValue('mailto', mailto);\r\n                            }}\r\n                            data={[].concat(getValues('mailto').split(',').filter((i: any) => i !== '').map((domaindesc: any) => ({ domaindesc })))}\r\n                            optionValue={\"domaindesc\"}\r\n                            optionDesc={\"domaindesc\"}\r\n                            error={errors?.mailto?.message}\r\n                            loading={false}\r\n                        />\r\n                        <FieldMultiSelectEmails\r\n                            label={\"Cc\"}\r\n                            className=\"col-12\"\r\n                            valueDefault={getValues(\"mailcc\")}\r\n                            onChange={(value: ({domaindesc: string} | string)[]) => {\r\n                                const mailcc = value.map((o: any) => o.domaindesc || o).join();\r\n                                setValue('mailcc', mailcc);\r\n                            }}\r\n                            data={[].concat(getValues('mailcc').split(',').filter((i: any) => i !== '').map((domaindesc: any) => ({ domaindesc })))}\r\n                            optionValue={\"domaindesc\"}\r\n                            optionDesc={\"domaindesc\"}\r\n                            error={errors?.mailcc?.message}\r\n                            loading={false}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.subject)}\r\n                            className=\"col-12\"\r\n                            valueDefault={row?.mailsubject || \"\"}\r\n                            onChange={(value) => setValue('mailsubject', value)}\r\n                            error={errors?.mailsubject?.message}\r\n                        />\r\n                        <div className=\"row-zyx\">\r\n                            <React.Fragment>\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">{t(langKeys.body)}</Box>\r\n                                <RichText\r\n                                    value={bodyobject}\r\n                                    onChange={(value) => {\r\n                                        setBodyobject(value)\r\n                                    }}\r\n                                    spellCheck\r\n                                    onlyurl={true}\r\n                                />\r\n                            </React.Fragment>\r\n                        </div>\r\n                        <FieldEdit\r\n                            label={''}\r\n                            className=\"col-12\"\r\n                            valueDefault={''}\r\n                            error={showError}\r\n                            disabled={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ReportScheduler: FC = () => {\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, domainname: \"\", edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const superadmin = [\"SUPERADMIN\",\"ADMINISTRADOR\",\"ADMINISTRADOR P\"].includes(user?.roledesc || '');\r\n\r\n    const arrayBread = [\r\n        { id: \"view-1\", name: t(langKeys.reportscheduler) },\r\n    ];\r\n    function redirectFunc(view:string){\r\n        if(view ===\"view-0\"){\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'reportschedulerid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.name),\r\n                accessor: 'title',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n            {\r\n                Header: `${t(langKeys.report_plural)} ${t(langKeys.sent_plural)}`,\r\n                accessor: 'reportname',\r\n                NoFilter: true,\r\n                Cell: (props: any) => {\r\n                    const { reportname, origin } = props.cell.row.original;\r\n                    return (t(`${reportname ? (origin === \"CAMPAIGN\" ? `${origin}_${reportname}` : reportname) : origin}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getReportSchedulerSel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"ESTADOGENERICO\"),\r\n            getReportschedulerreportsSel(),\r\n            getValuesFromDomain(\"REPORTEAUTOMATICORANGO\"),\r\n        ]));\r\n\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.domain).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, domainname: \"\", edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, domainname: row.domainname, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, domainname: row.domainname, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(reportSchedulerIns({ ...row, id: row.reportschedulerid ,operation: 'DELETE', status: 'ELIMINADO' })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        if (mainResult.mainData.error) {\r\n            return <h1>ERROR</h1>;\r\n        }\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.reportscheduler, { count: 2 })}\r\n                    data={mainResult.mainData.data}\r\n                    download={false}\r\n                    onClickRow={handleEdit}\r\n                    loading={mainResult.mainData.loading}\r\n                    register={superadmin}\r\n                    handleRegister={handleRegister}\r\n            />\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n        return (\r\n            <DetailReportScheduler\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n}\r\n\r\nexport default ReportScheduler;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Box, BoxProps, IconButton, IconButtonProps, Menu, TextField, Toolbar, makeStyles, Button, InputAdornment, Tabs, FormHelperText, CircularProgress, Tooltip, SelectProps, FormControl, Select, MenuItem, ClickAwayListener, Divider } from '@material-ui/core';\r\nimport {\r\n    FormatBold as FormatBoldIcon,\r\n    FormatItalic as FormatItalicIcon,\r\n    FormatUnderlined as FormatUnderlinedIcon,\r\n    Code as FormatCodeIcon,\r\n    LooksOne as FormatLooksOneIcon,\r\n    LooksTwo as FormatLooksTwoIcon,\r\n    FormatQuote as FormatQuoteIcon,\r\n    FormatListNumbered as FormatListNumberedIcon,\r\n    FormatListBulleted as FormatListBulletedIcon,\r\n    InsertPhoto as InsertPhotoIcon,\r\n    Delete as DeleteIcon,\r\n    Close as CloseIcon,\r\n    FormatSize as FormatSizeIcon,\r\n    Check as CheckIcon,\r\n    FormatColorText as FormatColorTextIcon,\r\n    FormatAlignRight as FormatAlignRightIcon,\r\n    FormatAlignCenter as FormatAlignCenterIcon,\r\n    EmojiEmotions as EmojiEmotionsIcon,\r\n    FormatAlignLeft as FormatAlignLeftIcon,\r\n} from '@material-ui/icons';\r\nimport { emojis } from \"common/constants/emojis\";\r\nimport React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { createEditor, BaseEditor, Descendant, Transforms, Editor, Element as SlateElement } from 'slate';\r\nimport { Slate, Editable, withReact, ReactEditor, useSlate, useSlateStatic, useSelected, useFocused } from 'slate-react';\r\nimport { withHistory } from 'slate-history';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport ReactDomServer from 'react-dom/server';\r\nimport { AntTab } from 'components';\r\nimport clsx from 'clsx';\r\nimport { useSelector } from 'hooks';\r\nimport { resetUploadFile, uploadFile } from 'store/main/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { ArrowDropDownIcon, QuickresponseIcon, SearchIcon } from 'icons';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Dictionary } from '@types';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst EMOJISINDEXED = emojis.reduce((acc: any, item: any) => ({ ...acc, [item.emojihex]: item }), {});\r\n\r\nexport const renderToString = (element: React.ReactElement) => {\r\n    return ReactDomServer.renderToString(element);\r\n}\r\n\r\nexport const toElement = (value: Descendant[], root: FC = ({ children }) => <div>{children}</div>): React.ReactElement => {\r\n    let children: React.ReactNode[] = [];\r\n\r\n    for (const item of value) {\r\n        if (item.hasOwnProperty('type') && item.hasOwnProperty('children')) {\r\n            const element = item as CustomElement;\r\n            children.push(toElement(\r\n                element.children,\r\n                ({ children }) => renderElement({\r\n                    element,\r\n                    children,\r\n                    isStatic: true,\r\n                    attributes: { key: element },\r\n                }),\r\n            ));\r\n        } else {\r\n            const text = item as CustomText;\r\n            children.push(renderLeaf({\r\n                leaf: text,\r\n                text: text,\r\n                children: text.text,\r\n                attributes: { key: text },\r\n            }));\r\n        }\r\n    }\r\n\r\n    return root({ children })!;\r\n}\r\n\r\nconst LIST_TYPES = ['bulleted-list', 'numbered-list'];\r\ntype ElemetType = 'paragraph' | 'block-quote' | 'heading-one' | 'heading-two' | 'list-item' | 'bulleted-list' | 'numbered-list' | 'image-src' | \"alignment\";\r\ninterface CustomElement extends Object {\r\n    type: ElemetType;\r\n    children: CustomElement[] | CustomText[];\r\n    url?: string | null;\r\n    align: \"left\" | \"center\" | \"right\";\r\n}\r\n\r\ninterface CustomText extends Object {\r\n    text: string;\r\n    bold?: boolean;\r\n    italic?: boolean;\r\n    fontfamily?: string;\r\n    textalign?: string;\r\n    fontsize?: string;\r\n    color?: string;\r\n    backgroundcolor?: string;\r\n    code?: boolean;\r\n    underline?: boolean;\r\n}\r\n\r\ndeclare module 'slate' {\r\n    interface CustomTypes {\r\n        Editor: BaseEditor & ReactEditor;\r\n        Element: CustomElement;\r\n        Text: CustomText;\r\n    }\r\n}\r\n\r\ninterface RichTextProps extends Omit<BoxProps, 'onChange'> {\r\n    placeholder?: string;\r\n    spellCheck?: boolean;\r\n    value: Descendant[];\r\n    error?: string;\r\n    onChange: (value: Descendant[]) => void;\r\n    onlyurl?: boolean;\r\n    image?: Boolean;\r\n    children?: React.ReactNode;\r\n    endinput?: React.ReactNode;\r\n    positionEditable?: 'top' | 'bottom';\r\n    refresh?: number;\r\n    emojiNoShow?: any;\r\n    emojiFavorite?: any;\r\n    emoji?: Boolean;\r\n    quickReplies?: any[];\r\n}\r\n\r\ninterface RenderElementProps {\r\n    attributes?: any;\r\n    children: React.ReactNode;\r\n    element: CustomElement;\r\n    isStatic?: boolean;\r\n}\r\n\r\ninterface RenderLeafProps {\r\n    attributes?: any;\r\n    children: React.ReactNode;\r\n    leaf: Omit<CustomText, 'text'>;\r\n    text: CustomText;\r\n}\r\n\r\ntype RenderElement = (props: RenderElementProps) => JSX.Element;\r\ntype RenderLeaf = (props: RenderLeafProps) => JSX.Element;\r\ntype StaticRenderElement = (props: { element: CustomElement, children: any }) => JSX.Element;\r\n\r\nconst useRichTextStyles = makeStyles(theme => ({\r\n    toolbar: {\r\n        padding: 0,\r\n        width: \"100%\"\r\n    },\r\n    editable: {\r\n        height: 200,\r\n        overflowY: \"scroll\",\r\n        overflowX: \"hidden\",\r\n        width: \"100%\",\r\n        direction: \"ltr\",\r\n    },\r\n    littleboxes: {\r\n        cursor: \"pointer\",\r\n        marginRight: 1,\r\n        width: 16,\r\n        height: 16\r\n    }\r\n}));\r\n\r\ninterface EmojiPickerZyxProps {\r\n    emojisIndexed?: Dictionary[];\r\n    emojisNoShow?: string[];\r\n    emojiFavorite?: string[];\r\n    onSelect: (e: any) => void;\r\n    style?: React.CSSProperties;\r\n    icon?: (onClick: () => void) => React.ReactNode;\r\n}\r\nconst QuickResponseStyles = makeStyles((theme) => ({\r\n    iconResponse: {\r\n        //cursor: 'pointer',\r\n        //poisition: 'relative',\r\n        color: '#2E2C34',\r\n        //'&:hover': {\r\n        //    // color: theme.palette.primary.main,\r\n        //    backgroundColor: '#EBEAED',\r\n        //    borderRadius: 4\r\n        //}\r\n    },\r\n    containerQuickReply: {\r\n        boxShadow: '0px 3px 6px rgb(0 0 0 / 10%)',\r\n        backgroundColor: '#FFF',\r\n        width: 250,\r\n    },\r\n    headerQuickReply: {\r\n        fontSize: 14,\r\n        fontWeight: 500,\r\n        padding: theme.spacing(1),\r\n        paddingLeft: theme.spacing(1.5),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n}));\r\n\r\ninterface QuickReplyProps {\r\n    quickReplies: any[];\r\n    editor: BaseEditor & ReactEditor;\r\n}\r\n\r\nexport const QuickReply: React.FC<QuickReplyProps> = ({ quickReplies, editor}) => {\r\n    const classes = QuickResponseStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [quickRepliesToShow, setquickRepliesToShow] = useState<Dictionary[]>([])\r\n    const handleClick = () => setOpen((prev) => !prev);\r\n    const [showSearch, setShowSearch] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const { t } = useTranslation();\r\n    const ticketSelected = useSelector(state => state.inbox.ticketSelected);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n\r\n    const handleClickAway = () => setOpen(false);\r\n\r\n    useEffect(() => {\r\n        if (search === \"\") {\r\n            setquickRepliesToShow(quickReplies.filter(x => !!x.favorite))\r\n        } else {\r\n            setquickRepliesToShow(quickReplies.filter(x => x.description.toLowerCase().includes(search.toLowerCase())))\r\n        }\r\n    }, [search, quickReplies])\r\n\r\n    const handlerClickItem = (item: Dictionary) => {\r\n        setOpen(false);\r\n        editor.insertText(item.quickreply\r\n            .replace(\"{{numticket}}\", ticketSelected?.ticketnum)\r\n            .replace(\"{{client_name}}\", ticketSelected?.displayname)\r\n            .replace(\"{{agent_name}}\", user?.firstname + \" \" + user?.lastname)\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ClickAwayListener onClickAway={handleClickAway}>\r\n            <span>\r\n                <Tooltip title={t(langKeys.send_quickreply) + \"\"} arrow placement=\"top\">\r\n                    <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                        >\r\n                        <QuickresponseIcon className={classes.iconResponse}/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                {open && (\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        bottom: 60\r\n                    }}>\r\n                        <div className={classes.containerQuickReply}>\r\n                            <div>\r\n                                {!showSearch ?\r\n                                    <div className={classes.headerQuickReply}>\r\n                                        <div >User Quick Response</div>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            onClick={() => setShowSearch(true)} edge=\"end\"\r\n                                        >\r\n                                            <SearchIcon />\r\n                                        </IconButton>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    <TextField\r\n                                        color=\"primary\"\r\n                                        fullWidth\r\n                                        autoFocus\r\n                                        placeholder=\"Search quickreplies\"\r\n                                        style={{ padding: '6px 6px 6px 12px' }}\r\n                                        onBlur={() => !search && setShowSearch(false)}\r\n                                        onChange={e => setSearch(e.target.value)}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton size=\"small\">\r\n                                                        <SearchIcon />\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                            )\r\n                                        }}\r\n                                    />\r\n                                }\r\n                            </div>\r\n                            <Divider />\r\n                            <List component=\"nav\" disablePadding style={{ maxHeight: 200, overflowY: 'overlay' as any }}>\r\n                                {quickRepliesToShow.map((item) => (\r\n                                    <ListItem\r\n                                        button\r\n                                        key={item.quickreplyid}\r\n                                        onClick={() => handlerClickItem(item)}\r\n                                    >\r\n                                        <Tooltip title={item.quickreply} arrow placement=\"top\">\r\n                                            <ListItemText primary={item.description} />\r\n                                        </Tooltip>\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </span>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\nexport const EmojiPickerZyx: React.FC<EmojiPickerZyxProps> = ({ emojisIndexed, emojisNoShow = [], emojiFavorite = [], onSelect, icon }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClick = () => setOpen((prev) => !prev);\r\n    const { t } = useTranslation();\r\n    const handleClickAway = () => setOpen(false);\r\n    return (\r\n        <ClickAwayListener onClickAway={handleClickAway}>\r\n            <span >\r\n                {icon?.(handleClick) || (\r\n                    <Tooltip title={t(langKeys.send_emoji) + \"\"} arrow placement=\"top\">\r\n                        <IconButton\r\n                            aria-label=\"more\"\r\n                            aria-controls=\"long-menu\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleClick}\r\n                        >\r\n                            <EmojiEmotionsIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                )}\r\n                {open && (\r\n                    <div style={{\r\n                        position: 'absolute',\r\n                        bottom: 100\r\n                    }}>\r\n                        <Picker\r\n                            onSelect={(e) => { setOpen(false); onSelect(e) }}\r\n                            native={true}\r\n                            sheetSize={32}\r\n                            i18n={{\r\n                                search: t(langKeys.search),\r\n                                categories: {\r\n                                    search: t(langKeys.search_result),\r\n                                    recent: t(langKeys.favorites),\r\n                                    people: t(langKeys.emoticons),\r\n                                    nature: t(langKeys.animals),\r\n                                    foods: t(langKeys.food),\r\n                                    activity: t(langKeys.activities),\r\n                                    places: t(langKeys.travel),\r\n                                    objects: t(langKeys.objects),\r\n                                    symbols: t(langKeys.symbols),\r\n                                    flags: t(langKeys.flags),\r\n                                }\r\n                            }}\r\n                            recent={emojiFavorite.length > 0 ? emojiFavorite?.map(x => (EMOJISINDEXED as Dictionary)?.[x || \"\"]?.id || '') : undefined}\r\n                            emojisToShowFilter={emojisNoShow && emojisNoShow.length > 0 ? (emoji: any) => emojisNoShow.map(x => x.toUpperCase()).indexOf(emoji.unified.toUpperCase()) === -1 : undefined}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </span>\r\n        </ClickAwayListener>\r\n    )\r\n}\r\n\r\nconst TEXT_ALIGN_TYPES = ['left', 'center', 'right', 'justify']\r\n\r\n/**TODO: Validar que la URL de la imagen sea valida en el boton de insertar imagen */\r\nexport const RichText: FC<RichTextProps> = ({ value, refresh = 0, onChange, placeholder, image = true, spellCheck, error, positionEditable = \"bottom\", children, onlyurl = false\r\n    , endinput, emojiNoShow, emojiFavorite, emoji = false,quickReplies=[], ...boxProps }) => {\r\n    const classes = useRichTextStyles();\r\n    // Create a Slate editor object that won't change across renders.\r\n    const editor = useMemo(() => withImages(withHistory(withReact(createEditor()))), []);\r\n    const upload = useSelector(state => state.main.uploadFile);\r\n    // const [valueg, setvalueg] = useState(value)\r\n\r\n    useEffect(() => {\r\n        //evitar q en cada cmbio re-renderice, solo en casos q el componente q llama lo requiera (ejemplo replypanel)\r\n        if (editor?.children) {\r\n            editor.selection = {\r\n                anchor: { path: [0, 0], offset: 0 },\r\n                focus: { path: [0, 0], offset: 0 },\r\n            };\r\n            editor.children = value;\r\n        }\r\n    }, [refresh])\r\n\r\n    return (\r\n        <Box {...boxProps}>\r\n            <Slate editor={editor} value={value} onChange={onChange} >\r\n                {positionEditable === \"top\" &&\r\n                <div\r\n                className={classes.editable}>\r\n\r\n                    <Editable\r\n                        placeholder={placeholder}\r\n                        renderElement={renderElement}\r\n                        renderLeaf={renderLeaf}\r\n                        spellCheck={spellCheck}\r\n                    />\r\n                </div>\r\n                }\r\n                <Toolbar className={classes.toolbar}>\r\n                    <div>\r\n                        <div style={{ display: \"inline-block\" }}>\r\n                            {children}\r\n                        </div>\r\n                        <FontFamily tooltip='font'></FontFamily>\r\n                        <FormatSizeMenu tooltip='size'></FormatSizeMenu>\r\n                        {quickReplies.length > 0 && (\r\n                            <QuickReply quickReplies={quickReplies} editor={editor}></QuickReply>\r\n                        )}\r\n                        {emoji && <EmojiPickerZyx emojisIndexed={EMOJISINDEXED} onSelect={e => editor.insertText(e.native)} emojisNoShow={emojiNoShow} emojiFavorite={emojiFavorite} />}\r\n                        <MarkButton format=\"bold\" tooltip='bold'>\r\n                            <FormatBoldIcon />\r\n                        </MarkButton>\r\n                        <MarkButton format=\"italic\" tooltip='italic'>\r\n                            <FormatItalicIcon />\r\n                        </MarkButton>\r\n                        <MarkButton format=\"underline\" tooltip='underline'>\r\n                            <FormatUnderlinedIcon />\r\n                        </MarkButton>\r\n\r\n                        <TextColor tooltip='size'></TextColor>\r\n                        <Alignment tooltip='alignment'></Alignment>\r\n\r\n                        <BlockButton format=\"numbered-list\" tooltip='numbered_list'>\r\n                            <FormatListNumberedIcon />\r\n                        </BlockButton>\r\n                        <BlockButton format=\"bulleted-list\" tooltip='bulleted_list'>\r\n                            <FormatListBulletedIcon />\r\n                        </BlockButton>\r\n\r\n                        <MarkButton format=\"code\" tooltip='code'>\r\n                            <FormatCodeIcon />\r\n                        </MarkButton>\r\n                        <BlockButton format=\"heading-one\" tooltip='heading_one'>\r\n                            <FormatLooksOneIcon />\r\n                        </BlockButton>\r\n                        <BlockButton format=\"heading-two\" tooltip='heading_two'>\r\n                            <FormatLooksTwoIcon />\r\n                        </BlockButton>\r\n                        <BlockButton format=\"block-quote\" tooltip='block_quote'>\r\n                            <FormatQuoteIcon />\r\n                        </BlockButton>\r\n                        {(image && onlyurl) &&\r\n                                <OnlyURLInsertImageButton>\r\n                                    <InsertPhotoIcon />\r\n                                </OnlyURLInsertImageButton>\r\n                        }\r\n                        {\r\n                            /*<InsertImageButton>\r\n                            <InsertPhotoIcon />\r\n                        </InsertImageButton> */\r\n                        }\r\n                        {upload.loading && (\r\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: 8 }}>\r\n                                <CircularProgress size={24} />\r\n                                <span><strong><Trans i18nKey={langKeys.loadingImage} />...</strong></span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\r\n                        {endinput}\r\n                    </div>\r\n                </Toolbar>\r\n                {positionEditable !== \"top\" &&\r\n                    <Editable\r\n                        placeholder={placeholder}\r\n                        renderElement={renderElement}\r\n                        renderLeaf={renderLeaf}\r\n                        spellCheck={spellCheck}\r\n                        style={{borderTop: \"1.5px dotted #949494\"}}\r\n                    />\r\n                }\r\n            </Slate>\r\n            {error && error !== '' && <FormHelperText error>{error}</FormHelperText>}\r\n        </Box >\r\n    );\r\n}\r\n\r\n/**Renderiza el texto seleccionado con cierto estilo */\r\nconst renderElement: RenderElement = ({ attributes = {}, children, element, isStatic = false }) => {\r\n    const style = { textAlign: element.align }\r\n    switch (element.type) {\r\n        case 'block-quote':\r\n            return <blockquote style={style} {...attributes}>{children}</blockquote>;\r\n        case 'bulleted-list':\r\n            return <ul style={style} {...attributes}>{children}</ul>;\r\n        case 'heading-one':\r\n            return <h1 style={style} {...attributes}>{children}</h1>;\r\n        case 'heading-two':\r\n            return <h2 style={style} {...attributes}>{children}</h2>;\r\n        case 'list-item':\r\n            return <li style={style} {...attributes}>{children}</li>;\r\n        case 'numbered-list':\r\n            return <ol style={style} {...attributes}>{children}</ol>;\r\n        case 'image-src':\r\n            if (isStatic === true) return <StaticImage element={element} children={children} />;\r\n            return <Image element={element} attributes={attributes} children={children} />;\r\n        default:\r\n            // element.type: paragraph\r\n            return <p style={style} {...attributes}>{children}</p>;\r\n    }\r\n}\r\n\r\n/**Renderiza el texto seleccionado con cierto formato */\r\nconst renderLeaf: RenderLeaf = ({ attributes = {}, children, leaf }) => {\r\n\r\n    if (leaf.bold === true) {\r\n        children = <strong>{children}</strong>;\r\n    }\r\n    if (leaf.code === true) {\r\n        children = <code>{children}</code>;\r\n    }\r\n    if (leaf.italic === true) {\r\n        children = <em>{children}</em>;\r\n    }\r\n    if (leaf.underline === true) {\r\n        children = <u>{children}</u>;\r\n    }\r\n    if (leaf.fontfamily) {\r\n        children = <span style={{ fontFamily: leaf.fontfamily }}>{children}</span>;\r\n    }\r\n    if (leaf.fontsize) {\r\n        children = <span style={{ fontSize: leaf.fontsize }}>{children}</span>;\r\n    }\r\n    if (leaf.color) {\r\n        children = <span style={{ color: leaf.color }}>{children}</span>;\r\n    }\r\n    if (leaf.backgroundcolor) {\r\n        children = <span style={{ backgroundColor: leaf.backgroundcolor }}>{children}</span>;\r\n    }\r\n\r\n    return <span {...attributes}>{children}</span>;\r\n}\r\n\r\n/**Aplicar formato en bloque */\r\nconst toggleBlock = (editor: BaseEditor & ReactEditor, format: ElemetType) => {\r\n    const isActive = isBlockActive(\r\n        editor,\r\n        format,\r\n        TEXT_ALIGN_TYPES.includes(format) ? 'align' : 'type'\r\n    )\r\n    const isList = LIST_TYPES.includes(format);\r\n\r\n    Transforms.unwrapNodes(editor, {\r\n        match: n =>\r\n            !Editor.isEditor(n) &&\r\n            SlateElement.isElement(n) &&\r\n            LIST_TYPES.includes(n.type),\r\n        split: true,\r\n    });\r\n    const newProperties: Partial<SlateElement> = {\r\n        type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n    };\r\n    Transforms.setNodes<SlateElement>(editor, newProperties);\r\n\r\n    if (!isActive && isList) {\r\n        const block: CustomElement = { type: format, children: [], align: 'left' };\r\n        Transforms.wrapNodes(editor, block);\r\n    }\r\n}\r\n/**Aplicar fuente al texto seleccionado */\r\nconst toggleFontFamily = (editor: BaseEditor & ReactEditor, value: string) => {\r\n    if (value === \"inherit\") {\r\n        Editor.removeMark(editor, 'fontfamily');\r\n    } else {\r\n        Editor.addMark(editor, 'fontfamily', value);\r\n    }\r\n}\r\n\r\nconst toggleFontSize = (editor: BaseEditor & ReactEditor, value: string) => {\r\n    if (value === \"small\") {\r\n        Editor.removeMark(editor, 'fontsize');\r\n    } else {\r\n        Editor.addMark(editor, 'fontsize', value);\r\n    }\r\n}\r\nconst toggleAlignment = (editor: BaseEditor & ReactEditor, value: \"left\" | \"center\" | \"right\") => {\r\n    const isActive = isBlockActive(\r\n        editor,\r\n        \"paragraph\",\r\n        'align'\r\n    )\r\n    let newProperties: Partial<SlateElement>\r\n    newProperties = {\r\n        align: isActive ? undefined : value,\r\n    }\r\n    Transforms.setNodes<SlateElement>(editor, newProperties)\r\n    if (value === \"left\") {\r\n        Editor.removeMark(editor, 'textalign');\r\n    } else {\r\n        Editor.addMark(editor, 'textalign', value);\r\n    }\r\n}\r\nconst toggleColor = (editor: BaseEditor & ReactEditor, value: string) => {\r\n    if (value === \"black\") {\r\n        Editor.removeMark(editor, 'color');\r\n    } else {\r\n        Editor.addMark(editor, 'color', value);\r\n    }\r\n}\r\nconst toggleBackgroundColor = (editor: BaseEditor & ReactEditor, value: string) => {\r\n    if (value === \"transparent\") {\r\n        Editor.removeMark(editor, 'backgroundcolor');\r\n    } else {\r\n        Editor.addMark(editor, 'backgroundcolor', value);\r\n    }\r\n}\r\n\r\ninterface FontFamilyProps extends SelectProps {\r\n    tooltip: string;\r\n    other?: () => void;\r\n}\r\n\r\nconst FontFamily: FC<FontFamilyProps> = ({ tooltip = '', children, onClick, ...props }) => {\r\n    const editor = useSlate();\r\n    const marks = Editor.marks(editor);\r\n    const fontfamily = marks?.fontfamily || 'inherit';\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <FormControl>\r\n            <Tooltip title={t(langKeys.font) || \"font\"} aria-label=\"add\">\r\n            <Select\r\n                labelId=\"font-family-select-label\"\r\n                value={fontfamily}\r\n                style={{ width: 150, marginLeft: 10 }}\r\n                onChange={e => {\r\n                    e.preventDefault();\r\n                    toggleFontFamily(editor, e.target.value as string);\r\n                }}\r\n            >\r\n                <MenuItem style={{ fontFamily: \"inherit\" }} value=\"inherit\">{t(langKeys.default)}</MenuItem>\r\n                <MenuItem style={{ fontFamily: \"serif\" }} value=\"serif\">Serif</MenuItem>\r\n                <MenuItem style={{ fontFamily: \"sans-serif\" }} value=\"sans-serif\">Sans-serif</MenuItem>\r\n                <MenuItem style={{ fontFamily: \"monospace\" }} value=\"monospace\">Monospace</MenuItem>\r\n                <MenuItem style={{ fontFamily: \"cursive\" }} value=\"cursive\">Cursive</MenuItem>\r\n                <MenuItem style={{ fontFamily: \"fantasy\" }} value=\"fantasy\">Fantasy</MenuItem>\r\n            </Select>\r\n            </Tooltip>\r\n        </FormControl>\r\n    );\r\n}\r\nconst FormatSizeMenu: FC<FontFamilyProps> = ({ tooltip = '', children, onClick, ...props }) => {\r\n    const editor = useSlate();\r\n    const marks = Editor.marks(editor);\r\n    const fontsize = marks?.fontsize || 'small';\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (value: string) => {\r\n        toggleFontSize(editor, value);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <FormControl>\r\n            <>\r\n                <Tooltip title={t(langKeys.size) || \"size\"} aria-label=\"add\">\r\n                    <IconButton\r\n                        aria-label=\"more\"\r\n                        aria-controls=\"long-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        <FormatSizeIcon />\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    id=\"long-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => handleClose(\"x-small\")} style={{ paddingLeft: 0, fontSize: \"x-small\" }} value=\"x-small\">\r\n                        {fontsize === \"x-small\" && <CheckIcon style={{ marginRight: 10, marginLeft: 10, width: 20, height: 20 }} />}\r\n                        <div style={{ marginLeft: (fontsize !== \"x-small\" ? 40 : 0) }}>{t(langKeys.small)} </div>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => handleClose(\"small\")} style={{ paddingLeft: 0, fontSize: \"small\" }} value=\"small\">\r\n                        {fontsize === \"small\" && <CheckIcon style={{ marginRight: 10, marginLeft: 10, width: 20, height: 20 }} />}\r\n                        <div style={{ marginLeft: (fontsize !== \"small\" ? 40 : 0) }}>{t(langKeys.normal)} </div>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => handleClose(\"large\")} style={{ paddingLeft: 0, fontSize: \"large\" }} value=\"large\">\r\n                        {fontsize === \"large\" && <CheckIcon style={{ marginRight: 10, marginLeft: 10, width: 20, height: 20 }} />}\r\n                        <div style={{ marginLeft: (fontsize !== \"large\" ? 40 : 0) }}>{t(langKeys.large)} </div>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => handleClose(\"xx-large\")} style={{ paddingLeft: 0, fontSize: \"xx-large\" }} value=\"xx-large\">\r\n                        {fontsize === \"xx-large\" && <CheckIcon style={{ marginRight: 10, marginLeft: 10, width: 20, height: 20 }} />}\r\n                        <div style={{ marginLeft: (fontsize !== \"xx-large\" ? 40 : 0) }}>{t(langKeys.huge)} </div>\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        </FormControl>\r\n    );\r\n}\r\nconst Alignment: FC<FontFamilyProps> = ({ tooltip = '', children, onClick, ...props }) => {\r\n    const editor = useSlate();\r\n    const marks = Editor.marks(editor);\r\n    const textalign = marks?.textalign || 'left';\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = (value: \"left\" | \"center\" | \"right\") => {\r\n        toggleAlignment(editor, value);\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <FormControl>\r\n            <>\r\n                <Tooltip title={t(langKeys.align) || \"align\"} aria-label=\"add\">\r\n                    <IconButton\r\n                        aria-label=\"more\"\r\n                        aria-controls=\"long-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        {(textalign !== \"right\" && textalign !== \"center\") && <FormatAlignLeftIcon />}\r\n                        {textalign === \"right\" && <FormatAlignRightIcon />}\r\n                        {textalign === \"center\" && <FormatAlignCenterIcon />}\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    id=\"long-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'center',\r\n                    }}\r\n                >\r\n                    <MenuItem onClick={() => handleClose(\"left\")} value=\"left\">\r\n                        <div><FormatAlignLeftIcon /></div>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => handleClose(\"center\")} value=\"center\">\r\n                        <div><FormatAlignCenterIcon /></div>\r\n                    </MenuItem>\r\n                    <MenuItem onClick={() => handleClose(\"right\")} value=\"right\">\r\n                        <div><FormatAlignRightIcon /></div>\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nconst ColorBoxes: FC<FontFamilyProps> = ({ other, tooltip }) => {\r\n    const editor = useSlate();\r\n    const classes = useRichTextStyles();\r\n\r\n    const handleClose = (value: string) => {\r\n        if (tooltip === \"background\") {\r\n            toggleBackgroundColor(editor, value);\r\n        } else {\r\n            toggleColor(editor, value);\r\n        }\r\n        other?.();\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"flex\", marginTop: 10 }}>\r\n                <div onClick={() => handleClose(\"rgb(0,0,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(0,0,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(68,68,68)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(68,68,68)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(102,102,102)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(102,102,102)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(153,153,153)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(153,153,153)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(204,204,204)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(204,204,204)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(238,238,238)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(238,238,238)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(243,243,243)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(243,243,243)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,255,255)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,255,255)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginTop: 5, marginBottom: 5 }}>\r\n                <div onClick={() => handleClose(\"rgb(255,0,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,0,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,153,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,153,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,255,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,255,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(0,255,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(0,255,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(0,255,255)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(0,255,255)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(0,0,255)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(0,0,255)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(153,0,255)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(153,0,255)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,0,255)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,0,255)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginBottom: 1 }}>\r\n                <div onClick={() => handleClose(\"rgb(244,204,204)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(244,204,204)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(252,229,205)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(252,229,205)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,242,204)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,242,204)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(217,234,211)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(217,234,211)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(208,224,227)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(208,224,227)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(207,226,243)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(207,226,243)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(217,210,233)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(217,210,233)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(234,209,220)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(234,209,220)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginBottom: 1 }}>\r\n                <div onClick={() => handleClose(\"rgb(234,153,153)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(234,153,153)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(249,203,156)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(249,203,156)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,229,153)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,229,153)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(182,215,168)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(182,215,168)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(162,196,201)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(162,196,201)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(159,197,232)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(159,197,232)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(180,167,214)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(180,167,214)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(213,166,189)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(213,166,189)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginBottom: 1 }}>\r\n                <div onClick={() => handleClose(\"rgb(224,102,102)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(224,102,102)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(246,178,107)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(246,178,107)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(255,217,102)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(255,217,102)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(147,196,125)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(147,196,125)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(118,165,175)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(118,165,175)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(111,168,220)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(111,168,220)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(142,124,195)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(142,124,195)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(194,123,160)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(194,123,160)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginBottom: 1 }}>\r\n                <div onClick={() => handleClose(\"rgb(204,0,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(204,0,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(230,145,56)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(230,145,56)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(241,194,50)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(241,194,50)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(106,168,79)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(106,168,79)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(69,129,142)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(69,129,142)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(61,133,198)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(61,133,198)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(103,78,167)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(103,78,167)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(166,77,121)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(166,77,121)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginBottom: 1 }}>\r\n                <div onClick={() => handleClose(\"rgb(153,0,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(153,0,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(180,95,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(180,95,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(191,144,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(191,144,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(56,118,29)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(56,118,29)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(19,79,92)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(19,79,92)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(11,83,148)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(11,83,148)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(53,28,117)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(53,28,117)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(116,27,71)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(116,27,71)\" }}></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", marginBottom: 1 }}>\r\n                <div onClick={() => handleClose(\"rgb(102,0,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(102,0,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(120,63,4)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(120,63,4)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(127,96,0)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(127,96,0)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(39,78,19)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(39,78,19)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(12,52,61)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(12,52,61)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(7,55,99)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(7,55,99)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(32,18,77)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(32,18,77)\" }}></div>\r\n                <div onClick={() => handleClose(\"rgb(76,17,48)\")} className={classes.littleboxes} style={{ backgroundColor: \"rgb(76,17,48)\" }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst TextColor: FC<FontFamilyProps> = ({ tooltip = '', children, onClick, ...props }) => {\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <FormControl>\r\n            <>\r\n                <Tooltip title={t(langKeys.textcolor) || \"textcolor\"} aria-label=\"add\">\r\n                    <IconButton\r\n                        aria-label=\"more\"\r\n                        aria-controls=\"long-menu\"\r\n                        aria-haspopup=\"true\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        <FormatColorTextIcon />\r\n                        <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'center',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 120,\r\n                        horizontal: 'center',\r\n                    }}\r\n                    id=\"long-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <div style={{ display: \"flex\", marginRight: 10 }}>\r\n                        <div style={{ marginLeft: 10, marginRight: 10 }}>\r\n                            <div>{t(langKeys.backgroundColor)}</div>\r\n                            <ColorBoxes tooltip=\"background\" other={() => handleClose()} />\r\n                        </div>\r\n                        <div>\r\n                            <div>{t(langKeys.textcolor)}</div>\r\n                            <ColorBoxes tooltip=\"textcolor\" other={() => handleClose()} />\r\n                        </div>\r\n                    </div>\r\n                </Menu>\r\n            </>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nconst isMarkActive = (editor: BaseEditor & ReactEditor, format: keyof Omit<CustomText, 'text'>) => {\r\n    const marks = Editor.marks(editor);\r\n    return marks ? marks[format] === true : false;\r\n}\r\n\r\n/**Aplicar estilo al texto seleccionado */\r\nconst toggleMark = (editor: BaseEditor & ReactEditor, format: keyof Omit<CustomText, 'text'>) => {\r\n    const isActive = isMarkActive(editor, format);\r\n\r\n    if (isActive) {\r\n        Editor.removeMark(editor, format);\r\n    } else {\r\n        Editor.addMark(editor, format, true);\r\n    }\r\n}\r\n\r\nconst isBlockActive = (editor: BaseEditor & ReactEditor, format: ElemetType, blockType: \"type\" | \"align\" = 'type') => {\r\n    const { selection } = editor\r\n    if (!selection) return false\r\n\r\n    const [match] = Array.from(\r\n        Editor.nodes(editor, {\r\n            at: Editor.unhangRange(editor, selection),\r\n            match: n =>\r\n                !Editor.isEditor(n) &&\r\n                SlateElement.isElement(n) &&\r\n                n[blockType] === format,\r\n        })\r\n    )\r\n\r\n    return !!match\r\n}\r\n\r\ninterface MarkButtonProps extends IconButtonProps {\r\n    tooltip: string;\r\n    format: keyof Omit<CustomText, 'text'>;\r\n}\r\n\r\nconst MarkButton: FC<MarkButtonProps> = ({ tooltip = '', format, children, onClick, ...props }) => {\r\n    const editor = useSlate();\r\n    const active = isMarkActive(editor, format);\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Tooltip title={t((langKeys as any)[tooltip]) || ''}>\r\n            <IconButton\r\n                {...props}\r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    toggleMark(editor, format);\r\n                    onClick?.(e);\r\n                }}\r\n                color={active ? 'primary' : 'default'}\r\n            >\r\n                {children}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\ninterface BlockButtonProps extends IconButtonProps {\r\n    tooltip: string;\r\n    format: ElemetType;\r\n}\r\n\r\nconst BlockButton: FC<BlockButtonProps> = ({ tooltip = '', format, children, onClick, ...props }) => {\r\n    const editor = useSlate();\r\n    const active = isBlockActive(editor, format);\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Tooltip title={t((langKeys as any)[tooltip]) || ''}>\r\n            <IconButton\r\n                {...props}\r\n                onClick={e => {\r\n                    e.preventDefault();\r\n                    toggleBlock(editor, format);\r\n                    onClick?.(e);\r\n                }}\r\n                color={active ? 'primary' : 'default'}\r\n            >\r\n                {children}\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nconst useInsertImageButtonStyles = makeStyles(theme => ({\r\n    rootPopup: {\r\n        width: 280,\r\n        paddingLeft: theme.spacing(1),\r\n        paddingRight: theme.spacing(1),\r\n        justifyContent: 'stretch',\r\n    },\r\n    rootTab: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 12,\r\n    },\r\n    hidden: {\r\n        display: 'none',\r\n    },\r\n    attachTab: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        gap: 8,\r\n    },\r\n}));\r\n\r\nconst OnlyURLInsertImageButton: FC = ({ children }) => {\r\n    const editor = useSlateStatic();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useInsertImageButtonStyles();\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [url, setUrl] = useState('');\r\n    const [waitUploadFile, setWaitUploadFile] = useState(false);\r\n    const upload = useSelector(state => state.main.uploadFile);\r\n    const open = Boolean(anchorEl);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetUploadFile());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (waitUploadFile) {\r\n            if (upload.loading) return;\r\n            if (upload.error) {\r\n                const message = t(upload.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() });\r\n                dispatch(showSnackbar({\r\n                    message,\r\n                    show: true,\r\n                    severity: \"error\"\r\n                }));\r\n                setWaitUploadFile(false);\r\n            } else if (upload.url && upload.url.length > 0) {\r\n                insertImage(editor, upload.url);\r\n                dispatch(resetUploadFile());\r\n                setWaitUploadFile(false);\r\n            }\r\n        }\r\n    }, [waitUploadFile, upload, editor, t, dispatch]);\r\n\r\n    const clearUrl = useCallback(() => setUrl(''), []);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const addNewUrlImage = useCallback(() => {\r\n        if (url.length > 0 && isUrl(url)) {\r\n            insertImage(editor, url);\r\n            clearUrl();\r\n        }\r\n    }, [url, editor, clearUrl]);\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title={t(langKeys.image) || ''}>\r\n                <IconButton\r\n                    aria-controls=\"insert-image-button-rich-text-popup\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onMouseDown={event => {\r\n                        event.preventDefault();\r\n                        handleClick(event);\r\n                    }}\r\n                >\r\n                    {children}\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"insert-image-button-rich-text-popup\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                variant=\"menu\"\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <div className={classes.rootPopup}>\r\n                    <div role=\"tabpanel\" className={clsx(classes.rootTab)}>\r\n                        <TextField\r\n                            placeholder={t(langKeys.enterTheUrl)}\r\n                            value={url}\r\n                            onChange={e => setUrl(e.target.value)}\r\n                            autoFocus\r\n                            disabled={waitUploadFile || upload.loading}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton size=\"small\" onClick={clearUrl}>\r\n                                            <CloseIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            disabled={waitUploadFile || upload.loading}\r\n                            onClick={addNewUrlImage}\r\n                        >\r\n                            <Trans i18nKey={langKeys.accept} />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nconst InsertImageButton: FC = ({ children }) => {\r\n    const editor = useSlateStatic();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const classes = useInsertImageButtonStyles();\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const [url, setUrl] = useState('');\r\n    const [tabIndex, setTabIndex] = useState(0);\r\n    const [waitUploadFile, setWaitUploadFile] = useState(false);\r\n    const upload = useSelector(state => state.main.uploadFile);\r\n    const open = Boolean(anchorEl);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetUploadFile());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (waitUploadFile) {\r\n            if (upload.loading) return;\r\n            if (upload.error) {\r\n                const message = t(upload.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() });\r\n                dispatch(showSnackbar({\r\n                    message,\r\n                    show: true,\r\n                    severity: \"error\"\r\n                }));\r\n                setWaitUploadFile(false);\r\n            } else if (upload.url && upload.url.length > 0) {\r\n                insertImage(editor, upload.url);\r\n                dispatch(resetUploadFile());\r\n                setWaitUploadFile(false);\r\n            }\r\n        }\r\n    }, [waitUploadFile, upload, editor, t, dispatch]);\r\n\r\n    const clearUrl = useCallback(() => setUrl(''), []);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const addNewUrlImage = useCallback(() => {\r\n        if (url.length > 0 && isUrl(url)) {\r\n            insertImage(editor, url);\r\n            clearUrl();\r\n        }\r\n    }, [url, editor, clearUrl]);\r\n\r\n    const handleAttachImage = useCallback(() => {\r\n        const input = document.getElementById('richtextImageBtnInput');\r\n        input!.click();\r\n    }, []);\r\n\r\n    const addNewAttachedImage = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!e.target.files) return;\r\n        const file = e.target.files[0];\r\n        const fd = new FormData();\r\n        fd.append('file', file, file.name);\r\n        dispatch(uploadFile(fd));\r\n        setWaitUploadFile(true);\r\n        setAnchorEl(null);\r\n        clearUrl();\r\n    }, [clearUrl, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Tooltip title={t(langKeys.image) || ''}>\r\n                <IconButton\r\n                    aria-controls=\"insert-image-button-rich-text-popup\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded={open ? 'true' : undefined}\r\n                    onMouseDown={event => {\r\n                        event.preventDefault();\r\n                        handleClick(event);\r\n                    }}\r\n                >\r\n                    {children}\r\n                </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n                id=\"insert-image-button-rich-text-popup\"\r\n                anchorEl={anchorEl}\r\n                open={open}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                    'aria-labelledby': 'basic-button',\r\n                }}\r\n            >\r\n                <div className={classes.rootPopup}>\r\n                    <Tabs\r\n                        value={tabIndex}\r\n                        onChange={(_, i) => setTabIndex(i)}\r\n                        textColor=\"primary\"\r\n                        indicatorColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                    >\r\n                        <AntTab\r\n                            disabled={upload.loading}\r\n                            value={0}\r\n                            label=\"URL\"\r\n                        />\r\n                        <AntTab\r\n                            disabled={upload.loading}\r\n                            value={1}\r\n                            label={(\r\n                                <div className={classes.attachTab}>\r\n                                    {waitUploadFile && upload.loading && <CircularProgress size={24} />}\r\n                                    <Trans i18nKey={langKeys.attached} />\r\n                                </div>\r\n                            )}\r\n                        />\r\n                    </Tabs>\r\n                    <div role=\"tabpanel\" className={clsx(classes.rootTab, tabIndex !== 0 && classes.hidden)}>\r\n                        <TextField\r\n                            placeholder={t(langKeys.enterTheUrl)}\r\n                            value={url}\r\n                            onChange={e => setUrl(e.target.value)}\r\n                            autoFocus\r\n                            disabled={waitUploadFile || upload.loading}\r\n                            InputProps={{\r\n                                endAdornment: (\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton size=\"small\" onClick={clearUrl}>\r\n                                            <CloseIcon />\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                )\r\n                            }}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            disabled={waitUploadFile || upload.loading}\r\n                            onClick={addNewUrlImage}\r\n                        >\r\n                            <Trans i18nKey={langKeys.accept} />\r\n                        </Button>\r\n                    </div>\r\n                    <div role=\"tabpanel\" className={clsx(classes.rootTab, tabIndex !== 1 && classes.hidden)}>\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: 'none' }}\r\n                            id=\"richtextImageBtnInput\"\r\n                            type=\"file\"\r\n                            onChange={addNewAttachedImage}\r\n                        />\r\n                        <Button\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                            size=\"small\"\r\n                            disabled={waitUploadFile || upload.loading}\r\n                            onClick={handleAttachImage}\r\n                        >\r\n                            <Trans i18nKey={langKeys.select} />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst isUrl = (src: string | undefined | null) => {\r\n    return typeof src === \"string\" && src.length > 0 && src.includes('http');\r\n}\r\n\r\nconst insertImage = (editor: BaseEditor & ReactEditor, url: string | null) => {\r\n    const text: CustomText = { text: '' };\r\n    const image: CustomElement = { type: 'image-src', url, children: [text], align: 'left' };\r\n    Transforms.insertNodes(editor, image);\r\n\r\n    const nextNode = Editor.next(editor);\r\n    if (nextNode) return;\r\n\r\n    const endDummyText: CustomText = { text: '' };\r\n    const endDummyElement: CustomElement = { type: 'paragraph', url: undefined, children: [endDummyText], align: 'left' };\r\n    Transforms.insertNodes(editor, endDummyElement);\r\n}\r\n\r\nconst useImageStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'relative',\r\n        // width: 'fit-content',\r\n        // maxWidth: '100%',\r\n        // display: 'inline-block',\r\n    },\r\n    img: {\r\n        display: 'block',\r\n        maxWidth: '100%',\r\n        maxHeight: '20em',\r\n    },\r\n    btn: {\r\n        position: 'absolute',\r\n        left: 0,\r\n        top: 0,\r\n    },\r\n}));\r\n\r\nconst Image: RenderElement = ({ children, element, attributes }) => {\r\n    const classes = useImageStyles();\r\n    const editor = useSlateStatic();\r\n    const path = ReactEditor.findPath(editor, element);\r\n\r\n    const selected = useSelected();\r\n    const focused = useFocused();\r\n\r\n    return (\r\n        <div {...attributes} /*style={{ width: 'fit-content', maxWidth: '100%' }}*/>\r\n            {children}\r\n            <div contentEditable={false} className={classes.root}>\r\n                <img\r\n                    src={element.url || ''}\r\n                    alt=\"Imagen\"\r\n                    className={classes.img}\r\n                    style={{ boxShadow: selected && focused ? '0 0 0 3px #B4D5FF' : 'none' }}\r\n                />\r\n                <IconButton\r\n                    // onClick={() => Transforms.removeNodes(editor, { at: path })}\r\n                    onClick={() => Transforms.setNodes(editor, { type: 'paragraph', url: undefined }, { at: path })}\r\n                    color=\"default\"\r\n                    className={classes.btn}\r\n                >\r\n                    <DeleteIcon />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst StaticImage: StaticRenderElement = ({ children, element }) => {\r\n    const classes = useImageStyles();\r\n\r\n    return (\r\n        <div>\r\n            {children}\r\n            <div contentEditable={false} className={classes.root}>\r\n                <img\r\n                    src={element.url || ''}\r\n                    alt=\"Imagen\"\r\n                    className={classes.img}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst withImages = (editor: BaseEditor & ReactEditor) => {\r\n    const { insertData, isVoid } = editor\r\n\r\n    editor.isVoid = (element: CustomElement) => {\r\n        return element.type === 'image-src' ? true : isVoid(element);\r\n    }\r\n\r\n    editor.insertData = data => {\r\n        const text = data.getData('text/plain');\r\n        const { files } = data;\r\n\r\n        if (files && files.length > 0) {\r\n            for (const file of Array.from(files)) {\r\n                const reader = new FileReader();\r\n                const [mime] = file.type.split('/');\r\n\r\n                if (mime === 'image') {\r\n                    reader.addEventListener('load', () => {\r\n                        const url = reader.result;\r\n                        insertImage(editor, url as string);\r\n                    });\r\n\r\n                    reader.readAsDataURL(file);\r\n                }\r\n            }\r\n        } else if (isUrl(text) && /(apng|avif|gif|jpg|jpeg|jfif|png|svg)$/i.test(text)) {\r\n            insertImage(editor, text);\r\n        } else {\r\n            insertData(data);\r\n        }\r\n    }\r\n\r\n    return editor;\r\n}\r\n"],"sourceRoot":""}