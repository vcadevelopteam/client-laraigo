{"version":3,"sources":["components/fields/Calendar.tsx","../node_modules/@material-ui/icons/ArrowBack.js","../node_modules/@material-ui/icons/Schedule.js","pages/CalendarEvent.tsx","../node_modules/@material-ui/icons/Save.js","../node_modules/@material-ui/icons/NavigateBefore.js","../node_modules/@material-ui/icons/NavigateNext.js","store/signup/actions.ts"],"names":["dayNames","useScheduleStyles","makeStyles","theme","boxDay","height","padding","textAlign","color","boxDayHover","cursor","fontWeight","backgroundColor","palette","primary","main","display","alignItems","justifyContent","borderRadius","dateSelected","container","width","wrapper","gridTemplateColumns","gap","wrapperDays","dowHeader","fontSize","textTransform","containerInfo","spacing","infoTitle","containerButtons","buttonMonth","flex","timeDate","fontFamily","BoxDay","day","handleClick","isActive","classes","onClick","e","className","clsx","isDayPreview","isSelected","dom","CalendarZyx","notPreviousDays","selectedDays","onChange","multiple","onChangeMonth","daysAvailable","t","useTranslation","useState","daysToShow","setDaysToShow","month","Date","getMonth","year","getFullYear","dateCurrent","setDateCurrent","datesSelected","setDatesSelected","useEffect","splitDate","split","map","item","parseInt","date","monthDates","calculateDateFromMonth","x","some","dateString","length","parsedDates","filter","toISOString","substring","dow","getDay","getDate","_","newDates","handleChangeMonth","useCallback","manageMonth","newdate","setMonth","newyear","newmonth","langKeys","padStart","size","index","undefined","includes","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Fragment","CssPhonemui","styled","MuiPhoneNumber","minHeight","borderBottomColor","useStyles","back","maxHeight","boxShadow","flexWrap","maxWidth","breakpoints","down","panel","minWidth","vertical","panelCalendar","panelDays","flexDirection","containerTimes","overflowY","itemTime","border","paddingTop","paddingBottom","itemTimeSelected","itemTimeConfirm","colInput","containerSuccess","TimeDate","time","setTimeSelected","style","marginRight","selected","localstarthour","confirm","FormToSend","event","handlerOnSubmit","disabledSubmit","phoneCountry","setPhoneCountry","dispatch","useDispatch","useForm","defaultValues","name","personname","email","phone","notes","register","handleSubmit","setValue","getValues","control","errors","formState","getCountryList","fetch","method","then","response","json","data","countryCode","country_code","toUpperCase","error","console","resetMain","validate","field_required","notificationtype","onSubmit","calendarbookingid","manageConfirmation","visible","question","confirmation_reschedule","current_event","bookingdate","toLocaleString","new_event","localyeardate","callback","replace","marginBottom","variant","valueDefault","message","rules","validationphone","render","field","fullWidth","defaultCountry","toLowerCase","helperText","prepare_meeting","marginTop","type","startIcon","disabled","reschedule_event","schedule_event","CalendarEvent","useParams","orgid","eventcode","setEvent","resMain","useSelector","state","mainEventBooking","daySelected","setDaySelected","timeSelected","times","setTimes","timesDateSelected","setTimesDateSelected","setDaysAvailable","setError","refContainerHours","useRef","conversationid","personid","ticket","setTicket","openDialogError","setOpenDialogError","location","useLocation","query","URLSearchParams","search","posibleConversationID","get","posiblePersonID","posiblecalendarbookinguuid","Number","isInteger","getCollEventBooking","getEventByCode","triggerCalculateDate","corpid","calendareventid","listDates","validateCalendaryBooking","startdate","enddate","loading","key","errormessage","code","module","organization_plural","toLocaleLowerCase","Array","from","Set","localendhour","timeduration","timeunit","invitation_date","position","borderLeft","enter_details","dataToSend","id","description","status","monthdate","hourstart","personcontact","personmail","persontimezone","getTimezoneOffset","operation","username","parameters","text","eventlink","insBookingCalendar","select_date_time","p","setTimeout","current","scrollIntoView","behavior","zIndex","open","ref","select_differente_time","view_times","confirmed","successfully_scheduled","no_event_found","executeSubscription","requestBody","callAPI","ChannelsService","execSub","types","actionTypes","SIGNUP","success","SIGNUP_SUCCESS","failure","SIGNUP_FAILURE","executeCheckNewUser","validateNewUser","ISVALID","ISVALID_SUCCESS","ISVALID_FAILURE","verifyPlan","accessToken","vrfplan","VERIFYPLAN","VERIFYPLAN_SUCCESS","VERIFYPLAN_FAILURE","getCurrencyList","CURRENCYLIST","CURRENCYLIST_SUCCESS","CURRENCYLIST_FAILURE","COUNTRYLIST","COUNTRYLIST_SUCCESS","COUNTRYLIST_FAILURE"],"mappings":"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","file":"static/js/44.20d352df.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { IconButton, makeStyles } from \"@material-ui/core\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport clsx from 'clsx';\r\nimport { Dictionary } from \"@types\";\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport { calculateDateFromMonth } from 'common/helpers';\r\n\r\nconst dayNames = [\r\n    'sunday',\r\n    'monday',\r\n    'tuesday',\r\n    'wednesday',\r\n    'thursday',\r\n    'friday',\r\n    'saturday',\r\n]\r\n\r\ninterface CalendarInputProps {\r\n    notPreviousDays?: boolean;\r\n    selectedDays?: string[] | undefined;\r\n    onChange?: (dates: DayProp[], dateChanged: DayProp, action: string) => void;\r\n    multiple?: boolean;\r\n    onChangeMonth?: (month: number, year: number) => void;\r\n    daysAvailable?: string[];\r\n    // hex: string;\r\n    // onChange: ColorChangeHandler;\r\n    // disabled?: boolean;\r\n}\r\ninterface DayInputProps {\r\n    day: DayProp;\r\n    notPreviousDays?: boolean;\r\n    handleClick: (event: any, day: DayProp) => void;\r\n}\r\n\r\ninterface DayProp {\r\n    date: Date;\r\n    dateString: string;\r\n    dow: number;\r\n    dom: number;\r\n    isToday?: boolean;\r\n    isDayPreview?: boolean;\r\n    isSelected?: boolean;\r\n}\r\n\r\nconst useScheduleStyles = makeStyles(theme => ({\r\n    boxDay: {\r\n        height: 44,\r\n        padding: 8,\r\n        textAlign: 'center',\r\n        color: '#767676',\r\n    },\r\n    boxDayHover: {\r\n        cursor: 'pointer',\r\n        fontWeight: 'bold',\r\n        backgroundColor: 'rgb(119, 33, 173, 0.065)',\r\n        color: theme.palette.primary.main,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: '50%',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(119, 33, 173, 0.095)',\r\n        }\r\n    },\r\n    dateSelected: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: '#FFF',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.main,\r\n        }\r\n    },\r\n    container: {\r\n        width: '350px',\r\n        backgroundColor: '#fff'\r\n    },\r\n    wrapper: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(7, 1fr)',\r\n        gap: 6\r\n    },\r\n    wrapperDays: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(7, 1fr)',\r\n    },\r\n    dowHeader: {\r\n        textAlign: 'center',\r\n        padding: '8px 0',\r\n        fontSize: 12,\r\n        textTransform: 'uppercase',\r\n    },\r\n    containerInfo: {\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    infoTitle: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        fontSize: 16\r\n\r\n    },\r\n    containerButtons: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    buttonMonth: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer'\r\n    },\r\n    timeDate: {\r\n        fontSize: 14,\r\n        display: 'flex',\r\n        fontFamily: 'Calibri',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nconst BoxDay: FC<DayInputProps & { isActive?: boolean }> = ({ day, handleClick, isActive = true }) => {\r\n    const classes = useScheduleStyles();\r\n\r\n    return (\r\n        <div\r\n            onClick={(e: any) => isActive && handleClick(e, day)}\r\n            className={clsx(classes.boxDay, {\r\n                [classes.boxDayHover]: !day.isDayPreview && isActive,\r\n                [classes.dateSelected]: day.isSelected && isActive\r\n            })}\r\n        >\r\n            {day.dom}\r\n        </div>\r\n    )\r\n}\r\nconst CalendarZyx: FC<CalendarInputProps> = ({ notPreviousDays = true, selectedDays = [], onChange, multiple, onChangeMonth, daysAvailable }) => {\r\n    const classes = useScheduleStyles();\r\n    const { t } = useTranslation();\r\n    const [daysToShow, setDaysToShow] = useState<DayProp[]>([]);\r\n    const [dateCurrent, setDateCurrent] = useState<{ month: number, year: number }>({\r\n        month: new Date().getMonth(),\r\n        year: new Date().getFullYear()\r\n    });\r\n    const [datesSelected, setDatesSelected] = useState<DayProp[]>([]);\r\n\r\n    useEffect(() => {\r\n        let year = dateCurrent.year;\r\n        let month = dateCurrent.month;\r\n\r\n        if (selectedDays[0]) {\r\n            const splitDate = selectedDays[0].split(\"-\").map(item => parseInt(item));\r\n            const date = new Date(splitDate[0], splitDate[1] - 1, splitDate[2]);\r\n            year = date.getFullYear();\r\n            month = date.getMonth();\r\n            setDateCurrent({ year, month })\r\n        }\r\n        const monthDates = calculateDateFromMonth(year, month).map(x => ({\r\n            ...x,\r\n            isSelected: datesSelected.some(date => date.dateString === x.dateString)\r\n        }));\r\n\r\n        if (selectedDays.length > 0) {\r\n            const parsedDates = selectedDays.filter(x => x.split(\"-\").length === 3).map(x => {\r\n                const splitDate = x.split(\"-\").map(item => parseInt(item));\r\n                const date = new Date(splitDate[0], splitDate[1] - 1, splitDate[2]);\r\n                return {\r\n                    date: date,\r\n                    dateString: date.toISOString().substring(0, 10),\r\n                    dow: date.getDay(),\r\n                    dom: date.getDate(),\r\n                    isDayPreview: date < new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate())\r\n                }\r\n            })\r\n            setDatesSelected(parsedDates);\r\n            setDaysToShow(monthDates.map(date => ({\r\n                ...date,\r\n                isSelected: parsedDates.some(x => x.dateString === date.dateString)\r\n            })));\r\n        } else {\r\n            setDaysToShow(monthDates.map(date => ({\r\n                ...date,\r\n            })));\r\n        }\r\n    }, [])\r\n\r\n    const handleClick = (_: any, day: DayProp) => {\r\n        if (day.isDayPreview)\r\n            return\r\n        if (multiple) {\r\n            const alreadyMarked = datesSelected.some(date => date.dateString === day.dateString);\r\n            if (alreadyMarked) {\r\n                const newDates = datesSelected.filter(date => date.dateString !== day.dateString);\r\n                onChange && onChange(newDates, day, 'remove');\r\n                setDatesSelected(newDates);\r\n                setDaysToShow(daysToShow.map(date => ({\r\n                    ...date,\r\n                    isSelected: date.dateString === day.dateString ? false : date.isSelected\r\n                })));\r\n            } else {\r\n                const newDates = [...datesSelected, day];\r\n                onChange && onChange(newDates, day, 'add');\r\n                setDatesSelected(newDates);\r\n                setDaysToShow(daysToShow.map(date => ({\r\n                    ...date,\r\n                    isSelected: date.dateString === day.dateString ? true : date.isSelected\r\n                })));\r\n            }\r\n        } else {\r\n            onChange && onChange([day], day, 'remove');\r\n            setDatesSelected([day]);\r\n            setDaysToShow(daysToShow.map(date => ({\r\n                ...date,\r\n                isSelected: date.dateString === day.dateString ? true : false\r\n            })));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (daysToShow.length > 0) {\r\n            const monthDates = calculateDateFromMonth(dateCurrent.year, dateCurrent.month).map(x => ({\r\n                ...x,\r\n                isSelected: datesSelected.some(date => date.dateString === x.dateString)\r\n            }));\r\n            setDaysToShow(monthDates);\r\n        }\r\n    }, [dateCurrent])\r\n\r\n    const handleChangeMonth = useCallback((manageMonth: number) => {\r\n        const newdate = new Date(new Date(dateCurrent.year, dateCurrent.month).setMonth(dateCurrent.month + manageMonth));\r\n        const newyear = newdate.getFullYear();\r\n        const newmonth = newdate.getMonth();\r\n\r\n        setDateCurrent({\r\n            year: newyear,\r\n            month: newmonth\r\n        });\r\n        onChangeMonth && onChangeMonth(newmonth, newyear)\r\n    }, [dateCurrent])\r\n\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.containerInfo}>\r\n                <div className={classes.infoTitle}>\r\n                    {t((langKeys as Dictionary)[`month_${(\"\" + (dateCurrent.month + 1)).padStart(2, \"0\")}`])} {dateCurrent.year}\r\n                </div>\r\n                <div className={classes.containerButtons}>\r\n                    <IconButton size=\"small\" onClick={() => handleChangeMonth(-1)}\r\n                    >\r\n                        <NavigateBeforeIcon />\r\n                    </IconButton>\r\n                    <IconButton size=\"small\" onClick={() => handleChangeMonth(1)}\r\n                    >\r\n                        <NavigateNextIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className={classes.wrapperDays}>\r\n                {dayNames.map((day, index) => (\r\n                    <div key={index} className={classes.dowHeader}>\r\n                        {(t((langKeys as Dictionary)[day])).substring(0, 3)}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n                {daysToShow.map((day, index) => (\r\n                    <BoxDay\r\n                        key={index}\r\n                        isActive={daysAvailable === undefined || daysAvailable.includes(day.dateString)}\r\n                        day={day}\r\n                        handleClick={handleClick}\r\n                        notPreviousDays={notPreviousDays}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarZyx;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\"\n})), 'Schedule');\n\nexports.default = _default;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'hooks';\r\nimport { Button, IconButton, makeStyles, styled, Typography } from \"@material-ui/core\";\r\nimport { useParams } from 'react-router';\r\nimport { FieldEdit, FieldEditMulti } from \"components\";\r\nimport { getCollEventBooking, resetMain } from 'store/main/actions';\r\nimport { getEventByCode, validateCalendaryBooking, dayNames, calculateDateFromMonth, insBookingCalendar } from 'common/helpers';\r\nimport { Dictionary } from '@types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport clsx from 'clsx';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useLocation } from \"react-router\";\r\nimport CalendarZyx from 'components/fields/Calendar';\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport { getCountryList } from \"store/signup/actions\";\r\nimport { manageConfirmation } from 'store/popus/actions';\r\nimport Popus from 'components/layout/Popus';\r\n\r\ninterface IDay {\r\n    date: Date;\r\n    dateString: string;\r\n    dom: number;\r\n    dow: number;\r\n}\r\n\r\ninterface ITime {\r\n    localyeardate: string;\r\n    localstarthour: string;\r\n    localendhour: string;\r\n    localddow: number;\r\n    localdday: number;\r\n}\r\n\r\nconst CssPhonemui = styled(MuiPhoneNumber)({\r\n    minHeight: 'unset',\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#7721ad',\r\n    },\r\n});\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    back: {\r\n        backgroundColor: '#fbfcfd',\r\n        height: '100vh',\r\n        width: '100vw',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    container: {\r\n        // minWidth: 800,\r\n        maxHeight: 800,\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        borderRadius: 8,\r\n        boxShadow: '0 1px 8px 0 rgb(0 0 0 / 8%)',\r\n        flexWrap: 'wrap',\r\n        maxWidth: '80vw',\r\n        [theme.breakpoints.down('xs')]: {\r\n            maxWidth: '100vw',\r\n            maxHeight: '100vh',\r\n        },\r\n    },\r\n    panel: {\r\n        minWidth: 300,\r\n        padding: theme.spacing(3)\r\n    },\r\n    vertical: {\r\n        width: 1,\r\n        flex: '0 0 1px',\r\n        backgroundColor: '#e1e1e1',\r\n        height: '100%',\r\n    },\r\n    panelCalendar: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelDays: {\r\n        minWidth: 220,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 16\r\n    },\r\n    containerTimes: {\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 8,\r\n        height: '100%',\r\n    },\r\n    itemTime: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        border: '1px solid rgb(119, 33, 173, 0.4)',\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        color: \"#7721AD\",\r\n        borderRadius: 5,\r\n        fontWeight: 'bold',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: '#fbfcfd',\r\n            border: '2px solid rgb(119, 33, 173, 0.9)',\r\n            paddingTop: theme.spacing(1.5) - 1,\r\n            paddingBottom: theme.spacing(1.5) - 1,\r\n        }\r\n    },\r\n    itemTimeSelected: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        color: \"white\",\r\n        backgroundColor: 'rgba(0,0,0,.6)',\r\n        borderRadius: 5,\r\n        fontWeight: 'bold',\r\n    },\r\n    itemTimeConfirm: {\r\n        display: 'flex',\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        paddingTop: theme.spacing(1.5),\r\n        paddingBottom: theme.spacing(1.5),\r\n        backgroundColor: '#7721AD',\r\n        color: \"white\",\r\n        borderRadius: 5,\r\n        fontWeight: 'bold',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(119, 33, 173, 0.7)',\r\n        }\r\n    },\r\n    colInput: {\r\n        width: '100%',\r\n    },\r\n    containerSuccess: {\r\n        minHeight: 600,\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        borderRadius: 8,\r\n        boxShadow: '0 1px 8px 0 rgb(0 0 0 / 8%)',\r\n        width: '80vw',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(3),\r\n        [theme.breakpoints.down('xs')]: {\r\n            width: '100vw',\r\n        },\r\n        flexDirection: 'column',\r\n    }\r\n}));\r\n\r\nconst TimeDate: FC<{ time: ITime, isSelected: boolean, setTimeSelected: (p: any) => void }> = ({ time, setTimeSelected, isSelected }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: 8, marginRight: 10 }}>\r\n            <div\r\n                className={clsx({\r\n                    [classes.itemTime]: !isSelected,\r\n                    [classes.itemTimeSelected]: isSelected\r\n                })}\r\n                onClick={() => setTimeSelected({ ...time, selected: true })}\r\n            >\r\n                {time.localstarthour}\r\n            </div>\r\n            {isSelected && (\r\n                <div\r\n                    className={classes.itemTimeConfirm}\r\n                    onClick={() => setTimeSelected({ ...time, selected: true, confirm: true })}\r\n                >\r\n                    {t(langKeys.confirm)}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nconst URL = \"https://ipapi.co/json/\";\r\nconst FormToSend: FC<{\r\n    event: Dictionary,\r\n    handlerOnSubmit: (p: any) => void,\r\n    disabledSubmit: boolean, parameters: Dictionary,\r\n    time?: ITime\r\n}> = ({ event, handlerOnSubmit, disabledSubmit, time = null }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const [phoneCountry, setPhoneCountry] = useState('');\r\n    const dispatch = useDispatch();\r\n\r\n    const { register, handleSubmit, setValue, getValues, control, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            name: event?.personname,\r\n            email: event?.email,\r\n            phone: event?.phone,\r\n            notes: '',\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        dispatch(getCountryList())\r\n        try {\r\n            fetch(URL, { method: \"get\" })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    const countryCode = data.country_code.toUpperCase();\r\n                    setPhoneCountry(countryCode);\r\n                })\r\n        }\r\n        catch (error) {\r\n            console.error(\"error\");\r\n        }\r\n        return () => {\r\n            dispatch(resetMain());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        register('notes');\r\n        register('name', { validate: (value) => (!!value && value.length > 0) || (t(langKeys.field_required) + \"\") });\r\n        register('email', { validate: (value) => event?.notificationtype === \"HSM\" || !!value || (t(langKeys.field_required) + \"\") });\r\n        register('phone', { validate: (value) => event?.notificationtype === \"HSM\" || !!value || (t(langKeys.field_required) + \"\") });\r\n    }, [register, t, event])\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (event.calendarbookingid) {\r\n            dispatch(manageConfirmation({\r\n                visible: true,\r\n                question: t(langKeys.confirmation_reschedule, {\r\n                    current_event: new Date(event.bookingdate).toLocaleString(),\r\n                    new_event: new Date(`${time?.localyeardate} ${time?.localstarthour}`).toLocaleString()\r\n                }),\r\n                callback: () => handlerOnSubmit({ ...data, phone: data.phone?.replace(\"+\", \"\") })\r\n            }))\r\n        } else {\r\n            handlerOnSubmit({ ...data, phone: data.phone?.replace(\"+\", \"\") })\r\n        }\r\n    });\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 12 }}>\r\n                <div>\r\n                    <div style={{ marginBottom: 8, fontSize: 14, fontWeight: 'bold' }}>{t(langKeys.name)}</div>\r\n                    <FieldEdit\r\n                        className={classes.colInput}\r\n                        size=\"small\"\r\n                        variant={'outlined'}\r\n                        valueDefault={getValues('name')}\r\n                        onChange={(value: any) => setValue('name', value)}\r\n                        error={errors?.name?.message}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div style={{ marginBottom: 8, fontSize: 14, fontWeight: 'bold' }}>{t(langKeys.phone)}</div>\r\n                    <Controller\r\n                        name=\"phone\"\r\n                        control={control}\r\n                        rules={{\r\n                            validate: (value) => {\r\n                                if ((value.length || \"\") === 0) {\r\n                                    return t(langKeys.field_required) as string;\r\n                                } else if ((value.length || \"\") < 10) {\r\n                                    return t(langKeys.validationphone) as string;\r\n                                }\r\n                            }\r\n                        }}\r\n                        render={({ field, formState: { errors } }) => (\r\n                            <CssPhonemui\r\n                                {...field}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                size=\"small\"\r\n                                defaultCountry={getValues('phone') ? undefined : phoneCountry.toLowerCase()}\r\n                                error={!!errors?.phone}\r\n                                helperText={errors?.phone?.message}\r\n                            />\r\n                        )}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div style={{ marginBottom: 8, fontSize: 14, fontWeight: 'bold' }}>{t(langKeys.email)}</div>\r\n                    <FieldEdit\r\n                        size=\"small\"\r\n                        className={classes.colInput}\r\n                        variant={'outlined'}\r\n                        valueDefault={getValues('email')}\r\n                        onChange={(value: any) => setValue('email', value)}\r\n                        error={errors?.email?.message}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div style={{ marginBottom: 8, fontSize: 14, fontWeight: 'bold' }}> {t(langKeys.prepare_meeting)} </div>\r\n                    <FieldEditMulti\r\n                        size=\"small\"\r\n                        className={classes.colInput}\r\n                        variant={'outlined'}\r\n                        valueDefault={getValues('notes')}\r\n                        onChange={(value: any) => setValue('notes', value)}\r\n                        error={errors?.notes?.message}\r\n                    />\r\n                </div>\r\n                <div style={{ marginTop: 16 }}>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        startIcon={<SaveIcon color=\"secondary\" />}\r\n                        color=\"primary\"\r\n                        disabled={disabledSubmit}\r\n                    >\r\n                        {t((event.calendarbookingid ? langKeys.reschedule_event : langKeys.schedule_event))}\r\n                    </Button>\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const CalendarEvent: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const { orgid, eventcode }: any = useParams();\r\n    const [event, setEvent] = useState<Dictionary | null>(null);\r\n    const resMain = useSelector(state => state.main.mainEventBooking);\r\n    const [daySelected, setDaySelected] = useState<IDay | null>(null);\r\n    const [timeSelected, setTimeSelected] = useState<ITime & { selected?: boolean, confirm?: boolean } | null>(null);\r\n    const [times, setTimes] = useState<ITime[]>([]);\r\n    const [timesDateSelected, setTimesDateSelected] = useState<ITime[]>([]);\r\n    const [daysAvailable, setDaysAvailable] = useState<string[]>([]);\r\n    const [error, setError] = useState('');\r\n    const refContainerHours = React.useRef<null | HTMLDivElement>(null);\r\n    const [ticket, setTicket] = useState({\r\n        conversationid: 0,\r\n        personid: 0\r\n    })\r\n    const [openDialogError, setOpenDialogError] = useState(false);\r\n    const [dateCurrent, setDateCurrent] = useState<{ month: number, year: number }>({\r\n        month: new Date().getMonth(),\r\n        year: new Date().getFullYear()\r\n    });\r\n    const location = useLocation();\r\n\r\n    const onChangeMonth = (month: number, year: number) => {\r\n        setDateCurrent({ month, year });\r\n    }\r\n\r\n    useEffect(() => {\r\n        let personid = 0;\r\n        const query = new URLSearchParams(location.search);\r\n        const posibleConversationID = query.get('cid');\r\n        const posiblePersonID = query.get('pid');\r\n        const posiblecalendarbookinguuid = query.get('booking');\r\n\r\n        if (posibleConversationID && Number.isInteger(Number(posibleConversationID)) && posiblePersonID && Number.isInteger(Number(posiblePersonID))) {\r\n            personid = Number(posiblePersonID);\r\n            setTicket({\r\n                conversationid: Number(posibleConversationID),\r\n                personid: Number(posiblePersonID)\r\n            })\r\n        }\r\n        dispatch(getCollEventBooking(getEventByCode(orgid, eventcode, personid, posiblecalendarbookinguuid)))\r\n    }, [])\r\n\r\n    const triggerCalculateDate = () => {\r\n        const { year, month } = dateCurrent;\r\n        const { corpid, orgid, calendareventid } = event!!;\r\n        const listDates = calculateDateFromMonth(year, month)\r\n        dispatch(getCollEventBooking(validateCalendaryBooking({\r\n            corpid,\r\n            orgid,\r\n            calendareventid,\r\n            startdate: listDates[0].dateString,\r\n            enddate: listDates[listDates.length - 1].dateString\r\n        })))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!!event) {\r\n            triggerCalculateDate()\r\n        }\r\n    }, [dateCurrent, dispatch, event])\r\n\r\n    useEffect(() => {\r\n        if (!resMain.loading) {\r\n            if (!resMain.error) {\r\n                if (resMain.key === \"QUERY_EVENT_BY_CODE\") {\r\n                    if (resMain.data.length > 0) {\r\n                        setEvent(resMain.data[0]);\r\n                    } else {\r\n                        setEvent(null)\r\n                    }\r\n                } else if (resMain.key === \"UFN_CALENDARYBOOKING_SEL_DATETIME\") {\r\n                    setDaysAvailable(Array.from(new Set(resMain.data.map(x => x.localyeardate))));\r\n                    setTimes((resMain.data as ITime[]).map(x => ({\r\n                        ...x,\r\n                        localstarthour: x.localstarthour.substring(0, 5),\r\n                        localendhour: x.localendhour.substring(0, 5)\r\n                    })));\r\n                }\r\n            } else {\r\n                if (resMain.key === \"UFN_CALENDARYBOOKING_INS\") {\r\n                    const errormessage = t(resMain.code || \"error_unexpected_error\", { module: t(langKeys.organization_plural).toLocaleLowerCase() });\r\n                    setError(errormessage);\r\n                    setOpenDialogError(true)\r\n                }\r\n            }\r\n        }\r\n    }, [resMain])\r\n\r\n    const handlerSelectDate = (p: IDay[]) => {\r\n        setDaySelected(p[0]);\r\n        setTimeSelected(null);\r\n        setTimesDateSelected(times.filter(x => x.localyeardate === p[0].dateString));\r\n\r\n        setTimeout(() => {\r\n            refContainerHours?.current?.scrollIntoView({ behavior: 'smooth' })\r\n        }, 100);\r\n    }\r\n\r\n    const handlerOnSubmit = (data: Dictionary) => {\r\n        const month = t(`month_${((daySelected!!.date.getMonth() + 1) + \"\").padStart(2, \"0\")}`)\r\n        const { corpid, orgid, calendareventid, calendarbookingid } = event!!;\r\n        const dataToSend = {\r\n            corpid,\r\n            orgid,\r\n            calendareventid,\r\n            id: 0,\r\n            description: '',\r\n            calendarbookingid,\r\n            type: 'NINGUNO',\r\n            status: 'ACTIVO',\r\n            monthdate: timeSelected?.localyeardate,\r\n            hourstart: timeSelected?.localstarthour,\r\n            notes: data.notes,\r\n            conversationid: ticket.conversationid,\r\n            personid: ticket.personid,\r\n            personname: data.name,\r\n            personcontact: data.phone,\r\n            personmail: data.email,\r\n            persontimezone: (new Date().getTimezoneOffset() / 60) * -1,\r\n            operation: 'INSERT',\r\n            username: 'admin',\r\n            email: data.email,\r\n            phone: data.phone,\r\n            name: data.name,\r\n            parameters: [\r\n                // { name: \"timeevent\", text: `${t(dayNames[daySelected!!.dow])}, ${daySelected?.date.getDate()} ${month}, ${daySelected?.date.getFullYear()}` },\r\n                { name: \"eventname\", text: event?.name },\r\n                { name: \"eventlocation\", text: event?.location },\r\n                { name: \"eventlink\", text: event?.eventlink },\r\n                { name: \"eventcode\", text: eventcode },\r\n                { name: \"monthdate\", text: t(langKeys.invitation_date, { month, year: daySelected?.date.getFullYear(), day: t(dayNames[daySelected!!.dow]), date: daySelected?.date.getDate() }) },\r\n                { name: \"hourstart\", text: timeSelected?.localstarthour },\r\n                { name: \"hourend\", text: timeSelected?.localendhour },\r\n                { name: \"personname\", text: data.name },\r\n                { name: \"personcontact\", text: data.phone },\r\n                { name: \"personmail\", text: data.email },\r\n            ]\r\n        }\r\n        dispatch(getCollEventBooking(insBookingCalendar(dataToSend)))\r\n    }\r\n\r\n    if (resMain.loading && !event) {\r\n        return (\r\n            <div className={classes.back}>\r\n                <CircularProgress />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (!event) {\r\n        return (\r\n            <div className={classes.back}>\r\n                <Typography variant=\"h5\">{t(langKeys.no_event_found)}</Typography>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (!resMain.error && !resMain.loading && resMain.key === \"UFN_CALENDARYBOOKING_INS\") {\r\n        return (\r\n            <div className={classes.back}>\r\n                <div className={classes.containerSuccess}>\r\n                    <div style={{ fontWeight: 'bold', fontSize: 20 }}>{t(langKeys.confirmed)}</div>\r\n                    <div style={{ marginTop: 16, textAlign: 'center' }} >{t(langKeys.successfully_scheduled)}</div>\r\n                    <div style={{ width: '70%', height: 1, backgroundColor: '#e1e1e1', marginTop: 24, marginBottom: 24 }}></div>\r\n                    <div style={{ textAlign: 'center', display: 'flex', flexDirection: 'column', gap: 12 }}>\r\n                        <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>\r\n                            <span style={{ backgroundColor: event.color, width: 24, height: 24, borderRadius: 12 }}></span>\r\n                            <div style={{ fontWeight: 'bold', fontSize: 20 }}>{event?.name}</div>\r\n                        </div>\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8, fontWeight: 'bold' }}>\r\n                            <CalendarTodayIcon />\r\n                            {timeSelected?.localstarthour} - {timeSelected?.localendhour}, {t(langKeys.invitation_date, { month: t(`month_${((daySelected!!.date.getMonth() + 1) + \"\").padStart(2, \"0\")}`), year: daySelected?.date.getFullYear(), day: t(dayNames[daySelected!!.dow]), date: daySelected?.date.getDate() })}\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ width: '70%', height: 1, backgroundColor: '#e1e1e1', marginTop: 24, marginBottom: 24 }}></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={classes.back}>\r\n            <div className={classes.container}>\r\n                <div className={classes.panel} style={{ maxWidth: 300 }}>\r\n                    {timeSelected?.confirm && (\r\n                        <IconButton\r\n                            style={{ border: '1px solid #e1e1e1' }}\r\n                            onClick={() => setTimeSelected({ ...timeSelected, confirm: false })}\r\n                            disabled={resMain.loading && !!event}\r\n                        >\r\n                            <ArrowBackIcon color=\"primary\" />\r\n                        </IconButton>\r\n                    )}\r\n                    <div style={{ fontWeight: 'bold', fontSize: 28, marginTop: 12, marginBottom: 16 }}>\r\n                        {event?.name}\r\n                    </div>\r\n                    <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n                        <ScheduleIcon color=\"action\" />\r\n                        {event?.timeduration} {t(event?.timeunit?.toLocaleLowerCase())}{event?.timeduration > 1?\"s\":\"\"}\r\n                    </div>\r\n                    {timeSelected?.confirm && (\r\n                        <div style={{ display: 'flex', alignItems: 'center', gap: 8, marginTop: 12 }}>\r\n                            <CalendarTodayIcon color=\"action\" />\r\n                            {timeSelected?.localstarthour} - {timeSelected?.localendhour}, {t(langKeys.invitation_date, { month: t(`month_${((daySelected!!.date.getMonth() + 1) + \"\").padStart(2, \"0\")}`), year: daySelected?.date.getFullYear(), day: t(dayNames[daySelected!!.dow]), date: daySelected?.date.getDate() })}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className={classes.vertical}></div>\r\n                <div className={classes.panel} style={{ position: 'relative', display: 'flex', gap: 20, flexDirection: 'column', height: '600px', borderLeft: '1px solid #e1e1e1' }}>\r\n                    {timeSelected?.confirm && (\r\n                        <div style={{ flex: '0 0 590px' }}>\r\n                            <div style={{ fontWeight: 'bold', fontSize: 18, marginBottom: 16 }}>\r\n                                {t(langKeys.enter_details)}\r\n                            </div>\r\n                            <FormToSend\r\n                                event={event!!}\r\n                                time={timeSelected}\r\n                                handlerOnSubmit={handlerOnSubmit}\r\n                                disabledSubmit={resMain.loading && !!event}\r\n                                parameters={{\r\n                                    corpid: event?.corpid,\r\n                                    orgid: event?.orgid,\r\n                                    personid: ticket?.personid,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {!timeSelected?.confirm && (\r\n                        <>\r\n                            <div style={{ fontWeight: 'bold', fontSize: 18 }}>\r\n                                {t(langKeys.select_date_time)}\r\n                            </div>\r\n                            <div style={{ display: 'flex', gap: 20, overflowY: 'auto' }}>\r\n                                <div className={classes.panelCalendar}>\r\n                                    <CalendarZyx\r\n                                        onChangeMonth={onChangeMonth}\r\n                                        selectedDays={daySelected ? [daySelected.dateString] : undefined}\r\n                                        daysAvailable={daysAvailable}\r\n                                        onChange={handlerSelectDate}\r\n                                    />\r\n                                    <Backdrop style={{ zIndex: 999999999, position: 'absolute' }} open={resMain.loading}>\r\n                                        <CircularProgress />\r\n                                    </Backdrop>\r\n                                </div>\r\n                                {!!daySelected && (\r\n                                    <div className={classes.panelDays} ref={refContainerHours}>\r\n                                        <div>\r\n                                            {t(langKeys.invitation_date, { month: t(`month_${((daySelected?.date.getMonth() + 1) + \"\").padStart(2, \"0\")}`), year: daySelected?.date.getFullYear(), day: t(dayNames[daySelected!!.dow]), date: daySelected?.date.getDate() })}\r\n                                        </div>\r\n                                        <div className={classes.containerTimes}>\r\n                                            {timesDateSelected.map((x, index) => (\r\n                                                <TimeDate\r\n                                                    isSelected={!!timeSelected && timeSelected?.localstarthour === x.localstarthour}\r\n                                                    key={index}\r\n                                                    time={x}\r\n                                                    setTimeSelected={setTimeSelected}\r\n                                                />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n            <Dialog\r\n                open={openDialogError}\r\n                fullWidth\r\n                maxWidth={\"xs\"}\r\n                style={{ zIndex: 99999999 }}>\r\n                <DialogTitle>{error}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        {t(langKeys.select_differente_time)}\r\n                    </div>\r\n\r\n                </DialogContent>\r\n                <DialogActions style={{ justifyContent: 'center', marginBottom: 12 }}>\r\n                    <Button\r\n                        onClick={() => {\r\n                            setOpenDialogError(false);\r\n                            setTimeSelected(null);\r\n                            setDaySelected(null);\r\n                            triggerCalculateDate();\r\n                        }}\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                    >\r\n                        {t(langKeys.view_times)}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog >\r\n            <Popus />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CalendarEvent;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"\n}), 'NavigateBefore');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import { IActionCall, IRequestBody } from \"@types\";\r\nimport { ChannelsService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.PAGELIST,\r\n        success: actionTypes.PAGELIST_SUCCESS,\r\n        failure: actionTypes.PAGELIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeSubscription = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.execSub(requestBody),\r\n    types: {\r\n        loading: actionTypes.SIGNUP,\r\n        success: actionTypes.SIGNUP_SUCCESS,\r\n        failure: actionTypes.SIGNUP_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const validatechannels = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.valChannels(requestBody),\r\n    types: {\r\n        loading: actionTypes.VALCHANNELS,\r\n        success: actionTypes.VALCHANNELS_SUCCESS,\r\n        failure: actionTypes.VALCHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeCheckNewUser = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.validateNewUser(requestBody),\r\n    types: {\r\n        loading: actionTypes.ISVALID,\r\n        success: actionTypes.ISVALID_SUCCESS,\r\n        failure: actionTypes.ISVALID_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const verifyPlan = (accessToken: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.vrfplan(accessToken),\r\n    types: {\r\n        loading: actionTypes.VERIFYPLAN,\r\n        success: actionTypes.VERIFYPLAN_SUCCESS,\r\n        failure: actionTypes.VERIFYPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsListSub = (): IActionCall => ({type: actionTypes.PAGELIST_RESET});\r\n\r\nexport const getCurrencyList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCurrencyList(),\r\n    types: {\r\n        loading: actionTypes.CURRENCYLIST,\r\n        success: actionTypes.CURRENCYLIST_SUCCESS,\r\n        failure: actionTypes.CURRENCYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getCountryList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCountryList(),\r\n    types: {\r\n        loading: actionTypes.COUNTRYLIST,\r\n        success: actionTypes.COUNTRYLIST_SUCCESS,\r\n        failure: actionTypes.COUNTRYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});"],"sourceRoot":""}