{"version":3,"sources":["../node_modules/@material-ui/icons/Input.js","pages/Settings.tsx","store/setting/actions.ts"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useItemTileStyles","makeStyles","theme","root","display","flexDirection","width","height","header","flexWrap","justifyContent","headerLeading","minWidth","maxWidth","alignItems","padding","backgroundColor","palette","primary","dark","color","border","borderRadius","fontSize","fontWeight","headerIcon","fill","stroke","headerHelpText","main","cursor","alignSelf","textDecoration","body","ItemTile","title","subtitle","icon","helpText","boxProps","classes","className","style","ml","mr","useSettingsStyles","HelpText","count","i18nKey","onClick","SubtitleText","Settings","history","useHistory","dispatch","useDispatch","user","useSelector","state","login","validateToken","setting","propertySettings","useEffect","getSetting","getCountConfigurationsBody","getPropertySettings","getPropertyConfigurationsBody","resetGetSetting","resetGetPropertySettings","error","showSnackbar","message","show","severity","loading","langKeys","roledesc","container","direction","item","xs","sm","md","lg","xl","corporation","num_corp","manageCorporation","push","paths","CORPORATIONS","m","organization","num_org","activeOrganization","manageOrganization","ORGANIZATIONS","channel","num_channels","activeChannel","manageChannel","CHANNELS","num_users","activeUser","manageUser","USERS","quickreply","num_quickreply","manageQuickReply","QUICKREPLIES","classification","num_classification","manageClassification","TIPIFICATIONS","whitelist","num_whitelist","manageWhitelist","WHITELIST","securityrules","securityrule","SECURITYRULES","domain","num_domain","manageDomain","DOMAINS","restrictedEmoji","num_restricted_emojis","manageRestrictedEmoji","EMOJIS","forbiddenWord","num_forbidden_words","manageForbiddenWord","INAPPROPRIATEWORDS","integration","num_integrations","manageIntegration","INTEGRATIONMANAGER","serviceLevelAgreement","num_sla","agreement","manageAgreement","SLA","inputvalidation","num_inputvalidation","manageInputValidation","INPUTVALIDATION","location","num_location","manageLocation","EXTRASLOCATION","property","num_property","activeProperty","manageproperty","PROPERTIES","properties","environment","callAPI","CommonService","types","actionTypes","GET_SETTING","success","GET_SETTING_SUCCESS","failure","GET_SETTING_FAILURE","type","GET_SETTING_RESET","requestBodies","multiMain","GET_PROPERTY_SETTINGS","GET_PROPERTY_SETTINGS_SUCCESS","GET_PROPERTY_SETTINGS_FAILURE","updateUserSettings","InboxService","UPDATE_USER","UPDATE_USER_SUCCESS","UPDATE_USER_FAILURE","GET_PROPERTY_SETTINGS_RESET"],"mappings":"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","file":"static/js/82.da686583.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 3.01H3c-1.1 0-2 .9-2 2V9h2V4.99h18v14.03H3V15H1v4.01c0 1.1.9 1.98 2 1.98h18c1.1 0 2-.88 2-1.98v-14c0-1.11-.9-2-2-2zM11 16l4-4-4-4v3H1v2h10v3z\"\n}), 'Input');\n\nexports.default = _default;","import React, { FC, useEffect } from 'react';\r\nimport { BoxProps, makeStyles, Box, Grid } from '@material-ui/core';\r\nimport { Title } from 'components';\r\nimport { langKeys } from 'lang/keys';\r\nimport { Trans } from 'react-i18next';\r\nimport { ChannelsIcon, ClassificationIcon, ConfigPropertiesIcon, DomainsIcon, EmojiSadFaceIcon, ForbiddenWordsIcon, IntegrationIcon, SLAIcon, Corporation2Icon, OrganizationsIcon, QuickReplyIcon, UserGroupIcon, LocationIcon } from 'icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPropertySettings, getSetting, resetGetPropertySettings, resetGetSetting } from 'store/setting/actions';\r\nimport { getCountConfigurationsBody, getPropertyConfigurationsBody } from 'common/helpers';\r\nimport { useSelector } from 'hooks';\r\nimport { showSnackbar } from 'store/popus/actions';\r\nimport { useHistory } from 'react-router';\r\nimport paths from 'common/constants/paths';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\n\r\ninterface ItemTileProps extends Omit<BoxProps, 'title'> {\r\n    title: React.ReactNode;\r\n    subtitle: React.ReactNode;\r\n    icon: React.ReactNode;\r\n    helpText: React.ReactNode;\r\n}\r\n\r\nconst useItemTileStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 'inherit',\r\n        height: \"135px\",\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-between',\r\n    },\r\n    headerLeading: {\r\n        minWidth: 250,\r\n        maxWidth: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: '12px 20px',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: 'white',\r\n        border: `1px solid ${theme.palette.primary.dark}`,\r\n        borderRadius: 4,\r\n        fontSize: 18,\r\n        fontWeight: 700,\r\n    },\r\n    headerIcon: {\r\n        width: 25,\r\n        height: 25,\r\n        fill: 'white',\r\n        stroke: 'white',\r\n    },\r\n    headerHelpText: {\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        color: theme.palette.primary.main,\r\n        cursor: 'pointer',\r\n        alignSelf: 'center',\r\n\r\n        '-webkit-touch-callout': 'none', /* iOS Safari */\r\n        '-webkit-user-select': 'none', /* Safari */\r\n        '-khtml-user-select': 'none', /* Konqueror HTML */\r\n        '-moz-user-select': 'none', /* Old versions of Firefox */\r\n        '-ms-user-select': 'none', /* Internet Explorer/Edge */\r\n        'user-select': 'none',\r\n\r\n        '&:hover': {\r\n            textDecoration: 'underline',\r\n        }\r\n    },\r\n    body: {\r\n        border: `1px solid #A59F9F`,\r\n        borderRadius: 6,\r\n        padding: 20,\r\n        width: '100%',\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n    }\r\n}));\r\n\r\nconst ItemTile: FC<ItemTileProps> = ({ title, subtitle, icon, helpText, ...boxProps }) => {\r\n    const classes = useItemTileStyles();\r\n\r\n    return (\r\n        <Box {...boxProps}>\r\n            <div className={classes.root}>\r\n                <div className={classes.header}>\r\n                    <div className={classes.headerLeading}>\r\n                        <span>{title}</span>\r\n                        <div style={{ width: 10 }} />\r\n                        <span className={classes.headerIcon}>{icon}</span>\r\n                    </div>\r\n                    <span className={classes.headerHelpText}>{helpText}</span>\r\n                </div>\r\n                <div className={classes.body}><Box ml={1} mr={1}>{subtitle}</Box></div>\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n\r\n// interface PropertyItemProps extends Omit<BoxProps, 'title'> {\r\n//     title: React.ReactNode;\r\n//     subtitle: React.ReactNode;\r\n// }\r\n\r\n// const usePropertyItemStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         flexDirection: 'column',\r\n//         width: 'inherit',\r\n//         fontSize: 16,\r\n//         fontWeight: 400,\r\n//     },\r\n//     title: {\r\n//         display: 'flex',\r\n//         flexDirection: 'row',\r\n//         alignItems: 'center',\r\n//     },\r\n//     subtitle: {\r\n//         display: 'flex',\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'space-between',\r\n//         alignItems: 'center',\r\n//         margin: '4px 0',\r\n//     },\r\n//     divider: {\r\n//         height: 1,\r\n//         backgroundColor: '#A59F9F',\r\n//         width: 'inherit',\r\n//     },\r\n//     editIcon: {\r\n//         width: 18,\r\n//         height: 18,\r\n//         fill: '#7721AD',\r\n//     },\r\n//     infoIcon: {\r\n//         width: 17,\r\n//         height: 17,\r\n//         fill: '#381052',\r\n//     },\r\n// }));\r\n\r\n// const PropertyItem: FC<PropertyItemProps> = ({ title, subtitle, ...boxProps }) => {\r\n//     const classes = usePropertyItemStyles();\r\n\r\n//     return (\r\n//         <Box className={classes.root} {...boxProps}>\r\n//             <span className={classes.title}>\r\n//                 {title}\r\n//                 <div style={{ width: 4 }} />\r\n//                 <InfoRoundedIcon className={classes.infoIcon} />\r\n//             </span>\r\n//             <div className={classes.subtitle}>\r\n//                 <span>{subtitle}</span>\r\n//                 <IconButton color=\"primary\" size=\"small\">\r\n//                     <EditPencilIcon className={classes.editIcon} />\r\n//                 </IconButton>\r\n//             </div>\r\n//             <div className={classes.divider} />\r\n//         </Box>\r\n//     );\r\n// }\r\n\r\n// const PropertiesTileBody: FC = () => {\r\n//     return (\r\n//         <Grid container direction=\"row\">\r\n//             <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n//                 <Grid container direction=\"column\">\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={<Trans i18nKey={langKeys.maxNumOfTicketsperAdvisor} count={2} />}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={(\r\n//                                 <>\r\n//                                     <Trans i18nKey={langKeys.holdOnHolding} />\r\n//                                     {' ('}\r\n//                                     <Trans i18nKey={langKeys.message} />\r\n//                                     {')'}\r\n//                                 </>\r\n//                             )}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={(\r\n//                                 <>\r\n//                                     <Trans i18nKey={langKeys.sessionExpirationTIme} />\r\n//                                     {' ('}\r\n//                                     <Trans i18nKey={langKeys.agent} />\r\n//                                     {')'}\r\n//                                 </>\r\n//                             )}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//             <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n//                 <Grid container direction=\"column\">\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={<Trans i18nKey={langKeys.automaticClosingTime} />}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={(\r\n//                                 <>\r\n//                                     <Trans i18nKey={langKeys.holdOnHolding} />\r\n//                                     {' ('}\r\n//                                     <Trans i18nKey={langKeys.sendingFrequency} />\r\n//                                     {')'}\r\n//                                 </>\r\n//                             )}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={(\r\n//                                 <>\r\n//                                     <Trans i18nKey={langKeys.sessionExpirationTIme} />\r\n//                                     {' ('}\r\n//                                     <Trans i18nKey={langKeys.supervisor} />\r\n//                                     {')'}\r\n//                                 </>\r\n//                             )}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//             <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n//                 <Grid container direction=\"column\">\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={<Trans i18nKey={langKeys.outOfHoursAction} />}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={<Trans i18nKey={langKeys.surveyExpirationTime} />}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                     <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n//                         <PropertyItem\r\n//                             title={(\r\n//                                 <>\r\n//                                     <Trans i18nKey={langKeys.sessionExpirationTIme} />\r\n//                                     {' ('}\r\n//                                     <Trans i18nKey={langKeys.administrator} />\r\n//                                     {')'}\r\n//                                 </>\r\n//                             )}\r\n//                             subtitle=\"10\"\r\n//                             m={1}\r\n//                         />\r\n//                     </Grid>\r\n//                 </Grid>\r\n//             </Grid>\r\n//         </Grid>\r\n//     );\r\n// }\r\n\r\nconst useSettingsStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nconst HelpText: FC<{ i18nKey: string, count?: number, onClick?: () => void }> = ({ count, i18nKey, onClick }) => {\r\n    return (\r\n        <span onClick={onClick}>\r\n            {'> '}<Trans i18nKey={i18nKey} count={count} />\r\n        </span>\r\n    );\r\n}\r\n\r\nconst SubtitleText: FC<{ i18nKey: string, value?: number | null }> = ({ i18nKey, value }) => {\r\n    return (\r\n        <>\r\n            <span style={{ fontWeight: 700 }}>{`${value || 0} `}</span><Trans i18nKey={i18nKey} count={value || 0} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst Settings: FC = () => {\r\n    const classes = useSettingsStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const setting = useSelector(state => state.setting.setting);\r\n    const propertySettings = useSelector(state => state.setting.propertySettings);\r\n\r\n    useEffect(() => {\r\n        dispatch(getSetting(getCountConfigurationsBody()));\r\n        dispatch(getPropertySettings(getPropertyConfigurationsBody()));\r\n\r\n        return () => {\r\n            dispatch(resetGetSetting());\r\n            dispatch(resetGetPropertySettings());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (propertySettings.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: propertySettings.message || 'Error',\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        }\r\n    }, [propertySettings, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (setting.loading) return;\r\n        \r\n        if (setting.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: setting.message || 'Error',\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        }\r\n    }, [setting, dispatch]);\r\n    const { value } = setting;\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box ml={2}>\r\n                <Title>\r\n                    <Trans i18nKey={langKeys.setting} count={2} />\r\n                </Title>\r\n            </Box>\r\n            <div style={{ height: 23 }} />\r\n            {user?.roledesc!=='SUPERVISOR'?\r\n                <>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Grid container direction=\"column\">\r\n                                {user?.roledesc === \"SUPERADMIN\" && (\r\n                                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                        <ItemTile\r\n                                            title={<Trans i18nKey={langKeys.corporation} count={2} />}\r\n                                            subtitle={<SubtitleText value={value?.num_corp} i18nKey={langKeys.corporation} />}\r\n                                            icon={<Corporation2Icon />}\r\n                                            helpText={\r\n                                                <HelpText\r\n                                                    i18nKey={langKeys.manageCorporation}\r\n                                                    count={2}\r\n                                                    onClick={() => history.push(paths.CORPORATIONS)}\r\n                                                />\r\n                                            }\r\n                                            m={2}\r\n                                        />\r\n                                    </Grid>\r\n                                )}\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.organization} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_org} i18nKey={langKeys.activeOrganization} />}\r\n                                        icon={<OrganizationsIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageOrganization}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.ORGANIZATIONS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.channel} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_channels} i18nKey={langKeys.activeChannel} />}\r\n                                        icon={<ChannelsIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageChannel}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.CHANNELS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.user} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_users} i18nKey={langKeys.activeUser} />}\r\n                                        icon={<UserGroupIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageUser}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.USERS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.quickreply} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_quickreply} i18nKey={langKeys.quickreply} />}\r\n                                        icon={<QuickReplyIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageQuickReply}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.QUICKREPLIES)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.classification} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_classification} i18nKey={langKeys.classification} />}\r\n                                        icon={<ClassificationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageClassification}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.TIPIFICATIONS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>                        \r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.whitelist} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_whitelist} i18nKey={langKeys.whitelist} />}\r\n                                        icon={<ClassificationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageWhitelist}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.WHITELIST)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>             \r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.securityrules} count={2} />}\r\n                                        subtitle={<SubtitleText value={1} i18nKey={langKeys.securityrule} />}\r\n                                        icon={<LockOpenIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.securityrules}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.SECURITYRULES)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>             \r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Grid container direction=\"column\">\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.domain} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_domain} i18nKey={langKeys.domain} />}\r\n                                        icon={<DomainsIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageDomain}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.DOMAINS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.restrictedEmoji} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_restricted_emojis} i18nKey={langKeys.restrictedEmoji} />}\r\n                                        icon={<EmojiSadFaceIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageRestrictedEmoji}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.EMOJIS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.forbiddenWord} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_forbidden_words} i18nKey={langKeys.forbiddenWord} />}\r\n                                        icon={<ForbiddenWordsIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageForbiddenWord}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.INAPPROPRIATEWORDS)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.integration} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_integrations} i18nKey={langKeys.integration} />}\r\n                                        icon={<IntegrationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageIntegration}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.INTEGRATIONMANAGER)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.serviceLevelAgreement} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_sla} i18nKey={langKeys.agreement} />}\r\n                                        icon={<SLAIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageAgreement}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.SLA)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.inputvalidation} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_inputvalidation} i18nKey={langKeys.inputvalidation} />}\r\n                                        icon={<InputIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageInputValidation}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.INPUTVALIDATION)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.location} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_location} i18nKey={langKeys.location} />}\r\n                                        icon={<LocationIcon style={{width:\"35px\", height: \"35px\"}} fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageLocation}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.EXTRASLOCATION)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                                </Grid> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <ItemTile\r\n                        title={<Trans i18nKey={langKeys.property} count={2} />}\r\n                        subtitle={<SubtitleText value={value?.num_property} i18nKey={langKeys.activeProperty} />}\r\n                        icon={<ConfigPropertiesIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                        helpText={\r\n                            <HelpText\r\n                                i18nKey={langKeys.manageproperty}\r\n                                count={2}\r\n                                onClick={() => history.push(paths.PROPERTIES)}\r\n                            />\r\n                        }\r\n                        m={2}\r\n                    />\r\n                </>\r\n                :\r\n                <>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.quickreply} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_quickreply} i18nKey={langKeys.quickreply} />}\r\n                                    icon={<QuickReplyIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageQuickReply}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.QUICKREPLIES)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>\r\n                        </Grid> \r\n                    </Grid> \r\n                    \r\n                    {(user.properties.environment!==\"CLARO\") &&\r\n\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.classification} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_classification} i18nKey={langKeys.classification} />}\r\n                                    icon={<ClassificationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageClassification}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.TIPIFICATIONS)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>  \r\n                        </Grid> \r\n                    </Grid>\r\n                    }\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.whitelist} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_whitelist} i18nKey={langKeys.whitelist} />}\r\n                                    icon={<ClassificationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageWhitelist}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.WHITELIST)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>  \r\n                        </Grid> \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.restrictedEmoji} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_restricted_emojis} i18nKey={langKeys.restrictedEmoji} />}\r\n                                    icon={<EmojiSadFaceIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageRestrictedEmoji}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.EMOJIS)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.location} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_location} i18nKey={langKeys.location} />}\r\n                                    icon={<ClassificationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageLocation}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.EXTRASLOCATION)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                    <ItemTile\r\n                                        title={<Trans i18nKey={langKeys.serviceLevelAgreement} count={2} />}\r\n                                        subtitle={<SubtitleText value={value?.num_sla} i18nKey={langKeys.agreement} />}\r\n                                        icon={<SLAIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                        helpText={\r\n                                            <HelpText\r\n                                                i18nKey={langKeys.manageAgreement}\r\n                                                count={2}\r\n                                                onClick={() => history.push(paths.SLA)}\r\n                                            />\r\n                                        }\r\n                                        m={2}\r\n                                    />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.forbiddenWord} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_forbidden_words} i18nKey={langKeys.forbiddenWord} />}\r\n                                    icon={<ForbiddenWordsIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageForbiddenWord}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.INAPPROPRIATEWORDS)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    {\r\n                    //(user.properties.environment!==\"CLARO\") &&\r\n                    <Grid item xs={12} sm={12} md={12} lg={6} xl={6}>\r\n                        <Grid container direction=\"column\">\r\n                            <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                                <ItemTile\r\n                                    title={<Trans i18nKey={langKeys.integration} count={2} />}\r\n                                    subtitle={<SubtitleText value={value?.num_integrations} i18nKey={langKeys.integration} />}\r\n                                    icon={<IntegrationIcon fill=\"inherit\" stroke=\"inherit\" />}\r\n                                    helpText={\r\n                                        <HelpText\r\n                                            i18nKey={langKeys.manageIntegration}\r\n                                            count={2}\r\n                                            onClick={() => history.push(paths.INTEGRATIONMANAGER)}\r\n                                        />\r\n                                    }\r\n                                    m={2}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>}\r\n                </Grid>\r\n                </>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n","import { IActionCall, IRequestBody } from \"@types\";\r\nimport { CommonService,InboxService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getSetting = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_SETTING,\r\n        success: actionTypes.GET_SETTING_SUCCESS,\r\n        failure: actionTypes.GET_SETTING_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetSetting = (): IActionCall => ({type: actionTypes.GET_SETTING_RESET});\r\n\r\nexport const getPropertySettings = (requestBodies: IRequestBody[]): IActionCall => ({\r\n    callAPI: () => CommonService.multiMain(requestBodies),\r\n    types: {\r\n        loading: actionTypes.GET_PROPERTY_SETTINGS,\r\n        success: actionTypes.GET_PROPERTY_SETTINGS_SUCCESS,\r\n        failure: actionTypes.GET_PROPERTY_SETTINGS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\nexport const updateUserSettings = (requestBodies: any): IActionCall => ({\r\n    callAPI: () => InboxService.updateUserSettings(requestBodies),\r\n    types: {\r\n        loading: actionTypes.UPDATE_USER,\r\n        success: actionTypes.UPDATE_USER_SUCCESS,\r\n        failure: actionTypes.UPDATE_USER_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPropertySettings = (): IActionCall => ({type: actionTypes.GET_PROPERTY_SETTINGS_RESET});\r\n"],"sourceRoot":""}