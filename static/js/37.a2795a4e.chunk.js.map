{"version":3,"sources":["pages/Person.tsx","components/fields/table-paginated.tsx","store/person/actions.ts","store/lead/actions.ts","../node_modules/@material-ui/icons/esm/Search.js","../node_modules/@material-ui/icons/Mail.js","../node_modules/@material-ui/icons/esm/ArrowUpward.js","../node_modules/@material-ui/icons/esm/ArrowDownward.js","../node_modules/@material-ui/icons/Sms.js","../node_modules/@material-ui/icons/Lock.js"],"names":["format","datex","Date","setHours","toISOString","substring","variables","map","x","key","DialogSendTemplate","setOpenModal","openModal","persons","type","onSubmitTrigger","t","useTranslation","dispatch","useDispatch","useState","waitClose","setWaitClose","sendingRes","useSelector","state","inbox","triggerSendHSM","templatesList","setTemplatesList","channelList","setChannelList","bodyMessage","setBodyMessage","personWithData","setPersonWithData","domains","person","editableDomains","title","useMemo","langKeys","send_hsm","send_sms","send_mail","useForm","defaultValues","hsmtemplateid","observation","communicationchannelid","length","communicationchanneltype","control","register","handleSubmit","setValue","getValues","trigger","reset","errors","formState","fields","useFieldArray","name","useEffect","loading","error","showSnackbar","show","severity","message","code","showBackdrop","successful_send_hsm","successful_send_sms","successful_send_mail","value","templates","filter","channels","includes","hsmtemplatename","validate","field_required","email","phonewhatsapp","phone","onSubmit","data","messagedata","platformtype","shippingreason","listmembers","personid","firstname","lastname","parameters","v","text","variable","sendHSM","no_people_to_send","open","buttonText1","cancel","buttonText2","continue","handleClickButton1","handleClickButton2","button2Type","style","marginBottom","persons_selected","with","toLocaleLowerCase","className","label","channel","valueDefault","onChange","optionDesc","optionValue","template","body","id","varaiblesCleaned","match","indexOf","overflow","Fragment","fontWeight","lineHeight","fontSize","mb","color","dangerouslySetInnerHTML","__html","disabled","rows","display","flexDirection","gap","marginTop","item","i","fregister","uset","prefixTranslation","CountTicket","count","position","padding","whiteSpace","backgroundColor","width","height","opacity","top","left","TemplateIcons","sendSMS","sendMAIL","React","anchorEl","setAnchorEl","handleClose","e","stopPropagation","size","onClick","currentTarget","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","fill","Person","history","useHistory","location","useLocation","pageSize","pageIndex","filters","sorts","daterange","fetchDataAux","setfetchDataAux","personList","pageCount","setPageCount","totalrow","settotalrow","resExportData","main","exportData","executeResult","execute","waitExport","setWaitExport","waitImport","setWaitImport","importData","setImportData","openDialogTemplate","setOpenDialogTemplate","waitValidation","setWaitValidation","selectedRows","setSelectedRows","personsSelected","setPersonsSelected","typeTemplate","setTypeTemplate","cleanSelected","setCleanSelected","query","URLSearchParams","search","params","useQueryParams","ignore","get","filterChannelsType","setFilterChannelType","columns","accessor","isComponent","minWidth","Cell","props","cell","row","original","undefined","Header","personType","lastContactDate","sortType","lastcontact","convertLocalDate","toLocaleString","lastuser","lead","listSelectFilter","new","qualified","proposition","won","lost","phasejson","Object","entries","sort","aKey","bKey","Number","split","status","toLowerCase","toUpperCase","address","healthprofessional","referralchannel","comments","datenote","note","dateactivity","leadactivity","lastnote","nextprogramedactivity","getDomainsByTypename","getLeadPhases","getColumnsSel","resetGetPersonListPaginated","resetGetLeadPhases","resetAllMain","Math","ceil","fetchData","getPersonListPaginated","getPaginatedPerson","startdate","startDate","setDate","enddate","endDate","getFullYear","getMonth","skip","take","userids","channeltypes","errormessage","module","url","forEach","window","handleTemplate","docTypes","reduce","a","d","domainvalue","personGenTypes","domaindesc","personTypes","genders","educationLevels","civilStatuses","occupations","groups","exportExcel","templateMaker","handleUpload","files","file","uploadExcel","excel","array_trimmer","f","documenttype","keys","persontype","gender","educationlevel","civilstatus","occupation","datavalidation","acc","alternativephone","alternativeemail","table","documentnumber","String","birthday","personstatus","referringpersonid","geographicalarea","age","sex","operation","callback","personImportValidation","JSON","stringify","manageConfirmation","visible","question","confirmation_save","no_records_valid","phonesexisting","emailsexisting","importPerson","values","concat","warningmessage","join","personrepeatedwarning1","handleLock","confirmation_person_unlock","confirmation_person_lock","p","locked","personcommunicationchannelUpdateLockedArrayIns","quickreplies","successful_register","find","y","parseInt","flexGrow","i18nKey","variant","startIcon","lock","unlock","filterrange","download","exportPersonalized","columnsExport","alias","getPersonExport","personcommunicationchannels","useSelection","selectionKey","initialSelectedRows","onClickRow","push","pathname","paths","PERSON_DETAIL","resolve","cleanSelection","setCleanSelection","ButtonsElement","importCSV","handleRegister","onFilterChange","filterParams","buildQueryFilters","append","toString","initialEndDate","initialStartDate","initialFilters","initialPageIndex","page","FiltersElement","o","maxWidth","autotrigger","useStyles","makeStyles","theme","footerTable","breakpoints","up","justifyContent","textAlign","alignItems","trdynamic","boxShadow","visibility","containerfloat","borderBottom","zIndex","button","textTransform","palette","primary","containerButtons","flexWrap","containerButtonsNoFilters","iconOrder","containerHeader","spacing","containerHeaderColumn","iconHelpText","cursor","DefaultColumnFilter","header","setFilters","operator","setoperator","handleClickItemMenu","op","DateOptionsMenuComponent","date","isNaN","valueOf","TimeOptionsMenuComponent","toLocaleTimeString","fullWidth","onKeyDown","keyCode","target","event","PaperProps","maxHeight","OptionsMenuComponent","TableZyx","memo","titlemodule","controlledPageCount","HeadComponent","autoRefresh","selectionFilter","filterRangeDate","classes","pagination","setPagination","openDateRangeModal","setOpenDateRangeModal","triggerSearch","setTriggerSearch","tFilters","setTFilters","useTable","initialState","selectedRowIds","manualPagination","useControlledState","autoResetSelectedRows","getRowId","relativeIndex","parent","stateReducer","newState","action","useFilters","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","getToggleAllPageRowsSelectedProps","filteredRows","checked","every","isSelected","toggleRowSelected","NoFilter","getTableProps","getTableBodyProps","headerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","setPageSize","toggleAllRowsSelected","setPageIndex","prev","getFirstDayMonth","getDateToday","getLastDayMonth","dateRange","setdateRange","triggertmp","fromButton","getTime","clsx","setOpen","range","onSelect","border","borderRadius","getDateCleaned","accept","htmlFor","component","import","headerGroup","getHeaderGroupProps","headers","column","ii","activeOnHover","render","getHeaderProps","NoSort","newsorts","handleClickSort","wordWrap","helpText","arrow","placement","LoadingSkeleton","getRowProps","hover","cells","getCellProps","textOverflow","tablePageOf","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","itemCount","totalItems","disableUnderline","marginRight","recordPerPage","items","options","init","set","colFilters","payload","callAPI","CommonService","mainPaginated","types","actionTypes","GET_PERSON_LIST","failure","GET_PERSON_LIST_FAILURE","success","GET_PERSON_LIST_SUCCESS","GET_PERSON_LIST_RESET","getPersonLinkListPaginated","GET_PERSON_LINK","GET_PERSON_LINK_FAILURE","GET_PERSON_LINK_SUCCESS","getTicketListByPerson","GET_TICKET_LIST_BY_PERSON","GET_TICKET_LIST_BY_PERSON_FAILURE","GET_TICKET_LIST_BY_PERSON_SUCCESS","resetGetTicketListByPerson","GET_TICKET_LIST_BY_PERSON_RESET","getReferrerListByPerson","GET_REFERRER_LIST_BY_PERSON","GET_REFERRER_LIST_BY_PERSON_FAILURE","GET_REFERRER_LIST_BY_PERSON_SUCCESS","resetGetReferrerListByPerson","GET_REFERRER_LIST_BY_PERSON_RESET","getChannelListByPerson","GET_CHANNEL_LIST_BY_PERSON","GET_CHANNEL_LIST_BY_PERSON_FAILURE","GET_CHANNEL_LIST_BY_PERSON_SUCCESS","resetGetChannelListByPerson","GET_CHANNEL_LIST_BY_PERSON_RESET","getLeadsByPerson","PersonService","GET_LEAD_LIST_BY_PERSON","GET_LEAD_LIST_BY_PERSON_FAILURE","GET_LEAD_LIST_BY_PERSON_SUCCESS","resetGetLeadsByPerson","GET_LEAD_LIST_BY_PERSON_RESET","multiMain","getValuesFromDomain","adviserSel","getMessageTemplateLst","getCommChannelLst","getRolesByOrg","getPropertySelByName","GET_DOMAINS_BY_TYPENAME","GET_DOMAINS_BY_TYPENAME_FAILURE","GET_DOMAINS_BY_TYPENAME_SUCCESS","resetGetDomainsByTypename","GET_DOMAINS_BY_TYPENAME_RESET","editPerson","insert","EDIT_PERSON","EDIT_PERSON_FAILURE","EDIT_PERSON_SUCCESS","resetEditPerson","EDIT_PERSON_RESET","getLead","GET_LEAD","GET_LEAD_SUCCESS","GET_LEAD_FAILURE","resetGetLead","GET_LEAD_RESET","saveLead","transaction","Array","isArray","console","SAVE_LEAD","SAVE_LEAD_SUCCESS","SAVE_LEAD_FAILURE","saveLeadWithFiles","build","uploadCb","mediaFile","fd","FormData","uploadFile","uploadResult","requestBody","resetSaveLead","SAVE_LEAD_RESET","getAdvisers","GET_ADVISERS","GET_ADVISERS_SUCCESS","GET_ADVISERS_FAILURE","getLeadLogNotes","GET_LEADNOTES","GET_LEADNOTES_SUCCESS","GET_LEADNOTES_FAILURE","resetGetLeadLogNotes","GET_LEADNOTES_RESET","getLeadActivities","GET_LEADACTIVITIES","GET_LEADACTIVITIES_SUCCESS","GET_LEADACTIVITIES_FAILURE","resetGetLeadActivities","GET_LEADACTIVITIES_RESET","saveLeadActivity","SAVE_LEADACTIVITY","SAVE_LEADACTIVITY_SUCCESS","SAVE_LEADACTIVITY_FAILURE","resetSaveLeadActivity","SAVE_LEADACTIVITY_RESET","saveLeadLogNote","mediaFiles","media","urls","fileToUpload","SAVE_LEADNOIE","SAVE_LEADNOIE_SUCCESS","SAVE_LEADNOIE_FAILURE","resetSaveLeadLogNote","SAVE_LEADNOIE_RESET","GET_PHASES","GET_PHASES_SUCCESS","GET_PHASES_FAILURE","GET_PHASES_RESET","archiveLead","ARCHIVE_LEAD","ARCHIVE_LEAD_SUCCESS","ARCHIVE_LEAD_FAILURE","resetArchiveLead","ARCHIVE_LEAD_RESET","markDoneActivity","MARK_DONE_ACTIVITY","MARK_DONE_ACTIVITY_SUCCESS","MARK_DONE_ACTIVITY_FAILURE","resetMarkDoneActivity","MARK_DONE_ACTIVITY_RESET","getLeadHistory","GET_LEAD_HISTORY","GET_LEAD_HISTORY_SUCCESS","GET_LEAD_HISTORY_FAILURE","resetGetLeadHistory","GET_LEAD_HISTORY_RESET","getLeadProductsDomain","getProductCatalogSel","GET_LEAD_PRODUCTS_DOMAIN","GET_LEAD_PRODUCTS_DOMAIN_SUCCESS","GET_LEAD_PRODUCTS_DOMAIN_FAILURE","resetGetLeadProductsDomain","GET_LEAD_PRODUCTS_DOMAIN_RESET","getLeadTagsDomain","GET_LEAD_TAGS_DOMAIN","GET_LEAD_TAGS_DOMAIN_SUCCESS","GET_LEAD_TAGS_DOMAIN_FAILURE","resetGetLeadTagsDomain","GET_LEAD_TAGS_DOMAIN_RESET","getPersonType","GET_PERSON_TYPE","GET_PERSON_TYPE_SUCCESS","GET_PERSON_TYPE_FAILURE","resetGetPersonType","GET_PERSON_TYPE_RESET","getLeadTemplates","GET_LEAD_TEMPLATES","GET_LEAD_TEMPLATES_SUCCESS","GET_LEAD_TEMPLATES_FAILURE","getLeadChannels","GET_LEAD_CHANNELS","GET_LEAD_CHANNELS_SUCCESS","GET_LEAD_CHANNELS_FAILURE","resetGetLeadChannels","GET_LEAD_CHANNELS_RESET","createSvgIcon","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","_default","createElement"],"mappings":"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","file":"static/js/37.a2795a4e.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { FieldEditMulti, FieldSelect, Title } from 'components';\r\nimport { getPaginatedPerson, getPersonExport, exportExcel, templateMaker, uploadExcel, array_trimmer, convertLocalDate, getColumnsSel, personcommunicationchannelUpdateLockedArrayIns, personImportValidation, importPerson } from 'common/helpers';\r\nimport { Dictionary, IPerson, IPersonImport, IFetchData } from \"@types\";\r\nimport { Box, Button, IconButton, MenuItem } from '@material-ui/core';\r\nimport { WhatsappIcon } from 'icons';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport paths from 'common/constants/paths';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport { getPersonListPaginated, resetGetPersonListPaginated, getDomainsByTypename, editPerson, getChannelListByPerson, getLeadsByPerson, getReferrerListByPerson, getTicketListByPerson, resetEditPerson, resetGetChannelListByPerson, resetGetDomainsByTypename, resetGetLeadsByPerson, resetGetReferrerListByPerson, resetGetTicketListByPerson } from 'store/person/actions';\r\nimport { manageConfirmation, showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { useForm, useFieldArray, UseFormGetValues, UseFormSetValue } from 'react-hook-form';\r\nimport { execute, resetAllMain, exportData } from 'store/main/actions';\r\nimport { FieldMultiSelect, FieldEditArray, DialogZyx } from 'components';\r\nimport TablePaginated, { buildQueryFilters, useQueryParams } from 'components/fields/table-paginated';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nimport { sendHSM } from 'store/inbox/actions';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport { makeStyles, styled } from '@material-ui/core/styles';\r\nimport { getLeadPhases, resetGetLeadPhases } from 'store/lead/actions';\r\n\r\nconst format = (datex: Date) => new Date(datex.setHours(10)).toISOString().substring(0, 10)\r\n\r\nconst selectionKey = 'personid';\r\n\r\nconst variables = ['firstname', 'lastname', 'displayname', 'email', 'phone', 'documenttype', 'documentnumber', 'dateactivity', 'leadactivity', 'datenote', 'note', 'custom'].map(x => ({ key: x }))\r\n\r\ninterface DialogSendTemplateProps {\r\n    setOpenModal: (param: any) => void;\r\n    openModal: boolean;\r\n    persons: IPerson[];\r\n    type: \"HSM\" | \"MAIL\" | \"SMS\";\r\n    onSubmitTrigger: () => void;\r\n}\r\n\r\nconst DialogSendTemplate: React.FC<DialogSendTemplateProps> = ({ setOpenModal, openModal, persons, type, onSubmitTrigger }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [waitClose, setWaitClose] = useState(false);\r\n    const sendingRes = useSelector(state => state.inbox.triggerSendHSM);\r\n    const [templatesList, setTemplatesList] = useState<Dictionary[]>([]);\r\n    const [channelList, setChannelList] = useState<Dictionary[]>([]);\r\n    const [bodyMessage, setBodyMessage] = useState('');\r\n    const [personWithData, setPersonWithData] = useState<IPerson[]>([])\r\n    const domains = useSelector(state => state.person.editableDomains);\r\n\r\n    const title = useMemo(() => {\r\n        switch (type) {\r\n            case \"HSM\": return t(langKeys.send_hsm);\r\n            case \"SMS\": return t(langKeys.send_sms);\r\n            case \"MAIL\": return t(langKeys.send_mail);\r\n            default: return '-';\r\n        }\r\n    }, [type]);\r\n    const { control, register, handleSubmit, setValue, getValues, trigger, reset, formState: { errors } } = useForm<any>({\r\n        defaultValues: {\r\n            hsmtemplateid: 0,\r\n            observation: '',\r\n            communicationchannelid: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].communicationchannelid : 0) : 0,\r\n            communicationchanneltype: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].type : \"\") : '',\r\n            variables: []\r\n        }\r\n    });\r\n\r\n    const { fields } = useFieldArray({\r\n        control,\r\n        name: 'variables',\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (waitClose) {\r\n            if (!sendingRes.loading && !sendingRes.error) {\r\n                const message = type === \"HSM\" ? t(langKeys.successful_send_hsm) : (type === \"SMS\" ? t(langKeys.successful_send_sms) : t(langKeys.successful_send_mail));\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                setWaitClose(false);\r\n                onSubmitTrigger()\r\n            } else if (sendingRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(sendingRes.code || \"error_unexpected_error\") }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitClose(false);\r\n            }\r\n        }\r\n    }, [sendingRes, waitClose])\r\n    useEffect(() => {\r\n    }, [channelList])\r\n\r\n    useEffect(() => {\r\n        if (!domains.error && !domains.loading) {\r\n            setTemplatesList(domains?.value?.templates?.filter(x => (type !== \"MAIL\" ? x.type === type : (x.type === type || x.type === \"HTML\"))) || []);\r\n            setChannelList(domains?.value?.channels?.filter(x => x.type.includes(type === \"HSM\" ? \"WHA\" : type)) || []);\r\n        }\r\n    }, [domains, type])\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            setBodyMessage('')\r\n            reset({\r\n                hsmtemplateid: 0,\r\n                hsmtemplatename: '',\r\n                variables: [],\r\n                communicationchannelid: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].communicationchannelid : 0) : 0,\r\n                communicationchanneltype: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].type : \"\") : ''\r\n            })\r\n            register('hsmtemplateid', { validate: (value) => ((value && value > 0) || t(langKeys.field_required)) });\r\n\r\n            if (type === \"HSM\") {\r\n                register('communicationchannelid', { validate: (value) => ((value && value > 0) || t(langKeys.field_required)) });\r\n            } else {\r\n                register('communicationchannelid');\r\n            }\r\n\r\n            if (type === \"MAIL\") {\r\n                setPersonWithData(persons.filter(x => x.email && x.email.length > 0))\r\n            } else if (type === \"HSM\") {\r\n                setPersonWithData(persons.filter(x => !!x.phonewhatsapp))\r\n            } else {\r\n                setPersonWithData(persons.filter(x => x.phone && x.phone.length > 0))\r\n            }\r\n        } else {\r\n            setWaitClose(false);\r\n        }\r\n    }, [openModal])\r\n\r\n    const onSelectTemplate = (value: Dictionary) => {\r\n        if (value) {\r\n            setBodyMessage(value.body);\r\n            setValue('hsmtemplateid', value ? value.id : 0);\r\n            setValue('hsmtemplatename', value ? value.name : '');\r\n            const variablesList = value.body.match(/({{)(.*?)(}})/g) || [];\r\n            const varaiblesCleaned = variablesList.map((x: string) => x.substring(x.indexOf(\"{{\") + 2, x.indexOf(\"}}\")))\r\n            setValue('variables', varaiblesCleaned.map((x: string) => ({ name: x, text: '', type: 'text' })));\r\n        } else {\r\n            setValue('hsmtemplatename', '');\r\n            setValue('variables', []);\r\n            setBodyMessage('');\r\n            setValue('hsmtemplateid', 0);\r\n        }\r\n    }\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (personWithData.length === 0) {\r\n            dispatch(showSnackbar({ show: true, severity: \"warning\", message: t(langKeys.no_people_to_send) }))\r\n            return\r\n        }\r\n        const messagedata = {\r\n            hsmtemplateid: data.hsmtemplateid,\r\n            hsmtemplatename: data.hsmtemplatename,\r\n            communicationchannelid: data.communicationchannelid,\r\n            communicationchanneltype: data.communicationchanneltype,\r\n            platformtype: data.communicationchanneltype,\r\n            type,\r\n            shippingreason: \"PERSON\",\r\n            listmembers: personWithData.map(person => ({\r\n                personid: person.personid,\r\n                phone: person.phonewhatsapp || \"\",\r\n                firstname: person.firstname || \"\",\r\n                email: person.email || \"\",\r\n                lastname: person.lastname,\r\n                parameters: data.variables.map((v: any) => ({\r\n                    type: \"text\",\r\n                    text: v.variable !== 'custom' ? (person as Dictionary)[v.variable] : v.text,\r\n                    name: v.name\r\n                }))\r\n            }))\r\n        }\r\n        dispatch(sendHSM(messagedata))\r\n        dispatch(showBackdrop(true));\r\n        setWaitClose(true)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (channelList.length === 1 && type === \"HSM\") {\r\n            setValue(\"communicationchannelid\", channelList[0].communicationchannelid || 0)\r\n            setValue('communicationchanneltype', channelList[0].type || \"\");\r\n            trigger(\"communicationchannelid\")\r\n        }\r\n    }, [channelList])\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={title}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.continue)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={onSubmit}\r\n            button2Type=\"submit\"\r\n        >\r\n            <div style={{ marginBottom: 8 }}>\r\n                {persons.length} {t(langKeys.persons_selected)}, {personWithData.length} {t(langKeys.with)} {type === \"MAIL\" ? t(langKeys.email).toLocaleLowerCase() : t(langKeys.phone).toLocaleLowerCase()}\r\n            </div>\r\n            {type === \"HSM\" && (\r\n                <div className=\"row-zyx\">\r\n                    <FieldSelect\r\n                        label={t(langKeys.channel)}\r\n                        className=\"col-12\"\r\n                        valueDefault={getValues('communicationchannelid')}\r\n                        onChange={value => {\r\n                            setValue('communicationchannelid', value?.communicationchannelid || 0);\r\n                            setValue('communicationchanneltype', value?.type || \"\");\r\n                        }}\r\n                        error={errors?.communicationchannelid?.message}\r\n                        data={channelList}\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        optionValue=\"communicationchannelid\"\r\n                    />\r\n                </div>\r\n            )}\r\n            <div className=\"row-zyx\">\r\n                <FieldSelect\r\n                    label={t(langKeys.template)}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('hsmtemplateid')}\r\n                    onChange={onSelectTemplate}\r\n                    error={errors?.hsmtemplateid?.message}\r\n                    data={templatesList}\r\n                    optionDesc=\"name\"\r\n                    optionValue=\"id\"\r\n                />\r\n            </div>\r\n            {type === 'MAIL' &&\r\n                <div style={{ overflow: 'scroll' }}>\r\n                    <React.Fragment>\r\n                        <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">{t(langKeys.message)}</Box>\r\n                        <div dangerouslySetInnerHTML={{ __html: bodyMessage }} />\r\n                    </React.Fragment>\r\n                </div>\r\n            }\r\n            {type !== 'MAIL' &&\r\n                <FieldEditMulti\r\n                    label={t(langKeys.message)}\r\n                    valueDefault={bodyMessage}\r\n                    disabled={true}\r\n                    rows={1}\r\n                />\r\n            }\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 16, marginTop: 16 }}>\r\n                {fields.map((item: Dictionary, i) => (\r\n                    <div key={item.id}>\r\n                        <FieldSelect\r\n                            key={\"var_\" + item.id}\r\n                            fregister={{\r\n                                ...register(`variables.${i}.variable`, {\r\n                                    validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                })\r\n                            }}\r\n                            label={item.name}\r\n                            valueDefault={getValues(`variables.${i}.variable`)}\r\n                            onChange={(value) => {\r\n                                setValue(`variables.${i}.variable`, value.key)\r\n                                trigger(`variables.${i}.variable`)\r\n                            }}\r\n                            error={errors?.variables?.[i]?.text?.message}\r\n                            data={variables}\r\n                            uset={true}\r\n                            prefixTranslation=\"\"\r\n                            optionDesc=\"key\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        {getValues(`variables.${i}.variable`) === 'custom' &&\r\n                            <FieldEditArray\r\n                                key={\"custom_\" + item.id}\r\n                                fregister={{\r\n                                    ...register(`variables.${i}.text`, {\r\n                                        validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                    })\r\n                                }}\r\n                                valueDefault={item.value}\r\n                                error={errors?.variables?.[i]?.text?.message}\r\n                                onChange={(value) => setValue(`variables.${i}.text`, \"\" + value)}\r\n                            />\r\n                        }\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </DialogZyx>)\r\n}\r\n\r\nconst CountTicket: FC<{ label: string, count: string, color: string }> = ({ label, count, color }) => (\r\n    <div style={{ position: 'relative' }}>\r\n        <div style={{ color: color, padding: '3px 4px', whiteSpace: 'nowrap', fontSize: '12px' }}>{label}: <span style={{ fontWeight: 'bold' }}>{count}</span></div>\r\n        <div style={{ backgroundColor: color, width: '100%', height: '24px', opacity: '0.1', position: 'absolute', top: 0, left: 0 }}></div>\r\n    </div>\r\n)\r\n\r\n\r\nexport const TemplateIcons: React.FC<{\r\n    sendHSM?: (data: any) => void;\r\n    sendSMS: (data: any) => void;\r\n    sendMAIL: (data: any) => void;\r\n}> = ({ sendHSM, sendSMS, sendMAIL }) => {\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const handleClose = (e: any) => {\r\n        e.stopPropagation();\r\n        setAnchorEl(null);\r\n    };\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div style={{ whiteSpace: 'nowrap', display: 'flex' }}>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                size=\"small\"\r\n\r\n                onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setAnchorEl(e.currentTarget);\r\n                }}\r\n            >\r\n                <MoreVertIcon style={{ color: '#B6B4BA' }} />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                {sendHSM &&\r\n                    <MenuItem onClick={(e) => {\r\n                        sendHSM(e);\r\n                        handleClose(e)\r\n                    }}>\r\n                        <ListItemIcon color=\"inherit\">\r\n                            <WhatsappIcon width={22} style={{ fill: '#7721AD' }} />\r\n                        </ListItemIcon>\r\n                        {t(langKeys.send_hsm)}\r\n                    </MenuItem>\r\n                }\r\n                <MenuItem onClick={(e) => {\r\n                    sendSMS(e);\r\n                    handleClose(e)\r\n                }}>\r\n                    <ListItemIcon color=\"inherit\">\r\n                        <SmsIcon width={18} style={{ fill: '#7721AD' }} />\r\n                    </ListItemIcon>\r\n                    {t(langKeys.send_sms)}\r\n                </MenuItem>\r\n                <MenuItem onClick={(e) => {\r\n                    sendMAIL(e);\r\n                    handleClose(e)\r\n                }}>\r\n                    <ListItemIcon color=\"inherit\">\r\n                        <MailIcon width={18} style={{ fill: '#7721AD' }} />\r\n                    </ListItemIcon>\r\n                    {t(langKeys.send_mail)}\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Person: FC = () => {\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const [fetchDataAux, setfetchDataAux] = useState<IFetchData>({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n    const personList = useSelector(state => state.person.personList);\r\n    const domains = useSelector(state => state.person.editableDomains);\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [totalrow, settotalrow] = useState(0);\r\n    const resExportData = useSelector(state => state.main.exportData);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const [waitExport, setWaitExport] = useState(false);\r\n    const [waitImport, setWaitImport] = useState(false);\r\n    const [importData, setImportData] = useState<Dictionary>([]);\r\n    const [openDialogTemplate, setOpenDialogTemplate] = useState(false)\r\n    const [waitValidation, setWaitValidation] = useState(false);\r\n    const [selectedRows, setSelectedRows] = useState<Dictionary>({});\r\n    const [personsSelected, setPersonsSelected] = useState<IPerson[]>([]);\r\n    const [typeTemplate, setTypeTemplate] = useState<\"HSM\" | \"SMS\" | \"MAIL\">('MAIL');\r\n    const [cleanSelected, setCleanSelected] = useState(false)\r\n\r\n    const query = useMemo(() => new URLSearchParams(location.search), [location]);\r\n    const params = useQueryParams(query, { ignore: ['channelTypes'] });\r\n\r\n    const [filterChannelsType, setFilterChannelType] = useState(query.get('channelTypes') || '');\r\n\r\n    const goToPersonDetail = (person: IPerson) => {\r\n        history.push({\r\n            pathname: paths.PERSON_DETAIL.resolve(person.personid),\r\n            state: person,\r\n        });\r\n    }\r\n    const columns = useMemo(() => ([\r\n        {\r\n            accessor: 'leadid',\r\n            isComponent: true,\r\n            minWidth: 60,\r\n            width: '1%',\r\n            Cell: (props: any) => {\r\n                const person = props.cell.row.original as IPerson;\r\n                return (\r\n                    <TemplateIcons\r\n                        sendHSM={person.phonewhatsapp ? (e) => {\r\n                            e.stopPropagation();\r\n                            setPersonsSelected([person]);\r\n                            setOpenDialogTemplate(true);\r\n                            setTypeTemplate(\"HSM\");\r\n                        } : undefined}\r\n                        sendSMS={(e) => {\r\n                            e.stopPropagation();\r\n                            setPersonsSelected([person]);\r\n                            setOpenDialogTemplate(true);\r\n                            setTypeTemplate(\"SMS\");\r\n                        }}\r\n                        sendMAIL={(e) => {\r\n                            e.stopPropagation();\r\n                            setPersonsSelected([person]);\r\n                            setOpenDialogTemplate(true);\r\n                            setTypeTemplate(\"MAIL\");\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        },\r\n        {\r\n            Header: t(langKeys.name),\r\n            accessor: 'name',\r\n        },\r\n        {\r\n            Header: t(langKeys.personType),\r\n            accessor: 'persontype',\r\n        },\r\n        {\r\n            Header: t(langKeys.phone),\r\n            accessor: 'phone',\r\n        },\r\n        {\r\n            Header: t(langKeys.email),\r\n            accessor: 'email',\r\n        },\r\n        {\r\n            Header: t(langKeys.lastContactDate),\r\n            accessor: 'lastcontact',\r\n            type: 'date',\r\n            sortType: 'datetime',\r\n            Cell: (props: any) => {\r\n                const row = props.cell.row.original;\r\n                return row.lastcontact ? convertLocalDate(row.lastcontact).toLocaleString() : \"\"\r\n            }\r\n        },\r\n        {\r\n            Header: t(langKeys.lastuser),\r\n            accessor: 'lastuser',\r\n        },\r\n        {\r\n            Header: t(langKeys.lead),\r\n            accessor: 'phasejson',\r\n            type: \"select\",\r\n            listSelectFilter: [\r\n                { key: t(langKeys.new), value: \"0,New\" },\r\n                { key: t(langKeys.qualified), value: \"1,Qualified\" },\r\n                { key: t(langKeys.proposition), value: \"2,Proposition\" },\r\n                { key: t(langKeys.won), value: \"3,Won\" },\r\n                { key: t(langKeys.lost), value: \"4,Lost\" },\r\n            ],\r\n            // listSelectFilter: phases.loading || phases.error ? [] : phases.data.map(x => ({\r\n            //     key: x.description,\r\n            //     value: `${x.index},${x.description}`,\r\n            // })),\r\n            Cell: (props: any) => {\r\n                const { phasejson } = props.cell.row.original;\r\n                if (!phasejson)\r\n                    return null;\r\n                return (\r\n                    <div style={{ display: 'flex', gap: 4, flexDirection: 'column' }}>\r\n                        {Object.entries(phasejson).sort(([aKey], [bKey]) => {\r\n                            const aIndex = Number(aKey.split(',')[0]);\r\n                            const bIndex = Number(bKey.split(',')[0]);\r\n                            return aIndex - bIndex;\r\n                        }).map(([key, value]) => (\r\n                            <CountTicket\r\n                                label={key.split(',')[1]}\r\n                                key={key}\r\n                                count={value + \"\"}\r\n                                color=\"#55BD84\"\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            Header: t(langKeys.status),\r\n            accessor: 'status',\r\n            prefixTranslation: 'status_',\r\n            Cell: (props: any) => {\r\n                const { status } = props.cell.row.original;\r\n                return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n            }\r\n        },\r\n        {\r\n            Header: t(langKeys.address),\r\n            accessor: 'address',\r\n        },\r\n        {\r\n            Header: t(langKeys.healthprofessional),\r\n            accessor: 'healthprofessional',\r\n        },\r\n        {\r\n            Header: t(langKeys.referralchannel),\r\n            accessor: 'referralchannel',\r\n        },\r\n        {\r\n            Header: t(langKeys.comments),\r\n            accessor: 'datenote',\r\n            Cell: (props: any) => {\r\n                const { datenote, note, dateactivity, leadactivity } = props.cell.row.original;\r\n                return (\r\n                    <div>\r\n                        {datenote && <div>{t(langKeys.lastnote)} ({convertLocalDate(datenote).toLocaleString()}) {note}</div>}\r\n                        {dateactivity && <div>{t(langKeys.nextprogramedactivity)} ({convertLocalDate(dateactivity).toLocaleString()}) {leadactivity}</div>}\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n    ]), [t, setPersonsSelected]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDomainsByTypename());\r\n        dispatch(getLeadPhases(getColumnsSel(0, true)));\r\n\r\n        return () => {\r\n            dispatch(resetGetPersonListPaginated());\r\n            dispatch(resetGetLeadPhases());\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!personList.loading && !personList.error) {\r\n            setPageCount(Math.ceil(personList.count / fetchDataAux.pageSize));\r\n            settotalrow(personList.count);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [personList]);\r\n\r\n    const fetchData = ({ pageSize, pageIndex, filters, sorts, daterange }: IFetchData) => {\r\n        setfetchDataAux({ pageSize, pageIndex, filters, sorts, daterange })\r\n        dispatch(getPersonListPaginated(getPaginatedPerson({\r\n            startdate: daterange?.startDate || format(new Date(new Date().setDate(1))),\r\n            enddate: daterange?.endDate || format(new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0)),\r\n            skip: pageSize * pageIndex,\r\n            take: pageSize,\r\n            sorts,\r\n            filters: filters,\r\n            userids: '',\r\n            channeltypes: filterChannelsType\r\n        })));\r\n    }\r\n\r\n    const triggerExportData = ({ filters, sorts, daterange }: IFetchData) => {\r\n        const columnsExport = columns.filter(x => !x.isComponent).map(x => ({\r\n            key: x.accessor,\r\n            alias: x.Header,\r\n        }));\r\n        dispatch(exportData(getPersonExport(\r\n            {\r\n                startdate: daterange.startDate!,\r\n                enddate: daterange.endDate!,\r\n                sorts,\r\n                filters: filters,\r\n                userids: '',\r\n                personcommunicationchannels: filterChannelsType,\r\n            }), \"\", \"excel\", false, columnsExport));\r\n        dispatch(showBackdrop(true));\r\n        setWaitExport(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (waitExport) {\r\n            if (!resExportData.loading && !resExportData.error) {\r\n                dispatch(showBackdrop(false));\r\n                setWaitExport(false);\r\n                resExportData.url?.split(\",\").forEach(x => window.open(x, '_blank'))\r\n            } else if (resExportData.error) {\r\n                const errormessage = t(resExportData.code || \"error_unexpected_error\", { module: t(langKeys.person).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitExport(false);\r\n            }\r\n        }\r\n    }, [resExportData, waitExport]);\r\n\r\n    const handleTemplate = () => {\r\n        const data = [\r\n            {},\r\n            {},\r\n            domains.value?.docTypes.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_documenttype_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            {},\r\n            domains.value?.personGenTypes.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_persontype_${d.domaindesc?.toLowerCase()}`) }), {}),\r\n            domains.value?.personTypes.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_personlevel_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            {},\r\n            domains.value?.genders.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_gender_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            domains.value?.educationLevels.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_educationlevel_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            domains.value?.civilStatuses.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_civilstatus_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            domains.value?.occupations.reduce((a, d) => ({ ...a, [d.domainvalue]: t(`type_ocupation_${d.domainvalue?.toLowerCase()}`) }), {}),\r\n            domains.value?.groups.reduce((a, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {}),\r\n            //domains.value?.channelTypes.reduce((a, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {}),\r\n            //{},\r\n            {},\r\n            {},\r\n            {},\r\n            {}\r\n        ];\r\n        const header = [\r\n            'firstname',\r\n            'lastname',\r\n            'documenttype',\r\n            'documentnumber',\r\n            'persontype',\r\n            'type',\r\n            'phone',\r\n            'alternativephone',\r\n            'email',\r\n            'alternativeemail',\r\n            'birthday',\r\n            'gender',\r\n            'educationlevel',\r\n            'civilstatus',\r\n            'occupation',\r\n            'groups',\r\n            //'channeltype',\r\n            //'personcommunicationchannel',\r\n            //'personcommunicationchannelowner',\r\n            'displayname',\r\n            'address',\r\n            'healthprofessional',\r\n            'referralchannel',\r\n        ];\r\n        exportExcel(t(langKeys.template), templateMaker(data, header));\r\n    }\r\n\r\n    const handleUpload = async (files: any) => {\r\n        const file = files?.item(0);\r\n        files=null\r\n        if (file) {\r\n            let excel: any = await uploadExcel(file, undefined);\r\n            let data: IPersonImport[] = array_trimmer(excel);\r\n            data = data.filter((f: IPersonImport) =>\r\n                (f.documenttype === undefined || Object.keys(domains.value?.docTypes.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.documenttype))\r\n                && (f.persontype === undefined || Object.keys(domains.value?.personGenTypes.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {})).includes('' + f.persontype))\r\n                && (f.type === undefined || Object.keys(domains.value?.personTypes.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.type))\r\n                && (f.gender === undefined || Object.keys(domains.value?.genders.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.gender))\r\n                && (f.educationlevel === undefined || Object.keys(domains.value?.educationLevels.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.educationlevel))\r\n                && (f.civilstatus === undefined || Object.keys(domains.value?.civilStatuses.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.civilstatus))\r\n                && (f.occupation === undefined || Object.keys(domains.value?.occupations.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domainvalue }), {})).includes('' + f.occupation))\r\n                && (f.groups === undefined || Object.keys(domains.value?.groups.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {})).includes('' + f.groups))\r\n                //&& (f.channeltype === undefined || Object.keys(domains.value?.channelTypes.reduce((a: any, d) => ({ ...a, [d.domainvalue]: d.domaindesc }), {})).includes('' + f.channeltype))\r\n            );\r\n            if (data.length > 0) {\r\n                let datavalidation = data.reduce((acc:any,x:any)=>[...acc,{phone:x.phone,alternativephone:x.alternativephone,email:x.email,alternativeemail:x.alternativeemail}],[])\r\n                let table: Dictionary = data.reduce((a: any, d: IPersonImport,i:number) => ({\r\n                    ...a,\r\n                    [`${d.firstname}_${d.lastname}_${i}`]: {\r\n                        personid: 0,\r\n                        firstname: d.firstname || null,\r\n                        lastname: d.lastname || null,\r\n                        documenttype: d.documenttype||\"\",\r\n                        documentnumber: d.documentnumber||\"\",\r\n                        persontype: d.persontype || null,\r\n                        type: d.type || '',\r\n                        phone: String(d.phone|| \"\") ,\r\n                        alternativephone: String(d?.alternativephone|| \"\") ,\r\n                        email: d.email || null,\r\n                        alternativeemail: d.alternativeemail || null,\r\n                        birthday: d.birthday || null,\r\n                        gender: d.gender || null,\r\n                        educationlevel: d.educationlevel || null,\r\n                        civilstatus: d.civilstatus || null,\r\n                        occupation: d.occupation || null,\r\n                        address: d.address|| \"\",\r\n                        healthprofessional: d.healthprofessional|| \"\",\r\n                        referralchannel: d.referralchannel|| \"\",\r\n                        groups: d.groups || null,\r\n                        status: 'ACTIVO',\r\n                        personstatus: 'ACTIVO',\r\n                        referringpersonid: 0,\r\n                        geographicalarea: null,\r\n                        age: null,\r\n                        sex: null,\r\n                        operation: 'INSERT',\r\n                    }\r\n                }), {});                \r\n                setImportData(table)\r\n                \r\n                const callback = () => {\r\n                    dispatch(execute(personImportValidation({\r\n                        table: JSON.stringify(datavalidation)\r\n                    })))\r\n                    setWaitValidation(true)\r\n                    dispatch(showBackdrop(true));\r\n                }\r\n                dispatch(manageConfirmation({\r\n                    visible: true,\r\n                    question: t(langKeys.confirmation_save),\r\n                    callback\r\n                }))\r\n            }\r\n            else {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(langKeys.no_records_valid) }));\r\n            }\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (waitValidation) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                let phonesexisting:any[] = []\r\n                let emailsexisting:any[] = []\r\n                const callback = () => {\r\n                    setWaitImport(true)\r\n                    dispatch(showBackdrop(true));\r\n                    dispatch(execute(importPerson(Object.values(importData))))\r\n                }\r\n                if (executeResult?.data[0]?.phone) phonesexisting = phonesexisting.concat(executeResult.data[0].phone.split(','))\r\n                if (executeResult?.data[0]?.alternativephone) phonesexisting = phonesexisting.concat(executeResult.data[0].alternativephone.split(','))\r\n                if (executeResult?.data[0]?.email) emailsexisting = emailsexisting.concat(executeResult.data[0].email.split(','))\r\n                if (executeResult?.data[0]?.alternativeemail) emailsexisting = emailsexisting.concat(executeResult.data[0].alternativeemail.split(','))\r\n                if (phonesexisting.length === 0 && emailsexisting.length === 0) {\r\n                    callback()\r\n                } else {\r\n                    let warningmessage = \"\"\r\n                    if(phonesexisting.length!==0){\r\n                        warningmessage += ` ${t(langKeys.phone)}: ${phonesexisting.join(', ')}`\r\n                    }\r\n                    if(emailsexisting.length!==0){\r\n                        warningmessage += ` ${t(langKeys.email)}: ${emailsexisting.join(', ')}`\r\n                    }\r\n                    dispatch(showBackdrop(false));\r\n                    dispatch(manageConfirmation({\r\n                        visible: true,\r\n                        question: `${t(langKeys.personrepeatedwarning1)}${warningmessage}`,\r\n                        callback: callback\r\n                    }))\r\n                }\r\n                setWaitValidation(false);\r\n            } else if (executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: \"error\" }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitValidation(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitValidation]);\r\n\r\n    const handleLock = (type: \"LOCK\" | \"UNLOCK\") => {\r\n        const callback = () => {\r\n            const data = personsSelected.map(p => ({\r\n                personid: p.personid,\r\n                // personcommunicationchannel: p.personcommunicationchannel,\r\n                locked: type === \"LOCK\",\r\n            }));\r\n            dispatch(execute(personcommunicationchannelUpdateLockedArrayIns(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitImport(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: type === \"UNLOCK\" ? t(langKeys.confirmation_person_unlock) : t(langKeys.confirmation_person_lock),\r\n            callback\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitImport) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }))\r\n                fetchData(fetchDataAux);\r\n                dispatch(showBackdrop(false));\r\n                setWaitImport(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.quickreplies).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitImport(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitImport])\r\n\r\n    useEffect(() => {\r\n        if (!(Object.keys(selectedRows).length === 0 && personsSelected.length === 0)) {\r\n            setPersonsSelected(p => Object.keys(selectedRows).map(x => personList.data.find(y => y.personid === parseInt(x)) || p.find(y => y.personid === parseInt(x)) || {} as IPerson))\r\n        }\r\n    }, [selectedRows])\r\n\r\n    return (\r\n        <div style={{ height: '100%', width: 'inherit' }}>\r\n\r\n            <div style={{ display: 'flex', gap: 8, flexDirection: 'row', marginBottom: 12, marginTop: 4 }}>\r\n                <div style={{ flexGrow: 1 }} >\r\n                    <Title><Trans i18nKey={langKeys.person} count={2} /></Title>\r\n                </div>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                    disabled={personList.loading || Object.keys(selectedRows).length === 0}\r\n                    startIcon={<LockIcon color=\"secondary\" />}\r\n                    onClick={() => handleLock(\"LOCK\")}\r\n                >\r\n                    <Trans i18nKey={langKeys.lock} />\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                    disabled={personList.loading || Object.keys(selectedRows).length === 0}\r\n                    startIcon={<LockOpenIcon color=\"secondary\" />}\r\n                    onClick={() => handleLock(\"UNLOCK\")}\r\n                >\r\n                    <Trans i18nKey={langKeys.unlock} />\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={personList.loading || Object.keys(selectedRows).length === 0}\r\n                    startIcon={<WhatsappIcon width={24} style={{ fill: '#FFF' }} />}\r\n                    onClick={() => {\r\n                        setOpenDialogTemplate(true);\r\n                        setTypeTemplate(\"HSM\");\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.send_hsm} />\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={personList.loading || Object.keys(selectedRows).length === 0}\r\n                    startIcon={<MailIcon width={24} style={{ fill: '#FFF' }} />}\r\n                    onClick={() => {\r\n                        setOpenDialogTemplate(true);\r\n                        setTypeTemplate(\"MAIL\");\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.send_mail} />\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={personList.loading || Object.keys(selectedRows).length === 0}\r\n                    startIcon={<SmsIcon width={24} style={{ fill: '#FFF' }} />}\r\n                    onClick={() => {\r\n                        setOpenDialogTemplate(true);\r\n                        setTypeTemplate(\"SMS\");\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.send_sms} />\r\n                </Button>\r\n            </div>\r\n            <TablePaginated\r\n                columns={columns}\r\n                data={personList.data}\r\n                pageCount={pageCount}\r\n                totalrow={totalrow}\r\n                loading={personList.loading}\r\n                filterrange={true}\r\n                download={true}\r\n                exportPersonalized={triggerExportData}\r\n                fetchData={fetchData}\r\n                useSelection={true}\r\n                selectionKey={selectionKey}\r\n                setSelectedRows={setSelectedRows}\r\n                initialSelectedRows={selectedRows}\r\n                onClickRow={goToPersonDetail}\r\n                cleanSelection={cleanSelected}\r\n                setCleanSelection={setCleanSelected}\r\n                register={true}\r\n                ButtonsElement={() => (\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={personList.loading}\r\n                        startIcon={<ListAltIcon color=\"secondary\" />}\r\n                        onClick={handleTemplate}\r\n                        style={{ backgroundColor: \"#55BD84\" }}\r\n                    >\r\n                        <Trans i18nKey={langKeys.template} />\r\n                    </Button>\r\n                )}\r\n                importCSV={handleUpload}\r\n                handleRegister={() => history.push({\r\n                    pathname: paths.PERSON_DETAIL.resolve(0),\r\n                    state: {},\r\n                })}\r\n                onFilterChange={f => {\r\n                    const filterParams = buildQueryFilters(f);\r\n                    if (filterChannelsType !== '') filterParams.append('channelTypes', filterChannelsType);\r\n                    history.push({ search: filterParams.toString() });\r\n                }}\r\n                initialEndDate={params.endDate}\r\n                initialStartDate={params.startDate}\r\n                initialFilters={params.filters}\r\n                initialPageIndex={params.page}\r\n                FiltersElement={useMemo(() => (\r\n                    <FieldMultiSelect\r\n                        onChange={(value) => setFilterChannelType(value.map((o: any) => o.type).join())}\r\n                        size=\"small\"\r\n                        label={t(langKeys.channel)}\r\n                        style={{ maxWidth: 300, minWidth: 200 }}\r\n                        variant=\"outlined\"\r\n                        loading={domains.loading}\r\n                        data={domains.value?.channels || []}\r\n                        optionValue=\"type\"\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        valueDefault={filterChannelsType}\r\n                    />\r\n                ), [filterChannelsType, domains, t])}\r\n                autotrigger={!(params.startDate === 0 && params.endDate === 0 && params.page === 0)}\r\n            />\r\n            <DialogSendTemplate\r\n                openModal={openDialogTemplate}\r\n                setOpenModal={setOpenDialogTemplate}\r\n                persons={personsSelected}\r\n                type={typeTemplate}\r\n                onSubmitTrigger={() => {\r\n                    setCleanSelected(true)\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Person;","import React, { useState, useEffect, useMemo } from 'react';\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TableConfig, Pagination, Dictionary, ITablePaginatedFilter } from '@types'\r\nimport { Trans } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { langKeys } from 'lang/keys';\r\nimport { DownloadIcon, CalendarIcon } from 'icons';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport clsx from 'clsx';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Search as SearchIcon,\r\n    Add as AddIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n} from 'react-table'\r\nimport { Range } from 'react-date-range';\r\nimport { DateRangePicker } from 'components';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { BooleanOptionsMenuComponent, DateOptionsMenuComponent, SelectFilterTmp, OptionsMenuComponent, TimeOptionsMenuComponent } from './table-simple';\r\nimport { getDateToday, getFirstDayMonth, getLastDayMonth, getDateCleaned } from 'common/helpers';\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        padding: '4px 24px 4px 16px',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    containerButtonsNoFilters: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'end',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\n\r\nconst DefaultColumnFilter = ({ header, type, setFilters, filters, listSelectFilter }: any) => {\r\n    const [value, setValue] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [operator, setoperator] = useState(\"contains\");\r\n\r\n    useEffect(() => {\r\n        switch (type) {\r\n            case \"number\": case \"number-centered\": case \"date\": case \"datetime-local\": case \"time\": case \"select\":\r\n                setoperator(\"equals\");\r\n                break;\r\n            case \"boolean\":\r\n                setoperator(\"all\");\r\n                break;\r\n            case \"string\": case \"color\":\r\n            default:\r\n                setoperator(\"contains\");\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    useEffect(() => {\r\n        if (['number', 'number-centered'].includes(type))\r\n            setoperator(\"equals\");\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [type])\r\n\r\n    const keyPress = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            if (value || operator === \"noempty\" || operator === \"empty\")\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value,\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            else\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n        }\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickItemMenu = (op: any) => {\r\n        setAnchorEl(null);\r\n        setoperator(op)\r\n        if (type === 'boolean') {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: {\r\n                    value: op,\r\n                    operator: op\r\n                },\r\n            }, 0)\r\n        } else if (type === \"select\") {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: op === \"_ALL\" ? undefined : {\r\n                    value: op,\r\n                    operator: \"equals\"\r\n                },\r\n            }, 0)\r\n        } else if (type === \"text\" || !type) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else if (['number', 'number-centered'].includes(type)) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value !== '') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        }\r\n    };\r\n    const handleClickMenu = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDate = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toISOString().split('T')[0] || '',\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTime = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toLocaleTimeString(),\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(filters).length === 0) setValue('');\r\n        else if (header in filters) {\r\n            setValue(filters?.[header]?.value || '');\r\n            if (filters?.[header]) setoperator(filters[header].operator);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters]);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {type === 'boolean' ?\r\n                <BooleanOptionsMenuComponent\r\n                    value={value}\r\n                    handleClickItemMenu={handleClickItemMenu}\r\n                />\r\n                :\r\n                (type === \"select\" ?\r\n                    <SelectFilterTmp\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                        data={listSelectFilter || []}\r\n                    /> :\r\n\r\n                    <React.Fragment>\r\n                        {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                        {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                        {!['date', 'time'].includes(type) &&\r\n                            <Input\r\n                                style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                type={['number', 'number-centered'].includes(type) ? \"number\" : \"text\"}\r\n                                fullWidth\r\n                                value={value}\r\n                                onKeyDown={keyPress}\r\n                                onChange={e => setValue(e.target.value)}\r\n                            />}\r\n                        <IconButton\r\n                            onClick={handleClickMenu}\r\n                            size=\"small\"\r\n                        >\r\n                            <MoreVertIcon\r\n                                style={{ cursor: 'pointer' }}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"action\"\r\n                                fontSize=\"small\"\r\n                            />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleCloseMenu}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {OptionsMenuComponent(type || 'string', operator, handleClickItemMenu)}\r\n                        </Menu>\r\n                    </React.Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    filterrange,\r\n    totalrow,\r\n    pageCount: controlledPageCount,\r\n    download,\r\n    register,\r\n    handleRegister,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    exportPersonalized,\r\n    loading,\r\n    importCSV,\r\n    autotrigger = false,\r\n    autoRefresh,\r\n    useSelection,\r\n    selectionKey,\r\n    selectionFilter,\r\n    initialSelectedRows,\r\n    cleanSelection,\r\n    setCleanSelection,\r\n    setSelectedRows,\r\n    onClickRow,\r\n    FiltersElement,\r\n    filterRangeDate = \"month\",\r\n    onFilterChange,\r\n    initialEndDate = null,\r\n    initialStartDate = null,\r\n    initialFilters = {},\r\n    initialPageIndex = 0,\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const [pagination, setPagination] = useState<Pagination>({ sorts: {}, filters: initialFilters, pageIndex: initialPageIndex });\r\n    const [openDateRangeModal, setOpenDateRangeModal] = useState(false);\r\n    const [triggerSearch, setTriggerSearch] = useState(autotrigger);\r\n    const [tFilters, setTFilters] = useState<ITablePaginatedFilter>({\r\n        startDate: initialStartDate,\r\n        endDate: initialEndDate,\r\n        page: initialPageIndex,\r\n        filters: initialFilters,\r\n    });\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        setPageSize,\r\n        toggleAllRowsSelected,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: initialPageIndex, pageSize: 20, selectedRowIds: initialSelectedRows || {} },\r\n            manualPagination: true, // Tell the usePagination\r\n            pageCount: controlledPageCount,\r\n            useControlledState: (state: any) => {\r\n                return useMemo(() => ({\r\n                    ...state,\r\n                    pageIndex: pagination.pageIndex,\r\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                }), [state, pagination.pageIndex])\r\n            },\r\n            autoResetSelectedRows: false,\r\n            getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n                ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n                : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n            stateReducer: (newState, action) => {\r\n                switch (action.type) {\r\n                    case 'toggleAllRowsSelected':\r\n                        return {\r\n                            ...newState,\r\n                            selectedRowIds: {},\r\n                        };\r\n                    default:\r\n                        return newState;\r\n                }\r\n            }\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps, filteredRows }: any) => (\r\n                        !selectionFilter\r\n                            ?\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    {...getToggleAllPageRowsSelectedProps()}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={filteredRows\r\n                                        .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                        .every((p: any) => p.isSelected)\r\n                                    }\r\n                                    onChange={() => {\r\n                                        filteredRows\r\n                                            .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                            .forEach((p: any) => {\r\n                                                p.toggleRowSelected();\r\n                                            })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n                        !selectionFilter || row.original[selectionFilter?.key] === selectionFilter?.value\r\n                            ? <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />\r\n                            </div>\r\n                            : null\r\n                    ),\r\n                    NoFilter: true,\r\n                    isComponent: true\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    const setFilters = (filters: any, page: number) => {\r\n        setPagination(prev => {\r\n            // const pageIndex = !page ? prev.pageIndex : page;\r\n            return { ...prev, filters, pageIndex: 0, trigger: true }\r\n        });\r\n    };\r\n    const setPageIndex = (page: number) => {\r\n        setPagination(prev => ({ ...prev, pageIndex: page, trigger: true }));\r\n        setTFilters(prev => ({ ...prev, page }));\r\n    }\r\n    const handleClickSort = (column: string) => {\r\n        let newsorts: any = {};\r\n        if (Object.keys(pagination.sorts).includes(column)) {\r\n            newsorts = {\r\n                ...pagination.sorts\r\n            }\r\n        }\r\n\r\n        if (newsorts[column] === \"desc\") {\r\n            delete newsorts[column]\r\n        }\r\n        else {\r\n            if (newsorts[column] === \"asc\") {\r\n                newsorts[column] = \"desc\";\r\n            }\r\n            else {\r\n                newsorts[column] = \"asc\";\r\n            }\r\n        }\r\n\r\n        setPagination(prev => ({ ...prev, sorts: newsorts, trigger: true }))\r\n    }\r\n\r\n    const [dateRange, setdateRange] = useState<Range>({\r\n        startDate: initialStartDate ? new Date(initialStartDate) : filterRangeDate === \"month\" ? getFirstDayMonth() : getDateToday(),\r\n        endDate: initialEndDate ? new Date(initialEndDate) : filterRangeDate === \"month\" ? getLastDayMonth() : getDateToday(),\r\n        key: 'selection'\r\n    });\r\n\r\n    const triggertmp = (fromButton: boolean = false) => {\r\n        if (fromButton)\r\n            setPagination(prev => ({ ...prev, pageIndex: initialPageIndex, trigger: false }));\r\n\r\n        if (!fetchData) return;\r\n        fetchData({\r\n            ...pagination,\r\n            pageSize,\r\n            pageIndex: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n            }\r\n        });\r\n        setTFilters(prev => ({\r\n            ...prev,\r\n            page: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            startDate: dateRange.startDate ? (new Date(dateRange.startDate.setHours(10))).getTime() : null,\r\n            endDate: dateRange.endDate ? (new Date(dateRange.endDate.setHours(10))).getTime() : null,\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cleanSelection) {\r\n            toggleAllRowsSelected(false)\r\n            setSelectedRows && setSelectedRows({})\r\n            setCleanSelection && setCleanSelection(false)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cleanSelection])\r\n\r\n    useEffect(() => {\r\n        if (pagination?.trigger) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pagination, triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pageSize])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggerSearch && triggertmp(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (autoRefresh?.value) {\r\n            triggertmp();\r\n            autoRefresh?.callback(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoRefresh])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        onFilterChange?.(tFilters);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tFilters]);\r\n\r\n    const exportData = () => {\r\n        exportPersonalized && exportPersonalized({\r\n            ...pagination,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box width={1}>\r\n            {titlemodule && <div className={classes.title}>{titlemodule}</div>}\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\">\r\n                <div className={clsx({\r\n                    [classes.containerButtons]: !!FiltersElement,\r\n                    [classes.containerButtonsNoFilters]: !FiltersElement\r\n                })}>\r\n                    {filterrange && (\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                            <DateRangePicker\r\n                                open={openDateRangeModal}\r\n                                setOpen={setOpenDateRangeModal}\r\n                                range={dateRange}\r\n                                onSelect={setdateRange}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    style={{ border: '1px solid #bfbfc0', borderRadius: 4, color: 'rgb(143, 146, 161)' }}\r\n                                    startIcon={<CalendarIcon />}\r\n                                    onClick={() => setOpenDateRangeModal(!openDateRangeModal)}\r\n                                >\r\n                                    {getDateCleaned(dateRange.startDate!) + \" - \" + getDateCleaned(dateRange.endDate!)}\r\n                                </Button>\r\n                            </DateRangePicker>\r\n                            {FiltersElement && FiltersElement}\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<SearchIcon style={{ color: 'white' }} />}\r\n                                style={{ backgroundColor: '#55BD84', width: 120 }}\r\n                                onClick={() => {\r\n                                    if (triggerSearch)\r\n                                        triggertmp(true)\r\n                                    setTriggerSearch(true)\r\n                                }}\r\n                            >\r\n                                <Trans i18nKey={langKeys.search} />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                        {ButtonsElement && <ButtonsElement />}\r\n                        {importCSV && (\r\n                            <>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    id=\"laraigo-upload-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => importCSV(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        component=\"span\"\r\n                                        color=\"primary\"\r\n                                        disabled={loading}\r\n                                        startIcon={<BackupIcon color=\"secondary\" />}\r\n                                        style={{ backgroundColor: \"#55BD84\" }}\r\n                                    ><Trans i18nKey={langKeys.import} />\r\n                                    </Button>\r\n                                </label>\r\n                            </>\r\n                        )}\r\n                        {register && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                startIcon={<AddIcon color=\"secondary\" />}\r\n                                onClick={handleRegister}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            ><Trans i18nKey={langKeys.register} />\r\n                            </Button>\r\n                        )}\r\n                        {download && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                onClick={exportData}\r\n                                // exportPersonalized\r\n                                startIcon={<DownloadIcon />}\r\n                            ><Trans i18nKey={langKeys.download} />\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\">\r\n                    <MaUTable {...getTableProps()} aria-label=\"enhanced table\" size=\"small\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell\r\n                                                key={ii}\r\n                                            >\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header')\r\n                                                    :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n                                                                component=\"div\"\r\n                                                                {...column.getHeaderProps()}\r\n                                                                onClick={() => !column.NoSort && handleClickSort(column.id)}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {pagination.sorts[column.id] && (pagination.sorts[column.id] === \"asc\" ?\r\n                                                                    <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                    : <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />)\r\n                                                                }\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12, whiteSpace: 'break-spaces' }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        {!column.NoFilter &&\r\n                                                            <DefaultColumnFilter\r\n                                                                header={column.id}\r\n                                                                listSelectFilter={column.listSelectFilter || []}\r\n                                                                type={column.type}\r\n                                                                filters={pagination.filters}\r\n                                                                setFilters={(filters: any, page: number) => {\r\n                                                                    setFilters(filters, page);\r\n                                                                    setTFilters(prev => ({\r\n                                                                        ...prev,\r\n                                                                        filters,\r\n                                                                        page,\r\n                                                                    }));\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody {...getTableBodyProps()} style={{ backgroundColor: 'white' }}>\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                page.map((row: any) => {\r\n                                    prepareRow(row);\r\n                                    return (\r\n                                        <TableRow\r\n                                            {...row.getRowProps()}\r\n                                            hover\r\n                                            style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                        >\r\n                                            {row.cells.map((cell: any, i: number) =>\r\n                                                <TableCell\r\n                                                    {...cell.getCellProps({\r\n                                                        style: {\r\n                                                            minWidth: cell.column.minWidth,\r\n                                                            width: cell.column.width,\r\n                                                            overflow: 'hidden',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                        },\r\n                                                    })}\r\n                                                    onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original) : null}\r\n                                                >\r\n                                                    {cell.render('Cell')}\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </MaUTable>\r\n\r\n                </Box>\r\n                <Box className={classes.footerTable}>\r\n                    <Box>\r\n                        <IconButton onClick={() => setPageIndex(0)} disabled={!canPreviousPage} >\r\n                            <FirstPage />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex - 1)} disabled={!canPreviousPage} >\r\n                            <NavigateBefore />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex + 1)} disabled={!canNextPage} >\r\n                            <NavigateNext />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pageCount - 1)} disabled={!canNextPage} >\r\n                            <LastPage />\r\n                        </IconButton>\r\n                        <Box component=\"span\" fontSize={14}>\r\n                            <Trans\r\n                                i18nKey={langKeys.tablePageOf}\r\n                                values={{ currentPage: pageOptions.length === 0 ? 0 : pageIndex + 1, totalPages: pageOptions.length }}\r\n                                components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                            />\r\n                        </Box >\r\n\r\n                    </Box>\r\n                    <Box>\r\n                        <Trans\r\n                            i18nKey={(totalrow || 0) === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                            values={{ itemCount: page.length, totalItems: totalrow }}\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <Select\r\n                            disableUnderline\r\n                            style={{ display: 'inline-flex' }}\r\n                            value={pageSize}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                        >\r\n                            {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                <MenuItem key={pageSize} value={pageSize}>\r\n                                    {pageSize}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                        <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                            <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface IQueryMap {\r\n    [key: string]: {\r\n        value: string;\r\n        operator: string;\r\n    }\r\n}\r\n\r\ninterface IFilters {\r\n    startDate: number;\r\n    endDate: number;\r\n    page: number;\r\n    filters: IQueryMap;\r\n}\r\n\r\ninterface IOptions {\r\n    ignore?: string[];\r\n}\r\n\r\nexport function useQueryParams(query: URLSearchParams, options: IOptions = { ignore: [] }) {\r\n    return useMemo(() => {\r\n        const map: IFilters = {\r\n            endDate: Number(query.get('endDate')),\r\n            startDate: Number(query.get('startDate')),\r\n            page: Number(query.get('page')),\r\n            filters: {},\r\n        };\r\n        const { ignore } = options;\r\n\r\n        query.forEach((value, key) => {\r\n            if (key === \"endDate\" ||\r\n                key === \"startDate\" ||\r\n                key === \"page\" ||\r\n                key.includes('-operator') ||\r\n                (ignore || []).includes(key)) {\r\n                return;\r\n            }\r\n\r\n            const name = `${key}-operator`;\r\n            map.filters[key] = { value, operator: query.get(name)! };\r\n        });\r\n\r\n        return map;\r\n    }, [options, query]);\r\n}\r\n\r\nexport function buildQueryFilters(\r\n    filters: ITablePaginatedFilter,\r\n    init?: string | string[][] | Record<string, string>,\r\n) {\r\n    const params = new URLSearchParams(init);\r\n\r\n    for (const key in filters) {\r\n        const value = (filters as any)[key];\r\n        if (key === 'filters' || value === undefined || value === null) continue;\r\n        params.set(key, String(value));\r\n    }\r\n\r\n    const colFilters = filters.filters;\r\n    for (const key in colFilters) {\r\n        if (typeof colFilters[key] === 'object' && 'value' in colFilters[key] && 'operator' in colFilters[key]) {\r\n            params.set(key, String(colFilters[key].value));\r\n            params.set(`${key}-operator`, String(colFilters[key].operator));\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n","import { IActionCall, IRequestBody, IRequestBodyPaginated, ITransaction } from \"@types\";\r\nimport { getValuesFromDomain, adviserSel, getMessageTemplateLst, getCommChannelLst, getRolesByOrg, getPropertySelByName } from \"common/helpers\";\r\nimport { CommonService, PersonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON,\r\n        failure: actionTypes.GET_PERSON_FAILURE,\r\n        success: actionTypes.GET_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPerson = () => ({ type: actionTypes.GET_PERSON_RESET });\r\n\r\nexport const getPersonListPaginated = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_LIST,\r\n        failure: actionTypes.GET_PERSON_LIST_FAILURE,\r\n        success: actionTypes.GET_PERSON_LIST_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonListPaginated = () => ({ type: actionTypes.GET_PERSON_LIST_RESET });\r\n\r\n\r\n\r\nexport const getPersonLinkListPaginated = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_LINK,\r\n        failure: actionTypes.GET_PERSON_LINK_FAILURE,\r\n        success: actionTypes.GET_PERSON_LINK_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonLinkListPaginated = () => ({ type: actionTypes.GET_PERSON_LINK_RESET });\r\n\r\n\r\n\r\nexport const getTicketListByPerson = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_TICKET_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_TICKET_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_TICKET_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetTicketListByPerson = () => ({ type: actionTypes.GET_TICKET_LIST_BY_PERSON_RESET });\r\n\r\nexport const getReferrerListByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_REFERRER_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_REFERRER_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_REFERRER_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetReferrerListByPerson = () => ({ type: actionTypes.GET_REFERRER_LIST_BY_PERSON_RESET });\r\n\r\nexport const getChannelListByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_CHANNEL_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_CHANNEL_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_CHANNEL_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelListByPerson = () => ({ type: actionTypes.GET_CHANNEL_LIST_BY_PERSON_RESET });\r\n\r\nexport const getAdditionalInfoByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON,\r\n        failure: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetgetAdditionalInfoByPerson = () => ({ type: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_RESET });\r\n\r\nexport const getLeadsByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => PersonService.getLeadsByPerson(payload),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_LEAD_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_LEAD_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadsByPerson = () => ({ type: actionTypes.GET_LEAD_LIST_BY_PERSON_RESET });\r\n\r\n/**\r\n * Managed domain types\r\n * \r\n * GENERO, TIPODOCUMENTO, OCUPACION, ESTADOCIVIL, NIVELEDUCATIVO\r\n */\r\nexport const getDomainsByTypename = (): IActionCall => ({\r\n    callAPI: async () => CommonService.multiMain([\r\n        getValuesFromDomain(\"GENERO\"),\r\n        getValuesFromDomain(\"TIPODOCUMENTO\"),\r\n        getValuesFromDomain(\"OCUPACION\"),\r\n        getValuesFromDomain(\"ESTADOCIVIL\"),\r\n        getValuesFromDomain(\"NIVELEDUCATIVO\"),\r\n        getValuesFromDomain(\"TIPOPERSONA\"),\r\n        getValuesFromDomain(\"GRUPOPERSONA\"),\r\n        getValuesFromDomain(\"TIPOPERSONAGEN\"),\r\n        getValuesFromDomain(\"TIPOCANAL\"),\r\n        adviserSel(),\r\n        getMessageTemplateLst(''),\r\n        getCommChannelLst(),\r\n        getValuesFromDomain(\"EMPRESA\"),\r\n        getValuesFromDomain(\"GRUPOFACTURACION\"),\r\n        getValuesFromDomain(\"ESTADOGENERICO\"),\r\n        getValuesFromDomain(\"ESTADOUSUARIO\"),\r\n        getRolesByOrg(),\r\n        getValuesFromDomain(\"GRUPOS\"),\r\n        getPropertySelByName(\"OCUPACION\"),\r\n    ]),\r\n    types: {\r\n        loading: actionTypes.GET_DOMAINS_BY_TYPENAME,\r\n        failure: actionTypes.GET_DOMAINS_BY_TYPENAME_FAILURE,\r\n        success: actionTypes.GET_DOMAINS_BY_TYPENAME_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetDomainsByTypename = () => ({ type: actionTypes.GET_DOMAINS_BY_TYPENAME_RESET });\r\n\r\n// dispatch(execute({\r\n//     header: insPersonBody({ ...p }),\r\n//     detail: [\r\n//         ...p.pcc.map((x: IPersonCommunicationChannel) => insPersonCommunicationChannel({ ...x })),\r\n//     ]\r\n// }, true));\r\nexport const editPerson = (payload: IRequestBody | ITransaction, insert: boolean = false): IActionCall => {\r\n    if (insert) {\r\n        // dispatch(execute({\r\n        //     header: insPersonBody({ ...p }),\r\n        //     detail: [\r\n        //         ...p.pcc.map((x: IPersonCommunicationChannel) => insPersonCommunicationChannel({ ...x })),\r\n        //     ]\r\n        // }, true));\r\n    }\r\n    return {\r\n        callAPI: async () => CommonService.main(payload, insert),\r\n        types: {\r\n            loading: actionTypes.EDIT_PERSON,\r\n            failure: actionTypes.EDIT_PERSON_FAILURE,\r\n            success: actionTypes.EDIT_PERSON_SUCCESS,\r\n        },\r\n        type: null,\r\n    }\r\n};\r\n\r\nexport const resetEditPerson = () => ({ type: actionTypes.EDIT_PERSON_RESET });\r\n","import { IActionCall, ICrmLeadNoteSave, IRequestBody, ITransaction } from \"@types\";\r\nimport { getCommChannelLst, getMessageTemplateLst, getProductCatalogSel } from \"common/helpers\";\r\nimport { CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getLead = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD,\r\n        success: actionTypes.GET_LEAD_SUCCESS,\r\n        failure: actionTypes.GET_LEAD_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLead = (): IActionCall => ({ type: actionTypes.GET_LEAD_RESET });\r\n\r\nexport const saveLead = (body: IRequestBody | ITransaction | IRequestBody[], transaction: boolean = false): IActionCall => ({\r\n    callAPI: () => {\r\n        if (Array.isArray(body)) {\r\n            if (transaction) console.error('No puede ser un multiMain y transacción a la vez');\r\n            return CommonService.multiMain(body);\r\n        }\r\n        return CommonService.main(body, transaction);\r\n    },\r\n    types: {\r\n        loading: actionTypes.SAVE_LEAD,\r\n        success: actionTypes.SAVE_LEAD_SUCCESS,\r\n        failure: actionTypes.SAVE_LEAD_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\ntype Url = string;\r\nexport const saveLeadWithFiles = (\r\n    build: (uploader: (file: File) => Promise<Url>) => Promise<IRequestBody | ITransaction>,\r\n    transaction: boolean = false,\r\n): IActionCall => {\r\n    const uploadCb = async (mediaFile: File): Promise<Url> => {\r\n        const fd = new FormData();\r\n        fd.append('file', mediaFile, mediaFile.name);\r\n        const uploadResult = await CommonService.uploadFile(fd);\r\n        return (uploadResult.data[\"url\"] || '') as Url;\r\n    };\r\n\r\n    return {\r\n        callAPI: async () => {\r\n            const requestBody = await build(uploadCb);\r\n            return CommonService.main(requestBody, transaction);\r\n        },\r\n        types: {\r\n            loading: actionTypes.SAVE_LEAD,\r\n            success: actionTypes.SAVE_LEAD_SUCCESS,\r\n            failure: actionTypes.SAVE_LEAD_FAILURE,\r\n        },\r\n        type: null,\r\n    };\r\n}\r\n\r\nexport const resetSaveLead = (): IActionCall => ({ type: actionTypes.SAVE_LEAD_RESET });\r\n\r\nexport const getAdvisers = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_ADVISERS,\r\n        success: actionTypes.GET_ADVISERS_SUCCESS,\r\n        failure: actionTypes.GET_ADVISERS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetAdvisers = (): IActionCall => ({ type: actionTypes.GET_ADVISERS_RESET });\r\n\r\nexport const getLeadLogNotes = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_LEADNOTES,\r\n        success: actionTypes.GET_LEADNOTES_SUCCESS,\r\n        failure: actionTypes.GET_LEADNOTES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadLogNotes = (): IActionCall => ({ type: actionTypes.GET_LEADNOTES_RESET });\r\n\r\nexport const getLeadActivities = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_LEADACTIVITIES,\r\n        success: actionTypes.GET_LEADACTIVITIES_SUCCESS,\r\n        failure: actionTypes.GET_LEADACTIVITIES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadActivities = (): IActionCall => ({ type: actionTypes.GET_LEADACTIVITIES_RESET });\r\n\r\nexport const saveLeadActivity = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.SAVE_LEADACTIVITY,\r\n        success: actionTypes.SAVE_LEADACTIVITY_SUCCESS,\r\n        failure: actionTypes.SAVE_LEADACTIVITY_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSaveLeadActivity = (): IActionCall => ({ type: actionTypes.SAVE_LEADACTIVITY_RESET });\r\n\r\nexport const saveLeadLogNote = (body: IRequestBody): IActionCall => ({\r\n    callAPI: async () => {\r\n        const mediaFiles = (body.parameters as ICrmLeadNoteSave).media as File[] | null;\r\n        if (mediaFiles) {\r\n            const urls: String[] = [];\r\n            for (const fileToUpload of mediaFiles) {\r\n                const fd = new FormData();\r\n                fd.append('file', fileToUpload, fileToUpload.name);\r\n                const uploadResult = await CommonService.uploadFile(fd);\r\n                const url = uploadResult.data[\"url\"] as string;\r\n                urls.push(url);\r\n            }\r\n            (body.parameters as ICrmLeadNoteSave).media = urls.join(',');\r\n        }\r\n        return CommonService.main(body);\r\n    },\r\n    types: {\r\n        loading: actionTypes.SAVE_LEADNOIE,\r\n        success: actionTypes.SAVE_LEADNOIE_SUCCESS,\r\n        failure: actionTypes.SAVE_LEADNOIE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSaveLeadLogNote = (): IActionCall => ({ type: actionTypes.SAVE_LEADNOIE_RESET });\r\n\r\nexport const getLeadPhases = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_PHASES,\r\n        success: actionTypes.GET_PHASES_SUCCESS,\r\n        failure: actionTypes.GET_PHASES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadPhases = (): IActionCall => ({ type: actionTypes.GET_PHASES_RESET });\r\n\r\nexport const setDisplay = (display: string): IActionCall => ({\r\n    payload: display,\r\n    type: actionTypes.DISPLAY_LEAD,\r\n});\r\n\r\nexport const resetDisplay = (): IActionCall => ({ type: actionTypes.DISPLAY_LEAD_RESET });\r\n\r\n/**Close lead -> (status = \"CERRADO\") */\r\nexport const archiveLead = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.ARCHIVE_LEAD,\r\n        success: actionTypes.ARCHIVE_LEAD_SUCCESS,\r\n        failure: actionTypes.ARCHIVE_LEAD_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetArchiveLead = (): IActionCall => ({ type: actionTypes.ARCHIVE_LEAD_RESET });\r\n\r\n/**Done lead -> (status = \"REALIZADO\") */\r\nexport const markDoneActivity = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.MARK_DONE_ACTIVITY,\r\n        success: actionTypes.MARK_DONE_ACTIVITY_SUCCESS,\r\n        failure: actionTypes.MARK_DONE_ACTIVITY_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetMarkDoneActivity = (): IActionCall => ({ type: actionTypes.MARK_DONE_ACTIVITY_RESET });\r\n\r\nexport const getLeadHistory = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_HISTORY,\r\n        success: actionTypes.GET_LEAD_HISTORY_SUCCESS,\r\n        failure: actionTypes.GET_LEAD_HISTORY_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadHistory = (): IActionCall => ({ type: actionTypes.GET_LEAD_HISTORY_RESET });\r\n\r\nexport const updateLeadTags = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.UPDATE_LEAD_TAGS,\r\n        success: actionTypes.UPDATE_LEAD_TAGS_SUCCESS,\r\n        failure: actionTypes.UPDATE_LEAD_TAGS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetUpdateLeadTags = (): IActionCall => ({ type: actionTypes.UPDATE_LEAD_TAGS_RESET });\r\n\r\nexport const getLeadProductsDomain = (): IActionCall => ({\r\n    callAPI: () => CommonService.main(getProductCatalogSel()),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_PRODUCTS_DOMAIN,\r\n        success: actionTypes.GET_LEAD_PRODUCTS_DOMAIN_SUCCESS,\r\n        failure: actionTypes.GET_LEAD_PRODUCTS_DOMAIN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadProductsDomain = (): IActionCall => ({ type: actionTypes.GET_LEAD_PRODUCTS_DOMAIN_RESET });\r\n\r\nexport const getLeadTagsDomain = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_TAGS_DOMAIN,\r\n        success: actionTypes.GET_LEAD_TAGS_DOMAIN_SUCCESS,\r\n        failure: actionTypes.GET_LEAD_TAGS_DOMAIN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadTagsDomain = (): IActionCall => ({ type: actionTypes.GET_LEAD_TAGS_DOMAIN_RESET });\r\n\r\nexport const getPersonType = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_TYPE,\r\n        success: actionTypes.GET_PERSON_TYPE_SUCCESS,\r\n        failure: actionTypes.GET_PERSON_TYPE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonType = (): IActionCall => ({ type: actionTypes.GET_PERSON_TYPE_RESET });\r\n\r\nexport const getLeadTemplates = (): IActionCall => ({\r\n    callAPI: () => CommonService.main(getMessageTemplateLst('')),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_TEMPLATES,\r\n        success: actionTypes.GET_LEAD_TEMPLATES_SUCCESS,\r\n        failure: actionTypes.GET_LEAD_TEMPLATES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadTemplates = (): IActionCall => ({ type: actionTypes.GET_LEAD_TEMPLATES_RESET });\r\n\r\n\r\nexport const getLeadChannels = (): IActionCall => ({\r\n    callAPI: () => CommonService.main(getCommChannelLst()),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_CHANNELS,\r\n        success: actionTypes.GET_LEAD_CHANNELS_SUCCESS,\r\n        failure: actionTypes.GET_LEAD_CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadChannels = (): IActionCall => ({ type: actionTypes.GET_LEAD_CHANNELS_RESET });\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Mail');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM9 11H7V9h2v2zm4 0h-2V9h2v2zm4 0h-2V9h2v2z\"\n}), 'Sms');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');\n\nexports.default = _default;"],"sourceRoot":""}