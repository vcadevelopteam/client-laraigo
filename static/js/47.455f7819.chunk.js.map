{"version":3,"sources":["pages/PersonDetail.tsx","components/fields/table-simple.tsx","components/fields/table-paginated.tsx","store/person/actions.ts","components/inbox/Interaction.tsx","components/inbox/DialogInteractions.tsx","components/inbox/PersonLinked.tsx"],"names":["urgencyLevels","variables","map","x","key","usePhotoClasses","makeStyles","theme","accountPhoto","height","width","Photo","src","radius","classes","alt","className","style","CssPhonemui","styled","MuiPhoneNumber","color","borderBottomColor","borderColor","usePropertyStyles","propertyRoot","display","flexDirection","stroke","alignItems","overflowWrap","propTitle","fontWeight","fontSize","propSubtitle","palette","text","primary","margin","leadingContainer","justifyContent","fill","contentContainer","flexGrow","propSubtitleTicket","textDecoration","cursor","Property","icon","title","subtitle","isLink","boxProps","minWidth","TabPanel","children","value","index","role","hidden","id","overflowY","p","GeneralInformationTab","person","getValues","trigger","setValue","domains","errors","control","extraTriggers","setExtraTriggers","dispatch","useDispatch","t","useTranslation","voxiConnection","useSelector","state","voximplant","connection","userConnected","inbox","ocupationProperty","propertyvalue","useEffect","referringpersonid","getReferrerListByPerson","getReferrerByPersonBody","resetGetReferrerListByPerson","container","direction","item","xs","sm","md","lg","xl","i18nKey","langKeys","corporation","corpdesc","m","organization","orgdesc","firstname","fullWidth","placeholder","defaultValue","onChange","e","target","error","message","helperText","lastname","documenttype","uset","valueDefault","domainvalue","loading","data","docTypes","prefixTranslation","optionValue","optionDesc","docNumber","personType","personTypes","type","personGenTypes","phone","name","render","field","defaultCountry","replace","InputProps","endAdornment","position","size","onClick","showSnackbar","show","severity","nochannelvoiceassociated","setModalCall","setPhoneNumber","alternativePhone","email","alternativeEmail","birthday","gender","domaindesc","genders","educationLevel","educationLevels","civilStatus","civilStatuses","occupation","occupations","group","count","groups","address","district","referralchannel","healthprofessional","useChannelItemStyles","root","border","borderRadius","padding","spacing","marginTop","marginBottom","itemLabel","itemText","gap","buttonphone","nameschannel","ChannelItem","channel","callOnLine","useState","waitUnLink","setWaitUnLink","unLinkRes","main","execute","personIdentifier","useMemo","personcommunicationchannel","lastIndexOf","substring","code","module","tipification","toLocaleLowerCase","showBackdrop","getChannelListByPerson","getChannelListByPersonBody","personid","originpersonid","textAlign","variant","disabled","startIcon","unLinkPerson","communicationchannel","includes","channelType","displayname","personcommunicationchannelowner","replaceAll","internalIdentifier","firstConnection","firstcontact","lastConnection","lastcontact","conversation","conversations","CommunicationChannelsTab","channelList","personChannelList","resetGetChannelListByPerson","i","AuditTab","communicationchannelname","createdBy","createby","creationDate","Date","createdate","toLocaleString","firstContactDate","lastContactDate","modifiedBy","changeby","modificationDate","changedate","useConversationsTabStyles","root2","backgroundColor","containerFilterGeneral","containerSearch","breakpoints","up","iconButton","input","marginLeft","flex","inputPlaceholder","ConversationsTab","firstCall","useRef","page","setPage","searchFilter","setsearchFilter","list","setList","filteredlist","setfilteredList","personTicketList","fetchTickets","useCallback","params","filters","sorts","take","skip","offset","getTicketListByPerson","getTicketListByPersonBody","resetGetTicketListByPerson","myDiv","document","getElementById","onscroll","current","length","offsetHeight","scrollTop","scrollHeight","prevPage","prevList","component","elevation","newArray","filter","el","ticketnum","asesorfinal","toLowerCase","channeldesc","fechainicio","fechafin","filterList","search","inputProps","ConversationItem","useConversationsItemStyles","collapseContainer","infoLabel","totalTime","containerstyle","open","setOpen","openModal","setOpenModal","mainResult","rowSelected","setRowSelected","openDialogInteractions","row","downloadCallRecord","ticket","VoximplantService","getCallRecord","call_session_history_id","postexternalid","axios_result","status","buff","Buffer","from","blob","Blob","headers","split","find","objectUrl","window","URL","createObjectURL","a","createElement","href","download","click","errormessage","response","channeltype","callanswereddate","download_record","paddingTop","paddingLeft","agent","startDate","endDate","in","ticketInformation","tmo","tmeAgent","tme","closetype","tmrAgent","tmr","initialAgent","asesorinicial","tmrClient","tiempopromediorespuestapersona","finalAgent","OpportunitiesTab","leads","personLeadList","columns","React","Header","opportunity","accessor","lastUpdate","sortType","Cell","props","cell","original","convertLocalDate","phase","priority","listSelectFilter","priority_low","priority_medium","priority_high","max","findIndex","readOnly","product","leadproduct","tags","comments","NoFilter","NoSort","datenote","leadnote","dateactivity","leadactivity","lastnote","nextprogramedactivity","getLeadsByPerson","getOpportunitiesByPersonBody","resetGetLeadsByPerson","filterGeneral","register","usePersonDetailStyles","rootContent","tabs","flexWrap","tab","maxWidth","activetab","label","profile","DialogSendTemplate","persons","waitClose","setWaitClose","sendingRes","triggerSendHSM","templatesList","setTemplatesList","setChannelList","bodyMessage","setBodyMessage","personWithData","setPersonWithData","editableDomains","send_hsm","send_sms","send_mail","useForm","defaultValues","hsmtemplateid","observation","communicationchannelid","communicationchanneltype","handleSubmit","reset","formState","fields","useFieldArray","successful_send_hsm","successful_send_sms","successful_send_mail","templates","channels","hsmtemplatename","validate","field_required","phonewhatsapp","onSubmit","messagedata","platformtype","shippingreason","listmembers","parameters","v","variable","sendHSM","no_people_to_send","buttonText1","cancel","buttonText2","continue","handleClickButton1","handleClickButton2","button2Type","template","body","varaiblesCleaned","match","indexOf","overflow","Fragment","lineHeight","mb","dangerouslySetInnerHTML","__html","rows","fregister","PersonDetail2","history","useHistory","location","useLocation","tabIndex","setTabIndex","edit","editPerson","executeResult","waitLock","setWaitLock","waitValidation","setWaitValidation","showLinkPerson","setShowLinkPerson","payloadTemp","setpayloadTemp","valuestosend","setvaluestosend","openDialogTemplate","setOpenDialogTemplate","typeTemplate","setTypeTemplate","user","login","validateToken","persontype","personstatus","alternativephone","alternativeemail","documentnumber","sex","civilstatus","educationlevel","getDomainsByTypename","push","paths","PERSON","resetGetDomainsByTypename","resetEditPerson","success","successful_edit","editperson","header","editPersonBody","detail","handleEditPerson","values","callback","payload","personInsValidation","operation","manageConfirmation","visible","question","confirmation_save","successful_transaction","phone_exists","concat","email_exists","mail","alternativephone_exists","alternativeemail_exists","personrepeatedwarning1","join","personrepeatedwarning2","underline","preventDefault","goBack","pathname","personDetail","test","link","confirmation_person_unlock","confirmation_person_lock","insPersonUpdateLocked","locked","unlock","lock","back","save","_","TabIndicatorProps","clsx","generalinformation","audit","orientation","flexItem","imageurldef","mt","newPerson","PersonDetail","setperson","waitLoading","setWaitLoading","useRouteMatch","getPersonOne","useStyles","footerTable","trdynamic","boxShadow","visibility","containerfloat","borderBottom","zIndex","left","iconOrder","button","textTransform","containerButtons","gridGap","gridAutoFlow","containerHeader","containerHeaderColumn","iconHelpText","stringOptionsMenu","numberOptionsMenu","dateOptionsMenu","booleanOptionsMenu","BooleanOptionsMenuComponent","handleClickItemMenu","option","SelectFilterTmp","all","DateOptionsMenuComponent","value2","setvalue2","utils","DateFnsUtils","locale","localesLaraigo","navigator","language","invalidDateMessage","invalid_date_format","format","getLocaleDateString","TimeOptionsMenuComponent","ampm","views","OptionsMenuComponent","operator","selected","TableZyx","memo","titlemodule","fetchData","handleRegister","calculate","handleCalculate","HeadComponent","ButtonsElement","triggerExportPersonalized","exportPersonalized","pageSizeDefault","importCSV","handleTemplate","useSelection","selectionKey","initialSelectedRows","setSelectedRows","allRowsSelected","setAllRowsSelected","onClickRow","toolsFooter","initialPageIndex","initialStateFilter","registertext","setDataFiltered","useFooter","heightWithCheck","checkHistoryCenter","initial","setInitial","filterCellValue","filterValue","cellvalue","undefined","Number","defaultColumn","Filter","column","$setFilter","setFilter","iSF","anchorEl","setAnchorEl","Boolean","setoperator","setMemoryTable","op","keyPress","keyCode","date","isNaN","valueOf","toISOString","toLocaleTimeString","onKeyDown","event","currentTarget","onClose","PaperProps","maxHeight","DefaultColumnFilter","useTable","initialState","pageSize","selectedRowIds","getRowId","relativeIndex","parent","useFilters","useGlobalFilter","useSortBy","usePagination","useRowSelect","hooks","visibleColumns","getToggleAllPageRowsSelectedProps","checked","isSelected","toggleRowSelected","getTableProps","getTableBodyProps","headerGroups","footerGroups","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","globalFilteredRows","setGlobalFilter","pageIndex","toggleAllRowsSelected","RenderRow","getRowProps","hover","cells","getCellProps","textOverflow","whiteSpace","arrow","placement","accept","files","htmlFor","import","exportExcel","String","isComponent","activeOnHover","colorPlaceHolder","handleChangeOther","lazy","headerGroup","getHeaderGroupProps","ii","getHeaderProps","getSortByToggleProps","wordWrap","isSorted","isSortedDesc","helpText","LoadingSkeleton","overflowX","innerHeight","itemCount","itemSize","getFooterGroupProps","getFooterProps","tablePageOf","currentPage","totalPages","components","tableShowingRecordOfMore","tableShowingRecordOf","totalItems","disableUnderline","marginRight","recordPerPage","items","containerButtonsNoFilters","setFilters","Object","keys","filterrange","totalrow","controlledPageCount","autotrigger","autoRefresh","selectionFilter","cleanSelection","setCleanSelection","FiltersElement","filterRangeDate","onFilterChange","initialEndDate","initialStartDate","initialFilters","pagination","setPagination","openDateRangeModal","setOpenDateRangeModal","triggerSearch","setTriggerSearch","tFilters","setTFilters","manualPagination","useControlledState","autoResetSelectedRows","stateReducer","newState","action","filteredRows","every","forEach","setPageIndex","prev","getFirstDayMonth","getDateToday","getLastDayMonth","dateRange","setdateRange","triggertmp","fromButton","daterange","setHours","getTime","range","onSelect","getDateCleaned","newsorts","handleClickSort","useQueryParams","query","options","ignore","get","buildQueryFilters","init","URLSearchParams","set","colFilters","getPersonListPaginated","callAPI","CommonService","mainPaginated","types","actionTypes","GET_PERSON_LIST","failure","GET_PERSON_LIST_FAILURE","GET_PERSON_LIST_SUCCESS","resetGetPersonListPaginated","GET_PERSON_LIST_RESET","getPersonLinkListPaginated","GET_PERSON_LINK","GET_PERSON_LINK_FAILURE","GET_PERSON_LINK_SUCCESS","GET_TICKET_LIST_BY_PERSON","GET_TICKET_LIST_BY_PERSON_FAILURE","GET_TICKET_LIST_BY_PERSON_SUCCESS","GET_TICKET_LIST_BY_PERSON_RESET","GET_REFERRER_LIST_BY_PERSON","GET_REFERRER_LIST_BY_PERSON_FAILURE","GET_REFERRER_LIST_BY_PERSON_SUCCESS","GET_REFERRER_LIST_BY_PERSON_RESET","GET_CHANNEL_LIST_BY_PERSON","GET_CHANNEL_LIST_BY_PERSON_FAILURE","GET_CHANNEL_LIST_BY_PERSON_SUCCESS","GET_CHANNEL_LIST_BY_PERSON_RESET","PersonService","GET_LEAD_LIST_BY_PERSON","GET_LEAD_LIST_BY_PERSON_FAILURE","GET_LEAD_LIST_BY_PERSON_SUCCESS","GET_LEAD_LIST_BY_PERSON_RESET","multiMain","getValuesFromDomain","adviserSel","getMessageTemplateLst","getCommChannelLst","getRolesByOrg","getPropertySelByName","GET_DOMAINS_BY_TYPENAME","GET_DOMAINS_BY_TYPENAME_FAILURE","GET_DOMAINS_BY_TYPENAME_SUCCESS","GET_DOMAINS_BY_TYPENAME_RESET","insert","EDIT_PERSON","EDIT_PERSON_FAILURE","EDIT_PERSON_SUCCESS","EDIT_PERSON_RESET","useStylesInteraction","containerCarousel","imageCardCarousel","objectFit","buttonCarousel","buttonLeft","top","buttonRight","right","containerTime","float","paddingRight","timeSeen","timeInteraction","bottom","timeInteractionWithBackground","ShoppingCart","interactiontext","userType","onlyTime","handleClickOpen","jsonIntt","JSON","parse","Product_items","interactionText","interactionTextAgent","ImageReference","elements","reduce","acc","parseFloat","Item_price","Quantity","toFixed","Currency","Text","borderTop","show_shopping_cart","TimerInteraction","interactiontype","time","anchor","onOpen","cart_sent","Title","quantity","CatalogProduct","Type","firstimage","SectionList","ProductList","totalitems","Body","Footer","show_items","index11","itemProduct","index22","wordBreak","Description","Price","Product","InteractiveList","sections","headertype","footer","buttons","background","Carousel","carousel","pageSelected","setPageSelected","mediaUrl","crossOrigin","description","actions","ticketSelected","isSeen","setIsSeen","lastseendate","lastSeenDate","interactionDate","PickerInteraction","viewBox","transform","fillRule","d","ItemInteraction","interaction","interactionid","listImage","indexImage","ref","showfulltext","setshowfulltext","isLoaded","useJsApiLoader","googleMapsApiKey","setHeight","onLoad","contentWindow","trim","validateIsUrl","showmore","srcDoc","subject","file","hreffile","extension","pop","rel","decodeURI","interactionImage","imageCard","manageLightBox","images","json","jj","stringsmooch","listButtons","containerQuickreply","buttonQuickreply","containerPostback","headerPostback","buttonPostback","listItems","controls","filename","textres","ishtml","coordinates","mapContainerStyle","center","lat","lng","zoom","ItemGroupInteraction","groupInteraction","usertype","interactions","interactionAgent","interactionFromPost","avatar","containerPanel","titleTicketChat","groupInteractionAgent","containerTickets","borderRight","headChat","containerInteractions","fontStyle","borderTopLeftRadius","borderTopRightRadius","itemSelected","dark","borderBottomLeftRadius","borderBottomRightRadius","containerResponse","containerChat","collapseInfo","infoOpen","infoClose","containerProfile","iconResponse","poisition","iconSend","iconSendDisabled","containerButtonsChat","buttonCloseticket","boxSizing","fontFamily","buttonIcon","containerItemTicket","containerNewMessages","containerQuickReply","headerQuickReply","itemQuickReply","paddingBottom","DialogInteractions","showAllInteraction","setShowAllInteraction","interactionExtraList","interactionsToShow","setinteractionsToShow","getInteractions","conversationid","GenericPdfDownloader","downloadFileName","then","jsPDF","gg","innerHTML","querySelectorAll","remove","appendChild","DomToImage","toPng","imgData","imgHeight","Math","ceil","heightLeft","doc","addImage","addPage","y","isHide","show_all","imageClient","clientName","image","DialogLinkPerson","personList","personLinkList","personParent","setPersonParent","personChild","setPersonChild","setPageCount","settotalrow","step","setStep","waitLink","setWaitLink","linkRes","toUpperCase","getPaginatedPersonLink","ufnlinkPersons","personidfrom","personidto","gridTemplateColumns","occupationdesc","civilstatusdesc","educationleveldesc"],"mappings":"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","file":"static/js/47.455f7819.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { DialogZyx, FieldEditArray, FieldEditMulti, FieldSelect, GetIcon } from 'components';\r\nimport { getChannelListByPersonBody, getTicketListByPersonBody, getOpportunitiesByPersonBody, editPersonBody, getReferrerByPersonBody, insPersonUpdateLocked, convertLocalDate, unLinkPerson, personInsValidation, getPersonOne } from 'common/helpers';\r\nimport { Dictionary, IObjectState, IPerson, IPersonChannel, IPersonConversation, IPersonDomains } from \"@types\";\r\nimport { Avatar, Box, Divider, Grid, Button, makeStyles, AppBar, Tabs, Tab, Collapse, IconButton, BoxProps, Breadcrumbs, Link, TextField, Paper, InputBase, Tooltip, styled, InputAdornment } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { BuildingIcon, DocNumberIcon, DocTypeIcon, EMailInboxIcon, GenderIcon, TelephoneIcon, SearchIcon, CallRecordIcon } from 'icons';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\r\nimport paths from 'common/constants/paths';\r\nimport { ArrowDropDown } from '@material-ui/icons';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport { getChannelListByPerson, resetGetChannelListByPerson, getTicketListByPerson, resetGetTicketListByPerson, getLeadsByPerson, resetGetLeadsByPerson, getDomainsByTypename, resetGetDomainsByTypename, resetEditPerson, editPerson, getReferrerListByPerson, resetGetReferrerListByPerson } from 'store/person/actions';\r\nimport { manageConfirmation, showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { useFieldArray, useForm, UseFormGetValues, UseFormSetValue } from 'react-hook-form';\r\nimport { execute } from 'store/main/actions';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { setModalCall, setPhoneNumber } from 'store/voximplant/actions';\r\nimport { VoximplantService } from 'network';\r\nimport DialogInteractions from 'components/inbox/DialogInteractions';\r\nimport DialogLinkPerson from 'components/inbox/PersonLinked';\r\nimport { WhatsappIcon } from 'icons';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\r\nimport { sendHSM } from 'store/inbox/actions';\r\n\r\nimport { Controller } from \"react-hook-form\";\r\nimport MuiPhoneNumber from 'material-ui-phone-number';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport SmsIcon from '@material-ui/icons/Sms';\r\nconst urgencyLevels = [null, 'LOW', 'MEDIUM', 'HIGH']\r\nconst variables = ['firstname', 'lastname', 'displayname', 'email', 'phone', 'documenttype', 'documentnumber', 'dateactivity', 'leadactivity', 'datenote', 'note', 'custom'].map(x => ({ key: x }))\r\n\r\nconst usePhotoClasses = makeStyles(theme => ({\r\n    accountPhoto: {\r\n        height: 40,\r\n        width: 40,\r\n    },\r\n}));\r\n\r\ninterface PhotoProps {\r\n    src?: string;\r\n    radius?: number;\r\n}\r\n\r\nconst Photo: FC<PhotoProps> = ({ src, radius }) => {\r\n    const classes = usePhotoClasses();\r\n    const width = radius && radius * 2;\r\n    const height = radius && radius * 2;\r\n\r\n    if (!src || src === \"\") {\r\n        return <AccountCircle className={classes.accountPhoto} style={{ width, height }} />;\r\n    }\r\n    return <Avatar alt={src} src={src} className={classes.accountPhoto} style={{ width, height }} />;\r\n}\r\n\r\nconst CssPhonemui = styled(MuiPhoneNumber)({\r\n    '& label.Mui-focused': {\r\n        color: '#7721ad',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#7721ad',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#7721ad',\r\n        },\r\n    },\r\n});\r\n\r\nconst usePropertyStyles = makeStyles(theme => ({\r\n    propertyRoot: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        stroke: '#8F92A1',\r\n        alignItems: 'center',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    propTitle: {\r\n        fontWeight: 400,\r\n        fontSize: 14,\r\n        color: '#8F92A1',\r\n    },\r\n    propSubtitle: {\r\n        color: theme.palette.text.primary,\r\n        fontWeight: 400,\r\n        fontSize: 15,\r\n        margin: 0,\r\n        width: '100%',\r\n    },\r\n    leadingContainer: {\r\n        height: 24,\r\n        width: 24,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        stroke: '#8F92A1',\r\n        fill: '#8F92A1',\r\n    },\r\n    contentContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start',\r\n        flexGrow: 1,\r\n    },\r\n    propSubtitleTicket: {\r\n        fontWeight: 400,\r\n        fontSize: 15,\r\n        margin: 0,\r\n        width: '100%',\r\n        color: '#7721ad',\r\n        textDecoration: 'underline',\r\n        cursor: 'pointer'\r\n    },\r\n}));\r\n\r\ninterface PropertyProps extends Omit<BoxProps, 'title'> {\r\n    icon?: React.ReactNode;\r\n    title: React.ReactNode;\r\n    subtitle?: React.ReactNode;\r\n    isLink?: Boolean;\r\n}\r\n\r\nconst Property: FC<PropertyProps> = ({ icon, title, subtitle, isLink = false, ...boxProps }) => {\r\n    const classes = usePropertyStyles();\r\n\r\n    return (\r\n        <Box className={classes.propertyRoot} {...boxProps}>\r\n            {icon && <div className={classes.leadingContainer}>{icon}</div>}\r\n            {icon && <div style={{ width: 8, minWidth: 8 }} />}\r\n            <div className={classes.contentContainer}>\r\n                <label className={classes.propTitle}>{title}</label>\r\n                <div style={{ height: 4 }} />\r\n                <div className={isLink ? classes.propSubtitleTicket : classes.propSubtitle}>{subtitle || \"-\"}</div>\r\n            </div>\r\n        </Box>\r\n    );\r\n}\r\n\r\ninterface TabPanelProps {\r\n    value: string;\r\n    index: string;\r\n}\r\n\r\nconst TabPanel: FC<TabPanelProps> = ({ children, value, index }) => {\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`wrapped-tabpanel-${value}`}\r\n            aria-labelledby={`wrapped-tab-${value}`}\r\n            style={{ display: value === index ? 'block' : 'none', overflowY: 'auto' }}\r\n        >\r\n            <Box p={3}>\r\n                {children}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface GeneralInformationTabProps {\r\n    person: IPerson;\r\n    getValues: UseFormGetValues<IPerson>;\r\n    setValue: any;\r\n    trigger: any;\r\n    domains: IObjectState<IPersonDomains>;\r\n    errors: any;\r\n    control: any;\r\n    extraTriggers: any;\r\n    setExtraTriggers: (trig:any) => void;\r\n}\r\n\r\nconst GeneralInformationTab: FC<GeneralInformationTabProps> = ({ person, getValues, trigger, setValue, domains, errors, control, extraTriggers, setExtraTriggers }) => {\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const voxiConnection = useSelector(state => state.voximplant.connection);\r\n    const userConnected = useSelector(state => state.inbox.userConnected);\r\n    // const referrerList = useSelector(state => state.person.personReferrerList);\r\n    const ocupationProperty = domains?.value?.ocupationProperty?.[0]?.propertyvalue || \"DOMINIO\"\r\n\r\n    useEffect(() => {\r\n        if (person.referringpersonid) {\r\n            dispatch(getReferrerListByPerson(getReferrerByPersonBody(person.referringpersonid)));\r\n            return () => {\r\n                dispatch(resetGetReferrerListByPerson());\r\n            };\r\n        }\r\n    }, [dispatch, person]);\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.corporation} />}\r\n                                subtitle={person.corpdesc}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.organization} />}\r\n                                subtitle={person.orgdesc}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item sm={6} xl={6} xs={6} md={6} lg={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.firstname} />}\r\n                                subtitle={(\r\n                                <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.firstname)}\r\n                                        defaultValue={getValues(\"firstname\")}\r\n                                        value={getValues(\"firstname\")}\r\n                                        onChange={e => {\r\n                                            setValue('firstname', e.target.value)\r\n                                            trigger(\"firstname\")\r\n                                        }}\r\n                                        error={errors?.firstname?.message ? true : false}\r\n                                        helperText={errors?.firstname?.message || null}\r\n                                    />\r\n                                )}\r\n\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.lastname} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.lastname)}\r\n                                        defaultValue={getValues(\"lastname\")}\r\n                                        value={getValues(\"lastname\")}\r\n                                        onChange={e => {\r\n                                            setValue('lastname', e.target.value)\r\n                                            trigger(\"lastname\")\r\n                                        }}\r\n                                        error={errors?.lastname?.message ? true : false}\r\n                                        helperText={errors?.lastname?.message || null}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n\r\n                        {/*{!person.personid &&\r\n                            <>\r\n                                <Grid item sm={6} xl={6} xs={6} md={6} lg={6}>\r\n                                    <Property\r\n                                        title={<Trans i18nKey={langKeys.personIdentifier} />}\r\n                                        subtitle={\r\n                                            channel.includes('WHA')||channel.includes('VOX')?(\r\n                                                <Controller\r\n                                                    name=\"personcommunicationchannel\"\r\n                                                    control={control}\r\n                                                    render={({ field }) => (\r\n                                                        <CssPhonemui\r\n                                                            {...field}\r\n                                                            fullWidth\r\n                                                            defaultCountry={\"pe\"}\r\n                                                            placeholder={t(langKeys.personIdentifier)}\r\n                                                            error={errors?.personcommunicationchannel?.message ? true : false}\r\n                                                            helperText={errors?.personcommunicationchannel?.message || null}\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                            ):(\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                placeholder={t(langKeys.personIdentifier)}\r\n                                                onChange={e => setValue('personcommunicationchannel', e.target.value)}\r\n                                                error={errors?.personcommunicationchannel?.message ? true : false}\r\n                                                helperText={errors?.personcommunicationchannel?.message || null}\r\n                                            />\r\n                                        )}\r\n                                        m={1}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                                    <Property\r\n                                        title={<Trans i18nKey={langKeys.internalIdentifier} />}\r\n                                        subtitle={\r\n                                            channel.includes('WHA')||channel.includes('VOX')?(\r\n                                                <Controller\r\n                                                    name=\"personcommunicationchannelowner\"\r\n                                                    control={control}\r\n                                                    render={({ field }) => (\r\n                                                        <CssPhonemui\r\n                                                            {...field}\r\n                                                            fullWidth\r\n                                                            defaultCountry={\"pe\"}\r\n                                                            placeholder={t(langKeys.personIdentifier)}\r\n                                                            error={errors?.personcommunicationchannelowner?.message ? true : false}\r\n                                                            helperText={errors?.personcommunicationchannelowner?.message || null}\r\n                                                        />\r\n                                                    )}\r\n                                                />\r\n                                            ):(\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                placeholder={t(langKeys.internalIdentifier)}\r\n                                                onChange={e => setValue('personcommunicationchannel', e.target.value)}\r\n                                                error={errors?.personcommunicationchannelowner?.message ? true : false}\r\n                                                helperText={errors?.personcommunicationchannelowner?.message || null}\r\n                                            />\r\n                                        )}\r\n                                        m={1}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                                    <Property\r\n                                        title={<Trans i18nKey={langKeys.communicationchannel} />}\r\n                                        subtitle={(\r\n                                            <FieldSelect\r\n                                                onChange={(value) => {\r\n                                                    setValue('channeltype', value?.domainvalue);\r\n                                                    setchannel(value?.domainvalue||\"\")\r\n                                                }}\r\n                                                loading={domains.loading}\r\n                                                data={domains.value?.channelTypes || []}\r\n                                                optionValue=\"domainvalue\"\r\n                                                optionDesc=\"domaindesc\"\r\n                                                error={errors?.channeltype?.message}\r\n                                            />\r\n                                        )}\r\n                                        m={1}\r\n                                    />\r\n                                </Grid>\r\n                            </>\r\n                        }*/}\r\n\r\n                        {/*<Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.fullname} />}\r\n                                subtitle={person.name}\r\n                                m={1}\r\n                            />\r\n                        </Grid>*/}\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.documenttype} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={getValues(\"documenttype\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('documenttype', value?.domainvalue||\"\");\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.docTypes || []}\r\n                                        prefixTranslation=\"type_documenttype_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domainvalue\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.docNumber} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.docNumber)}\r\n                                        defaultValue={getValues(\"documentnumber\")}\r\n                                        value={getValues(\"documentnumber\")}\r\n                                        onChange={e => {\r\n                                            setValue('documentnumber', e.target.value)\r\n                                            trigger('documentnumber')\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.personType} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={getValues(\"persontype\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('persontype', value?.domainvalue||\"\");\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.personTypes || []}\r\n                                        prefixTranslation=\"type_persontype_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domainvalue\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.type} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={person.type}\r\n                                        onChange={(value) => {\r\n                                            setValue('type', value?.domainvalue||\"\");\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.personGenTypes || []}\r\n                                        prefixTranslation=\"type_personlevel_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domaindesc\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.phone} />}\r\n                                subtitle={(\r\n                                    <Controller\r\n                                        name=\"phone\"\r\n                                        control={control}\r\n                                        render={({ field }) => (\r\n                                            <CssPhonemui\r\n                                                {...field}\r\n                                                fullWidth\r\n                                                defaultCountry={\"pe\"}\r\n                                                placeholder={t(langKeys.phone)}\r\n                                                onChange={(value: any) => {\r\n                                                    setValue('personcommunicationchannel', value || \"\")\r\n                                                    setValue('personcommunicationchannelowner', value || \"\")\r\n                                                    setValue('channeltype', value?.domainvalue);\r\n                                                    setValue('phone', value || \"\");\r\n                                                    setExtraTriggers({...extraTriggers, phone: value?.replace(\"+\",'') || \"\"})\r\n                                                }}\r\n                                                InputProps={{\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {(!voxiConnection.error && userConnected) &&\r\n                                                                <IconButton size=\"small\" onClick={() => {\r\n                                                                    if(voxiConnection.error){\r\n                                                                        dispatch(showSnackbar({ show: true, severity: \"warning\", message: t(langKeys.nochannelvoiceassociated) })) \r\n                                                                    }else {\r\n                                                                        dispatch(setModalCall(true))\r\n                                                                        dispatch(setPhoneNumber(getValues(\"phone\")))\r\n                                                                    }}}>\r\n                                                                    <PhoneIcon />\r\n                                                                </IconButton>\r\n                                                            }\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.alternativePhone} />}\r\n                                subtitle={(\r\n                                    <Controller\r\n                                        name=\"alternativephone\"\r\n                                        control={control}\r\n                                        render={({ field }) => (\r\n                                            <CssPhonemui\r\n                                                {...field}\r\n                                                fullWidth\r\n                                                defaultCountry={\"pe\"}\r\n                                                placeholder={t(langKeys.alternativePhone)}\r\n                                                onChange={(value: any) => {\r\n                                                    setValue('alternativephone', value || \"\");\r\n                                                }}\r\n                                                InputProps={{\r\n                                                    endAdornment: (\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            {(!voxiConnection.error && userConnected) &&\r\n                                                                <IconButton size=\"small\" onClick={() => {\r\n                                                                    if(voxiConnection.error){\r\n                                                                        dispatch(showSnackbar({ show: true, severity: \"warning\", message: t(langKeys.nochannelvoiceassociated) })) \r\n                                                                    }else {\r\n                                                                        dispatch(setModalCall(true))\r\n                                                                        dispatch(setPhoneNumber(getValues(\"alternativephone\")))\r\n                                                                    }}}>\r\n                                                                    <PhoneIcon />\r\n                                                                </IconButton>\r\n                                                            }\r\n                                                        </InputAdornment>\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.email} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.email)}\r\n                                        defaultValue={getValues(\"email\")}\r\n                                        value={getValues(\"email\")}\r\n                                        onChange={e => {\r\n                                            setValue('email', e.target.value)\r\n                                            setExtraTriggers({...extraTriggers, email: e.target.value || \"\"})\r\n                                            trigger(\"email\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.alternativeEmail} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.alternativeEmail)}\r\n                                        defaultValue={getValues(\"alternativeemail\")}\r\n                                        value={getValues(\"alternativeemail\")}\r\n                                        onChange={e => {\r\n                                            setValue('alternativeemail', e.target.value)\r\n                                            trigger(\"alternativeemail\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.birthday} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.birthday)}\r\n                                        defaultValue={getValues(\"birthday\")}\r\n                                        value={getValues(\"birthday\")}\r\n                                        onChange={e => {\r\n                                            setValue('birthday', e?.target?.value||null)\r\n                                            trigger(\"birthday\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.gender} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={getValues(\"gender\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('gender', value?.domainvalue||\"\");\r\n                                            setValue('genderdesc', value?.domaindesc||\"\")\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.genders || []}\r\n                                        prefixTranslation=\"type_gender_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domainvalue\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.educationLevel} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={getValues(\"educationlevel\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('educationlevel', value?.domainvalue||\"\");\r\n                                            setValue('educationleveldesc', value?.domaindesc||\"\")\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.educationLevels || []}\r\n                                        prefixTranslation=\"type_educationlevel_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domainvalue\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.civilStatus} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={getValues(\"civilstatus\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('civilstatus', value?.domainvalue||\"\");\r\n                                            setValue('civilstatusdesc', value?.domaindesc||\"\")\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.civilStatuses || []}\r\n                                        prefixTranslation=\"type_civilstatus_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domainvalue\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        {ocupationProperty === \"DOMINIO\"? <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.occupation} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        uset={true}\r\n                                        valueDefault={getValues(\"occupation\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('occupation', value?.domainvalue||\"\");\r\n                                            setValue('occupationdesc', value?.domaindesc||\"\")\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.occupations || []}\r\n                                        prefixTranslation=\"type_ocupation_\"\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domainvalue\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>:                        \r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.occupation} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.occupation)}\r\n                                        defaultValue={getValues(\"occupation\")}\r\n                                        value={getValues(\"occupation\")}\r\n                                        onChange={e => {\r\n                                            setValue('occupation', e.target.value)\r\n                                            setValue('occupationdesc', e.target.value)\r\n                                            trigger(\"occupation\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>}\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.group} count={2} />}\r\n                                subtitle={(\r\n                                    <FieldSelect\r\n                                        valueDefault={getValues(\"groups\")}\r\n                                        onChange={(value) => {\r\n                                            setValue('groups', value?.domainvalue||\"\");\r\n                                        }}\r\n                                        loading={domains.loading}\r\n                                        data={domains.value?.groups || []}\r\n                                        optionValue=\"domainvalue\"\r\n                                        optionDesc=\"domaindesc\"\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.address} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.address)}\r\n                                        defaultValue={getValues(\"address\")}\r\n                                        value={getValues(\"address\")}\r\n                                        onChange={e => {\r\n                                            setValue('address', e.target.value)\r\n                                            trigger(\"address\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.district} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.district)}\r\n                                        defaultValue={getValues(\"district\")}\r\n                                        value={getValues(\"district\")}\r\n                                        onChange={e => {\r\n                                            setValue('district', e.target.value)\r\n                                            trigger(\"district\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.referralchannel} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.referralchannel)}\r\n                                        defaultValue={getValues(\"referralchannel\")}\r\n                                        value={getValues(\"referralchannel\")}\r\n                                        onChange={e => {\r\n                                            setValue('referralchannel', e.target.value)\r\n                                            trigger(\"referralchannel\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                            <Property\r\n                                title={<Trans i18nKey={langKeys.healthprofessional} />}\r\n                                subtitle={(\r\n                                    <TextField\r\n                                        fullWidth\r\n                                        placeholder={t(langKeys.healthprofessional)}\r\n                                        defaultValue={getValues(\"healthprofessional\")}\r\n                                        value={getValues(\"healthprofessional\")}\r\n                                        onChange={e => {\r\n                                            setValue('healthprofessional', e.target.value)\r\n                                            trigger(\"healthprofessional\")\r\n                                        }}\r\n                                    />\r\n                                )}\r\n                                m={1}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            {/* <div style={{ height: 12 }} />\r\n            <label>{t(langKeys.referredBy)}</label>\r\n            {referrerList.data.map((e, i) => <ReferrerItem referrer={e} key={`referrer_item_${i}`} />)} */}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useChannelItemStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: '#EBEAED solid 1px',\r\n        borderRadius: 5,\r\n        padding: theme.spacing(2),\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    contentContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-start',\r\n        flexGrow: 1,\r\n    },\r\n    propTitle: {\r\n        fontWeight: 400,\r\n        fontSize: 14,\r\n        color: '#8F92A1',\r\n    },\r\n    item: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    itemLabel: {\r\n        color: '#8F92A1',\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n        margin: 0,\r\n    },\r\n    itemText: {\r\n        color: theme.palette.text.primary,\r\n        fontSize: 15,\r\n        fontWeight: 400,\r\n        margin: '6px 0',\r\n    },\r\n    subtitle: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        gap: '0.5em',\r\n        alignItems: 'center',\r\n    },\r\n    propSubtitle: {\r\n        color: theme.palette.text.primary,\r\n        fontWeight: 400,\r\n        fontSize: 15,\r\n        margin: 0,\r\n        width: '100%',\r\n    },\r\n    buttonphone: {\r\n        padding: 0,\r\n        '&:hover': {\r\n            color: \"#7721ad\",\r\n        },\r\n    }\r\n}));\r\n\r\ninterface ChannelItemProps {\r\n    channel: IPersonChannel;\r\n}\r\n\r\nconst nameschannel: { [x: string]: string } = {\r\n    \"WHAT\": \"WHATSAPP\",\r\n    \"WHAD\": \"WHATSAPP\",\r\n    \"WHAP\": \"WHATSAPP\",\r\n    \"WHAC\": \"WHATSAPP\",\r\n    \"WHAG\": \"WHATSAPP\",\r\n    \"FBMS\": \"FACEBOOK MESSENGER\",\r\n    \"FBDM\": \"FACEBOOK MESSENGER\",\r\n    \"FBWA\": \"FACEBOOK MURO\",\r\n    \"WEBM\": \"CHAT WEB\",\r\n    \"TELE\": \"TELEGRAM\",\r\n    \"INST\": \"INSTAGRAM\",\r\n    \"INMS\": \"INSTAGRAM\",\r\n    \"INDM\": \"INSTAGRAM\",\r\n    \"ANDR\": \"ANDROID\",\r\n    \"APPL\": \"IOS\",\r\n    \"CHATZ\": \"CHAT WEB\",\r\n    \"CHAZ\": \"CHAT WEB\",\r\n    \"MAIL\": \"EMAIL\",\r\n    \"MAII\": \"EMAIL\",\r\n    \"YOUT\": \"YOUTUBE\",\r\n    \"LINE\": \"LINE\",\r\n    \"SMS\": \"SMS\",\r\n    \"SMSI\": \"SMS\",\r\n    \"TWIT\": \"TWITTER\",\r\n    \"TWMS\": \"TWITTER\",\r\n    \"VOXI\": \"T_VOICECHANNEL\",\r\n};\r\n\r\nconst ChannelItem: FC<ChannelItemProps> = ({ channel }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useChannelItemStyles();\r\n    const dispatch = useDispatch();\r\n    const voxiConnection = useSelector(state => state.voximplant.connection);\r\n    const callOnLine = useSelector(state => state.voximplant.callOnLine);\r\n    const userConnected = useSelector(state => state.inbox.userConnected);\r\n    const [waitUnLink, setWaitUnLink] = useState(false);\r\n    const unLinkRes = useSelector(state => state.main.execute);\r\n\r\n    const personIdentifier = useMemo(() => {\r\n        if (!channel) return '';\r\n        const index = channel.personcommunicationchannel.lastIndexOf('_');\r\n        return channel.personcommunicationchannel.substring(0, index);\r\n    }, [channel]);\r\n\r\n    useEffect(() => {\r\n        if (waitUnLink) {\r\n            if (!unLinkRes.loading && !unLinkRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: \"Vinculación correcta\" }))\r\n                setWaitUnLink(false);\r\n                dispatch(getChannelListByPerson(getChannelListByPersonBody(channel.personid)));\r\n            } else if (unLinkRes.error) {\r\n                const message = t(unLinkRes.code || \"error_unexpected_error\", { module: t(langKeys.tipification).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitUnLink(false);\r\n            }\r\n        }\r\n    }, [unLinkRes, waitUnLink])\r\n\r\n    // dispatch(getChannelListByPerson(getChannelListByPersonBody(person.personid)));\r\n    return (\r\n        <div className={classes.root}>\r\n            {channel.originpersonid && (\r\n                <div style={{ textAlign: \"right\" }}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        disabled={unLinkRes.loading}\r\n                        startIcon={<LinkOffIcon color=\"secondary\" />}\r\n                        onClick={() => {\r\n                            dispatch(execute(unLinkPerson({\r\n                                personid: channel.personid,\r\n                                personcommunicationchannel: channel.personcommunicationchannel\r\n                            })))\r\n                            setWaitUnLink(true)\r\n                        }}\r\n                    >\r\n                        {\"Desvincular\"}\r\n                    </Button>\r\n                </div>\r\n            )}\r\n            <Grid container direction=\"row\">\r\n                <Grid item xs={11} sm={11} md={6} lg={6} xl={6}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.communicationchannel} />}\r\n                        subtitle={(\r\n                            <div className={classes.subtitle}>\r\n                                <span>{\r\n                                    (nameschannel[channel.type] || '').includes(\"T_\")\r\n                                        ? t((langKeys as any)[nameschannel[channel.type]])\r\n                                        : nameschannel[channel.type]}</span>\r\n                                <GetIcon channelType={channel.type} color='black' />\r\n                            </div>\r\n                        )}\r\n                        m={1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.displayname} />}\r\n                        subtitle={channel.displayname}\r\n                        m={1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n\r\n                    <Box>\r\n                        <div className={classes.contentContainer}>\r\n                            <label className={classes.propTitle}>{<Trans i18nKey={langKeys.personIdentifier} />}</label>\r\n                            <div style={{ height: 4 }} />\r\n                            <div style={{ display: \"flex\" }}>\r\n                                {(!voxiConnection.error && !voxiConnection.loading && userConnected && !callOnLine && (channel.type.includes(\"WHA\") || channel.type.includes(\"VOXI\"))) &&\r\n                                    <IconButton\r\n                                        className={classes.buttonphone}\r\n                                        onClick={() => { dispatch(setPhoneNumber(channel.personcommunicationchannelowner.replaceAll('+', ''))); dispatch(setModalCall(true)) }}\r\n                                    >\r\n                                        <PhoneIcon style={{ width: \"20px\", height: \"20px\" }} />\r\n                                    </IconButton>\r\n                                }\r\n                                <div className={classes.propSubtitle}>{channel.personcommunicationchannelowner || \"-\"}</div>\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.internalIdentifier} />}\r\n                        subtitle={personIdentifier}\r\n                        m={1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.firstConnection} />}\r\n                        subtitle={channel.firstcontact}\r\n                        m={1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.lastConnection} />}\r\n                        subtitle={channel.lastcontact}\r\n                        m={1}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={4} lg={4} xl={4}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.conversation} count={2} />}\r\n                        subtitle={channel.conversations || '0'}\r\n                        m={1}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface ChannelTabProps {\r\n    person: IPerson;\r\n    getValues: UseFormGetValues<IPerson>;\r\n    setValue: UseFormSetValue<IPerson>;\r\n    domains: IObjectState<IPersonDomains>;\r\n}\r\n\r\nconst CommunicationChannelsTab: FC<ChannelTabProps> = ({ person }) => {\r\n    const dispatch = useDispatch();\r\n    const channelList = useSelector(state => state.person.personChannelList);\r\n\r\n    useEffect(() => {\r\n        if (person.personid && person.personid !== 0) {\r\n            dispatch(getChannelListByPerson(getChannelListByPersonBody(person.personid)));\r\n            return () => {\r\n                dispatch(resetGetChannelListByPerson());\r\n            };\r\n        }\r\n    }, [dispatch, person]);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div style={{ height: 12 }} />\r\n            {channelList.data.map((e, i) => <ChannelItem channel={e} key={`channel_item_${i}`} />)}\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface AuditTabProps {\r\n    person: IPerson;\r\n}\r\n\r\nconst AuditTab: FC<AuditTabProps> = ({ person }) => {\r\n    return (\r\n        <Grid container direction=\"row\">\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.communicationchannel} />}\r\n                            subtitle={`${person.communicationchannelname || ''}`}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.createdBy} />}\r\n                            subtitle={person.createby}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.creationDate} />}\r\n                            subtitle={new Date(person.createdate).toLocaleString()}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6} xl={6}>\r\n                <Grid container direction=\"column\">\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.firstContactDate} />}\r\n                            subtitle={person.firstcontact ? new Date(person.firstcontact).toLocaleString() : ''}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.lastContactDate} />}\r\n                            subtitle={person.lastcontact ? new Date(person.lastcontact).toLocaleString() : ''}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.modifiedBy} />}\r\n                            subtitle={person.changeby}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Property\r\n                            title={<Trans i18nKey={langKeys.modificationDate} />}\r\n                            subtitle={new Date(person.changedate).toLocaleString()}\r\n                            m={1}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\ninterface ConversationsTabProps {\r\n    person: IPerson;\r\n}\r\n\r\nconst useConversationsTabStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n    root2: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 35,\r\n        border: '1px solid #EBEAED',\r\n        backgroundColor: '#F9F9FA',\r\n    },\r\n    containerFilterGeneral: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#f9f9fa',\r\n        padding: `${theme.spacing(2)}px`,\r\n    },\r\n    containerSearch: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%',\r\n        },\r\n    },\r\n    iconButton: {\r\n        padding: 4,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    inputPlaceholder: {\r\n        '&::placeholder': {\r\n            fontSize: 14,\r\n            fontWeight: 500,\r\n            color: '#84818A',\r\n        },\r\n    },\r\n}));\r\n\r\nconst ConversationsTab: FC<ConversationsTabProps> = ({ person }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useConversationsTabStyles();\r\n    const dispatch = useDispatch();\r\n    const firstCall = useRef(true);\r\n    const [page, setPage] = useState(0);\r\n    const [searchFilter, setsearchFilter] = useState(\"\");\r\n    const [list, setList] = useState<IPersonConversation[]>([]);\r\n    const [filteredlist, setfilteredList] = useState<IPersonConversation[]>([]);\r\n    const conversations = useSelector(state => state.person.personTicketList);\r\n\r\n    const fetchTickets = useCallback(() => {\r\n        if (person.personid && person.personid !== 0) {\r\n            const params = {\r\n                filters: {},\r\n                sorts: {},\r\n                take: 20,\r\n                skip: 20 * page,\r\n                offset: 0,\r\n            };\r\n            dispatch(getTicketListByPerson(getTicketListByPersonBody(person.personid, params)))\r\n        }\r\n    }, [page, person, dispatch]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(resetGetTicketListByPerson());\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const myDiv = document.getElementById(\"wrapped-tabpanel-2\");\r\n        if (myDiv) {\r\n            myDiv.onscroll = () => {\r\n                if (!firstCall.current && list.length >= conversations.count) return;\r\n                if (conversations.loading) return;\r\n                if (myDiv.offsetHeight + myDiv.scrollTop + 1 >= myDiv.scrollHeight) {\r\n                    setPage(prevPage => prevPage + 1);\r\n                }\r\n            };\r\n        }\r\n    }, [list, conversations, setPage]);\r\n\r\n    useEffect(() => {\r\n        fetchTickets();\r\n    }, [fetchTickets]);\r\n\r\n    useEffect(() => {\r\n        if (firstCall.current) firstCall.current = false;\r\n        if (conversations.loading) return;\r\n        if (conversations.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: conversations.message || 'Error',\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else {\r\n            setList(prevList => [...prevList, ...conversations.data]);\r\n            setfilteredList(prevList => [...prevList, ...conversations.data]);\r\n        }\r\n    }, [conversations, setList, dispatch]);\r\n\r\n    function filterList(e: any) {\r\n        setsearchFilter(e)\r\n        if (e === \"\") {\r\n            setfilteredList(list)\r\n        } else {\r\n\r\n            var newArray = list.filter(function (el) {\r\n                return el.ticketnum.includes(e) ||\r\n                    el.asesorfinal.toLowerCase().includes(e.toLowerCase()) ||\r\n                    el.channeldesc.toLowerCase().includes(e.toLowerCase()) ||\r\n                    new Date(el.fechainicio).toLocaleString().includes(e) ||\r\n                    new Date(el.fechafin).toLocaleString().includes(e)\r\n            });\r\n            setfilteredList(newArray)\r\n        }\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n            {list.length > 0 &&\r\n                <Box className={classes.containerFilterGeneral}>\r\n                    <span></span>\r\n                    <div className={classes.containerSearch}>\r\n                        <Paper component=\"div\" className={classes.root2} elevation={0}>\r\n                            <IconButton type=\"button\" className={classes.iconButton} aria-label=\"search\" disabled>\r\n                                <SearchIcon />\r\n                            </IconButton>\r\n                            <InputBase\r\n                                className={classes.input}\r\n                                value={searchFilter}\r\n                                onChange={(e) => filterList(e.target.value)}\r\n                                placeholder={t(langKeys.search)}\r\n                                inputProps={{ className: classes.inputPlaceholder }}\r\n                            />\r\n                        </Paper>\r\n                    </div>\r\n                </Box>\r\n            }\r\n            {filteredlist.map((e, i) => {\r\n                if (filteredlist.length < conversations.count && i === filteredlist.length - 1) {\r\n                    return [\r\n                        <ConversationItem conversation={e} key={`conversation_item_${i}`} person={person} />,\r\n                        <div\r\n                            style={{ width: 'inherit', display: 'flex', justifyContent: 'center' }}\r\n                            key={`conversation_item_${i}_loader`}\r\n                        >\r\n                        </div>\r\n                    ];\r\n                }\r\n                return <ConversationItem conversation={e} key={`conversation_item_${i}`} person={person} />;\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useConversationsItemStyles = makeStyles(theme => ({\r\n    root: {\r\n        border: '#EBEAED solid 1px',\r\n        borderRadius: 5,\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n    collapseContainer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        fontSize: 14,\r\n        fontWeight: 400,\r\n    },\r\n    infoLabel: {\r\n        fontWeight: 500,\r\n        fontSize: 14,\r\n    },\r\n    totalTime: {\r\n        fontWeight: 700,\r\n        fontSize: 16,\r\n    },\r\n    icon: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    containerstyle: {\r\n        padding: \"10px 0\"\r\n    }\r\n}));\r\n\r\ninterface ConversationItemProps {\r\n    conversation: IPersonConversation;\r\n    person: Dictionary;\r\n}\r\n\r\n\r\n\r\nconst ConversationItem: FC<ConversationItemProps> = ({ conversation, person }) => {\r\n    const classes = useConversationsItemStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const mainResult = useSelector(state => state.main);\r\n    const [rowSelected, setRowSelected] = useState<Dictionary | null>(null);\r\n    const openDialogInteractions = useCallback((row: any) => {\r\n        setOpenModal(true);\r\n        setRowSelected({ ...row, displayname: person.name, ticketnum: row.ticketnum })\r\n    }, [mainResult]);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const downloadCallRecord = async (ticket: Dictionary) => {\r\n        // dispatch(getCallRecord({call_session_history_id: ticket.postexternalid}));\r\n        // setWaitDownloadRecord(true);\r\n        try {\r\n            const axios_result = await VoximplantService.getCallRecord({ call_session_history_id: ticket.postexternalid });\r\n            if (axios_result.status === 200) {\r\n                let buff = Buffer.from(axios_result.data, 'base64');\r\n                const blob = new Blob([buff], { type: axios_result.headers['content-type'].split(';').find((x: string) => x.includes('audio')) });\r\n                const objectUrl = window.URL.createObjectURL(blob);\r\n                let a = document.createElement('a');\r\n                a.href = objectUrl;\r\n                a.download = ticket.ticketnum;\r\n                a.click();\r\n            }\r\n        }\r\n        catch (error: any) {\r\n            const errormessage = t(error?.response?.data?.code || \"error_unexpected_error\")\r\n            dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <DialogInteractions\r\n                openModal={openModal}\r\n                setOpenModal={setOpenModal}\r\n                ticket={rowSelected}\r\n            />\r\n            <Grid container direction=\"row\">\r\n\r\n                <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n                    {(conversation.channeltype === \"VOXI\" && conversation.postexternalid && conversation.callanswereddate) &&\r\n                        <Tooltip title={t(langKeys.download_record) || \"\"}>\r\n                            <IconButton size=\"small\" onClick={() => downloadCallRecord(conversation)} style={{ paddingTop: 15, paddingLeft: 20 }}\r\n                            >\r\n                                <CallRecordIcon style={{ fill: '#7721AD' }} />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n                    <Property title=\"Ticket #\" subtitle={conversation.ticketnum} isLink={true} onClick={() => openDialogInteractions(conversation)} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={2} lg={2} xl={2}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.agent} />}\r\n                        subtitle={conversation.asesorfinal}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.channel} />}\r\n                        subtitle={(\r\n                            <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', gap: '0.5em' }}>\r\n                                <span>{conversation.channeldesc}</span>\r\n                                <GetIcon channelType={conversation.channeltype} color='black' />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={2} lg={2} xl={2}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.startDate} />}\r\n                        subtitle={new Date(conversation.fechainicio).toLocaleString()}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={2} lg={2} xl={2}>\r\n                    <Property\r\n                        title={<Trans i18nKey={langKeys.endDate} />}\r\n                        subtitle={conversation.fechafin && new Date(conversation.fechafin).toLocaleString()}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={1} lg={1} xl={1}>\r\n                    <div className={classes.icon}>\r\n                        <IconButton size=\"medium\" onClick={() => setOpen(!open)}>\r\n                            <ArrowDropDown />\r\n                        </IconButton>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Collapse in={open}>\r\n                <div className={classes.collapseContainer}>\r\n                    <h3><Trans i18nKey={langKeys.ticketInformation} /></h3>\r\n                    <Grid container direction=\"column\">\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            TMO\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.tmo}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            <Trans i18nKey={langKeys.status} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.status}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            <Trans i18nKey={langKeys.tmeAgent} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.tme}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            <Trans i18nKey={langKeys.closetype} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.closetype}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            <Trans i18nKey={langKeys.tmrAgent} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.tmr}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            <Trans i18nKey={langKeys.initialAgent} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.asesorinicial}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            {/* <Trans i18nKey={langKeys.avgResponseTimeOfClient} /> */}\r\n                                            <Trans i18nKey={langKeys.tmrClient} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.tiempopromediorespuestapersona}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={12} md={6} lg={6} xl={6} className={classes.containerstyle}>\r\n                                <Grid container direction=\"row\">\r\n                                    <Grid item xs={12} sm={6} md={6} lg={3} xl={2}>\r\n                                        <span className={classes.infoLabel}>\r\n                                            <Trans i18nKey={langKeys.finalAgent} />\r\n                                        </span>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={6} lg={9} xl={10}>\r\n                                        <span>{conversation.asesorfinal}</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            </Collapse>\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface OpportunitiesTabProps {\r\n    person: IPerson;\r\n}\r\n\r\nconst OpportunitiesTab: FC<OpportunitiesTabProps> = ({ person }) => {\r\n    const dispatch = useDispatch();\r\n    const leads = useSelector(state => state.person.personLeadList);\r\n    const { t } = useTranslation();\r\n    // const history = useHistory();\r\n\r\n    // const goToLead = (lead: Dictionary) => {\r\n    //     history.push({ pathname: paths.CRM_EDIT_LEAD.resolve(lead.leadid), });\r\n    // }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: t(langKeys.opportunity),\r\n                accessor: 'description',\r\n            },\r\n            {\r\n                Header: t(langKeys.lastUpdate),\r\n                accessor: 'changedate',\r\n                type: 'date',\r\n                sortType: 'datetime',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return row.changedate ? convertLocalDate(row.changedate).toLocaleString() : \"\"\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.phase),\r\n                accessor: 'phase',\r\n            },\r\n            {\r\n                Header: t(langKeys.priority),\r\n                accessor: 'priority',\r\n                type: \"select\",\r\n                listSelectFilter: [{ key: t(langKeys.priority_low), value: \"LOW\" }, { key: t(langKeys.priority_medium), value: \"MEDIUM\" }, { key: t(langKeys.priority_high), value: \"HIGH\" }],\r\n                Cell: (props: any) => {\r\n                    const { priority } = props.cell.row.original;\r\n                    return (\r\n                        <Rating\r\n                            name=\"simple-controlled\"\r\n                            max={3}\r\n                            value={urgencyLevels.findIndex(x => x === priority)}\r\n                            readOnly={true}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status'\r\n            },\r\n            {\r\n                Header: t(langKeys.product, { count: 2 }),\r\n                accessor: 'leadproduct',\r\n                Cell: (props: any) => {\r\n                    const { leadproduct } = props.cell.row.original;\r\n                    if (!leadproduct) return null;\r\n                    return leadproduct.split(\",\").map((t: string, i: number) => (\r\n                        <span key={`leadproduct${i}`} style={{\r\n                            backgroundColor: '#7721AD',\r\n                            color: '#fff',\r\n                            borderRadius: '20px',\r\n                            padding: '2px 5px',\r\n                            margin: '2px'\r\n                        }}>{t}</span>\r\n                    ))\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.tags),\r\n                accessor: 'tags',\r\n                Cell: (props: any) => {\r\n                    const { tags } = props.cell.row.original;\r\n                    if (!tags)\r\n                        return null;\r\n                    return tags.split(\",\").map((t: string, i: number) => (\r\n                        <span key={`lead${i}`} style={{\r\n                            backgroundColor: '#7721AD',\r\n                            color: '#fff',\r\n                            borderRadius: '20px',\r\n                            padding: '2px 5px',\r\n                            margin: '2px'\r\n                        }}>{t}</span>\r\n                    ))\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.comments),\r\n                accessor: 'datenote',\r\n                NoFilter: true,\r\n                NoSort: true,\r\n                Cell: (props: any) => {\r\n                    const { datenote, leadnote, dateactivity, leadactivity } = props.cell.row.original;\r\n                    return (\r\n                        <div>\r\n                            {datenote &&\r\n                                <div>{t(langKeys.lastnote)} ({convertLocalDate(datenote).toLocaleString()}) {leadnote}</div>\r\n                            }\r\n                            {dateactivity &&\r\n                                <div>{t(langKeys.nextprogramedactivity)} ({convertLocalDate(dateactivity).toLocaleString()}) {leadactivity}</div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n        ],\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        if ((person?.personid || 0) > 0) {\r\n            dispatch(getLeadsByPerson(getOpportunitiesByPersonBody(person.personid)));\r\n        }\r\n        return () => {\r\n            dispatch(resetGetLeadsByPerson());\r\n        };\r\n    }, [dispatch, person]);\r\n\r\n    return (\r\n        <TableZyx\r\n            columns={columns}\r\n            filterGeneral={false}\r\n            data={leads.data}\r\n            download={false}\r\n            loading={leads.loading}\r\n            // onClickRow={goToLead}\r\n            register={false}\r\n        />\r\n    );\r\n}\r\n\r\nconst usePersonDetailStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: \"100%\",\r\n        width: 'inherit',\r\n        // overflowY: 'hidden',\r\n    },\r\n    rootContent: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'stretch',\r\n        flexGrow: 1,\r\n        overflowY: 'hidden',\r\n    },\r\n    tabs: {\r\n        backgroundColor: '#EBEAED',\r\n        color: '#989898',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        width: 'inherit',\r\n    },\r\n    tab: {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: '#EBEAED',\r\n        flexGrow: 1,\r\n        maxWidth: 'unset',\r\n    },\r\n    activetab: {\r\n        backgroundColor: 'white',\r\n    },\r\n    label: {\r\n        fontSize: 14,\r\n        fontWeight: 500,\r\n    },\r\n    profile: {\r\n        color: theme.palette.text.primary,\r\n        maxWidth: 343,\r\n        width: 343,\r\n        minWidth: 343,\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflowY: 'auto',\r\n    },\r\n}));\r\n\r\ninterface DialogSendTemplateProps {\r\n    setOpenModal: (param: any) => void;\r\n    openModal: boolean;\r\n    persons: IPerson[];\r\n    type: \"HSM\" | \"MAIL\" | \"SMS\";\r\n}\r\n\r\nconst DialogSendTemplate: React.FC<DialogSendTemplateProps> = ({ setOpenModal, openModal, persons, type }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const [waitClose, setWaitClose] = useState(false);\r\n    const sendingRes = useSelector(state => state.inbox.triggerSendHSM);\r\n    const [templatesList, setTemplatesList] = useState<Dictionary[]>([]);\r\n    const [channelList, setChannelList] = useState<Dictionary[]>([]);\r\n    const [bodyMessage, setBodyMessage] = useState('');\r\n    const [personWithData, setPersonWithData] = useState<IPerson[]>([])\r\n    const domains = useSelector(state => state.person.editableDomains);\r\n\r\n    const title = useMemo(() => {\r\n        switch (type) {\r\n            case \"HSM\": return t(langKeys.send_hsm);\r\n            case \"SMS\": return t(langKeys.send_sms);\r\n            case \"MAIL\": return t(langKeys.send_mail);\r\n            default: return '-';\r\n        }\r\n    }, [type]);\r\n    const { control, register, handleSubmit, setValue, getValues, trigger, reset, formState: { errors } } = useForm<any>({\r\n        defaultValues: {\r\n            hsmtemplateid: 0,\r\n            observation: '',\r\n            communicationchannelid: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].communicationchannelid : 0) : 0,\r\n            communicationchanneltype: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].type : \"\") : '',\r\n            variables: []\r\n        }\r\n    });\r\n\r\n    const { fields } = useFieldArray({\r\n        control,\r\n        name: 'variables',\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (waitClose) {\r\n            if (!sendingRes.loading && !sendingRes.error) {\r\n                const message = type === \"HSM\" ? t(langKeys.successful_send_hsm) : (type === \"SMS\" ? t(langKeys.successful_send_sms) : t(langKeys.successful_send_mail));\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                setWaitClose(false);\r\n            } else if (sendingRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(sendingRes.code || \"error_unexpected_error\") }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitClose(false);\r\n            }\r\n        }\r\n    }, [sendingRes, waitClose])\r\n    useEffect(() => {\r\n    }, [channelList])\r\n\r\n    useEffect(() => {\r\n        if (!domains.error && !domains.loading) {\r\n            setTemplatesList(domains?.value?.templates?.filter(x => (type !== \"MAIL\" ? x.type === type : (x.type === type || x.type === \"HTML\"))) || []);\r\n            setChannelList(domains?.value?.channels?.filter(x => x.type.includes(type === \"HSM\" ? \"WHA\" : type)) || []);\r\n        }\r\n    }, [domains, type])\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            setBodyMessage('')\r\n            reset({\r\n                hsmtemplateid: 0,\r\n                hsmtemplatename: '',\r\n                variables: [],\r\n                communicationchannelid: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].communicationchannelid : 0) : 0,\r\n                communicationchanneltype: type === \"HSM\" ? (channelList?.length === 1 ? channelList[0].type : \"\") : ''\r\n            })\r\n            register('hsmtemplateid', { validate: (value) => ((value && value > 0) || t(langKeys.field_required)) });\r\n\r\n            if (type === \"HSM\") {\r\n                register('communicationchannelid', { validate: (value) => ((value && value > 0) || t(langKeys.field_required)) });\r\n            } else {\r\n                register('communicationchannelid');\r\n            }\r\n\r\n            if (type === \"MAIL\") {\r\n                setPersonWithData(persons.filter(x => x.email && x.email.length > 0))\r\n            } else if (type === \"HSM\") {\r\n                setPersonWithData(persons.filter(x => !!x.phonewhatsapp))\r\n            } else {\r\n                setPersonWithData(persons.filter(x => x.phone && x.phone.length > 0))\r\n            }\r\n        } else {\r\n            setWaitClose(false);\r\n        }\r\n    }, [openModal])\r\n\r\n    const onSelectTemplate = (value: Dictionary) => {\r\n        if (value) {\r\n            setBodyMessage(value.body);\r\n            setValue('hsmtemplateid', value ? value.id : 0);\r\n            setValue('hsmtemplatename', value ? value.name : '');\r\n            const variablesList = value.body.match(/({{)(.*?)(}})/g) || [];\r\n            const varaiblesCleaned = variablesList.map((x: string) => x.substring(x.indexOf(\"{{\") + 2, x.indexOf(\"}}\")))\r\n            setValue('variables', varaiblesCleaned.map((x: string) => ({ name: x, text: '', type: 'text' })));\r\n        } else {\r\n            setValue('hsmtemplatename', '');\r\n            setValue('variables', []);\r\n            setBodyMessage('');\r\n            setValue('hsmtemplateid', 0);\r\n        }\r\n    }\r\n    const onSubmit = handleSubmit((data) => {\r\n        if (personWithData.length === 0) {\r\n            dispatch(showSnackbar({ show: true, severity: \"warning\", message: t(langKeys.no_people_to_send) }))\r\n            return\r\n        }\r\n        const messagedata = {\r\n            hsmtemplateid: data.hsmtemplateid,\r\n            hsmtemplatename: data.hsmtemplatename,\r\n            communicationchannelid: data.communicationchannelid,\r\n            communicationchanneltype: data.communicationchanneltype,\r\n            platformtype: data.communicationchanneltype,\r\n            type,\r\n            shippingreason: \"PERSON\",\r\n            listmembers: personWithData.map(person => ({\r\n                personid: person.personid,\r\n                phone: person.phone?.replace(\"+\",'') || \"\",\r\n                firstname: person.firstname || \"\",\r\n                email: person.email || \"\",\r\n                lastname: person.lastname,\r\n                parameters: data.variables.map((v: any) => ({\r\n                    type: \"text\",\r\n                    text: v.variable !== 'custom' ? (person as Dictionary)[v.variable] : v.text,\r\n                    name: v.name\r\n                }))\r\n            }))\r\n        }\r\n        dispatch(sendHSM(messagedata))\r\n        dispatch(showBackdrop(true));\r\n        setWaitClose(true)\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (channelList.length === 1 && type === \"HSM\") {\r\n            setValue(\"communicationchannelid\", channelList[0].communicationchannelid || 0)\r\n            setValue('communicationchanneltype', channelList[0].type || \"\");\r\n            trigger(\"communicationchannelid\")\r\n        }\r\n    }, [channelList])\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={title}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.continue)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={onSubmit}\r\n            button2Type=\"submit\"\r\n        >\r\n            {type === \"HSM\" && (\r\n                <div className=\"row-zyx\">\r\n                    <FieldSelect\r\n                        label={t(langKeys.channel)}\r\n                        className=\"col-12\"\r\n                        valueDefault={getValues('communicationchannelid')}\r\n                        onChange={value => {\r\n                            setValue('communicationchannelid', value?.communicationchannelid || 0);\r\n                            setValue('communicationchanneltype', value?.type || \"\");\r\n                        }}\r\n                        error={errors?.communicationchannelid?.message}\r\n                        data={channelList}\r\n                        optionDesc=\"communicationchanneldesc\"\r\n                        optionValue=\"communicationchannelid\"\r\n                    />\r\n                </div>\r\n            )}\r\n            <div className=\"row-zyx\">\r\n                <FieldSelect\r\n                    label={t(langKeys.template)}\r\n                    className=\"col-12\"\r\n                    valueDefault={getValues('hsmtemplateid')}\r\n                    onChange={onSelectTemplate}\r\n                    error={errors?.hsmtemplateid?.message}\r\n                    data={templatesList}\r\n                    optionDesc=\"name\"\r\n                    optionValue=\"id\"\r\n                />\r\n            </div>\r\n            {type === 'MAIL' &&\r\n                <div style={{ overflow: 'scroll' }}>\r\n                    <React.Fragment>\r\n                        <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">{t(langKeys.message)}</Box>\r\n                        <div dangerouslySetInnerHTML={{ __html: bodyMessage }} />\r\n                    </React.Fragment>\r\n                </div>\r\n            }\r\n            {type !== 'MAIL' &&\r\n                <FieldEditMulti\r\n                    label={t(langKeys.message)}\r\n                    valueDefault={bodyMessage}\r\n                    disabled={true}\r\n                    rows={1}\r\n                />\r\n            }\r\n            <div style={{ display: 'flex', flexDirection: 'column', gap: 16, marginTop: 16 }}>\r\n                {fields.map((item: Dictionary, i) => (\r\n                    <div key={item.id}>\r\n                        <FieldSelect\r\n                            key={\"var_\" + item.id}\r\n                            fregister={{\r\n                                ...register(`variables.${i}.variable`, {\r\n                                    validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                })\r\n                            }}\r\n                            label={item.name}\r\n                            valueDefault={getValues(`variables.${i}.variable`)}\r\n                            onChange={(value) => {\r\n                                setValue(`variables.${i}.variable`, value.key)\r\n                                trigger(`variables.${i}.variable`)\r\n                            }}\r\n                            error={errors?.variables?.[i]?.text?.message}\r\n                            data={variables}\r\n                            uset={true}\r\n                            prefixTranslation=\"\"\r\n                            optionDesc=\"key\"\r\n                            optionValue=\"key\"\r\n                        />\r\n                        {getValues(`variables.${i}.variable`) === 'custom' &&\r\n                            <FieldEditArray\r\n                                key={\"custom_\" + item.id}\r\n                                fregister={{\r\n                                    ...register(`variables.${i}.text`, {\r\n                                        validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                    })\r\n                                }}\r\n                                valueDefault={item.value}\r\n                                error={errors?.variables?.[i]?.text?.message}\r\n                                onChange={(value) => setValue(`variables.${i}.text`, \"\" + value)}\r\n                            />\r\n                        }\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </DialogZyx>)\r\n}\r\n\r\nconst PersonDetail2: FC<{ person: any;}> = ({ person }) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n    const location = useLocation<IPerson>();\r\n    const classes = usePersonDetailStyles();\r\n    const [tabIndex, setTabIndex] = useState('0');\r\n    const domains = useSelector(state => state.person.editableDomains);\r\n    const edit = useSelector(state => state.person.editPerson);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const [waitLock, setWaitLock] = useState(false);\r\n    const [waitValidation, setWaitValidation] = useState(false);\r\n    const [showLinkPerson, setShowLinkPerson] = useState(false)\r\n    const [payloadTemp, setpayloadTemp] = useState<any>(null)\r\n    const [valuestosend, setvaluestosend] = useState<any>(null)\r\n    const [openDialogTemplate, setOpenDialogTemplate] = useState(false)\r\n    const [typeTemplate, setTypeTemplate] = useState<\"HSM\" | \"SMS\" | \"MAIL\">('MAIL');\r\n    const [extraTriggers, setExtraTriggers] = useState({\r\n        phone: person?.phone || '',\r\n        email: person?.email || '',\r\n    })\r\n\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n\r\n    const { setValue, getValues, trigger, register, control, formState: { errors } } = useForm<any>({\r\n        defaultValues: {\r\n            ...person,\r\n            corpdesc: user?.corpdesc || '',\r\n            orgdesc: user?.orgdesc || '',\r\n            personid: person?.personid || 0,\r\n            groups: person?.groups || '',\r\n            status: person?.status || 'ACTIVO',\r\n            type: person?.type || '',\r\n            persontype: person?.persontype || '',\r\n            personstatus: person?.personstatus || '',\r\n            phone: person?.phone || '',\r\n            email: person?.email || '',\r\n            birthday: person?.birthday || null,\r\n            alternativephone: person?.alternativephone || '',\r\n            alternativeemail: person?.alternativeemail || '',\r\n            documenttype: person?.documenttype || '',\r\n            documentnumber: person?.documentnumber || '',\r\n            firstname: person?.firstname || '',\r\n            lastname: person?.lastname || '',\r\n            sex: person?.sex || '',\r\n            gender: person?.gender || '',\r\n            civilstatus: person?.civilstatus || '',\r\n            occupation: person?.occupation || '',\r\n            educationlevel: person?.educationlevel || '',\r\n            address: person?.address || '',\r\n            district: person?.district || '',\r\n            healthprofessional: person?.healthprofessional || '',\r\n            referralchannel: person?.referralchannel || '',\r\n            referringpersonid: person?.referringpersonid || 0,\r\n        } || {},\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!person) {\r\n            history.push(paths.PERSON);\r\n        } else {\r\n            if (!person.personid) {\r\n                person.corpdesc = user?.corpdesc || '';\r\n                person.orgdesc = user?.orgdesc || '';\r\n                person.personid = 0;\r\n                person.groups = '';\r\n                person.status = 'ACTIVO';\r\n                person.type = '';\r\n                person.persontype = '';\r\n                person.personstatus = '';\r\n                person.phone = '';\r\n                person.email = '';\r\n                person.birthday = null;\r\n                person.alternativephone = '';\r\n                person.alternativeemail = '';\r\n                person.documenttype = '';\r\n                person.documentnumber = '';\r\n                person.firstname = '';\r\n                person.lastname = '';\r\n                person.sex = '';\r\n                person.gender = '';\r\n                person.civilstatus = '';\r\n                person.occupation = '';\r\n                person.educationlevel = '';\r\n                person.address = '';\r\n                person.district = '';\r\n                person.healthprofessional = '';\r\n                person.referralchannel = '';\r\n                person.referringpersonid = 0;\r\n\r\n                register('firstname', { validate: (value) => (value && value.length) ? true : t(langKeys.field_required) + \"\" });\r\n                register('lastname', { validate: (value) => (value && value.length) ? true : t(langKeys.field_required) + \"\" });\r\n            }\r\n            dispatch(getDomainsByTypename());\r\n        }\r\n\r\n        return () => {\r\n            dispatch(resetGetDomainsByTypename());\r\n            dispatch(resetEditPerson());\r\n        };\r\n    }, [history, person, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (domains.loading) return;\r\n        if (domains.error === true) {\r\n            dispatch(showSnackbar({\r\n                message: domains.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        }\r\n    }, [domains, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (edit.loading) return;\r\n\r\n        if (edit.error === true) {\r\n            dispatch(showBackdrop(false));\r\n            dispatch(showSnackbar({\r\n                message: edit.message!,\r\n                show: true,\r\n                severity: \"error\"\r\n            }));\r\n        } else if (edit.success) {\r\n            dispatch(showBackdrop(false));\r\n            dispatch(showSnackbar({\r\n                message: t(langKeys.successful_edit),\r\n                show: true,\r\n                severity: \"success\"\r\n            }));\r\n            if (!person?.personid) {\r\n                history.push(paths.PERSON);\r\n            }\r\n        }\r\n    }, [edit, dispatch]);\r\n\r\n    const editperson = () => {\r\n        dispatch(showBackdrop(true));        \r\n        dispatch(editPerson(payloadTemp.parameters.personid ? payloadTemp : {\r\n            header: editPersonBody({ ...person, ...valuestosend }),\r\n            detail: []\r\n        }, !payloadTemp.parameters.personid));\r\n\r\n        setpayloadTemp(null)\r\n        setvaluestosend(null)\r\n    }\r\n\r\n    const handleEditPerson = async () => {\r\n        const allOk = await trigger(); //para q valide el formulario\r\n        if (allOk) {\r\n            const values = getValues();\r\n            const callback = () => {\r\n                const payload = editPersonBody(values);\r\n                setpayloadTemp(payload)\r\n                setvaluestosend(values)\r\n                dispatch(execute(personInsValidation({\r\n                    id: payload.parameters?.id || 0,\r\n                    phone: payload.parameters?.phone || \"\",\r\n                    email: payload.parameters?.email || \"\",\r\n                    alternativephone: payload.parameters?.alternativephone || \"\",\r\n                    alternativeemail: payload.parameters?.alternativeemail || \"\",\r\n                    operation: payload.parameters.operation\r\n                })))\r\n                setWaitValidation(true)\r\n                dispatch(showBackdrop(true));\r\n            }\r\n\r\n            dispatch(manageConfirmation({\r\n                visible: true,\r\n                question: t(langKeys.confirmation_save),\r\n                callback\r\n            }))\r\n        }\r\n    }\r\n\r\n    const handleLock = () => {\r\n        if (person) {\r\n            const callback = () => {\r\n                setValue('locked', !getValues('locked'));\r\n                trigger('locked');\r\n                dispatch(execute(insPersonUpdateLocked({ ...person, locked: !person.locked })));\r\n                dispatch(showBackdrop(true));\r\n                setWaitLock(true);\r\n            }\r\n\r\n            dispatch(manageConfirmation({\r\n                visible: true,\r\n                question: getValues('locked') ? t(langKeys.confirmation_person_unlock) : t(langKeys.confirmation_person_lock),\r\n                callback\r\n            }))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitLock) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_transaction) }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitLock(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.person).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitLock(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitLock]);\r\n    useEffect(() => {\r\n        if (waitValidation) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                let errormessage:any[] = []\r\n                if (executeResult?.data[0].phone_exists) errormessage = errormessage.concat(t(langKeys.phone) + \" \" + payloadTemp.parameters.phone)\r\n                if (executeResult?.data[0].email_exists) errormessage = errormessage.concat(t(langKeys.mail) + \" \" + payloadTemp.parameters.email)\r\n                if (executeResult?.data[0].alternativephone_exists) errormessage = errormessage.concat(t(langKeys.phone) + \" \" + payloadTemp.parameters.alternativephone)\r\n                if (executeResult?.data[0].alternativeemail_exists) errormessage = errormessage.concat(t(langKeys.mail) + \" \" + payloadTemp.parameters.alternativeemail)\r\n                if (errormessage.length === 0) {\r\n                    editperson()\r\n                } else {\r\n                    dispatch(showBackdrop(false));\r\n                    dispatch(manageConfirmation({\r\n                        visible: true,\r\n                        question: `${t(langKeys.personrepeatedwarning1)} ${errormessage.join(\" - \")} ${t(langKeys.personrepeatedwarning2)}`,\r\n                        callback: editperson\r\n                    }))\r\n                }\r\n                setWaitValidation(false);\r\n            } else if (executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: \"error\" }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitValidation(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitValidation]);\r\n\r\n    if (!person) {\r\n        return <div />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Breadcrumbs aria-label=\"breadcrumb\">\r\n                <Link\r\n                    underline=\"hover\"\r\n                    color=\"inherit\"\r\n                    href=\"/\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        // history.push(paths.PERSON);\r\n                        history.goBack();\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.person} count={2} />\r\n                </Link>\r\n                <Link\r\n                    underline=\"hover\"\r\n                    color=\"textPrimary\"\r\n                    href={location.pathname}\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                    }}\r\n                >\r\n                    <Trans i18nKey={langKeys.personDetail} />\r\n                </Link>\r\n            </Breadcrumbs>\r\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between' }}>\r\n                <h1>{person.name}</h1>\r\n                <div style={{ display: 'flex', gap: '10px' }}>\r\n                    {!!person.personid &&\r\n                        <>\r\n                            {!!extraTriggers.phone &&                      \r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<WhatsappIcon width={24} style={{ fill: '#FFF' }} />}\r\n                                    onClick={() => {\r\n                                        setOpenDialogTemplate(true);\r\n                                        setTypeTemplate(\"HSM\");\r\n                                    }}\r\n                                >\r\n                                    <Trans i18nKey={langKeys.send_hsm} />\r\n                                </Button>\r\n                            }\r\n                            {(!!extraTriggers.email && /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(extraTriggers.email)) &&                    \r\n                                <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<MailIcon width={24} style={{ fill: '#FFF' }} />}\r\n                                onClick={() => {\r\n                                    setOpenDialogTemplate(true);\r\n                                    setTypeTemplate(\"MAIL\");\r\n                                }}\r\n                                >\r\n                                    <Trans i18nKey={langKeys.send_mail} />\r\n                                </Button>\r\n                            }\r\n                            {!!extraTriggers.phone &&                      \r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<SmsIcon width={24} style={{ fill: '#FFF' }} />}\r\n                                    onClick={() => {\r\n                                        setOpenDialogTemplate(true);\r\n                                        setTypeTemplate(\"SMS\");\r\n                                    }}\r\n                                >\r\n                                    <Trans i18nKey={langKeys.send_sms} />\r\n                                </Button>\r\n                            }\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                type=\"button\"\r\n                                color=\"primary\"\r\n                                startIcon={<LinkIcon color=\"secondary\" />}\r\n                                onClick={() => setShowLinkPerson(true)}\r\n                            >\r\n                                {t(langKeys.link)}\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                type=\"button\"\r\n                                color=\"primary\"\r\n                                startIcon={getValues('locked') ? <LockOpenIcon color=\"secondary\" /> : <LockIcon color=\"secondary\" />}\r\n                                onClick={handleLock}\r\n                            >\r\n                                {getValues('locked') ? t(langKeys.unlock) : t(langKeys.lock)}\r\n                            </Button>\r\n                        </>\r\n                    }\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        type=\"button\"\r\n                        color=\"primary\"\r\n                        startIcon={<ClearIcon color=\"secondary\" />}\r\n                        style={{ backgroundColor: \"#FB5F5F\" }}\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            // history.push(paths.PERSON);\r\n                            history.goBack();\r\n                        }}\r\n                    >\r\n                        {t(langKeys.back)}\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleEditPerson}\r\n                        startIcon={<SaveIcon color=\"secondary\" />}\r\n                        style={{ backgroundColor: \"#55BD84\" }}\r\n                    >\r\n                        <Trans i18nKey={langKeys.save} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div style={{ height: 7 }} />\r\n            <div className={classes.rootContent}>\r\n                <div style={{ flexGrow: 1, display: 'flex', flexDirection: 'column', overflowY: 'hidden' }}>\r\n                    <AppBar position=\"static\" elevation={0}>\r\n                        <Tabs\r\n                            value={tabIndex}\r\n                            onChange={(_, i: string) => setTabIndex(i)}\r\n                            className={classes.tabs}\r\n                            TabIndicatorProps={{ style: { display: 'none' } }}\r\n                        >\r\n                            <Tab\r\n                                className={clsx(classes.tab, classes.label, tabIndex === \"0\" && classes.activetab)}\r\n                                label={<div><Trans i18nKey={langKeys.generalinformation} /></div>}\r\n                                value=\"0\"\r\n                            />\r\n                            {!!person.personid &&\r\n                                <Tab\r\n                                    className={clsx(classes.tab, classes.label, tabIndex === \"1\" && classes.activetab)}\r\n                                    label={<div><Trans i18nKey={langKeys.communicationchannel} /></div>}\r\n                                    value=\"1\"\r\n                                />\r\n                            }\r\n                            {!!person.personid &&\r\n                                <Tab\r\n                                    className={clsx(classes.tab, classes.label, tabIndex === \"2\" && classes.activetab)}\r\n                                    label={<Trans i18nKey={langKeys.conversation} count={2} />}\r\n                                    value=\"2\"\r\n                                />\r\n                            }\r\n                            {!!person.personid &&\r\n                                <Tab\r\n                                    className={clsx(classes.tab, classes.label, tabIndex === \"3\" && classes.activetab)}\r\n                                    label={<Trans i18nKey={langKeys.opportunity} count={2} />}\r\n                                    value=\"3\"\r\n                                />\r\n                            }\r\n                            {!!person.personid &&\r\n                                <Tab\r\n                                    className={clsx(classes.tab, classes.label, tabIndex === \"4\" && classes.activetab)}\r\n                                    label={<Trans i18nKey={langKeys.audit} />}\r\n                                    value=\"4\"\r\n                                />\r\n                            }\r\n                            {/* <Tab\r\n                                className={clsx(classes.tab, classes.label, tabIndex === \"4\" && classes.activetab)}\r\n                                label={<Trans i18nKey={langKeys.claim} count={2} />}\r\n                                value=\"4\"\r\n                            /> */}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value=\"0\" index={tabIndex}>\r\n                        <GeneralInformationTab\r\n                            getValues={getValues}\r\n                            setValue={setValue}\r\n                            person={person}\r\n                            trigger={trigger}\r\n                            domains={domains}\r\n                            errors={errors}\r\n                            control={control}\r\n                            extraTriggers={extraTriggers}\r\n                            setExtraTriggers={setExtraTriggers}\r\n                        />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"1\" index={tabIndex}>\r\n                        <CommunicationChannelsTab\r\n                            getValues={getValues}\r\n                            setValue={setValue}\r\n                            person={person}\r\n                            domains={domains}\r\n                        />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"2\" index={tabIndex}>\r\n                        <ConversationsTab person={person} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"3\" index={tabIndex}>\r\n                        <OpportunitiesTab person={person} />\r\n                    </TabPanel>\r\n                    <TabPanel value=\"4\" index={tabIndex}>\r\n                        <AuditTab person={person} />\r\n                    </TabPanel>\r\n                    {/* <TabPanel value=\"4\" index={tabIndex}>qqq</TabPanel> */}\r\n                </div>\r\n                <Divider style={{ backgroundColor: '#EBEAED' }} orientation=\"vertical\" flexItem />\r\n                {!!person.personid &&\r\n                    <div className={classes.profile}>\r\n                        <label className={classes.label}>Overview</label>\r\n                        <div style={{ height: 16 }} />\r\n                        <Photo src={person.imageurldef} radius={50} />\r\n                        <h2>{person.name}</h2>\r\n                        <Property\r\n                            icon={<TelephoneIcon fill=\"inherit\" stroke=\"inherit\" width={20} height={20} />}\r\n                            title={<Trans i18nKey={langKeys.phone} />}\r\n                            // subtitle={(\r\n                            //     <TextField\r\n                            //         fullWidth\r\n                            //         placeholder={t(langKeys.phone)}\r\n                            //         defaultValue={getValues(\"phone\")}\r\n                            //         onChange={e => setValue('phone', e.target.value)}\r\n                            //     />\r\n                            // )}\r\n                            subtitle={person.phone}\r\n                            mt={1}\r\n                            mb={1}\r\n                        />\r\n                        <Property\r\n                            icon={<EMailInboxIcon />}\r\n                            title={<Trans i18nKey={langKeys.email} />}\r\n                            // subtitle={(\r\n                            //     <TextField\r\n                            //         fullWidth\r\n                            //         placeholder={t(langKeys.email)}\r\n                            //         defaultValue={getValues(\"email\")}\r\n                            //         onChange={e => setValue('email', e.target.value)}\r\n                            //     />\r\n                            // )}\r\n                            subtitle={person.email}\r\n                            mt={1}\r\n                            mb={1} />\r\n                        <Property\r\n                            icon={<DocTypeIcon fill=\"inherit\" stroke=\"inherit\" width={20} height={20} />}\r\n                            title={<Trans i18nKey={langKeys.documenttype} />}\r\n                            // subtitle={(\r\n                            //     <DomainSelectField\r\n                            //         defaultValue={getValues(\"documenttype\")}\r\n                            //         onChange={(value) => {\r\n                            //             setValue('documenttype', value);\r\n                            //         }}\r\n                            //         loading={domains.loading}\r\n                            //         data={domains.value?.docTypes || []}\r\n                            //     />\r\n                            // )}\r\n                            subtitle={person.documenttype}\r\n                            mt={1}\r\n                            mb={1}\r\n                        />\r\n                        <Property\r\n                            icon={<DocNumberIcon fill=\"inherit\" stroke=\"inherit\" width={20} height={20} />}\r\n                            title={<Trans i18nKey={langKeys.docNumber} />}\r\n                            // subtitle={(\r\n                            //     <TextField\r\n                            //         fullWidth\r\n                            //         placeholder={t(langKeys.docNumber)}\r\n                            //         defaultValue={getValues(\"documentnumber\")}\r\n                            //         onChange={e => setValue('documentnumber', e.target.value)}\r\n                            //     />\r\n                            // )}\r\n                            subtitle={person.documentnumber}\r\n                            mt={1}\r\n                            mb={1}\r\n                        />\r\n                        <Property\r\n                            icon={<GenderIcon />}\r\n                            title={<Trans i18nKey={langKeys.gender} />}\r\n                            // subtitle={(\r\n                            //     <DomainSelectField\r\n                            //         defaultValue={getValues(\"gender\")}\r\n                            //         onChange={(value, desc) => {\r\n                            //             setValue('gender', value);\r\n                            //             setValue('genderdesc', desc)\r\n                            //         }}\r\n                            //         loading={domains.loading}\r\n                            //         data={domains.value?.genders || []}\r\n                            //     />\r\n                            // )}\r\n                            subtitle={person.gender}\r\n                            mt={1}\r\n                            mb={1}\r\n                        />\r\n                        <Property\r\n                            icon={<BuildingIcon />}\r\n                            title={<Trans i18nKey={langKeys.organization} />}\r\n                            subtitle={person.orgdesc}\r\n                            mt={1}\r\n                            mb={1}\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n            <DialogLinkPerson\r\n                openModal={showLinkPerson}\r\n                setOpenModal={setShowLinkPerson}\r\n                person={person}\r\n                callback={(newPerson) => {\r\n                    setValue(\"firstname\", newPerson.firstname)\r\n                    trigger(\"firstname\")\r\n                    setValue(\"lastname\", newPerson.lastname)\r\n                    trigger(\"lastname\")\r\n                    setValue(\"documenttype\", newPerson.documenttype)\r\n                    trigger(\"documenttype\")\r\n                    setValue(\"documentnumber\", newPerson.documentnumber)\r\n                    trigger(\"documentnumber\")\r\n                    setValue(\"phone\", newPerson.phone)\r\n                    trigger(\"phone\")\r\n                    setValue(\"alternativephone\", newPerson.alternativephone)\r\n                    trigger(\"alternativephone\")\r\n                    setValue(\"email\", newPerson.email)\r\n                    trigger(\"email\")\r\n                    setValue(\"alternativeemail\", newPerson.alternativeemail)\r\n                    trigger(\"alternativeemail\")\r\n                    setValue(\"birthday\", newPerson.birthday)\r\n                    trigger(\"birthday\")\r\n                    setValue(\"gender\", newPerson.gender)\r\n                    trigger(\"gender\")\r\n                    setValue(\"educationlevel\", newPerson.educationlevel)\r\n                    trigger(\"educationlevel\")\r\n                    setValue(\"civilstatus\", newPerson.civilstatus)\r\n                    trigger(\"civilstatus\")\r\n                    setValue(\"occupation\", newPerson.occupation)\r\n                    trigger(\"occupation\")\r\n                    dispatch(getChannelListByPerson(getChannelListByPersonBody(person.personid)));\r\n                }}\r\n            />             \r\n            <DialogSendTemplate\r\n                openModal={openDialogTemplate}\r\n                setOpenModal={setOpenDialogTemplate}\r\n                persons={[getValues()]}\r\n                type={typeTemplate}\r\n            />      \r\n        </div>\r\n    );\r\n}\r\n\r\nconst PersonDetail: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const { t } = useTranslation();\r\n    const location = useLocation<IPerson>();\r\n    const executeResult = useSelector(state => state.main.execute);\r\n    const [person, setperson] = useState<any>(location.state as IPerson | null);\r\n    const [waitLoading, setWaitLoading] = useState(false);\r\n    const match = useRouteMatch<{ id: string, columnid?: string, columnuuid?: string }>();\r\n\r\n    useEffect(() => {\r\n        if (!person) {\r\n            dispatch(showBackdrop(true));\r\n            setWaitLoading(true)\r\n            dispatch(execute(getPersonOne({ personid:match.params.id })));\r\n            //agregale la candicion para que llame al person sel\r\n        } \r\n    }, [person]);\r\n\r\n    useEffect(() => {\r\n        if (waitLoading && !executeResult.loading) {\r\n            if (!executeResult.error && executeResult.data.length) {\r\n                setperson(executeResult.data[0]);\r\n                dispatch(showBackdrop(false));\r\n                setWaitLoading(false);\r\n            } else if (executeResult.error || executeResult.data.length) {\r\n                dispatch(showBackdrop(false));\r\n                setWaitLoading(false);\r\n                history.push(paths.PERSON);\r\n            }\r\n        }\r\n    }, [executeResult, waitLoading]);\r\n\r\n    return (\r\n        <>\r\n        {!!person &&\r\n            <PersonDetail2 person={person}/>\r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PersonDetail;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { exportExcel, getLocaleDateString, localesLaraigo } from 'common/helpers';\r\nimport { setMemoryTable } from 'store/main/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    MoreVert as MoreVertIcon,\r\n    Refresh as RefreshIcon,\r\n    Add as AddIcon\r\n} from '@material-ui/icons';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport { Dictionary, TableConfig } from '@types'\r\nimport { SearchField } from 'components';\r\nimport { DownloadIcon } from 'icons';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect\r\n} from 'react-table'\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport { FixedSizeList } from 'react-window';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { TableFooter } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerSearch: {\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '50%',\r\n        },\r\n    },\r\n    containerFilterGeneral: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        backgroundColor: '#FFF',\r\n        padding: `${theme.spacing(1)}px`,\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        gridGap: theme.spacing(1),\r\n        display: 'grid',\r\n        gridAutoFlow: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        flexWrap: 'wrap',\r\n        gap: 8,\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        }\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nexport const stringOptionsMenu = [\r\n    { key: 'equals', value: 'equals' },\r\n    { key: 'notequals', value: 'notequals' },\r\n    { key: 'contains', value: 'contains' },\r\n    { key: 'notcontains', value: 'notcontains' },\r\n    { key: 'isempty', value: 'isempty' },\r\n    { key: 'isnotempty', value: 'isnotempty' },\r\n    // { key: 'isnull', value: 'isnull' },\r\n    // { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const numberOptionsMenu = [\r\n    { key: 'equals', value: 'equals' },\r\n    { key: 'notequals', value: 'notequals' },\r\n    { key: 'greater', value: 'greater' },\r\n    { key: 'greaterorequals', value: 'greaterorequals' },\r\n    { key: 'less', value: 'less' },\r\n    { key: 'lessorequals', value: 'lessorequals' },\r\n    { key: 'isempty', value: 'isempty' },\r\n    { key: 'isnotempty', value: 'isnotempty' },\r\n    // { key: 'isnull', value: 'isnull' },\r\n    // { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const dateOptionsMenu = [\r\n    { key: 'equals', value: 'equals' },\r\n    { key: 'notequals', value: 'notequals' },\r\n    { key: 'after', value: 'after' },\r\n    { key: 'afterequals', value: 'afterequals' },\r\n    { key: 'before', value: 'before' },\r\n    { key: 'beforeequals', value: 'beforeequals' },\r\n    // { key: 'isnull', value: 'isnull' },\r\n    // { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const booleanOptionsMenu = [\r\n    { key: 'all', value: 'all' },\r\n    { key: 'istrue', value: 'istrue' },\r\n    { key: 'isfalse', value: 'isfalse' },\r\n    { key: 'isnull', value: 'isnull' },\r\n    { key: 'isnotnull', value: 'isnotnull' },\r\n];\r\n\r\nexport const BooleanOptionsMenuComponent: React.FC<{ value: any; handleClickItemMenu: (key: any) => void }> = ({ value, handleClickItemMenu }) => {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Select\r\n            value={value || 'all'}\r\n            onChange={(e) => handleClickItemMenu(e.target.value)}\r\n        >\r\n            {booleanOptionsMenu.map((option) => (\r\n                <MenuItem key={option.key} value={option.key}>\r\n                    {t(option.value)}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport const SelectFilterTmp: React.FC<{ value: any; data: any[]; handleClickItemMenu: (key: any) => void }> = ({ value, data, handleClickItemMenu }) => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <Select\r\n            value={value || '_ALL'}\r\n            onChange={(e) => handleClickItemMenu(e.target.value)}\r\n        >\r\n            <MenuItem value='_ALL'>\r\n                {t(langKeys.all)}\r\n            </MenuItem>\r\n            {data.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                    {t(option.key)}\r\n                </MenuItem>\r\n            ))}\r\n        </Select>\r\n    )\r\n}\r\n\r\nexport const DateOptionsMenuComponent = (value: any, handleClickItemMenu: (key: any) => void) => {\r\n    const { t } = useTranslation();\r\n    const [value2, setvalue2] = useState(null)\r\n\r\n    useEffect(() => {\r\n        if (value === 'isnull' || value === 'isnotnull') {\r\n            setvalue2(null)\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={(localesLaraigo() as any)[navigator.language.split('-')[0]]}>\r\n            <KeyboardDatePicker\r\n                invalidDateMessage={t(langKeys.invalid_date_format)}\r\n                format={getLocaleDateString()}\r\n                value={value2}\r\n                onChange={(e: any) => {\r\n                    handleClickItemMenu(e);\r\n                    setvalue2(e)\r\n                }}\r\n                style={{ minWidth: '150px' }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport const TimeOptionsMenuComponent = (value: any, handleClickItemMenu: (key: any) => void) => {\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils} locale={(localesLaraigo())[navigator.language.split('-')[0]]}>\r\n            <KeyboardTimePicker\r\n                ampm={false}\r\n                views={['hours', 'minutes', 'seconds']}\r\n                format=\"HH:mm:ss\"\r\n                error={false}\r\n                helperText={''}\r\n                value={value === '' ? null : value}\r\n                onChange={(e: any) => handleClickItemMenu(e)}\r\n                style={{ minWidth: '150px' }}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n\r\n    )\r\n}\r\n\r\nexport const OptionsMenuComponent = (type: string, operator: string, handleClickItemMenu: (key: any) => void) => {\r\n    const { t } = useTranslation();\r\n    switch (type) {\r\n        case \"number\": case \"number-centered\":\r\n            return (\r\n                numberOptionsMenu.map((option) => (\r\n                    <MenuItem key={option.key} selected={option.key === operator} onClick={() => handleClickItemMenu(option.key)}>\r\n                        {t(option.value)}\r\n                    </MenuItem>\r\n                ))\r\n            )\r\n        case \"date\": case \"datetime-local\": case \"time\":\r\n            return (\r\n                dateOptionsMenu.map((option) => (\r\n                    <MenuItem key={option.key} selected={option.key === operator} onClick={() => handleClickItemMenu(option.key)}>\r\n                        {t(option.value)}\r\n                    </MenuItem>\r\n                ))\r\n            )\r\n        case \"string\": case \"color\":\r\n        default:\r\n            return (\r\n                stringOptionsMenu.map((option) => (\r\n                    <MenuItem key={option.key} selected={option.key === operator} onClick={() => handleClickItemMenu(option.key)}>\r\n                        {t(option.value)}\r\n                    </MenuItem>\r\n                ))\r\n            )\r\n    }\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    download = true,\r\n    register,\r\n    handleRegister,\r\n    calculate = false,\r\n    handleCalculate,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    triggerExportPersonalized,\r\n    exportPersonalized,\r\n    pageSizeDefault = 20,\r\n    importCSV,\r\n    handleTemplate,\r\n    filterGeneral = true,\r\n    loading = false,\r\n    useSelection,\r\n    selectionKey,\r\n    initialSelectedRows,\r\n    setSelectedRows,\r\n    allRowsSelected,\r\n    setAllRowsSelected,\r\n    onClickRow,\r\n    toolsFooter = true,\r\n    initialPageIndex = 0,\r\n    helperText = \"\",\r\n    initialStateFilter,\r\n    registertext,\r\n    setDataFiltered,\r\n    useFooter = false,\r\n    heightWithCheck = 43,\r\n    checkHistoryCenter = false\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [initial, setInitial] = useState(true);\r\n\r\n    const DefaultColumnFilter = ({\r\n        column: { id: header, setFilter: $setFilter, listSelectFilter = [], type = \"string\" },\r\n    }: any) => {\r\n        const iSF = initialStateFilter?.filter(x => x.id === header)[0];\r\n        const [value, setValue] = useState(iSF?.value.value || '');\r\n        const [anchorEl, setAnchorEl] = useState(null);\r\n        const open = Boolean(anchorEl);\r\n        const [operator, setoperator] = useState(iSF?.value.operator || \"contains\");\r\n\r\n        const setFilter = (filter: any) => {\r\n            $setFilter(filter);\r\n\r\n            dispatch(setMemoryTable({\r\n                filter: {\r\n                    [header]: {\r\n                        value: filter.value,\r\n                        operator: filter.operator,\r\n                        type: filter.type\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n\r\n        const handleCloseMenu = () => {\r\n            setAnchorEl(null);\r\n        };\r\n        const handleClickItemMenu = (op: any) => {\r\n            setAnchorEl(null);\r\n            if (type === 'boolean') {\r\n                setoperator(op)\r\n                setValue(op);\r\n                setFilter({ value: op, operator: op, type });\r\n            } else if (type === \"select\") {\r\n                setValue(op);\r\n                setFilter({ value: op, operator: op, type });\r\n            } else {\r\n                if (['isempty', 'isnotempty', 'isnull', 'isnotnull'].includes(op) || !!value) {\r\n                    setFilter({ value, operator: op, type });\r\n                }\r\n                setoperator(op)\r\n            }\r\n        };\r\n        const handleClickMenu = (event: any) => {\r\n            setAnchorEl(event.currentTarget);\r\n        };\r\n        const keyPress = React.useCallback((e) => {\r\n            if (e.keyCode === 13) {\r\n                setFilter({ value, operator, type });\r\n            }\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [value, operator])\r\n        const handleDate = (date: Date) => {\r\n            if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n                setValue(date?.toISOString() || '');\r\n                setFilter({\r\n                    value: date?.toISOString().split('T')[0] || '',\r\n                    operator,\r\n                    type\r\n                })\r\n            }\r\n        }\r\n        const handleTime = (date: Date) => {\r\n            if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n                setValue(date?.toISOString() || '');\r\n                setFilter({\r\n                    value: date?.toLocaleTimeString(),\r\n                    operator,\r\n                    type\r\n                })\r\n            }\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (!initialStateFilter?.filter(x => x.id === header)[0]) {\r\n                switch (type) {\r\n                    case \"number\": case \"number-centered\":\r\n                    case \"date\":\r\n                    case \"datetime-local\":\r\n                    case \"time\":\r\n                    case \"select\":\r\n                        setoperator(\"equals\");\r\n                        break;\r\n                    case \"boolean\":\r\n                        setoperator(\"all\");\r\n                        break;\r\n                    case \"string\": case \"color\":\r\n                    default:\r\n                        setoperator(\"contains\");\r\n                        break;\r\n                }\r\n            }\r\n        }, [type]);\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {type === 'boolean' ? (\r\n                    <BooleanOptionsMenuComponent\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                    />)\r\n                    : (type === \"select\" ?\r\n                        <SelectFilterTmp\r\n                            value={value}\r\n                            handleClickItemMenu={handleClickItemMenu}\r\n                            data={listSelectFilter}\r\n                        /> :\r\n                        <React.Fragment>\r\n                            {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                            {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                            {!['date', 'time'].includes(type) &&\r\n                                <Input\r\n                                    // disabled={loading}\r\n                                    type={type}\r\n                                    style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                    fullWidth\r\n                                    value={value}\r\n                                    onKeyDown={keyPress}\r\n                                    onChange={e => {\r\n                                        setValue(e.target.value || '');\r\n                                        if (['date'].includes(type)) {\r\n                                            setFilter({ value: e.target.value, operator, type });\r\n                                        }\r\n                                    }}\r\n                                />}\r\n                            <IconButton\r\n                                onClick={handleClickMenu}\r\n                                size=\"small\"\r\n                            >\r\n                                <MoreVertIcon\r\n                                    style={{ cursor: 'pointer' }}\r\n                                    aria-label=\"more\"\r\n                                    aria-controls=\"long-menu\"\r\n                                    aria-haspopup=\"true\"\r\n                                    color=\"action\"\r\n                                    fontSize=\"small\"\r\n                                />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"long-menu\"\r\n                                anchorEl={anchorEl}\r\n                                open={open}\r\n                                onClose={handleCloseMenu}\r\n                                PaperProps={{\r\n                                    style: {\r\n                                        maxHeight: 48 * 4.5,\r\n                                        width: '20ch',\r\n                                    },\r\n                                }}\r\n                            >\r\n                                {OptionsMenuComponent(type, operator, handleClickItemMenu)}\r\n                            </Menu>\r\n                        </React.Fragment>)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const filterCellValue = React.useCallback((rows, id, filterValue) => {\r\n        const { value, operator, type } = filterValue;\r\n        return rows.filter((row: any) => {\r\n            const cellvalue = row.values[id] === null || row.values[id] === undefined ? \"\" : row.values[id];\r\n            // if (cellvalue === undefined)\r\n            //     return false;\r\n\r\n            // if (!(['isempty', 'isnotempty', 'isnull', 'isnotnull'].includes(operator) || type === 'boolean') && (value || '') === '')\r\n            //     return true;\r\n\r\n            if (value === '' && !['isempty', 'isnotempty', 'isnull', 'isnotnull'].includes(operator))\r\n                return true;\r\n\r\n            switch (type) {\r\n                case \"number\": case \"number-centered\":\r\n                    switch (operator) {\r\n                        case 'greater':\r\n                            return cellvalue > Number(value);\r\n                        case 'greaterorequals':\r\n                            return cellvalue >= Number(value);\r\n                        case 'less':\r\n                            return cellvalue < Number(value);\r\n                        case 'lessorequals':\r\n                            return cellvalue <= Number(value);\r\n                        case 'isnull':\r\n                            return cellvalue === \"\";\r\n                        case 'isnotnull':\r\n                            return cellvalue !== \"\";\r\n                        case 'notequals':\r\n                            return cellvalue !== Number(value);\r\n                        case 'equals':\r\n                        default:\r\n                            return cellvalue === Number(value);\r\n                    }\r\n                case \"date\": case \"datetime-local\": case \"time\":\r\n                    switch (operator) {\r\n                        case 'after':\r\n                            return cellvalue > value;\r\n                        case 'afterequals':\r\n                            return cellvalue >= value;\r\n                        case 'before':\r\n                            return cellvalue < value;\r\n                        case 'beforeequals':\r\n                            return cellvalue <= value;\r\n                        case 'isnull':\r\n                            return cellvalue === \"\";\r\n                        case 'isnotnull':\r\n                            return cellvalue !== \"\";\r\n                        case 'notequals':\r\n                            return cellvalue !== value;\r\n                        case 'equals':\r\n                        default:\r\n                            return cellvalue === value;\r\n                    }\r\n                case \"boolean\":\r\n                    switch (operator) {\r\n                        case 'istrue':\r\n                            return typeof (cellvalue) === 'string' ? cellvalue === 'true' : cellvalue === true;\r\n                        case 'isfalse':\r\n                            return typeof (cellvalue) === 'string' ? cellvalue === 'false' : cellvalue === false;\r\n                        case 'isnull':\r\n                            return cellvalue === \"\";\r\n                        case 'isnotnull':\r\n                            return cellvalue !== \"\";\r\n                        case 'all':\r\n                        default:\r\n                            return true;\r\n                    }\r\n                case \"select\":\r\n                    switch (operator) {\r\n                        default:\r\n                            return value === '_ALL' ? true : cellvalue === value;\r\n                    }\r\n                case \"string\":\r\n                default:\r\n                    switch (operator) {\r\n                        case 'equals':\r\n                            return cellvalue === value;\r\n                        case 'notequals':\r\n                            return cellvalue !== value;\r\n                        case 'isempty':\r\n                            return cellvalue === '';\r\n                        case 'isnotempty':\r\n                            return cellvalue !== '';\r\n                        case 'isnull':\r\n                            return cellvalue == null;\r\n                        case 'isnotnull':\r\n                            return cellvalue != null;\r\n                        case 'notcontains':\r\n                            return !(cellvalue + \"\").toLowerCase().includes(value.toLowerCase());\r\n                        case 'contains':\r\n                        default:\r\n                            return (cellvalue + \"\").toLowerCase().includes(value.toLowerCase());\r\n                    }\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const defaultColumn = React.useMemo(\r\n        () => ({\r\n            // Let's set up our default Filter UI\r\n            Filter: (props: any) => DefaultColumnFilter({ ...props, data }),\r\n            filter: filterCellValue,\r\n        }),\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        []\r\n    );\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        footerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        globalFilteredRows,\r\n        setGlobalFilter,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n        toggleAllRowsSelected\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageSize: pageSizeDefault, selectedRowIds: initialSelectedRows || {}, filters: initialStateFilter || [] },\r\n        defaultColumn,\r\n        getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n            ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n            : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n    },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        useSortBy,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps }: any) => (\r\n                        <div>\r\n                            <Checkbox\r\n                                color=\"primary\"\r\n                                style={{ padding: '0 24px 0 16px' }}\r\n                                {...getToggleAllPageRowsSelectedProps()}\r\n                            />\r\n                        </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n\r\n                        <div>\r\n                            {checkHistoryCenter === true ? <Checkbox\r\n                                color=\"primary\"\r\n                                style={{ padding: '0 24px 0 16px', height: 68 }}\r\n                                checked={row.isSelected}\r\n                                onChange={(e) => row.toggleRowSelected()}\r\n                            /> :\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: '0 24px 0 16px' }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />}\r\n                        </div>\r\n                    ),\r\n                    NoFilter: true,\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        setDataFiltered && setDataFiltered(globalFilteredRows.map(x => x.original));\r\n    }, [globalFilteredRows])\r\n\r\n\r\n    useEffect(() => {\r\n        if (initialStateFilter) {\r\n            if (initial) {\r\n                gotoPage(initialPageIndex);\r\n                setInitial(false)\r\n            } else {\r\n                dispatch(setMemoryTable({\r\n                    page: 0\r\n                }));\r\n            }\r\n        }\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        let next = true;\r\n        if (fetchData && next) {\r\n            fetchData();\r\n        }\r\n    }, [fetchData])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        if (allRowsSelected) {\r\n            toggleAllRowsSelected(true);\r\n            setAllRowsSelected && setAllRowsSelected(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [allRowsSelected])\r\n\r\n    const RenderRow = React.useCallback(\r\n        ({ index, style }) => {\r\n            style = { ...style, display: 'flex', alignItems: 'flex-end', cursor: onClickRow ? 'pointer' : 'default' }\r\n            const row = page[index]\r\n            prepareRow(row);\r\n            return (\r\n                <TableRow\r\n                    {...row.getRowProps({ style })}\r\n                    hover\r\n                >\r\n                    {row.cells.map((cell, _) =>\r\n                        <TableCell\r\n                            {...cell.getCellProps({\r\n                                style: {\r\n                                    ...(cell.column.width === 'auto' ? {\r\n                                        flex: 1,\r\n                                    } : {\r\n                                        minWidth: cell.column.minWidth,\r\n                                        width: cell.column.width,\r\n                                        maxWidth: cell.column.maxWidth,\r\n                                    }),\r\n                                    overflow: 'hidden',\r\n                                    textOverflow: 'ellipsis',\r\n                                    whiteSpace: 'nowrap',\r\n                                    textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                },\r\n                            })}\r\n                            onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original, cell?.column?.id) : null}\r\n                        >\r\n                            {cell.render('Cell')}\r\n                        </TableCell>\r\n                    )}\r\n                </TableRow>\r\n            )\r\n        },\r\n        [headerGroups, prepareRow, page]\r\n    )\r\n\r\n    return (\r\n        <Box width={1} >\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                {titlemodule ? <span className={classes.title}>\r\n                    {titlemodule}\r\n                    {helperText !== \"\" ? <Tooltip title={<div style={{ fontSize: 12 }}>{helperText}</div>} arrow placement=\"top\" >\r\n                        <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                    </Tooltip> : \"\"}\r\n                </span> : (<div style={{ flexGrow: 1 }}>\r\n                    {ButtonsElement && <ButtonsElement />}\r\n                </div>)}\r\n                <span className={classes.containerButtons}>\r\n                    {fetchData && (\r\n                        <Tooltip title=\"Refresh\">\r\n                            <Fab\r\n                                size=\"small\"\r\n                                aria-label=\"add\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                style={{ marginLeft: '1rem' }}\r\n                                onClick={() => fetchData && fetchData({})}\r\n                            >\r\n                                <RefreshIcon />\r\n                            </Fab>\r\n                        </Tooltip>\r\n                    )}\r\n                    {(ButtonsElement && !!titlemodule) && <ButtonsElement />}\r\n                    {importCSV && (\r\n                        <>\r\n                            <input\r\n                                name=\"file\"\r\n                                accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.csv\"\r\n                                id=\"laraigo-upload-csv-file\"\r\n                                type=\"file\"\r\n                                style={{ display: 'none' }}\r\n                                onChange={(e) => importCSV(e.target.files)}\r\n                            />\r\n                            <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    component=\"span\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    startIcon={<BackupIcon color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                ><Trans i18nKey={langKeys.import} />\r\n                                </Button>\r\n                            </label>\r\n                            {\r\n                                handleTemplate &&\r\n                                <Button\r\n                                    className={classes.button}\r\n                                    variant=\"contained\"\r\n                                    component=\"span\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading}\r\n                                    startIcon={<ListAltIcon color=\"secondary\" />}\r\n                                    onClick={handleTemplate}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                ><Trans i18nKey={langKeys.template} />\r\n                                </Button>\r\n                            }\r\n                        </>\r\n                    )}\r\n                    {register && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            startIcon={<AddIcon color=\"secondary\" />}\r\n                            onClick={handleRegister}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        ><Trans i18nKey={registertext || langKeys.register} />\r\n                        </Button>\r\n                    )}\r\n                    {calculate && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            startIcon={<RefreshIcon color=\"secondary\" />}\r\n                            onClick={handleCalculate}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        ><Trans i18nKey={langKeys.calculate} />\r\n                        </Button>\r\n                    )}\r\n                    {download && (\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={loading}\r\n                            onClick={() => triggerExportPersonalized ? exportPersonalized && exportPersonalized() : exportExcel(String(titlemodule || '') + \"Report\", globalFilteredRows.map(x => x.original), columns.filter((x: any) => (!x.isComponent && !x.activeOnHover)))}\r\n                            startIcon={<DownloadIcon />}\r\n                        ><Trans i18nKey={langKeys.download} />\r\n                        </Button>\r\n                    )}\r\n                </span>\r\n            </Box>\r\n            {filterGeneral && (\r\n                <Box className={classes.containerFilterGeneral}>\r\n                    <span></span>\r\n                    <div className={classes.containerSearch}>\r\n                        <SearchField\r\n                            disabled={loading}\r\n                            colorPlaceHolder='#FFF'\r\n                            handleChangeOther={setGlobalFilter}\r\n                            lazy\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            )}\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\" >\r\n                    <Table size=\"small\" {...getTableProps()} aria-label=\"enhanced table\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead style={{ display: 'table-header-group' }}>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow  {...headerGroup.getHeaderGroupProps()} style={useSelection ? { display: 'flex' } : {}}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell key={ii} style={useSelection ? {\r\n                                                ...(column.width === 'auto' ? {\r\n                                                    flex: 1,\r\n                                                } : {\r\n                                                    minWidth: column.minWidth,\r\n                                                    width: column.width,\r\n                                                    maxWidth: column.maxWidth,\r\n                                                })\r\n                                            } : {}}>\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header') :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n\r\n                                                                {...column.getHeaderProps(column.getSortByToggleProps({ title: 'ordenar' }))}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {column.isSorted && (\r\n                                                                    column.isSortedDesc ?\r\n                                                                        <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                        :\r\n                                                                        <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                )}\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12 }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <div>{!column.NoFilter && column.render('Filter')}</div>\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody\r\n                            {...getTableBodyProps()}\r\n                            style={{ backgroundColor: 'white' }}\r\n                        >\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                useSelection ?\r\n                                    <FixedSizeList\r\n                                        style={{ overflowX: 'hidden' }}\r\n                                        direction=\"vertical\"\r\n                                        width=\"auto\"\r\n                                        height={window.innerHeight - 470}\r\n                                        itemCount={page.length}\r\n                                        itemSize={heightWithCheck}\r\n                                    >\r\n                                        {RenderRow}\r\n                                    </FixedSizeList>\r\n                                    :\r\n                                    page.map(row => {\r\n                                        prepareRow(row);\r\n                                        return (\r\n                                            <TableRow\r\n                                                {...row.getRowProps()}\r\n                                                hover\r\n                                                style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                            >\r\n                                                {row.cells.map((cell, i) =>\r\n                                                    <TableCell\r\n                                                        {...cell.getCellProps({\r\n                                                            style: {\r\n                                                                minWidth: cell.column.minWidth,\r\n                                                                width: cell.column.width,\r\n                                                                maxWidth: cell.column.maxWidth,\r\n                                                                overflow: 'hidden',\r\n                                                                textOverflow: 'ellipsis',\r\n                                                                whiteSpace: 'nowrap',\r\n                                                                ...(toolsFooter ? {} : { padding: '0px' }),\r\n                                                                textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                            },\r\n                                                        })}\r\n                                                        onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original, cell?.column?.id) : null}\r\n                                                    >\r\n                                                        {cell.render('Cell')}\r\n                                                    </TableCell>\r\n                                                )}\r\n                                            </TableRow>\r\n                                        )\r\n                                    })\r\n                            }\r\n                        </TableBody>\r\n                        {useFooter && <TableFooter>\r\n                            {footerGroups.map(group => (\r\n                                <TableRow {...group.getFooterGroupProps()}>\r\n                                    {group.headers.map(column => (\r\n                                        <TableCell {...column.getFooterProps({\r\n                                            style: {\r\n                                                fontWeight: \"bold\",\r\n                                                color: \"black\",\r\n                                                textAlign: column.type === \"number\" ? \"right\" : (column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                            }\r\n                                        })}>\r\n                                            {column.render('Footer')}\r\n                                        </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableFooter>}\r\n                    </Table>\r\n                </Box>\r\n                {toolsFooter && (\r\n                    <Box className={classes.footerTable}>\r\n                        <Box>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    gotoPage(0);\r\n                                    dispatch(setMemoryTable({\r\n                                        page: 0\r\n                                    }));\r\n                                }}\r\n                                disabled={!canPreviousPage || loading}\r\n                            >\r\n                                <FirstPage />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    previousPage();\r\n                                    dispatch(setMemoryTable({\r\n                                        page: pageIndex - 1\r\n                                    }));\r\n                                }}\r\n                                disabled={!canPreviousPage || loading}\r\n                            >\r\n                                <NavigateBefore />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    nextPage();\r\n                                    dispatch(setMemoryTable({\r\n                                        page: pageIndex + 1\r\n                                    }));\r\n                                }}\r\n                                disabled={!canNextPage || loading}\r\n                            >\r\n                                <NavigateNext />\r\n                            </IconButton>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    gotoPage(pageCount - 1);\r\n                                    dispatch(setMemoryTable({\r\n                                        page: pageCount - 1\r\n                                    }));\r\n                                }}\r\n                                disabled={!canNextPage || loading}\r\n                            >\r\n                                <LastPage />\r\n                            </IconButton>\r\n                            <Box component=\"span\" fontSize={14}>\r\n                                <Trans\r\n                                    i18nKey={langKeys.tablePageOf}\r\n                                    values={{ currentPage: (pageOptions.length === 0 ? 0 : pageIndex + 1), totalPages: pageOptions.length }}\r\n                                    components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box>\r\n                            <Trans\r\n                                i18nKey={(globalFilteredRows || []).length === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                                values={{ itemCount: page.length, totalItems: globalFilteredRows.length }}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <Select\r\n                                disableUnderline\r\n                                style={{ display: 'inline-flex' }}\r\n                                value={pageSize}\r\n                                disabled={loading}\r\n                                onChange={e => {\r\n                                    setPageSize(Number(e.target.value));\r\n                                    dispatch(setMemoryTable({\r\n                                        pageSize: Number(e.target.value)\r\n                                    }));\r\n                                }}\r\n                            >\r\n                                {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                    <MenuItem key={pageSize} value={pageSize}>\r\n                                        {pageSize}\r\n                                    </MenuItem >\r\n                                ))}\r\n                            </Select>\r\n                            <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                                <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                )}\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n});\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};","import React, { useState, useEffect, useMemo } from 'react';\r\nimport MaUTable from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport Input from '@material-ui/core/Input';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { TableConfig, Pagination, Dictionary, ITablePaginatedFilter } from '@types'\r\nimport { Trans } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { langKeys } from 'lang/keys';\r\nimport { DownloadIcon, CalendarIcon } from 'icons';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\nimport clsx from 'clsx';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport {\r\n    FirstPage,\r\n    LastPage,\r\n    NavigateNext,\r\n    NavigateBefore,\r\n    Search as SearchIcon,\r\n    Add as AddIcon,\r\n    ArrowDownward as ArrowDownwardIcon,\r\n    ArrowUpward as ArrowUpwardIcon,\r\n    MoreVert as MoreVertIcon,\r\n} from '@material-ui/icons';\r\nimport InfoRoundedIcon from '@material-ui/icons/InfoRounded';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nimport {\r\n    useTable,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    usePagination,\r\n    useRowSelect,\r\n} from 'react-table'\r\nimport { Range } from 'react-date-range';\r\nimport { DateRangePicker } from 'components';\r\nimport { Checkbox } from '@material-ui/core';\r\nimport { BooleanOptionsMenuComponent, DateOptionsMenuComponent, SelectFilterTmp, OptionsMenuComponent, TimeOptionsMenuComponent } from './table-simple';\r\nimport { getDateToday, getFirstDayMonth, getLastDayMonth, getDateCleaned } from 'common/helpers';\r\n\r\ndeclare module \"react-table\" {\r\n    // eslint-disable-next-line\r\n    interface UseTableColumnProps<D extends object> {\r\n        listSelectFilter: Dictionary;\r\n        helpText?: string;\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footerTable: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n            justifyContent: \"space-between\",\r\n        },\r\n        '& > div': {\r\n            display: 'block',\r\n            textAlign: 'center',\r\n            [theme.breakpoints.up('sm')]: {\r\n                display: 'flex',\r\n                alignItems: \"center\",\r\n            },\r\n        }\r\n    },\r\n    trdynamic: {\r\n        '&:hover': {\r\n            boxShadow: '0 11px 6px -9px rgb(84 84 84 / 78%)',\r\n            \"& $containerfloat\": {\r\n                visibility: 'visible'\r\n            }\r\n        },\r\n    },\r\n    containerfloat: {\r\n        borderBottom: 'none',\r\n        padding: '4px 24px 4px 16px',\r\n        backgroundColor: 'white',\r\n        marginTop: '1px',\r\n        position: 'absolute',\r\n        zIndex: 9999,\r\n        left: 0,\r\n        visibility: 'hidden'\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    title: {\r\n        fontSize: '22px',\r\n        fontWeight: 'bold',\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerButtons: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    containerButtonsNoFilters: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        justifyContent: 'end',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        gap: 8\r\n    },\r\n    iconOrder: {\r\n        width: 20,\r\n        height: 20,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    containerHeader: {\r\n        display: 'block',\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    containerHeaderColumn: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center'\r\n    },\r\n    iconHelpText: {\r\n        width: 15,\r\n        height: 15,\r\n        cursor: 'pointer',\r\n    }\r\n}));\r\n\r\n\r\nconst DefaultColumnFilter = ({ header, type, setFilters, filters, listSelectFilter }: any) => {\r\n    const [value, setValue] = useState('');\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [operator, setoperator] = useState(\"contains\");\r\n\r\n    useEffect(() => {\r\n        switch (type) {\r\n            case \"number\": case \"number-centered\": case \"date\": case \"datetime-local\": case \"time\": case \"select\":\r\n                setoperator(\"equals\");\r\n                break;\r\n            case \"boolean\":\r\n                setoperator(\"all\");\r\n                break;\r\n            case \"string\": case \"color\":\r\n            default:\r\n                setoperator(\"contains\");\r\n                break;\r\n        }\r\n    }, [type])\r\n\r\n    useEffect(() => {\r\n        if (['number', 'number-centered'].includes(type))\r\n            setoperator(\"equals\");\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [type])\r\n\r\n    const keyPress = (e: any) => {\r\n        if (e.keyCode === 13) {\r\n            if (value || operator === \"noempty\" || operator === \"empty\")\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value,\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            else\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n        }\r\n    }\r\n\r\n    const handleCloseMenu = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const handleClickItemMenu = (op: any) => {\r\n        setAnchorEl(null);\r\n        setoperator(op)\r\n        if (type === 'boolean') {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: {\r\n                    value: op,\r\n                    operator: op\r\n                },\r\n            }, 0)\r\n        } else if (type === \"select\") {\r\n            setValue(op);\r\n            setFilters({\r\n                ...filters,\r\n                [header]: op === \"_ALL\" ? undefined : {\r\n                    value: op,\r\n                    operator: \"equals\"\r\n                },\r\n            }, 0)\r\n        } else if (type === \"text\" || !type) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else if (['number', 'number-centered'].includes(type)) {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        } else {\r\n            if (op === 'isempty' ||\r\n                op === 'isnotempty' ||\r\n                op === 'isnull' ||\r\n                op === 'isnotnull') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: '',\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            } else if (value !== '') {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: value,\r\n                        operator: op\r\n                    },\r\n                }, 0)\r\n            }\r\n        }\r\n    };\r\n    const handleClickMenu = (event: any) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDate = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toISOString().split('T')[0] || '',\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleTime = (date: Date) => {\r\n        if (date === null || (date instanceof Date && !isNaN(date.valueOf()))) {\r\n            setValue(date?.toISOString() || '');\r\n            if (!!date || ['isnull', 'isnotnull'].includes(operator)) {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: {\r\n                        value: date?.toLocaleTimeString(),\r\n                        operator\r\n                    },\r\n                }, 0)\r\n            }\r\n            else {\r\n                setFilters({\r\n                    ...filters,\r\n                    [header]: undefined,\r\n                }, 0)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(filters).length === 0) setValue('');\r\n        else if (header in filters) {\r\n            setValue(filters?.[header]?.value || '');\r\n            if (filters?.[header]) setoperator(filters[header].operator);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filters]);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            {type === 'boolean' ?\r\n                <BooleanOptionsMenuComponent\r\n                    value={value}\r\n                    handleClickItemMenu={handleClickItemMenu}\r\n                />\r\n                :\r\n                (type === \"select\" ?\r\n                    <SelectFilterTmp\r\n                        value={value}\r\n                        handleClickItemMenu={handleClickItemMenu}\r\n                        data={listSelectFilter || []}\r\n                    /> :\r\n\r\n                    <React.Fragment>\r\n                        {type === 'date' && DateOptionsMenuComponent(value, handleDate)}\r\n                        {type === 'time' && TimeOptionsMenuComponent(value, handleTime)}\r\n                        {!['date', 'time'].includes(type) &&\r\n                            <Input\r\n                                style={{ fontSize: '15px', minWidth: '100px' }}\r\n                                type={['number', 'number-centered'].includes(type) ? \"number\" : \"text\"}\r\n                                fullWidth\r\n                                value={value}\r\n                                onKeyDown={keyPress}\r\n                                onChange={e => setValue(e.target.value)}\r\n                            />}\r\n                        <IconButton\r\n                            onClick={handleClickMenu}\r\n                            size=\"small\"\r\n                        >\r\n                            <MoreVertIcon\r\n                                style={{ cursor: 'pointer' }}\r\n                                aria-label=\"more\"\r\n                                aria-controls=\"long-menu\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"action\"\r\n                                fontSize=\"small\"\r\n                            />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"long-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleCloseMenu}\r\n                            PaperProps={{\r\n                                style: {\r\n                                    maxHeight: 48 * 4.5,\r\n                                    width: '20ch',\r\n                                },\r\n                            }}\r\n                        >\r\n                            {OptionsMenuComponent(type || 'string', operator, handleClickItemMenu)}\r\n                        </Menu>\r\n                    </React.Fragment>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TableZyx = React.memo(({\r\n    titlemodule,\r\n    columns,\r\n    data,\r\n    fetchData,\r\n    filterrange,\r\n    totalrow,\r\n    pageCount: controlledPageCount,\r\n    download,\r\n    register,\r\n    handleRegister,\r\n    HeadComponent,\r\n    ButtonsElement,\r\n    exportPersonalized,\r\n    loading,\r\n    importCSV,\r\n    autotrigger = false,\r\n    autoRefresh,\r\n    useSelection,\r\n    selectionKey,\r\n    selectionFilter,\r\n    initialSelectedRows,\r\n    cleanSelection,\r\n    setCleanSelection,\r\n    setSelectedRows,\r\n    onClickRow,\r\n    FiltersElement,\r\n    filterRangeDate = \"month\",\r\n    onFilterChange,\r\n    initialEndDate = null,\r\n    initialStartDate = null,\r\n    initialFilters = {},\r\n    initialPageIndex = 0,\r\n}: TableConfig) => {\r\n    const classes = useStyles();\r\n    const [pagination, setPagination] = useState<Pagination>({ sorts: {}, filters: initialFilters, pageIndex: initialPageIndex });\r\n    const [openDateRangeModal, setOpenDateRangeModal] = useState(false);\r\n    const [triggerSearch, setTriggerSearch] = useState(autotrigger);\r\n    const [tFilters, setTFilters] = useState<ITablePaginatedFilter>({\r\n        startDate: initialStartDate,\r\n        endDate: initialEndDate,\r\n        page: initialPageIndex,\r\n        filters: initialFilters,\r\n    });\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        setPageSize,\r\n        toggleAllRowsSelected,\r\n        state: { pageIndex, pageSize, selectedRowIds },\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: initialPageIndex, pageSize: 20, selectedRowIds: initialSelectedRows || {} },\r\n            manualPagination: true, // Tell the usePagination\r\n            pageCount: controlledPageCount,\r\n            useControlledState: (state: any) => {\r\n                return useMemo(() => ({\r\n                    ...state,\r\n                    pageIndex: pagination.pageIndex,\r\n                    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n                }), [state, pagination.pageIndex])\r\n            },\r\n            autoResetSelectedRows: false,\r\n            getRowId: (row, relativeIndex: any, parent: any) => selectionKey\r\n                ? (parent ? [row[selectionKey], parent].join('.') : row[selectionKey])\r\n                : (parent ? [parent.id, relativeIndex].join('.') : relativeIndex),\r\n            stateReducer: (newState, action) => {\r\n                switch (action.type) {\r\n                    case 'toggleAllRowsSelected':\r\n                        return {\r\n                            ...newState,\r\n                            selectedRowIds: {},\r\n                        };\r\n                    default:\r\n                        return newState;\r\n                }\r\n            }\r\n        },\r\n        useFilters,\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect,\r\n        hooks => {\r\n            useSelection && hooks.visibleColumns.push(columns => [\r\n                {\r\n                    id: 'selection',\r\n                    width: 80,\r\n                    Header: ({ getToggleAllPageRowsSelectedProps, filteredRows }: any) => (\r\n                        !selectionFilter\r\n                            ?\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    {...getToggleAllPageRowsSelectedProps()}\r\n                                />\r\n                            </div>\r\n                            :\r\n                            <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={filteredRows\r\n                                        .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                        .every((p: any) => p.isSelected)\r\n                                    }\r\n                                    onChange={() => {\r\n                                        filteredRows\r\n                                            .filter((p: any) => p.original[selectionFilter?.key] === selectionFilter?.value)\r\n                                            .forEach((p: any) => {\r\n                                                p.toggleRowSelected();\r\n                                            })\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                    ),\r\n                    Cell: ({ row }: any) => (\r\n                        !selectionFilter || row.original[selectionFilter?.key] === selectionFilter?.value\r\n                            ? <div style={{ textAlign: 'right' }}>\r\n                                <Checkbox\r\n                                    color=\"primary\"\r\n                                    style={{ padding: 0 }}\r\n                                    checked={row.isSelected}\r\n                                    onChange={(e) => row.toggleRowSelected()}\r\n                                />\r\n                            </div>\r\n                            : null\r\n                    ),\r\n                    NoFilter: true,\r\n                    isComponent: true\r\n                } as any,\r\n                ...columns,\r\n            ])\r\n        }\r\n    )\r\n\r\n    const setFilters = (filters: any, page: number) => {\r\n        setPagination(prev => {\r\n            // const pageIndex = !page ? prev.pageIndex : page;\r\n            return { ...prev, filters, pageIndex: 0, trigger: true }\r\n        });\r\n    };\r\n    const setPageIndex = (page: number) => {\r\n        setPagination(prev => ({ ...prev, pageIndex: page, trigger: true }));\r\n        setTFilters(prev => ({ ...prev, page }));\r\n    }\r\n    const handleClickSort = (column: string) => {\r\n        let newsorts: any = {};\r\n        if (Object.keys(pagination.sorts).includes(column)) {\r\n            newsorts = {\r\n                ...pagination.sorts\r\n            }\r\n        }\r\n\r\n        if (newsorts[column] === \"desc\") {\r\n            delete newsorts[column]\r\n        }\r\n        else {\r\n            if (newsorts[column] === \"asc\") {\r\n                newsorts[column] = \"desc\";\r\n            }\r\n            else {\r\n                newsorts[column] = \"asc\";\r\n            }\r\n        }\r\n\r\n        setPagination(prev => ({ ...prev, sorts: newsorts, trigger: true }))\r\n    }\r\n\r\n    const [dateRange, setdateRange] = useState<Range>({\r\n        startDate: initialStartDate ? new Date(initialStartDate) : filterRangeDate === \"month\" ? getFirstDayMonth() : getDateToday(),\r\n        endDate: initialEndDate ? new Date(initialEndDate) : filterRangeDate === \"month\" ? getLastDayMonth() : getDateToday(),\r\n        key: 'selection'\r\n    });\r\n\r\n    const triggertmp = (fromButton: boolean = false) => {\r\n        if (fromButton)\r\n            setPagination(prev => ({ ...prev, pageIndex: initialPageIndex, trigger: false }));\r\n\r\n        if (!fetchData) return;\r\n        fetchData({\r\n            ...pagination,\r\n            pageSize,\r\n            pageIndex: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n            }\r\n        });\r\n        setTFilters(prev => ({\r\n            ...prev,\r\n            page: fromButton ? initialPageIndex : pagination.pageIndex,\r\n            startDate: dateRange.startDate ? (new Date(dateRange.startDate.setHours(10))).getTime() : null,\r\n            endDate: dateRange.endDate ? (new Date(dateRange.endDate.setHours(10))).getTime() : null,\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (cleanSelection) {\r\n            toggleAllRowsSelected(false)\r\n            setSelectedRows && setSelectedRows({})\r\n            setCleanSelection && setCleanSelection(false)\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [cleanSelection])\r\n\r\n    useEffect(() => {\r\n        if (pagination?.trigger) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pagination, triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggertmp()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [pageSize])\r\n\r\n    useEffect(() => {\r\n        if (triggerSearch) {\r\n            triggerSearch && triggertmp(true);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [triggerSearch])\r\n\r\n    useEffect(() => {\r\n        if (autoRefresh?.value) {\r\n            triggertmp();\r\n            autoRefresh?.callback(false);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [autoRefresh])\r\n\r\n    useEffect(() => {\r\n        setSelectedRows && setSelectedRows(selectedRowIds)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedRowIds]);\r\n\r\n    useEffect(() => {\r\n        onFilterChange?.(tFilters);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [tFilters]);\r\n\r\n    const exportData = () => {\r\n        exportPersonalized && exportPersonalized({\r\n            ...pagination,\r\n            daterange: {\r\n                startDate: dateRange.startDate ? new Date(dateRange.startDate.setHours(10)).toISOString().substring(0, 10) : null,\r\n                endDate: dateRange.endDate ? new Date(dateRange.endDate.setHours(10)).toISOString().substring(0, 10) : null\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Box width={1}>\r\n            {titlemodule && <div className={classes.title}>{titlemodule}</div>}\r\n            <Box className={classes.containerHeader} justifyContent=\"space-between\" alignItems=\"center\">\r\n                <div className={clsx({\r\n                    [classes.containerButtons]: !!FiltersElement,\r\n                    [classes.containerButtonsNoFilters]: !FiltersElement\r\n                })}>\r\n                    {filterrange && (\r\n                        <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                            <DateRangePicker\r\n                                open={openDateRangeModal}\r\n                                setOpen={setOpenDateRangeModal}\r\n                                range={dateRange}\r\n                                onSelect={setdateRange}\r\n                            >\r\n                                <Button\r\n                                    disabled={loading}\r\n                                    style={{ border: '1px solid #bfbfc0', borderRadius: 4, color: 'rgb(143, 146, 161)' }}\r\n                                    startIcon={<CalendarIcon />}\r\n                                    onClick={() => setOpenDateRangeModal(!openDateRangeModal)}\r\n                                >\r\n                                    {getDateCleaned(dateRange.startDate!) + \" - \" + getDateCleaned(dateRange.endDate!)}\r\n                                </Button>\r\n                            </DateRangePicker>\r\n                            {FiltersElement && FiltersElement}\r\n                            <Button\r\n                                disabled={loading}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                startIcon={<SearchIcon style={{ color: 'white' }} />}\r\n                                style={{ backgroundColor: '#55BD84', width: 120 }}\r\n                                onClick={() => {\r\n                                    if (triggerSearch)\r\n                                        triggertmp(true)\r\n                                    setTriggerSearch(true)\r\n                                }}\r\n                            >\r\n                                <Trans i18nKey={langKeys.search} />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: 8 }}>\r\n                        {ButtonsElement && <ButtonsElement />}\r\n                        {importCSV && (\r\n                            <>\r\n                                <input\r\n                                    name=\"file\"\r\n                                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\r\n                                    id=\"laraigo-upload-csv-file\"\r\n                                    type=\"file\"\r\n                                    style={{ display: 'none' }}\r\n                                    onChange={(e) => importCSV(e.target.files)}\r\n                                />\r\n                                <label htmlFor=\"laraigo-upload-csv-file\">\r\n                                    <Button\r\n                                        className={classes.button}\r\n                                        variant=\"contained\"\r\n                                        component=\"span\"\r\n                                        color=\"primary\"\r\n                                        disabled={loading}\r\n                                        startIcon={<BackupIcon color=\"secondary\" />}\r\n                                        style={{ backgroundColor: \"#55BD84\" }}\r\n                                    ><Trans i18nKey={langKeys.import} />\r\n                                    </Button>\r\n                                </label>\r\n                            </>\r\n                        )}\r\n                        {register && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                startIcon={<AddIcon color=\"secondary\" />}\r\n                                onClick={handleRegister}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            ><Trans i18nKey={langKeys.register} />\r\n                            </Button>\r\n                        )}\r\n                        {download && (\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                disabled={loading}\r\n                                onClick={exportData}\r\n                                // exportPersonalized\r\n                                startIcon={<DownloadIcon />}\r\n                            ><Trans i18nKey={langKeys.download} />\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Box>\r\n\r\n            {HeadComponent && <HeadComponent />}\r\n\r\n            <TableContainer style={{ position: \"relative\" }}>\r\n                <Box overflow=\"auto\">\r\n                    <MaUTable {...getTableProps()} aria-label=\"enhanced table\" size=\"small\" aria-labelledby=\"tableTitle\">\r\n                        <TableHead>\r\n                            {headerGroups.map((headerGroup) => (\r\n                                <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                                    {headerGroup.headers.map((column, ii) => (\r\n                                        column.activeOnHover ?\r\n                                            <th style={{ width: \"0px\" }} key=\"header-floating\"></th> :\r\n                                            <TableCell\r\n                                                key={ii}\r\n                                            >\r\n                                                {column.isComponent ?\r\n                                                    column.render('Header')\r\n                                                    :\r\n                                                    (<>\r\n                                                        <div className={classes.containerHeaderColumn}>\r\n                                                            <Box\r\n                                                                component=\"div\"\r\n                                                                {...column.getHeaderProps()}\r\n                                                                onClick={() => !column.NoSort && handleClickSort(column.id)}\r\n                                                                style={{\r\n                                                                    whiteSpace: 'nowrap',\r\n                                                                    wordWrap: 'break-word',\r\n                                                                    display: 'flex',\r\n                                                                    cursor: 'pointer',\r\n                                                                    alignItems: 'center',\r\n                                                                }}\r\n                                                            >\r\n                                                                {column.render('Header')}\r\n                                                                {pagination.sorts[column.id] && (pagination.sorts[column.id] === \"asc\" ?\r\n                                                                    <ArrowUpwardIcon className={classes.iconOrder} color=\"action\" />\r\n                                                                    : <ArrowDownwardIcon className={classes.iconOrder} color=\"action\" />)\r\n                                                                }\r\n                                                            </Box>\r\n                                                            {!!column.helpText && (\r\n                                                                <Tooltip title={<div style={{ fontSize: 12, whiteSpace: 'break-spaces' }}>{column.helpText}</div>} arrow placement=\"top\" >\r\n                                                                    <InfoRoundedIcon color=\"action\" className={classes.iconHelpText} />\r\n                                                                </Tooltip>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        {!column.NoFilter &&\r\n                                                            <DefaultColumnFilter\r\n                                                                header={column.id}\r\n                                                                listSelectFilter={column.listSelectFilter || []}\r\n                                                                type={column.type}\r\n                                                                filters={pagination.filters}\r\n                                                                setFilters={(filters: any, page: number) => {\r\n                                                                    setFilters(filters, page);\r\n                                                                    setTFilters(prev => ({\r\n                                                                        ...prev,\r\n                                                                        filters,\r\n                                                                        page,\r\n                                                                    }));\r\n                                                                }}\r\n                                                            />\r\n                                                        }\r\n                                                    </>)\r\n                                                }\r\n                                            </TableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableHead>\r\n                        <TableBody {...getTableBodyProps()} style={{ backgroundColor: 'white' }}>\r\n                            {loading ?\r\n                                <LoadingSkeleton columns={headerGroups[0].headers.length} /> :\r\n                                page.map((row: any) => {\r\n                                    prepareRow(row);\r\n                                    return (\r\n                                        <TableRow\r\n                                            {...row.getRowProps()}\r\n                                            hover\r\n                                            style={{ cursor: onClickRow ? 'pointer' : 'default' }}\r\n                                        >\r\n                                            {row.cells.map((cell: any, i: number) =>\r\n                                                <TableCell\r\n                                                    {...cell.getCellProps({\r\n                                                        style: {\r\n                                                            minWidth: cell.column.minWidth,\r\n                                                            width: cell.column.width,\r\n                                                            overflow: 'hidden',\r\n                                                            textOverflow: 'ellipsis',\r\n                                                            whiteSpace: 'nowrap',\r\n                                                            textAlign: cell.column.type === \"number\" ? \"right\" : (cell.column.type?.includes('centered') ? \"center\" : \"left\"),\r\n                                                        },\r\n                                                    })}\r\n                                                    onClick={() => cell.column.id !== \"selection\" ? onClickRow && onClickRow(row.original) : null}\r\n                                                >\r\n                                                    {cell.render('Cell')}\r\n                                                </TableCell>\r\n                                            )}\r\n                                        </TableRow>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </TableBody>\r\n                    </MaUTable>\r\n\r\n                </Box>\r\n                <Box className={classes.footerTable}>\r\n                    <Box>\r\n                        <IconButton onClick={() => setPageIndex(0)} disabled={!canPreviousPage} >\r\n                            <FirstPage />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex - 1)} disabled={!canPreviousPage} >\r\n                            <NavigateBefore />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pagination.pageIndex + 1)} disabled={!canNextPage} >\r\n                            <NavigateNext />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setPageIndex(pageCount - 1)} disabled={!canNextPage} >\r\n                            <LastPage />\r\n                        </IconButton>\r\n                        <Box component=\"span\" fontSize={14}>\r\n                            <Trans\r\n                                i18nKey={langKeys.tablePageOf}\r\n                                values={{ currentPage: pageOptions.length === 0 ? 0 : pageIndex + 1, totalPages: pageOptions.length }}\r\n                                components={[<Box fontWeight=\"700\" component=\"span\"></Box>, <Box fontWeight=\"700\" component=\"span\"></Box>]}\r\n                            />\r\n                        </Box >\r\n\r\n                    </Box>\r\n                    <Box>\r\n                        <Trans\r\n                            i18nKey={(totalrow || 0) === 100000 ? langKeys.tableShowingRecordOfMore : langKeys.tableShowingRecordOf}\r\n                            values={{ itemCount: page.length, totalItems: totalrow }}\r\n                        />\r\n                    </Box>\r\n                    <Box>\r\n                        <Select\r\n                            disableUnderline\r\n                            style={{ display: 'inline-flex' }}\r\n                            value={pageSize}\r\n                            onChange={e => {\r\n                                setPageSize(Number(e.target.value))\r\n                            }}\r\n                        >\r\n                            {[5, 10, 20, 50, 100].map(pageSize => (\r\n                                <MenuItem key={pageSize} value={pageSize}>\r\n                                    {pageSize}\r\n                                </MenuItem >\r\n                            ))}\r\n                        </Select>\r\n                        <Box fontSize={14} display=\"inline\" style={{ marginRight: '1rem' }}>\r\n                            <Trans i18nKey={langKeys.recordPerPage} count={pageSize} />\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </TableContainer>\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default TableZyx;\r\n\r\nconst LoadingSkeleton: React.FC<{ columns: number }> = ({ columns }) => {\r\n    const items: React.ReactNode[] = [];\r\n    for (let i = 0; i < columns; i++) {\r\n        items.push(<TableCell key={`table-simple-skeleton-${i}`}><Skeleton /></TableCell>);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TableRow key=\"1aux1\">\r\n                {items}\r\n            </TableRow>\r\n            <TableRow key=\"2aux2\">\r\n                {items}\r\n            </TableRow>\r\n        </>\r\n    );\r\n};\r\n\r\ninterface IQueryMap {\r\n    [key: string]: {\r\n        value: string;\r\n        operator: string;\r\n    }\r\n}\r\n\r\ninterface IFilters {\r\n    startDate: number;\r\n    endDate: number;\r\n    page: number;\r\n    filters: IQueryMap;\r\n}\r\n\r\ninterface IOptions {\r\n    ignore?: string[];\r\n}\r\n\r\nexport function useQueryParams(query: URLSearchParams, options: IOptions = { ignore: [] }) {\r\n    return useMemo(() => {\r\n        const map: IFilters = {\r\n            endDate: Number(query.get('endDate')),\r\n            startDate: Number(query.get('startDate')),\r\n            page: Number(query.get('page')),\r\n            filters: {},\r\n        };\r\n        const { ignore } = options;\r\n\r\n        query.forEach((value, key) => {\r\n            if (key === \"endDate\" ||\r\n                key === \"startDate\" ||\r\n                key === \"page\" ||\r\n                key.includes('-operator') ||\r\n                (ignore || []).includes(key)) {\r\n                return;\r\n            }\r\n\r\n            const name = `${key}-operator`;\r\n            map.filters[key] = { value, operator: query.get(name)! };\r\n        });\r\n\r\n        return map;\r\n    }, [options, query]);\r\n}\r\n\r\nexport function buildQueryFilters(\r\n    filters: ITablePaginatedFilter,\r\n    init?: string | string[][] | Record<string, string>,\r\n) {\r\n    const params = new URLSearchParams(init);\r\n\r\n    for (const key in filters) {\r\n        const value = (filters as any)[key];\r\n        if (key === 'filters' || value === undefined || value === null) continue;\r\n        params.set(key, String(value));\r\n    }\r\n\r\n    const colFilters = filters.filters;\r\n    for (const key in colFilters) {\r\n        if (typeof colFilters[key] === 'object' && 'value' in colFilters[key] && 'operator' in colFilters[key]) {\r\n            params.set(key, String(colFilters[key].value));\r\n            params.set(`${key}-operator`, String(colFilters[key].operator));\r\n        }\r\n    }\r\n\r\n    return params;\r\n}\r\n","import { IActionCall, IRequestBody, IRequestBodyPaginated, ITransaction } from \"@types\";\r\nimport { getValuesFromDomain, adviserSel, getMessageTemplateLst, getCommChannelLst, getRolesByOrg, getPropertySelByName } from \"common/helpers\";\r\nimport { CommonService, PersonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON,\r\n        failure: actionTypes.GET_PERSON_FAILURE,\r\n        success: actionTypes.GET_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPerson = () => ({ type: actionTypes.GET_PERSON_RESET });\r\n\r\nexport const getPersonListPaginated = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_LIST,\r\n        failure: actionTypes.GET_PERSON_LIST_FAILURE,\r\n        success: actionTypes.GET_PERSON_LIST_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonListPaginated = () => ({ type: actionTypes.GET_PERSON_LIST_RESET });\r\n\r\n\r\n\r\nexport const getPersonLinkListPaginated = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_PERSON_LINK,\r\n        failure: actionTypes.GET_PERSON_LINK_FAILURE,\r\n        success: actionTypes.GET_PERSON_LINK_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPersonLinkListPaginated = () => ({ type: actionTypes.GET_PERSON_LINK_RESET });\r\n\r\n\r\n\r\nexport const getTicketListByPerson = (payload: IRequestBodyPaginated): IActionCall => ({\r\n    callAPI: async () => CommonService.mainPaginated(payload),\r\n    types: {\r\n        loading: actionTypes.GET_TICKET_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_TICKET_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_TICKET_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetTicketListByPerson = () => ({ type: actionTypes.GET_TICKET_LIST_BY_PERSON_RESET });\r\n\r\nexport const getReferrerListByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_REFERRER_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_REFERRER_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_REFERRER_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetReferrerListByPerson = () => ({ type: actionTypes.GET_REFERRER_LIST_BY_PERSON_RESET });\r\n\r\nexport const getChannelListByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_CHANNEL_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_CHANNEL_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_CHANNEL_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelListByPerson = () => ({ type: actionTypes.GET_CHANNEL_LIST_BY_PERSON_RESET });\r\n\r\nexport const getAdditionalInfoByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => CommonService.main(payload),\r\n    types: {\r\n        loading: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON,\r\n        failure: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetgetAdditionalInfoByPerson = () => ({ type: actionTypes.GET_ADDITIONAL_INFO_BY_PERSON_RESET });\r\n\r\nexport const getLeadsByPerson = (payload: IRequestBody): IActionCall => ({\r\n    callAPI: async () => PersonService.getLeadsByPerson(payload),\r\n    types: {\r\n        loading: actionTypes.GET_LEAD_LIST_BY_PERSON,\r\n        failure: actionTypes.GET_LEAD_LIST_BY_PERSON_FAILURE,\r\n        success: actionTypes.GET_LEAD_LIST_BY_PERSON_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetLeadsByPerson = () => ({ type: actionTypes.GET_LEAD_LIST_BY_PERSON_RESET });\r\n\r\n/**\r\n * Managed domain types\r\n * \r\n * GENERO, TIPODOCUMENTO, OCUPACION, ESTADOCIVIL, NIVELEDUCATIVO\r\n */\r\nexport const getDomainsByTypename = (): IActionCall => ({\r\n    callAPI: async () => CommonService.multiMain([\r\n        getValuesFromDomain(\"GENERO\"),\r\n        getValuesFromDomain(\"TIPODOCUMENTO\"),\r\n        getValuesFromDomain(\"OCUPACION\"),\r\n        getValuesFromDomain(\"ESTADOCIVIL\"),\r\n        getValuesFromDomain(\"NIVELEDUCATIVO\"),\r\n        getValuesFromDomain(\"TIPOPERSONA\"),\r\n        getValuesFromDomain(\"GRUPOPERSONA\"),\r\n        getValuesFromDomain(\"TIPOPERSONAGEN\"),\r\n        getValuesFromDomain(\"TIPOCANAL\"),\r\n        adviserSel(),\r\n        getMessageTemplateLst(''),\r\n        getCommChannelLst(),\r\n        getValuesFromDomain(\"EMPRESA\"),\r\n        getValuesFromDomain(\"GRUPOFACTURACION\"),\r\n        getValuesFromDomain(\"ESTADOGENERICO\"),\r\n        getValuesFromDomain(\"ESTADOUSUARIO\"),\r\n        getRolesByOrg(),\r\n        getValuesFromDomain(\"GRUPOS\"),\r\n        getPropertySelByName(\"OCUPACION\"),\r\n    ]),\r\n    types: {\r\n        loading: actionTypes.GET_DOMAINS_BY_TYPENAME,\r\n        failure: actionTypes.GET_DOMAINS_BY_TYPENAME_FAILURE,\r\n        success: actionTypes.GET_DOMAINS_BY_TYPENAME_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetDomainsByTypename = () => ({ type: actionTypes.GET_DOMAINS_BY_TYPENAME_RESET });\r\n\r\n// dispatch(execute({\r\n//     header: insPersonBody({ ...p }),\r\n//     detail: [\r\n//         ...p.pcc.map((x: IPersonCommunicationChannel) => insPersonCommunicationChannel({ ...x })),\r\n//     ]\r\n// }, true));\r\nexport const editPerson = (payload: IRequestBody | ITransaction, insert: boolean = false): IActionCall => {\r\n    if (insert) {\r\n        // dispatch(execute({\r\n        //     header: insPersonBody({ ...p }),\r\n        //     detail: [\r\n        //         ...p.pcc.map((x: IPersonCommunicationChannel) => insPersonCommunicationChannel({ ...x })),\r\n        //     ]\r\n        // }, true));\r\n    }\r\n    return {\r\n        callAPI: async () => CommonService.main(payload, insert),\r\n        types: {\r\n            loading: actionTypes.EDIT_PERSON,\r\n            failure: actionTypes.EDIT_PERSON_FAILURE,\r\n            success: actionTypes.EDIT_PERSON_SUCCESS,\r\n        },\r\n        type: null,\r\n    }\r\n};\r\n\r\nexport const resetEditPerson = () => ({ type: actionTypes.EDIT_PERSON_RESET });\r\n","/* eslint-disable jsx-a11y/iframe-has-title */\r\nimport React, { useState } from 'react'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport { IInteraction, IGroupInteraction, Dictionary } from \"@types\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { BotIcon, AgentIcon, DownloadIcon2, InteractiveListIcon, SeenIcon, DocIcon, FileIcon1 as FileIcon, PdfIcon, PptIcon, TxtIcon, XlsIcon, ZipIcon } from 'icons';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport clsx from 'clsx';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useSelector } from 'hooks';\r\nimport { manageLightBox } from 'store/popus/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { convertLocalDate, validateIsUrl } from 'common/helpers';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\n\r\nconst useStylesInteraction = makeStyles((theme) => ({\r\n    containerCarousel: {\r\n        width: 230,\r\n        backgroundColor: '#f0f2f5',\r\n        borderRadius: 18,\r\n        position: 'relative',\r\n    },\r\n    imageCardCarousel: {\r\n        width: '100%',\r\n        objectFit: 'cover',\r\n        height: '100%'\r\n    },\r\n    buttonCarousel: {\r\n        backgroundColor: '#e4e6eb',\r\n        textAlign: 'center',\r\n        borderRadius: 6,\r\n        height: 36,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        fontWeight: 600,\r\n        cursor: 'pointer',\r\n    },\r\n    buttonLeft: {\r\n        position: 'absolute',\r\n        top: '45%',\r\n        left: -20,\r\n        backgroundColor: 'white'\r\n    },\r\n    buttonRight: {\r\n        position: 'absolute',\r\n        top: '45%',\r\n        right: -20,\r\n        backgroundColor: 'white'\r\n    },\r\n    containerTime: {\r\n        visibility: 'hidden',\r\n        fontSize: 12,\r\n        float: 'right',\r\n        marginLeft: 4,\r\n        paddingRight: 6,\r\n        lineHeight: 1,\r\n        width: 50\r\n    },\r\n    timeSeen: {\r\n        color: '#4fc3f7'\r\n    },\r\n    timeInteraction: {\r\n        position: 'absolute',\r\n        bottom: 1.5,\r\n        height: 16,\r\n        right: 0,\r\n        visibility: 'visible',\r\n        color: '#757377',\r\n        padding: 'inherit',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        gap: 4\r\n    },\r\n    timeInteractionWithBackground: {\r\n        position: 'absolute',\r\n        bottom: 3,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: 13,\r\n        right: 0,\r\n        visibility: 'visible',\r\n        backgroundColor: '#00000059',\r\n        color: '#fff',\r\n        padding: '3px 2px 3px 3px',\r\n        borderRadius: 4,\r\n        marginRight: 4,\r\n        gap: 4\r\n    }\r\n}));\r\n\r\nconst ShoppingCart: React.FC<{ onlyTime?: string, interactiontext: string, createdate: string, classes: any, userType: string }> = ({ interactiontext, createdate, classes, userType, onlyTime }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const { t } = useTranslation();\r\n\r\n    const handleClickOpen = () => setOpen(true);\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const jsonIntt = JSON.parse(interactiontext);\r\n\r\n    // const firstimage = jsonIntt.SectionList?.[0]?.ProductList?.[0]?.ImageReference || \"\";\r\n    // const totalitems = jsonIntt.SectionList.reduce((a: number, i: Dictionary) => a + i.ProductList.length, 0)\r\n    if ((jsonIntt.Product_items?.length || 0) === 0)\r\n        return <div></div>\r\n\r\n    return (\r\n        <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            <div style={{ width: 300 }}>\r\n                <div style={{ display: 'flex', backgroundColor: \"#f5f6f6\" }}>\r\n                    <img width=\"70px\" height=\"70px\" alt=\"reference\" src={jsonIntt.Product_items[0].ImageReference} />\r\n                    <div style={{ display: 'flex', alignItems: 'center', paddingLeft: 8 }}>\r\n                        <div>\r\n                            <div style={{ fontWeight: 'bold' }}>{jsonIntt.Product_items.length} {t(langKeys.elements)}</div>\r\n                            <div style={{ fontWeight: 'bold' }}>{jsonIntt.Product_items.reduce((acc: number, item: Dictionary) => acc + parseFloat(item.Item_price) * parseFloat(item.Quantity), 0).toFixed(2)} {jsonIntt.Product_items[0].Currency}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {jsonIntt.Text}\r\n                </div>\r\n                <div style={{ height: 2, borderTop: '1px solid rgb(235, 234, 237)', marginTop: 4 }}></div>\r\n                <div\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#00a5f4', cursor: 'pointer' }}\r\n                    onClick={handleClickOpen}\r\n                >{t(langKeys.show_shopping_cart)}</div>\r\n                <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n            <SwipeableDrawer\r\n                anchor='right'\r\n                open={open}\r\n                onClose={handleClose}\r\n                onOpen={handleClickOpen}\r\n            >\r\n                <div style={{ width: 400, padding: 16 }}>\r\n                    <h4 >{t(langKeys.cart_sent)}</h4>\r\n                    <div>\r\n                        <div style={{ fontWeight: 500 }}>{jsonIntt.Product_items.length} {t(langKeys.elements)}</div>\r\n                        <div style={{ color: '#8696a0' }}>{jsonIntt.Product_items.reduce((acc: number, item: Dictionary) => acc + parseFloat(item.Item_price) * parseFloat(item.Quantity), 0).toFixed(2)} {jsonIntt.Product_items[0].Currency}</div>\r\n                        <div style={{ marginTop: 16 }}>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {jsonIntt.Product_items.map((item: Dictionary, index: number) => (\r\n                            <div key={index}>\r\n                                <div style={{ display: 'flex', gap: 16, marginBottom: 8 }}>\r\n                                    <img width=\"80px\" alt=\"reference\" height=\"80px\" src={item.ImageReference} />\r\n                                    <div style={{ display: 'flex', alignItems: 'center', width: '75%', borderTop: '1px solid #ebebeb' }}>\r\n                                        <div style={{ width: '100%' }}>\r\n                                            <div style={{ fontWeight: 500 }}>{item.Title}</div>\r\n                                            <div style={{ color: '#8696a0' }}>{item.Currency} {parseFloat(item.Item_price).toFixed(2)} • {t(langKeys.quantity)}: {item.Quantity}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </SwipeableDrawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CatalogProduct: React.FC<{ onlyTime?: string, interactiontext: string, createdate: string, classes: any, userType: string }> = ({ interactiontext, createdate, classes, userType, onlyTime }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const { t } = useTranslation();\r\n    const handleClickOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const jsonIntt = JSON.parse(interactiontext);\r\n\r\n    if (jsonIntt.Type === \"product_list\" || jsonIntt.Type === \"dynamic\") {\r\n        const firstimage = jsonIntt.SectionList?.[0]?.ProductList?.[0]?.ImageReference || \"\";\r\n        const totalitems = jsonIntt.SectionList.reduce((a: number, i: Dictionary) => a + i.ProductList.length, 0)\r\n\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                <div style={{ display: 'flex', gap: '4px', backgroundColor: \"#f5f6f6\" }}>\r\n                    {firstimage && <img width=\"70px\" height=\"70px\" src={firstimage} alt=\"fist\" />}\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <div>\r\n                            <div style={{ fontWeight: 500 }}>{jsonIntt.Header}</div>\r\n                            <div style={{ color: '#8696a0' }}>{totalitems} {t(langKeys.elements)}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ padding: 8 }}>\r\n                    <div style={{ fontWeight: 500 }}>{jsonIntt.Body}</div>\r\n                    <div style={{ color: '#8696a0' }}>{jsonIntt.Footer}</div>\r\n                </div>\r\n                <div style={{ height: 2, borderTop: '1px solid rgb(235, 234, 237)', marginTop: 4 }}></div>\r\n                <div\r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#00a5f4', cursor: 'pointer' }}\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <InteractiveListIcon /> {t(langKeys.show_items)}\r\n                </div>\r\n                <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                <SwipeableDrawer\r\n                    anchor='right'\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onOpen={handleClickOpen}\r\n                >\r\n                    <div style={{ width: 400, padding: 16 }}>\r\n                        <div style={{ marginBottom: 16 }}>{jsonIntt.Body}</div>\r\n                        <div style={{ display: 'flex', flexDirection: 'column', gap: 16, }}>\r\n                            {jsonIntt.SectionList.map((item: Dictionary, index11: number) => (\r\n                                <div key={index11} style={{ cursor: 'pointer' }}>\r\n                                    <div style={{ color: \"#008069\", marginBottom: 16 }}>{item.Title}</div>\r\n                                    {item.ProductList.map((itemProduct: Dictionary, index22: number) => (\r\n                                        <div key={index22}>\r\n                                            <div style={{ display: 'flex', gap: 16, marginBottom: 8 }}>\r\n                                                <img width=\"80px\" alt=\"reference\" height=\"80px\" src={itemProduct.ImageReference} />\r\n                                                <div style={{ display: 'flex', alignItems: 'center', width: '75%', borderTop: '1px solid #ebebeb' }}>\r\n                                                    <div style={{ width: '100%' }}>\r\n                                                        <div style={{ fontWeight: 500 }}>{itemProduct.Title}</div>\r\n                                                        <div style={{ color: '#8696a0', overflow: \"hidden\", wordBreak: \"break-word\", fontWeight: 500, whiteSpace: \"nowrap\", textOverflow: \"ellipsis\" }}>{itemProduct.Description}</div>\r\n                                                        <div style={{ color: '#8696a0' }}>{itemProduct.Currency} {itemProduct.Price || 10.0}</div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </SwipeableDrawer>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                <div style={{ width: 300, display: 'flex', flexDirection: 'column' }}>\r\n                    <img width=\"100%\" src={jsonIntt?.Product?.ImageReference} height=\"320px\" alt=\"reference\" />\r\n                    <div style={{ backgroundColor: \"#f5f6f6\", padding: 8 }}>\r\n                        <div>{jsonIntt?.Product?.Title}</div>\r\n                        <div style={{ color: '#dff3cc' }}>{jsonIntt?.Product?.Price} {jsonIntt?.Product?.Currency}</div>\r\n                    </div>\r\n                    <div style={{ padding: 8 }}>\r\n                        <div style={{ fontWeight: 'bold' }}>{jsonIntt?.Body}</div>\r\n                        <div style={{ color: '#8696a0' }}>{jsonIntt?.Footer}</div>\r\n                    </div>\r\n                </div>\r\n                <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst InteractiveList: React.FC<{ onlyTime?: string, interactiontext: string, createdate: string, classes: any, userType: string }> = ({ interactiontext, createdate, classes, userType, onlyTime }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const { t } = useTranslation();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const jsonIntt = JSON.parse(interactiontext);\r\n\r\n    if (jsonIntt.sections.length === 0) {\r\n        return <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            INTERACTIVE LIST WITHOUT OPTIONS\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            {(jsonIntt.headertype === \"text\" || !jsonIntt.headertype) ? (\r\n                <div style={{ fontWeight: 500 }}>{jsonIntt.header}</div>\r\n            ) : jsonIntt.header}\r\n            <div>\r\n                {jsonIntt.body}\r\n            </div>\r\n            {jsonIntt.footer && (\r\n                <div style={{ color: 'rgb(0,0,0,0.45)', fontSize: 12 }}>{jsonIntt.footer}</div>\r\n            )}\r\n            <div style={{ height: 2, borderTop: '1px solid rgb(235, 234, 237)', marginTop: 4 }}></div>\r\n            <div\r\n                style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', color: '#00a5f4', cursor: 'pointer' }}\r\n                onClick={handleClickOpen}\r\n            >\r\n                <InteractiveListIcon />{t(langKeys.options)}\r\n            </div>\r\n            <TimerInteraction interactiontype=\"interactivelist\" createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-dialog-title\"\r\n                open={open}\r\n                fullWidth\r\n                maxWidth=\"xs\"\r\n            >\r\n                <DialogTitle>{t(langKeys.options)}</DialogTitle>\r\n                <DialogContent>\r\n                    {jsonIntt.sections[0].buttons.map((button: any, i: number) => (\r\n                        <div\r\n                            key={i}\r\n                            style={{\r\n                                background: '#FFF',\r\n                                borderRadius: 4,\r\n                                padding: '12px 8px',\r\n                                textTransform: 'uppercase',\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between'\r\n                            }}>\r\n                            {button.title}\r\n                            <RadioButtonUncheckedIcon />\r\n                        </div>\r\n                    ))}\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\nconst Carousel: React.FC<{ carousel: Dictionary[] }> = ({ carousel }) => {\r\n    const classes = useStylesInteraction();\r\n    const [pageSelected, setPageSelected] = useState(0);\r\n\r\n    if (carousel.length === 0) return null;\r\n    return (\r\n        <div className={classes.containerCarousel}>\r\n            <div style={{ height: 157 }}>\r\n                <img\r\n                    src={carousel[pageSelected].mediaUrl}\r\n                    className={classes.imageCardCarousel}\r\n                    alt=\"logocarousel\"\r\n                    crossOrigin={carousel[pageSelected].mediaUrl.includes('cloud-object-storage') ? 'anonymous' : undefined}\r\n                />\r\n            </div>\r\n            <div style={{ padding: '12px', wordBreak: 'break-word' }}>\r\n                <div>\r\n                    <div style={{ fontWeight: 600 }}>{carousel[pageSelected].title}</div>\r\n                    <div>{carousel[pageSelected].description}</div>\r\n                </div>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px', marginTop: 8 }}>\r\n                    {(carousel[pageSelected].actions as Dictionary[]).map((action: Dictionary, index: number) => {\r\n                        return <div className={classes.buttonCarousel} key={index}>{action.text}</div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            {pageSelected > 0 &&\r\n                <Fab\r\n                    className={classes.buttonLeft}\r\n                    size=\"small\"\r\n                    onClick={() => setPageSelected(pageSelected - 1)}\r\n                >\r\n                    <NavigateBeforeIcon style={{ color: '#2E2C34' }} />\r\n                </Fab>\r\n            }\r\n            {pageSelected < carousel.length - 1 &&\r\n                <Fab\r\n                    className={classes.buttonRight}\r\n                    onClick={() => setPageSelected(pageSelected + 1)}\r\n                    size=\"small\"\r\n                >\r\n                    <NavigateNextIcon style={{ color: '#2E2C34' }} />\r\n                </Fab>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst TimerInteraction: React.FC<{ interactiontype: string, time: string, createdate: string, background?: boolean, userType?: string }> = ({ time, background, userType, createdate, interactiontype }) => {\r\n    const classes = useStylesInteraction();\r\n    const ticketSelected = useSelector(state => state.inbox.ticketSelected);\r\n    const [isSeen, setIsSeen] = useState(false)\r\n\r\n    React.useEffect(() => {\r\n        if (ticketSelected?.lastseendate && interactiontype !== \"LOG\") {\r\n            const lastSeenDate = new Date(ticketSelected?.lastseendate);\r\n            const interactionDate = new Date(createdate!!);\r\n\r\n            setIsSeen(interactionDate <= lastSeenDate);\r\n        }\r\n    }, [createdate, interactiontype, ticketSelected?.lastseendate])\r\n\r\n    return (\r\n        <span className={classes.containerTime}>\r\n            {time}\r\n            {!background ?\r\n                <div className={classes.timeInteraction}>\r\n                    {time}\r\n                    {userType !== \"client\" && <SeenIcon className={clsx({\r\n                        [classes.timeSeen]: isSeen,\r\n                    })} />}\r\n                </div> :\r\n                <div className={classes.timeInteractionWithBackground}>\r\n                    {time}\r\n                    {userType !== \"client\" && <SeenIcon className={clsx({\r\n                        [classes.timeSeen]: isSeen,\r\n                    })} />}\r\n                </div>\r\n            }\r\n        </span>\r\n    )\r\n}\r\n\r\nconst PickerInteraction: React.FC<{ userType: string, fill?: string }> = ({ userType, fill = '#FFF' }) => {\r\n    if (userType === 'client')\r\n        return (\r\n            <svg viewBox=\"0 0 11 20\" width=\"11\" height=\"20\" style={{ position: 'absolute', bottom: -1, left: -9, fill }}>\r\n                <svg id=\"message-tail-filled\" viewBox=\"0 0 11 20\"><g transform=\"translate(9 -14)\" fill=\"inherit\" fillRule=\"evenodd\"><path d=\"M-6 16h6v17c-.193-2.84-.876-5.767-2.05-8.782-.904-2.325-2.446-4.485-4.625-6.48A1 1 0 01-6 16z\" transform=\"matrix(1 0 0 -1 0 49)\" id=\"corner-fill\" fill=\"inherit\"></path></g></svg>\r\n\r\n            </svg>\r\n        )\r\n    else\r\n        return (\r\n            <svg viewBox=\"0 0 11 20\" width=\"11\" height=\"20\" style={{ position: 'absolute', bottom: 0, right: -9, transform: 'translateY(1px) scaleX(-1)', fill }}>\r\n                <svg id=\"message-tail-filled\" viewBox=\"0 0 11 20\"><g transform=\"translate(9 -14)\" fill=\"inherit\" fillRule=\"evenodd\"><path d=\"M-6 16h6v17c-.193-2.84-.876-5.767-2.05-8.782-.904-2.325-2.446-4.485-4.625-6.48A1 1 0 01-6 16z\" transform=\"matrix(1 0 0 -1 0 49)\" id=\"corner-fill\" fill=\"inherit\"></path></g></svg>\r\n            </svg>\r\n        )\r\n}\r\n\r\nconst ItemInteraction: React.FC<{ classes: any, interaction: IInteraction, userType: string }> = ({ interaction: { interactionid, interactiontype, interactiontext, listImage, indexImage, createdate, onlyTime }, classes, userType }) => {\r\n    const ref = React.useRef<HTMLIFrameElement>(null);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [showfulltext, setshowfulltext] = useState(interactiontext.length <= 450)\r\n    const { isLoaded } = useJsApiLoader({\r\n        googleMapsApiKey: \"AIzaSyAqrFCH95Tbqwo6opvVPcdtrVd-1fnBLr4\" /*\"AIzaSyCBij6DbsB8SQC_RRKm3-X07RLmvQEnP9w\"*/,\r\n    });\r\n\r\n    const [height, setHeight] = React.useState(\"0px\");\r\n    const onLoad = () => {\r\n        setHeight(((ref as any)?.current.contentWindow.document.body.scrollHeight + 20) + \"px\");\r\n    };\r\n\r\n    if (!interactiontext.trim() || interactiontype === \"typing\")\r\n        return null;\r\n    if (interactiontype === \"text\")\r\n        return (\r\n            <div\r\n                title={convertLocalDate(createdate).toLocaleString()}\r\n                className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })}\r\n            >\r\n                <span dangerouslySetInnerHTML={{ __html: validateIsUrl(showfulltext ? interactiontext : interactiontext.substring(0, 450) + \"... \") }}></span>\r\n                {!showfulltext && (\r\n                    <div style={{ color: \"#53bdeb\", display: \"contents\", cursor: \"pointer\" }} onClick={() => setshowfulltext(true)}>{t(langKeys.showmore)}</div>\r\n                )\r\n                }\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    else if (interactiontype === \"html\")\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                <iframe\r\n                    ref={ref}\r\n                    srcDoc={interactiontext}\r\n                    id={`frame-${interactionid}`}\r\n                    width=\"100%\"\r\n                    height={height}\r\n                    title=\"frame1\"\r\n                    onLoad={onLoad}\r\n                    style={{ border: 'none' }}\r\n                >\r\n                </iframe>\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    else if (interactiontype === \"email\") {\r\n        try {\r\n            const [subject, body, files] = interactiontext.split(\"&%MAIL%&\")\r\n            return (\r\n                <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} >\r\n                    <div>RE-LARAIGO: {subject}</div>\r\n                    <iframe\r\n                        ref={ref}\r\n                        srcDoc={body}\r\n                        id={`frame-${interactionid}`}\r\n                        width=\"100%\"\r\n                        title=\"frame2\"\r\n                        height={height}\r\n                        onLoad={onLoad}\r\n                        style={{ border: 'none' }}\r\n                    >\r\n                    </iframe>\r\n                    {(files && files !== \"{}\") &&\r\n                        Object.keys(JSON.parse(files)).map((file: any) => {\r\n                            let hreffile = JSON.parse(files)[file]\r\n                            let extension = file.split('.').pop()\r\n                            return (\r\n                                <a key={file} download rel=\"noreferrer\" target=\"_blank\" href={hreffile} style={{ textDecoration: 'none', display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: 4, maxWidth: 200, border: \"1px solid #e1e1e1\", borderRadius: 5, marginBottom: 5, paddingRight: 5 }}>\r\n                                    {extension === \"pdf\" ? (\r\n                                        <PdfIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"doc\" || extension === \"docx\") ? (\r\n                                        <DocIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"xls\" || extension === \"xlsx\" || extension === \"csv\") ? (\r\n                                        <XlsIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"ppt\" || extension === \"pptx\") ? (\r\n                                        <PptIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"text\" || extension === \"txt\") ? (\r\n                                        <TxtIcon width=\"30\" height=\"30\" />\r\n                                    ) : (extension === \"zip\" || extension === \"rar\") ? (\r\n                                        <ZipIcon width=\"30\" height=\"30\" />\r\n                                    ) : <FileIcon width=\"30\" height=\"30\" />\r\n                                    }\r\n                                    <div style={{ color: '#171717', textOverflow: 'ellipsis', overflowX: 'hidden', flex: 1, whiteSpace: 'nowrap' }}>{decodeURI(file)}</div>\r\n                                    <DownloadIcon2 width=\"20\" height=\"20\" color=\"primary\" />\r\n                                </a>)\r\n                        })\r\n                    }\r\n                    <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                    <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                </div>\r\n            );\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"image\" || interactiontype === \"comment-image\")\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={classes.interactionImage}>\r\n                <img\r\n                    className={classes.imageCard}\r\n                    src={interactiontext}\r\n                    alt=\"\"\r\n                    crossOrigin={interactiontext.includes('cloud-object-storage') ? 'anonymous' : undefined}\r\n                    onClick={() => {\r\n                        dispatch(manageLightBox({ visible: true, images: listImage!!, index: indexImage!! }))\r\n                    }}\r\n                />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} background={true} />\r\n            </div>\r\n        );\r\n    else if (interactiontype === \"quickreply\") {\r\n        try {\r\n            let text, json;\r\n\r\n            if (interactiontext.substring(0, 1) === \"{\") {\r\n                const jj = JSON.parse(interactiontext);\r\n                return (\r\n                    <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                        [classes.interactionTextAgent]: userType !== 'client',\r\n                    })}>\r\n                        {jj.stringsmooch}\r\n                        <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                        <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                    </div>\r\n                );\r\n            } else {\r\n                text = interactiontext.split(\"&&&\")[0];\r\n                json = interactiontext.split(\"&&&\")[1]\r\n            }\r\n            const listButtons: Dictionary[] = JSON.parse(`[${json}]`);\r\n            return (\r\n                <div className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} style={{ display: 'inline-block' }}>\r\n                    {text}\r\n                    <div className={classes.containerQuickreply} style={{ justifyContent: 'space-evenly', display: \"flex\" }}>\r\n                        {listButtons.map((item: Dictionary, index: number) => {\r\n                            return <div key={index} className={classes.buttonQuickreply}>{item.text || item.title}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                    <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"postback\") {\r\n        try {\r\n            const [text, json] = interactiontext.split(\"&&&\");\r\n            const listButtons: Dictionary[] = JSON.parse(`[${json}]`);\r\n            return (\r\n                <div className={classes.containerPostback} style={{ backgroundColor: 'white' }}>\r\n                    <div className={classes.headerPostback}>\r\n                        {text}\r\n                    </div>\r\n                    <div >\r\n                        {listButtons.map((item: Dictionary, index: number) => {\r\n                            return <div key={index} className={classes.buttonPostback}>{item.text}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"LOG\") {\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })} style={{ backgroundColor: '#84818A', color: 'white' }}>\r\n                {showfulltext ? interactiontext : interactiontext.substring(0, 450) + \"... \"}\r\n                {!showfulltext && (\r\n                    <div style={{ color: \"#53bdeb\", display: \"contents\", cursor: \"pointer\" }} onClick={() => setshowfulltext(true)}>{t(langKeys.showmore)}</div>\r\n                )\r\n                }\r\n                <PickerInteraction userType={userType!!} fill=\"#84818A\" />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} background={true} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    } else if (interactiontype === \"carousel\") {\r\n        try {\r\n            const listItems: Dictionary[] = JSON.parse(`[${interactiontext}]`);\r\n            return (<Carousel carousel={listItems} />)\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"audio\" || (interactiontype === \"video\" && interactiontext.includes(\".oga\"))) {\r\n        return (\r\n            <div className={classes.interactionImage} style={{ borderRadius: 0, height: 50, backgroundColor: 'transparent' }}>\r\n                <audio controls src={interactiontext} className={classes.imageCard} style={{}}></audio>\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} background={true} time={onlyTime || \"\"} />\r\n            </div>\r\n        )\r\n    } else if (interactiontype === \"video\") {\r\n        return (\r\n            <div className={classes.interactionImage}>\r\n                <video className={classes.imageCard} width=\"200\" controls src={interactiontext} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} background={true} />\r\n            </div>\r\n        )\r\n    } else if (interactiontype === \"file\") {\r\n        const filename = interactiontext.split(\"/\").pop() || \"\";\r\n        const extension = (filename || \"\").split(\".\").pop();\r\n\r\n        return (\r\n            <div style={{ width: 200, backgroundColor: 'white', padding: '12px 13px', borderRadius: 4, position: 'relative' }}>\r\n                <a download rel=\"noreferrer\" target=\"_blank\" href={interactiontext} style={{ textDecoration: 'none', display: 'flex', justifyContent: 'space-between', alignItems: 'center', gap: 4 }}>\r\n                    {extension === \"pdf\" ? (\r\n                        <PdfIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"doc\" || extension === \"docx\") ? (\r\n                        <DocIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"xls\" || extension === \"xlsx\" || extension === \"csv\") ? (\r\n                        <XlsIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"ppt\" || extension === \"pptx\") ? (\r\n                        <PptIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"text\" || extension === \"txt\") ? (\r\n                        <TxtIcon width=\"30\" height=\"30\" />\r\n                    ) : (extension === \"zip\" || extension === \"rar\") ? (\r\n                        <ZipIcon width=\"30\" height=\"30\" />\r\n                    ) : <FileIcon width=\"30\" height=\"30\" />\r\n                    }\r\n                    <div style={{ color: '#171717', textOverflow: 'ellipsis', overflowX: 'hidden', flex: 1, whiteSpace: 'nowrap' }}>{filename}</div>\r\n                    <DownloadIcon2 width=\"20\" height=\"20\" color=\"primary\" />\r\n                </a>\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} background={true} time={onlyTime || \"\"} />\r\n            </div>\r\n        )\r\n    } else if (interactiontype === \"interactivebutton\") {\r\n        try {\r\n            const jsonIntt = JSON.parse(interactiontext);\r\n            jsonIntt.headertype = jsonIntt.headertype || \"text\";\r\n            return (\r\n                <div style={{ display: 'flex', gap: 4, flexDirection: 'column' }}>\r\n                    <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                        [classes.interactionTextAgent]: userType !== 'client',\r\n                    })}>\r\n                        {jsonIntt.headertype === \"text\" ? (\r\n                            <div style={{ fontWeight: 500 }}>{jsonIntt.header}</div>\r\n                        ) : jsonIntt.header}\r\n                        {jsonIntt.body}\r\n                        {jsonIntt.footer && (\r\n                            <div style={{ color: 'rgb(0,0,0,0.45)', fontSize: 12 }}>{jsonIntt.footer}</div>\r\n                        )}\r\n                        <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n                    </div>\r\n                    {jsonIntt.buttons.map((button: any, i: number) => (\r\n                        <div key={i} style={{ background: '#FFF', color: '#00a5f4', borderRadius: 4, padding: '6px 8px', textAlign: 'center', textTransform: 'uppercase' }}>\r\n                            {button.title}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"reply-text\") {\r\n        const textres = interactiontext.split(\"###\")[1];\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                [classes.interactionTextAgent]: userType !== 'client',\r\n            })}>\r\n                {textres}\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        );\r\n    } else if (interactiontype === \"interactivelist\") {\r\n        try {\r\n            return (\r\n                <InteractiveList\r\n                    interactiontext={interactiontext}\r\n                    createdate={createdate}\r\n                    classes={classes}\r\n                    userType={userType}\r\n                    onlyTime={onlyTime}\r\n                />\r\n            )\r\n        } catch (error) {\r\n            return null\r\n        }\r\n    } else if (interactiontype === \"post-image\") {\r\n        return (\r\n            <div title={convertLocalDate(createdate).toLocaleString()} className={classes.interactionImage} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                <img\r\n                    className={classes.imageCard}\r\n                    src={interactiontext} alt=\"\"\r\n                    onClick={() => {\r\n                        dispatch(manageLightBox({ visible: true, images: listImage!!, index: indexImage!! }))\r\n                    }}\r\n                />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} background={true} />\r\n            </div>\r\n        );\r\n    } else if (interactiontype === \"post-text\") {\r\n\r\n        const ishtml = interactiontext.includes(\"###HTML###\");\r\n        const text = ishtml ? interactiontext.split(\"###HTML###\")[1] : interactiontext;\r\n\r\n        if (ishtml) {\r\n            return (\r\n                <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} style={{ marginLeft: 'auto', marginRight: 'auto' }} dangerouslySetInnerHTML={{ __html: text }}>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div title={convertLocalDate(createdate).toLocaleString()} className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\r\n                    {text}\r\n                </div>\r\n            );\r\n        }\r\n    } else if (interactiontype === \"whatsappcatalog\") {\r\n        return (\r\n            <CatalogProduct\r\n                interactiontext={interactiontext}\r\n                createdate={createdate}\r\n                classes={classes}\r\n                userType={userType}\r\n                onlyTime={onlyTime}\r\n            />\r\n        )\r\n    } else if (interactiontype === \"shoppingcart\") {\r\n        return (\r\n            <ShoppingCart\r\n                interactiontext={interactiontext}\r\n                createdate={createdate}\r\n                classes={classes}\r\n                userType={userType}\r\n                onlyTime={onlyTime}\r\n            />\r\n        )\r\n    } else if (interactiontype === \"location\") {\r\n\r\n        const coordinates = interactiontext.split(\"=\").pop()?.split(\",\") || [\"\", \"\"];\r\n\r\n        return isLoaded ? (\r\n            <div\r\n                title={convertLocalDate(createdate).toLocaleString()}\r\n                className={clsx(classes.interactionText, {\r\n                    [classes.interactionTextAgent]: userType !== 'client',\r\n                })}\r\n            >\r\n                <div style={{ width: \"300px\" }} className=\"interaction-gmap\">\r\n                    <GoogleMap\r\n                        mapContainerStyle={{\r\n                            width: '100%',\r\n                            height: \"200px\"\r\n                        }}\r\n                        center={{ lat: parseFloat(coordinates[0]), lng: parseFloat(coordinates[1]) }}\r\n                        zoom={10}\r\n                    >\r\n                        <Marker\r\n                            position={{ lat: parseFloat(coordinates[0]), lng: parseFloat(coordinates[1]) }}\r\n                        />\r\n                    </GoogleMap>\r\n                </div>\r\n                <div style={{ display: \"none\" }} className=\"interaction-gmap-text\">\r\n                    {interactiontext}\r\n                </div>\r\n                <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n                <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n            </div>\r\n        ) : null\r\n    }\r\n    return (\r\n        <div className={clsx(classes.interactionText, {\r\n            [classes.interactionTextAgent]: userType !== 'client',\r\n        })}>\r\n            {interactiontext}\r\n            <PickerInteraction userType={userType!!} fill={userType === \"client\" ? \"#FFF\" : \"#eeffde\"} />\r\n            <TimerInteraction interactiontype={interactiontype} createdate={createdate} userType={userType} time={onlyTime || \"\"} />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ItemGroupInteraction: React.FC<{ classes: any, groupInteraction: IGroupInteraction, clientName: string, imageClient: string | null }> = ({ classes, groupInteraction: { usertype, interactions } }) => {\r\n\r\n    const ticketSelected = useSelector(state => state.inbox.ticketSelected);\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: 8 }}>\r\n            <div style={{ flex: 1 }}>\r\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '8px' }}>\r\n                    {interactions.map((item: IInteraction, index: number) => (\r\n                        <div key={index} id={`interaction-${item.interactionid}`} className={clsx({\r\n                            [classes.interactionAgent]: usertype !== \"client\",\r\n                            [classes.interactionFromPost]: ticketSelected?.communicationchanneltype === \"FBWA\"\r\n                        })}>\r\n                            {!item.interactiontype.includes(\"post-\") && ticketSelected?.communicationchanneltype === \"FBWA\" && usertype === \"client\" && (\r\n                                <Avatar src={item.avatar + \"\" || undefined} />\r\n                            )}\r\n                            <ItemInteraction interaction={item} classes={classes} userType={usertype!!} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {usertype === \"agent\" ?\r\n                <div style={{ marginTop: 'auto' }}><AgentIcon style={{ width: 40, height: 40 }} /></div> :\r\n                (usertype === \"BOT\" && <div style={{ marginTop: 'auto' }}><BotIcon style={{ width: 40, height: 40 }} /></div>)\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ItemGroupInteraction;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { DialogZyx, SkeletonInteraction } from 'components'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getInteractions } from 'store/inbox/actions'\r\nimport { Dictionary, IGroupInteraction } from '@types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport ItemGroupInteraction from './Interaction';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Trans } from 'react-i18next';\r\nimport { DownloadIcon } from 'icons';\r\nimport DomToImage from 'dom-to-image';\r\nimport IOSSwitch from \"components/fields/IOSSwitch\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerPanel: {\r\n        flex: '1',\r\n        display: 'flex'\r\n    },\r\n    titleTicketChat: {\r\n        fontWeight: 'bold',\r\n        fontSize: 15,\r\n        // '&:hover': {\r\n        //     cursor: 'pointer',\r\n        //     borderBottom: '1px solid #2E2C34'\r\n        // }\r\n    },\r\n    interactionAgent: {\r\n        marginLeft: 'auto'\r\n    },\r\n    groupInteractionAgent: {\r\n        marginLeft: 'auto',\r\n        display: 'flex'\r\n    },\r\n    containerTickets: {\r\n        flex: '0 0 300px',\r\n        maxWidth: 300,\r\n        backgroundColor: '#FFF',\r\n        flexDirection: 'column',\r\n        display: 'flex',\r\n        borderRight: '1px solid #84818a1a'\r\n    },\r\n    headChat: {\r\n        backgroundColor: '#FFF',\r\n        padding: theme.spacing(1),\r\n        borderBottom: '1px solid #84818a1a',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        cursor: 'pointer'\r\n    },\r\n    containerInteractions: {\r\n        padding: theme.spacing(2),\r\n        flex: 1,\r\n        // overflowY: 'auto',\r\n        // backgroundColor: '#e0e0e0',\r\n        background: 'linear-gradient(90deg, rgba(119,33,173,0.7203256302521008) 35%, rgba(189,240,249,1) 100%)'\r\n    },\r\n    containerQuickreply: {\r\n        whiteSpace: 'break-spaces',\r\n        flexWrap: 'wrap',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        display: 'flex',\r\n        gap: theme.spacing(1),\r\n    },\r\n    containerPostback: {\r\n        width: 200,\r\n        padding: 0,\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '14px',\r\n        lineHeight: 2,\r\n        borderRadius: 25\r\n    },\r\n    headerPostback: {\r\n        textAlign: 'center',\r\n        backgroundColor: 'rgb(132 129 138 / 0.4);',\r\n        borderTopLeftRadius: 25,\r\n        borderTopRightRadius: 25,\r\n    },\r\n    itemSelected: {\r\n        backgroundColor: 'rgb(235, 234, 237, 0.50)'\r\n    },\r\n    buttonPostback: {\r\n        color: theme.palette.primary.main,\r\n        cursor: 'pointer',\r\n        textAlign: 'center',\r\n        borderTop: '1px solid #EBEAED',\r\n        '&:hover': {\r\n            color: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    buttonQuickreply: {\r\n        padding: `0 ${theme.spacing(1)}px`,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderRadius: '6px',\r\n        color: '#FFF',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.dark,\r\n        }\r\n    },\r\n    interactionText: {\r\n        whiteSpace: 'break-spaces',\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        fontSize: '14px',\r\n        lineHeight: 2,\r\n        color: '#2E2C34',\r\n        wordBreak: 'break-word',\r\n        width: 'fit-content',\r\n        borderRadius: 12,\r\n        borderBottomLeftRadius: 0,\r\n        padding: `${theme.spacing(.5)}px ${theme.spacing(1)}px ${theme.spacing(.7)}px ${theme.spacing(1)}px`,\r\n        position: 'relative',\r\n        maxWidth: 480,\r\n        backgroundColor: '#FFF',\r\n        border: '1px solid #EBEAED',\r\n        // boxShadow: '0 1px 2px 0 rgb(16 35 47 / 15%)'\r\n    },\r\n    interactionTextAgent: {\r\n        borderBottomLeftRadius: 12,\r\n        borderBottomRightRadius: 0,\r\n        backgroundColor: \"#eeffde\",\r\n    },\r\n    interactionImage: {\r\n        borderRadius: theme.spacing(1.5),\r\n        backgroundColor: '#FFF',\r\n        position: 'relative',\r\n        width: '328px',\r\n        height: '340px',\r\n    },\r\n    imageCard: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        cursor: 'pointer',\r\n        objectFit: 'cover',\r\n        height: '100%',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        borderRadius: 'inherit'\r\n    },\r\n    timeInteraction: {\r\n        color: '#84818A',\r\n        fontSize: 13,\r\n        fontStyle: 'normal',\r\n        fontWeight: 'normal',\r\n        lineHeight: 2,\r\n    },\r\n    containerResponse: {\r\n        padding: theme.spacing(2),\r\n        background: '#FFF',\r\n        position: 'relative',\r\n        borderTop: '1px solid #84818a1a'\r\n    },\r\n    containerChat: {\r\n        flex: '1',\r\n        flexDirection: 'column',\r\n        display: 'flex',\r\n\r\n    },\r\n    collapseInfo: {\r\n        position: 'absolute',\r\n        top: 'calc(50% - 20px)'\r\n    },\r\n    infoOpen: {\r\n        right: -20,\r\n    },\r\n    infoClose: {\r\n        right: 0,\r\n    },\r\n    containerProfile: {\r\n        flex: '0 0 300px',\r\n        display: 'none'\r\n    },\r\n    iconResponse: {\r\n        cursor: 'pointer',\r\n        poisition: 'relative',\r\n        color: '#2E2C34',\r\n        '&:hover': {\r\n            // color: theme.palette.primary.main,\r\n            backgroundColor: '#EBEAED',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    iconSend: {\r\n        background: \"#5542F6\",\r\n        width: 32,\r\n        height: 32,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n    },\r\n    iconSendDisabled: {\r\n        backgroundColor: \"#EBEAED\",\r\n        cursor: 'not-allowed',\r\n    },\r\n    containerButtonsChat: {\r\n        display: 'flex',\r\n    },\r\n    buttonCloseticket: {\r\n        background: '#F9F9FA',\r\n        border: '1px solid #EBEAED',\r\n        boxSizing: 'border-box',\r\n        borderRadius: '4px',\r\n        width: '150px',\r\n        height: '42px',\r\n        fontFamily: 'Manrope',\r\n        fontStyle: 'normal',\r\n        fontWeight: 600,\r\n        fontSize: '14px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: '#ececec'\r\n        }\r\n    },\r\n    interactionFromPost: {\r\n        display: 'flex',\r\n        gap: 8\r\n    },\r\n    buttonIcon: {\r\n        width: 48,\r\n        height: 42,\r\n        border: '1px solid #EBEAED',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: '#ececec'\r\n        }\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        gap: theme.spacing(2),\r\n        width: '100%'\r\n    },\r\n    containerItemTicket: {\r\n        display: 'flex',\r\n        gap: theme.spacing(1),\r\n        alignItems: 'center',\r\n        padding: theme.spacing(1),\r\n        borderBottom: '1px solid #EBEAED',\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            backgroundColor: 'rgb(235, 234, 237, 0.18)'\r\n        }\r\n    },\r\n    containerNewMessages: {\r\n        minWidth: '22px',\r\n        padding: '0px 4px',\r\n        borderRadius: 12,\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n        textAlign: 'center'\r\n    },\r\n    name: {\r\n        flex: 1,\r\n        fontWeight: 500,\r\n        fontSize: '16px',\r\n        lineHeight: '22px',\r\n        wordBreak: 'break-word',\r\n\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: 200\r\n    },\r\n    containerQuickReply: {\r\n        boxShadow: '0px 3px 6px rgb(0 0 0 / 10%)',\r\n        backgroundColor: '#FFF',\r\n        width: 250,\r\n    },\r\n    headerQuickReply: {\r\n        fontSize: 13,\r\n        fontWeight: 500,\r\n        padding: theme.spacing(1.5),\r\n        borderBottom: '1px solid #EBEAED'\r\n    },\r\n    itemQuickReply: {\r\n        fontSize: 13,\r\n        paddingTop: theme.spacing(.7),\r\n        paddingBottom: theme.spacing(.7),\r\n        paddingLeft: theme.spacing(1.5),\r\n        paddingRight: theme.spacing(1.5),\r\n        '&:hover': {\r\n            backgroundColor: '#EBEAED',\r\n            cursor: 'pointer'\r\n        }\r\n    }\r\n}));\r\n\r\nconst DialogInteractions: React.FC<{ ticket: Dictionary | null, openModal: boolean, setOpenModal: (param: any) => void }> = ({ ticket, openModal, setOpenModal }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [showAllInteraction, setShowAllInteraction] = React.useState(false)\r\n    const interactionExtraList = useSelector(state => state.inbox.interactionExtraList);\r\n    const [interactionsToShow, setinteractionsToShow] = React.useState<IGroupInteraction[]>([])\r\n    const el = React.useRef<null | HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (ticket && openModal)\r\n            dispatch(getInteractions(ticket?.conversationid, false, 0));\r\n    }, [ticket])\r\n\r\n    const GenericPdfDownloader: React.FC<{ downloadFileName: string }> = ({ downloadFileName }) => {\r\n        const downloadPdfDocument = () => {\r\n            import('jspdf').then(jsPDF => {\r\n                if (el.current) {\r\n                    const gg = document.createElement('div');\r\n                    gg.style.display = 'flex';\r\n                    gg.style.flexDirection = 'column';\r\n                    gg.style.gap = '8px';\r\n                    gg.style.width = '190mm';\r\n                    gg.id = \"newexportcontainer\"\r\n\r\n                    gg.innerHTML = el.current.innerHTML;\r\n\r\n                    gg.querySelectorAll(\".interaction-gmap\").forEach(x => x.remove())\r\n                    gg.querySelectorAll(\".interaction-gmap-text\").forEach(x => (x as HTMLDivElement).style.display = \"\")\r\n\r\n                    document.body.appendChild(gg);\r\n                    const pdf = new jsPDF.jsPDF('p', 'mm');\r\n                    if (pdf) {\r\n                        DomToImage.toPng(gg)\r\n                            .then(imgData => {\r\n                                var imgWidth = 200;\r\n                                var pageHeight = 297;\r\n                                var imgHeight = Math.ceil(gg.scrollHeight * 0.2645833333);\r\n                                var heightLeft = imgHeight;\r\n                                var doc = new jsPDF.jsPDF('p', 'mm');\r\n                                var topPadding = 10;\r\n                                var position = topPadding; // give some top padding to first page\r\n\r\n                                doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\r\n                                heightLeft -= pageHeight;\r\n\r\n                                while (heightLeft >= 0) {\r\n                                    position = heightLeft - imgHeight + topPadding; // top padding for other pages\r\n                                    doc.addPage();\r\n                                    doc.addImage(imgData, 'PNG', 10, position, imgWidth, imgHeight);\r\n                                    heightLeft -= pageHeight;\r\n                                }\r\n                                doc.save(`ticket${ticket?.ticketnum}.pdf`);\r\n                                document.getElementById('newexportcontainer')?.remove();\r\n                            });\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={downloadPdfDocument}\r\n                startIcon={<DownloadIcon />}\r\n                style={{ position: 'absolute', right: 16, top: 16 }}\r\n            ><Trans i18nKey={langKeys.download} />\r\n            </Button>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (showAllInteraction) {\r\n            setinteractionsToShow(interactionExtraList.data)\r\n        } else {\r\n            setinteractionsToShow(interactionExtraList.data.map(x => ({\r\n                ...x,\r\n                interactions: x.interactions.filter(y => !y.isHide)\r\n            })))\r\n        }\r\n    }, [showAllInteraction, interactionExtraList.loading])\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={ticket?.displayname + \" - \" + ticket?.ticketnum}\r\n            buttonText1={t(langKeys.cancel)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n        >\r\n            <GenericPdfDownloader\r\n                downloadFileName={`ticket-` + ticket?.ticketnum}\r\n            />\r\n            <div style={{ position: 'absolute', left: 16, bottom: 16 }}>\r\n                <Tooltip title={t(langKeys.show_all) || \"\"} arrow >\r\n                    <div>\r\n                        <IOSSwitch checked={showAllInteraction} onChange={(e) => setShowAllInteraction(e.target.checked)} name=\"checkedB\" />\r\n                    </div>\r\n                </Tooltip>\r\n            </div>\r\n            {interactionExtraList.loading ? <SkeletonInteraction /> :\r\n                <div ref={el} className=\"scroll-style-go\" style={{ display: 'flex', flexDirection: 'column', gap: 8, height: '60vh' }}>\r\n                    {interactionsToShow.map((groupInteraction) => (\r\n                        <ItemGroupInteraction\r\n                            imageClient={ticket?.imageurldef}\r\n                            clientName={ticket?.displayname}\r\n                            classes={classes}\r\n                            groupInteraction={groupInteraction}\r\n                            key={groupInteraction.interactionid} />\r\n                    ))}\r\n                </div>\r\n            }\r\n        </DialogZyx>\r\n    )\r\n}\r\n\r\nexport default DialogInteractions;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { DialogZyx } from 'components'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { IFetchData, IPerson } from '@types';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport { convertLocalDate, getPaginatedPersonLink, ufnlinkPersons } from 'common/helpers';\r\nimport { getPersonLinkListPaginated } from 'store/person/actions';\r\nimport TablePaginated from 'components/fields/table-paginated';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { Refresh } from '@material-ui/icons';\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { execute } from 'store/main/actions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    label: {\r\n        overflowWrap: 'anywhere',\r\n        fontSize: 12,\r\n        color: '#B6B4BA',\r\n    },\r\n    value: {\r\n        height: 22,\r\n        maxWidth: 180,\r\n        overflow: 'hidden',\r\n        whiteSpace: 'nowrap',\r\n        textOverflow: 'ellipsis'\r\n    },\r\n    image: {\r\n        alignItems: \"center\",\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\"\r\n    }\r\n}));\r\n\r\nconst DialogLinkPerson: React.FC<{\r\n    openModal: boolean,\r\n    setOpenModal: (param: any) => void,\r\n    person?: IPerson | undefined | null,\r\n    callback?: (newPerson: IPerson) => void\r\n}> = ({ openModal, setOpenModal, person, callback }) => {\r\n    const { t } = useTranslation();\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const personList = useSelector(state => state.person.personLinkList);\r\n    const [personParent, setPersonParent] = useState<IPerson | null | undefined>(null)\r\n    const [personChild, setPersonChild] = useState<IPerson | null | undefined>(null)\r\n    const [pageCount, setPageCount] = useState(0);\r\n    const [totalrow, settotalrow] = useState(0);\r\n    const [step, setStep] = useState(\"view-table\");\r\n    const [waitLink, setWaitLink] = useState(false);\r\n    const linkRes = useSelector(state => state.main.execute);\r\n\r\n    const columns = React.useMemo(() => ([\r\n        {\r\n            Header: \"\",\r\n            accessor: 'personid',\r\n            NoFilter: true,\r\n            isComponent: true,\r\n            minWidth: 60,\r\n            width: '1%',\r\n            Cell: (props: any) => {\r\n                const row = props.cell.row.original;\r\n                return (\r\n                    <IconButton\r\n                        size='small'\r\n                        onClick={() => {\r\n                            setStep(\"view-person\");\r\n                            setPersonChild(row as IPerson)\r\n                        }}\r\n                    >\r\n                        <LinkIcon />\r\n                    </IconButton>\r\n\r\n                )\r\n            }\r\n        },\r\n        {\r\n            Header: t(langKeys.name),\r\n            accessor: 'name',\r\n        },\r\n        {\r\n            Header: t(langKeys.phone),\r\n            accessor: 'phone',\r\n        },\r\n        {\r\n            Header: t(langKeys.email),\r\n            accessor: 'email',\r\n        },\r\n        {\r\n            Header: t(langKeys.lastContactDate),\r\n            accessor: 'lastcontact',\r\n            type: 'date',\r\n            sortType: 'datetime',\r\n            Cell: (props: any) => {\r\n                const row = props.cell.row.original;\r\n                return row.lastcontact ? convertLocalDate(row.lastcontact).toLocaleString() : \"\"\r\n            }\r\n        },\r\n        {\r\n            Header: t(langKeys.status),\r\n            accessor: 'status',\r\n            prefixTranslation: 'status_',\r\n            Cell: (props: any) => {\r\n                const { status } = props.cell.row.original;\r\n                return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n            }\r\n        }\r\n    ]), [t]);\r\n\r\n    const fetchData = ({ pageSize, pageIndex, filters, sorts }: IFetchData) => {\r\n        dispatch(getPersonLinkListPaginated(getPaginatedPersonLink({\r\n            skip: pageSize * pageIndex,\r\n            take: pageSize,\r\n            sorts,\r\n            filters,\r\n            originpersonid: person?.personid\r\n        })));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (openModal) {\r\n            setPersonParent(person);\r\n            setPersonChild(null);\r\n            setStep(\"view-table\");\r\n            fetchData({ pageSize: 20, pageIndex: 0, filters: {}, sorts: {}, daterange: null })\r\n        }\r\n    }, [openModal])\r\n\r\n    useEffect(() => {\r\n        if (!personList.loading && !personList.error) {\r\n            setPageCount(Math.ceil(personList.count / 20));\r\n            settotalrow(personList.count);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [personList]);\r\n\r\n    useEffect(() => {\r\n        if (waitLink) {\r\n            if (!linkRes.loading && !linkRes.error) {\r\n                callback && callback(personParent!!)\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: \"Vinculación correcta\" }))\r\n                setOpenModal(false);\r\n                dispatch(showBackdrop(false));\r\n                setWaitLink(false);\r\n            } else if (linkRes.error) {\r\n                const message = t(linkRes.code || \"error_unexpected_error\", { module: t(langKeys.tipification).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitLink(false);\r\n            }\r\n        }\r\n    }, [linkRes, waitLink])\r\n\r\n    const linkPersons = () => {\r\n        if (!(step === \"view-person\" && personChild)) {\r\n            dispatch(showSnackbar({ show: true, severity: \"warning\", message: \"Debe seleccionar una persona\" }))\r\n            return\r\n        }\r\n        dispatch(showBackdrop(true));\r\n        dispatch(execute(ufnlinkPersons({\r\n            ...personParent,\r\n            personidfrom: personChild?.personid,\r\n            personidto: personParent?.personid,\r\n        })))\r\n        setWaitLink(true)\r\n    }\r\n\r\n    return (\r\n        <DialogZyx\r\n            open={openModal}\r\n            title={t(langKeys.link)}\r\n            buttonText1={t(langKeys.cancel)}\r\n            buttonText2={t(langKeys.link)}\r\n            handleClickButton1={() => setOpenModal(false)}\r\n            handleClickButton2={linkPersons}\r\n            maxWidth=\"md\"\r\n        >\r\n            <div style={{ display: \"flex\", gap: 10 }}>\r\n                <Avatar className={classes.image} alt=\"\" style={{ width: 120, height: 120 }} src={personParent?.imageurldef} />\r\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', width: '100%', gap: \"10px\" }}>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.firstname)}</div>\r\n                        <div className={classes.value}>{personParent?.firstname}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.lastname)}</div>\r\n                        <div className={classes.value}>{personParent?.lastname}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.documenttype)}</div>\r\n                        <div className={classes.value}>{personParent?.documenttype}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.documentnumber)}</div>\r\n                        <div className={classes.value}>{personParent?.documentnumber}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.email)}</div>\r\n                        <div className={classes.value}>{personParent?.email}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.phone)}</div>\r\n                        <div className={classes.value}>{personParent?.phone}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.alternativeEmail)}</div>\r\n                        <div className={classes.value}>{personParent?.alternativeemail}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.alternativePhone)}</div>\r\n                        <div className={classes.value}>{personParent?.alternativephone}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.birthday)}</div>\r\n                        <div className={classes.value}>{personParent?.birthday}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.gender)}</div>\r\n                        <div className={classes.value}>{personParent?.gender}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.occupation)}</div>\r\n                        <div className={classes.value}>{personParent?.occupationdesc}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.civilStatus)}</div>\r\n                        <div className={classes.value}>{personParent?.civilstatusdesc}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.educationLevel)}</div>\r\n                        <div className={classes.value}>{personParent?.educationleveldesc}</div>\r\n                    </div>\r\n                    \r\n                    \r\n                    \r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.address)}</div>\r\n                        <div className={classes.value}>{personParent?.address}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.healthprofessional)}</div>\r\n                        <div className={classes.value}>{personParent?.healthprofessional}</div>\r\n                    </div>\r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.referralchannel)}</div>\r\n                        <div className={classes.value}>{personParent?.referralchannel}</div>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <div className={classes.label}>{t(langKeys.observation)}</div>\r\n                        <div className={classes.value}>{personParent?.observation}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style={{ textAlign: \"center\", marginTop: 12 }}>\r\n                *Al realizar la vinculación, los tickets y canales de esta persona se trasladaran a la persona seleccionada\r\n            </div>\r\n            {step === \"view-table\" && (\r\n                <div>\r\n                    <TablePaginated\r\n                        columns={columns}\r\n                        data={personList.data}\r\n                        pageCount={pageCount}\r\n                        totalrow={totalrow}\r\n                        loading={personList.loading}\r\n                        filterrange={false}\r\n                        download={false}\r\n                        fetchData={fetchData}\r\n                    />\r\n                </div>\r\n            )}\r\n            {step === \"view-person\" && (\r\n                <div style={{ marginTop: 16 }}>\r\n                    <div style={{ textAlign: \"right\", marginBottom: 16 }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<Refresh color=\"secondary\" />}\r\n                            onClick={() => setStep(\"view-table\")}\r\n                        >{\"Elegir persona\"}</Button>\r\n                    </div>\r\n                    <div style={{ display: \"flex\", gap: 10 }}>\r\n                        <div className={classes.image} >\r\n                            {personChild?.imageurldef && (\r\n                                <div style={{ textAlign: \"center\" }}>\r\n                                    <IconButton size=\"small\" onClick={() => {\r\n                                        setPersonParent({\r\n                                            ...personParent!!,\r\n                                            imageurldef: personChild.imageurldef\r\n                                        })\r\n                                    }}>\r\n                                        <ArrowUpwardIcon color=\"action\" />\r\n                                    </IconButton>\r\n                                </div>\r\n                            )}\r\n                            <Avatar alt=\"\" style={{ width: 120, height: 120 }} src={personChild?.imageurldef} />\r\n\r\n                        </div>\r\n                        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', width: '100%', gap: \"10px\" }}>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.firstname && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                firstname: personChild.firstname\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.firstname)}</div>\r\n                                    <div className={classes.value}>{personChild?.firstname}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.lastname && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                lastname: personChild.lastname\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.lastname)}</div>\r\n                                    <div className={classes.value}>{personChild?.lastname}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.documenttype && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                documenttype: personChild.documenttype,\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.documenttype)}</div>\r\n                                    <div className={classes.value}>{personChild?.documenttype}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.documentnumber && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                documentnumber: personChild.documentnumber\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.documentnumber)}</div>\r\n                                    <div className={classes.value}>{personChild?.documentnumber}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.email && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                email: personChild.email\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.email)}</div>\r\n                                    <div className={classes.value}>{personChild?.email}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.phone && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                phone: personChild.phone\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.phone)}</div>\r\n                                    <div className={classes.value}>{personChild?.phone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.alternativeemail && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                alternativeemail: personChild.alternativeemail\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.alternativeEmail)}</div>\r\n                                    <div className={classes.value}>{personChild?.alternativeemail}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.alternativephone && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                alternativephone: personChild.alternativephone\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.alternativePhone)}</div>\r\n                                    <div className={classes.value}>{personChild?.alternativephone}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.birthday && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                birthday: personChild.birthday\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.birthday)}</div>\r\n                                    <div className={classes.value}>{personChild?.birthday}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.gender && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                gender: personChild.gender\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.gender)}</div>\r\n                                    <div className={classes.value}>{personChild?.gender}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.occupationdesc && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                occupationdesc: personChild.occupationdesc,\r\n                                                occupation: personChild.occupation,\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.occupation)}</div>\r\n                                    <div className={classes.value}>{personChild?.occupationdesc}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.civilstatusdesc && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                civilstatusdesc: personChild.civilstatusdesc,\r\n                                                civilstatus: personChild.civilstatus\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.civilStatus)}</div>\r\n                                    <div className={classes.value}>{personChild?.civilstatusdesc}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.educationleveldesc && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                educationleveldesc: personChild.educationleveldesc,\r\n                                                educationlevel: personChild.educationlevel,\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.educationLevel)}</div>\r\n                                    <div className={classes.value}>{personChild?.educationleveldesc}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.address && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                address: personChild.address\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.address)}</div>\r\n                                    <div className={classes.value}>{personChild?.address}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.healthprofessional && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                healthprofessional: personChild.healthprofessional\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.healthprofessional)}</div>\r\n                                    <div className={classes.value}>{personChild?.healthprofessional}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.referralchannel && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                referralchannel: personChild.referralchannel\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.referralchannel)}</div>\r\n                                    <div className={classes.value}>{personChild?.referralchannel}</div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <div style={{ display: \"flex\", gap: 8 }}>\r\n                                {personChild?.observation && (\r\n                                    <div>\r\n                                        <IconButton size=\"small\" onClick={() => {\r\n                                            setPersonParent({\r\n                                                ...personParent!!,\r\n                                                observation: personChild.observation\r\n                                            })\r\n                                        }}>\r\n                                            <ArrowUpwardIcon color=\"action\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                )}\r\n                                <div>\r\n                                    <div className={classes.label}>{t(langKeys.observation)}</div>\r\n                                    <div className={classes.value}>{personChild?.observation}</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </DialogZyx>\r\n    )\r\n}\r\n\r\nexport default DialogLinkPerson;"],"sourceRoot":""}