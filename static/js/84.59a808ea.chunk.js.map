{"version":3,"sources":["pages/Whitelist.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js"],"names":["useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","DetailWhitelist","data","row","edit","setViewSelected","multiData","fetchData","arrayBread","classes","useState","waitSave","setWaitSave","executeRes","useSelector","state","main","execute","dispatch","useDispatch","t","useTranslation","dataDomain","success","useForm","defaultValues","type","id","whitelistid","username","phone","documenttype","documentnumber","usergroup","operation","status","register","handleSubmit","setValue","errors","formState","React","useEffect","validate","value","length","langKeys","field_required","loading","error","errormessage","code","module","whitelist","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","onSubmit","manageConfirmation","visible","question","confirmation_save","callback","insWhitelist","style","width","display","justifyContent","breadcrumbs","name","detail","handleClick","title","newwhitelist","gap","alignItems","variant","color","startIcon","backgroundColor","onClick","back","className","save","label","onChange","valueDefault","parseInt","domainvalue","optionDesc","optionValue","Whitelist","history","useHistory","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","configuration_plural","columns","useMemo","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","getCollection","getWhitelistSel","getMultiCollection","getValuesFromDomain","resetAllMain","successful_delete","confirmation_delete","redirectFunc","view","push","paths","CONFIGURATION","titlemodule","count","mainData","download","onClickRow","ButtonsElement","disabled","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/84.59a808ea.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, useEffect, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldEdit, FieldSelect } from 'components';\r\nimport { getWhitelistSel, getValuesFromDomain, insWhitelist } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getCollection, resetAllMain, getMultiCollection, execute } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport paths from 'common/constants/paths';\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\ninterface DetailWhitelistProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void;\r\n    arrayBread: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n}));\r\n\r\nconst DetailWhitelist: React.FC<DetailWhitelistProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData,arrayBread }) => {\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n\r\n    const dataDomain = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n\r\n    const { register, handleSubmit, setValue, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            type: 'NINGUNO',\r\n            id: row ? row.whitelistid : 0,\r\n            username: row ? (row.username || '') : '',\r\n            phone: row ? (row.phone || '') : '',\r\n            documenttype: row ? (row.documenttype || '') : '',\r\n            documentnumber: row ? row.documentnumber : 0,\r\n            usergroup: row ? row.usergroup : \"\",\r\n            operation: row ? \"EDIT\" : \"INSERT\",\r\n            status: \"ACTIVO\",\r\n        }\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        register('type');\r\n        register('id');\r\n        register('username', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('documenttype', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('phone', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('documentnumber', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('usergroup', { validate: (value) => (value && value.length ) || t(langKeys.field_required) });\r\n    }, [edit, register]);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.whitelist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n    \r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(insWhitelist(data)));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread, { id: \"view-2\", name: t(langKeys.whitelist) + \" \" + t(langKeys.detail) }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.username}` : t(langKeys.newwhitelist)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center'  }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        {edit &&\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            startIcon={<SaveIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#55BD84\" }}\r\n                        >{t(langKeys.save)}\r\n                        </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldEdit\r\n                            label={t(langKeys.username)} \r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('username', value)}\r\n                            valueDefault={row ? (row.username || \"\") : \"\"}\r\n                            error={errors?.username?.message}\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.phone)} \r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('phone', value ? parseInt(value) : 0)}\r\n                            valueDefault={row ? (row.phone || \"\") : \"\"}\r\n                            type=\"number\"\r\n                            error={errors?.phone?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldSelect\r\n                            label={t(langKeys.documenttype)}                                \r\n                            className=\"col-6\"\r\n                            valueDefault={row ? (row.documenttype || \"\") : \"\"}\r\n                            onChange={(value) => setValue('documenttype', (value?value.domainvalue:\"\"))}\r\n                            error={errors?.usergroup?.message}\r\n                            data={[{domainvalue: \"DNI\"},{domainvalue: \"RUC\"}]}\r\n                            optionDesc=\"domainvalue\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                        <FieldEdit\r\n                            label={t(langKeys.documentnumber)} \r\n                            error={errors?.documentnumber?.message}\r\n                            onChange={(value) => setValue('documentnumber', value ? parseInt(value) : 0)}\r\n                            type=\"number\"\r\n                            className=\"col-6\"\r\n                            valueDefault={row ? (row.documentnumber || \"\") : \"\"}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <FieldSelect\r\n                            label={t(langKeys.usergroup)}                                \r\n                            className=\"col-6\"\r\n                            valueDefault={row ? (row.usergroup || \"\") : \"\"}\r\n                            onChange={(value) => setValue('usergroup', (value?value.domainvalue:\"\"))}\r\n                            error={errors?.usergroup?.message}\r\n                            data={dataDomain}\r\n                            optionDesc=\"domaindesc\"\r\n                            optionValue=\"domainvalue\"\r\n                        />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Whitelist: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const arrayBread = [\r\n        { id: \"view-0\", name: t(langKeys.configuration_plural) },\r\n        { id: \"view-1\", name: t(langKeys.whitelist)}\r\n    ];\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'userid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            // viewFunction={() => history.push(`/properties/${row.GroupConfigid}`)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.username),\r\n                accessor: 'username',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.documenttype),\r\n                accessor: 'documenttype',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.documentnumber),\r\n                accessor: 'documentnumber',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.phone),\r\n                accessor: 'phone',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.usergroup),\r\n                accessor: 'usergroup',\r\n                NoFilter: true\r\n            },\r\n            \r\n        ],\r\n        [t]\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getWhitelistSel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getMultiCollection([getValuesFromDomain(\"GRUPOS\"), getValuesFromDomain(\"ESTADOGENERICO\")]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.whitelist).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insWhitelist({ ...row, operation: 'DELETE', status: 'ELIMINADO', id: row.whitelistid })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n    function redirectFunc(view:string){\r\n        if(view ===\"view-0\"){\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            <div style={{width:\"100%\"}}>\r\n                <div style={{ display: 'flex',  justifyContent: 'space-between',  alignItems: 'center'}}>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={arrayBread}\r\n                            handleClick={redirectFunc}\r\n                        />\r\n                </div>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.whitelist, { count: 2 })}\r\n                    data={mainResult.mainData.data}\r\n                    download={true}\r\n                    onClickRow={handleEdit}\r\n                    ButtonsElement={() => (\r\n                        <Button\r\n                            disabled={mainResult.mainData.loading}\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => history.push(paths.CONFIGURATION)}\r\n                        >{t(langKeys.back)}</Button>\r\n                    )}\r\n                    loading={mainResult.mainData.loading}\r\n                    register={true}\r\n                    handleRegister={handleRegister}\r\n                // fetchData={fetchData}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailWhitelist\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default Whitelist;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}