{"version":3,"sources":["pages/RecoverPassword.tsx","../node_modules/@material-ui/icons/Visibility.js","../node_modules/@material-ui/icons/VisibilityOff.js","store/subscription/actions.ts"],"names":["useStyles","makeStyles","theme","titlecards","fontWeight","fontSize","color","width","textAlign","subtitlecards","containerHead","display","justifyContent","alignItems","marginBottom","boxstyles","margin","border","padding","buttonContainer","spinnerContainer","link","cursor","RecoverPassword","dispatch","useDispatch","t","useTranslation","changeResponse","useSelector","state","subscription","requestChangePassword","classes","history","useHistory","token","useParams","useState","showConfirmPassword","setShowConfirmPassword","showPassword","setShowPassword","valid","setValid","waitSave","setWaitSave","useForm","defaultValues","password","confirmpassword","register","handleSubmit","setValue","getValues","errors","formState","useEffect","validate","value","length","langKeys","field_required","same","validateSamePassword","password_different","push","paths","SIGNIN","onSubmit","data","manageConfirmation","visible","question","confirmation_save","callback","changePassword","showBackdrop","loading","error","showSnackbar","show","severity","message","msg","successful_register","style","marginTop","className","src","height","alt","recoverpasswordtitle","recoverpasswordsubtitle","label","valueDefault","type","onChange","InputProps","endAdornment","position","onClick","edge","variant","backgroundColor","save","recoverpassword_finish","window","open","continue","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","React","_default","createElement","d","recoverPassword","request","callAPI","SubscriptionService","types","failure","actionTypes","RECOVER_PASSWORD_FAILURE","RECOVER_PASSWORD","success","RECOVER_PASSWORD_SUCCESS","CHANGE_PASSWORD_FAILURE","CHANGE_PASSWORD","CHANGE_PASSWORD_SUCCESS","validateChannels","VALIDATE_CHANNELS_FAILURE","VALIDATE_CHANNELS","VALIDATE_CHANNELS_SUCCESS"],"mappings":"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","file":"static/js/68.3affe75d.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { FC, useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Button, IconButton } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'hooks';\r\nimport paths from 'common/constants/paths';\r\nimport { FieldEdit } from 'components';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { useForm } from 'react-hook-form';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport Popus from 'components/layout/Popus';\r\nimport { changePassword } from 'store/subscription/actions';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    titlecards:{\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.5em\",\r\n        color: \"#883db7\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n    },\r\n    subtitlecards:{\r\n        fontWeight: \"bold\",\r\n        fontSize: \"1.0em\",\r\n        color: \"#883db7\",\r\n        width: \"100%\",\r\n        textAlign: \"center\",\r\n    },\r\n    containerHead: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"30px\"\r\n    },\r\n    boxstyles: {\r\n        textAlign: \"justify\",\r\n        margin: \"25px 10%\",\r\n        border: \"grey 1px solid\",\r\n        padding: 25\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    spinnerContainer: {\r\n        margin: '20px auto',\r\n        color: '#883db7'\r\n    },\r\n    link: {\r\n        color: '#883db7',\r\n        cursor: 'pointer'\r\n    }\r\n}));\r\n\r\nexport const RecoverPassword: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const changeResponse = useSelector(state => state.subscription.requestChangePassword);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const { token }: any = useParams();\r\n\r\n    const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [valid, setValid] = useState<boolean>(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const { register, handleSubmit, setValue, getValues, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            password: '',\r\n            confirmpassword: '',\r\n            token: token\r\n        }\r\n    });\r\n\r\n    const validateSamePassword = (value: string): any => getValues('password') === value;\r\n\r\n    useEffect(() => {\r\n        register('password', { validate: (value: any) => (value && value.length) || t(langKeys.field_required) });\r\n        register('confirmpassword', {\r\n            validate: {\r\n                validate: (value: any) => (value && value.length) || t(langKeys.field_required),\r\n                same: (value: any) => validateSamePassword(value) || t(langKeys.password_different)\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!token) {\r\n            history.push(paths.SIGNIN);\r\n        }\r\n        else {\r\n            setValid(true);\r\n        }\r\n    }, []);\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(changePassword(data));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!changeResponse.loading && !changeResponse.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(changeResponse.msg || langKeys.successful_register) }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n                setValid(false);\r\n            } else if (changeResponse.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: t(changeResponse.msg || 'error_unexpected_error') }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n                setValid(false);\r\n            }\r\n        }\r\n    }, [changeResponse, waitSave])\r\n\r\n    switch (valid) {\r\n        case true:\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <form onSubmit={onSubmit}>\r\n                        <div style={{ width: \"100%\",marginTop:25}}>\r\n                            <div className={classes.containerHead}>\r\n                                <img src=\"/Laraigo-vertical-logo-name.svg\" style={{ height: 200}} alt=\"logo\" />\r\n                            </div>\r\n                            <div className={classes.titlecards}>{t(langKeys.recoverpasswordtitle)}</div>\r\n                            <div className={classes.subtitlecards}>{t(langKeys.recoverpasswordsubtitle)}</div>\r\n                            <Box className={classes.boxstyles}>\r\n                                    <div className=\"row-zyx\">\r\n                                        <FieldEdit\r\n                                            label={t(langKeys.password)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('password')}\r\n                                            type={showPassword ? 'text' : 'password'}\r\n                                            onChange={(value) => setValue('password', value)}\r\n                                            error={errors?.password?.message}\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={() => setShowPassword(!showPassword)}\r\n                                                            edge=\"end\"\r\n                                                        >\r\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                        <FieldEdit\r\n                                            label={t(langKeys.confirmpassword)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('confirmpassword')}\r\n                                            type={showConfirmPassword ? 'text' : 'password'}\r\n                                            onChange={(value) => setValue('confirmpassword', value)}\r\n                                            error={errors?.confirmpassword?.message}\r\n                                            InputProps={{\r\n                                                endAdornment: (\r\n                                                    <InputAdornment position=\"end\">\r\n                                                        <IconButton\r\n                                                            aria-label=\"toggle password visibility\"\r\n                                                            onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                                                            edge=\"end\"\r\n                                                        >\r\n                                                            {showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                        </IconButton>\r\n                                                    </InputAdornment>\r\n                                                ),\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className={classes.buttonContainer}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            type=\"submit\"\r\n                                            color=\"primary\"\r\n                                            style={{ backgroundColor: \"#7721AD\" }}\r\n                                        >{t(langKeys.save)}</Button>\r\n                                    </div>\r\n                            </Box>\r\n                        </div>\r\n                        <Popus />\r\n                    </form>\r\n                </div>\r\n            );\r\n\r\n        case false:\r\n            return (\r\n                <div style={{ width: '100%' }}>\r\n                    <div style={{ width: \"100%\",marginTop:25}}>\r\n                        <div className={classes.containerHead}>\r\n                            <img src=\"/Laraigo-vertical-logo-name.svg\" style={{ height: 200}} alt=\"logo\" />\r\n                        </div>\r\n                        <div className={classes.titlecards}>{t(langKeys.recoverpasswordtitle)}</div>\r\n                        <div className={classes.subtitlecards}>{t(langKeys.recoverpasswordsubtitle)}</div>\r\n                        <Box className={classes.boxstyles}>\r\n                            <p>{t(langKeys.recoverpassword_finish)}</p>\r\n                            <div className={classes.buttonContainer}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    style={{ backgroundColor: \"#7721AD\" }}\r\n                                    onClick={() => window.open(paths.SIGNIN, \"_self\")}\r\n                                >{t(langKeys.continue)}</Button>\r\n                            </div>\r\n                        </Box>\r\n                    </div>\r\n                    <Popus />\r\n                </div>\r\n            );\r\n    }\r\n};\r\n\r\nexport default RecoverPassword;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import { IActionCall } from \"@types\";\r\nimport { SubscriptionService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const recoverPassword = (request: any): IActionCall => ({\r\n    callAPI: () => SubscriptionService.recoverPassword(request),\r\n    types: {\r\n        failure: actionTypes.RECOVER_PASSWORD_FAILURE,\r\n        loading: actionTypes.RECOVER_PASSWORD,\r\n        success: actionTypes.RECOVER_PASSWORD_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetRecoverPassword = (): IActionCall => ({ type: actionTypes.RECOVER_PASSWORD_RESET });\r\n\r\nexport const changePassword = (request: any): IActionCall => ({\r\n    callAPI: () => SubscriptionService.changePassword(request),\r\n    types: {\r\n        failure: actionTypes.CHANGE_PASSWORD_FAILURE,\r\n        loading: actionTypes.CHANGE_PASSWORD,\r\n        success: actionTypes.CHANGE_PASSWORD_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetChangePassword = (): IActionCall => ({ type: actionTypes.CHANGE_PASSWORD_RESET });\r\n\r\nexport const validateChannels = (request: any): IActionCall => ({\r\n    callAPI: () => SubscriptionService.validateChannels(request),\r\n    types: {\r\n        failure: actionTypes.VALIDATE_CHANNELS_FAILURE,\r\n        loading: actionTypes.VALIDATE_CHANNELS,\r\n        success: actionTypes.VALIDATE_CHANNELS_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetValidateChannels = (): IActionCall => ({ type: actionTypes.VALIDATE_CHANNELS_RESET });"],"sourceRoot":""}