{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js","../node_modules/@material-ui/icons/esm/CompareArrows.js","pages/Organizations.tsx","../node_modules/@material-ui/icons/Clear.js","../node_modules/@material-ui/icons/Save.js","store/signup/actions.ts","../node_modules/@material-ui/icons/esm/Close.js","../node_modules/@material-ui/icons/esm/CloudUpload.js"],"names":["createSvgIcon","React","d","getImgUrl","file","URL","createObjectURL","ex","console","error","useStyles","makeStyles","theme","containerDetail","marginTop","spacing","padding","background","button","fontWeight","fontSize","textTransform","mb2","marginBottom","imgContainer","borderRadius","backgroundColor","width","height","display","alignItems","justifyContent","text","color","icon","cursor","palette","primary","main","img","notdisplay","section","DetailOrganization","data","row","edit","setViewSelected","multiData","fetchData","dataCurrency","arrayBread","countryList","useSelector","state","signup","user","login","validateToken","roledesc","classes","useState","waitSave","setWaitSave","waitSaveUpload","setWaitSaveUpload","waitTransferBalance","setWaitTransferBalance","waitGetBalance","setWaitGetBalance","waitUpdateScenario","setWaitUpdateScenario","waitGetConsumption","setWaitGetConsumption","executeRes","execute","dispatch","useDispatch","t","useTranslation","pageSelected","setPageSelected","showPassword","setShowPassword","private_mail","showCredential","setShowCredential","uploadResult","uploadFile","getBalanceResult","voximplant","requestGetAccountBalance","updateScenarioResult","requestUpdateScenario","getConsumptionResult","requestGetMaximumConsumption","transferBalanceResult","requestTransferAccountBalance","doctype","sunatcountry","setdoctype","idUpload","setIdUpload","iconupload","seticonupload","iconbot","iconadvisor","iconclient","iconsurl","seticonsurl","defaultRecharge","success","defaultRange","defaultPercentage","defaultChannel","useForm","defaultValues","corpid","description","orgdesc","status","type","id","orgid","operation","currency","email","port","password","host","ssl","default_credentials","billbyorg","docnum","businessname","fiscaladdress","contactemail","contact","autosendinvoice","automaticpayment","automaticperiod","automaticinvoice","credittype","timezone","timezoneoffset","voximplantautomaticrecharge","propertyvalue","voximplantrechargerange","parseFloat","voximplantrechargepercentage","voximplantrechargefixed","voximplantadditionalperchannel","register","handleSubmit","setValue","getValues","trigger","errors","formState","dataStatus","dataType","dataCorp","dataDocType","typeofcreditList","timezoneList","chargeAmount","setChargeAmount","rangeAmount","setRangeAmount","percentageAmount","setPercentageAmount","fixedAmount","setFixedAmount","costMaximum","setCostMaximum","costLimit","setCostLimit","balanceChild","setBalanceChild","balanceParent","setBalanceParent","checkedAutomaticRecharge","setCheckedAutomaticRecharge","chatBtn","setChatBtn","headerBtn","setHeaderBtn","botBtn","setBotBtn","useEffect","validate","value","langKeys","field_required","length","needsvalidation","dnivalidation","doctype_dni_error","cevalidation","doctype_foreigners_card","rucvalidation","doctype_ruc_error","passportvalidation","doctype_passport_error","hasvalue","isemail","test","emailverification","String","handleGetConsumption","handleGetBalance","loading","errormessage","code","module","organization_plural","toLocaleLowerCase","showSnackbar","show","severity","message","showBackdrop","successful_edit","successful_register","prev","url","resetUploadFile","msg","maximumconsumption","balancechild","balanceparent","getAccountBalance","daterange","getMaximumConsumption","handleTransferBalance","transferamount","toparent","transferAccountBalance","onSubmit","manageConfirmation","visible","question","confirmation_save","callback","insOrg","onSelectImage","files","idd","Date","toISOString","fd","FormData","append","name","chatImgUrl","headerImgUrl","botImgUrl","countries","useMemo","sort","a","b","localeCompare","docTypes","filter","x","domainvalue","domaindesc","style","breadcrumbs","organizationdetail","handleClick","title","neworganization","gap","Button","variant","startIcon","onClick","back","className","save","Tabs","indicatorColor","borderBottom","textColor","onChange","_","label","informationorganization","emailconfiguration","voximplant_organizationchanneltab","includes","corporation","valueDefault","triggerOnChangeOnFirst","disabled","optionDesc","optionValue","corpdesc","organization","uset","prefixTranslation","houroffset","map","textimezone","houroffsettext","country","docType","documentnumber","clsx","contactbilling","billingmail","typecredit","affirmative","negative","fregister","validnumber","InputProps","endAdornment","InputAdornment","position","IconButton","edge","Visibility","VisibilityOff","marginLeft","marginRight","float","Refresh","calculate","voximplant_organizationchannelrecharge","voximplant_organizationchanneladditional","inputProps","step","paddingBottom","Box","lineHeight","mb","voximplant_organizationenabledrecharge","FormControlLabel","paddingLeft","control","checked","e","target","voximplant_organizationchannelrange","voximplant_organizationchannelpercentage","voximplant_organizationchannelfixed","voximplant_organizationcostmaximum","formatNumber","voximplant_organizationcostlimit","CompareArrows","voximplant_organizationchannelcharge","voximplant_organizationchannelreturn","voximplant_organizationmanualrecharge","voximplant_organizationchannelamount","voximplant_organizationgetcredit","voximplant_organizationchannelcredit","voximplant_organizationchildcredit","voximplant_organizationfathercredit","updateScenario","voximplant_organizationupdatescenario","scenario","voximplant_organizationupdatescenarioalert","Grid","item","xs","sm","md","lg","xl","m","container","direction","Trans","i18nKey","boticon","flexDirection","flexWrap","alt","src","accept","document","getElementById","click","CloudUpload","Close","advisoricon","clienticon","Organizations","history","useHistory","ressignup","currencyList","mainResult","executeResult","viewSelected","rowSelected","setRowSelected","configuration_plural","redirectFunc","view","push","paths","CONFIGURATION","columns","accessor","NoFilter","isComponent","minWidth","Cell","props","cell","original","viewFunction","handleView","deleteFunction","handleDelete","editFunction","handleEdit","Header","toLowerCase","toUpperCase","getCollection","getOrgSel","getCurrencyList","getCountryList","getMultiCollection","getValuesFromDomain","getCorpSel","getValuesFromDomainCorp","getTimeZoneSel","getPropertySelByNameOrg","resetAllMain","successful_delete","confirmation_delete","titlemodule","count","mainData","download","ButtonsElement","onClickRow","handleRegister","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","default","_default","createElement","executeSubscription","requestBody","callAPI","ChannelsService","execSub","types","actionTypes","SIGNUP","SIGNUP_SUCCESS","failure","SIGNUP_FAILURE","executeCheckNewUser","validateNewUser","ISVALID","ISVALID_SUCCESS","ISVALID_FAILURE","verifyPlan","accessToken","vrfplan","VERIFYPLAN","VERIFYPLAN_SUCCESS","VERIFYPLAN_FAILURE","CURRENCYLIST","CURRENCYLIST_SUCCESS","CURRENCYLIST_FAILURE","COUNTRYLIST","COUNTRYLIST_SUCCESS","COUNTRYLIST_FAILURE"],"mappings":"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","file":"static/js/46.a7b7d4cd.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.01 14H2v2h7.01v3L13 15l-3.99-4v3zm5.98-1v-3H22V8h-7.01V5L11 9l3.99 4z\"\n}), 'CompareArrows');","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { FC, Fragment, useEffect, useMemo, useState } from 'react'; // we need this to make JSX compile\r\nimport { useSelector } from 'hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport { TemplateIcons, TemplateBreadcrumbs, TitleDetail, FieldView, FieldEdit, FieldSelect, AntTab, TemplateSwitch, IOSSwitch } from 'components';\r\nimport { getCorpSel, getOrgSel, getPropertySelByNameOrg, getTimeZoneSel, getValuesFromDomain, getValuesFromDomainCorp, insOrg } from 'common/helpers';\r\nimport { Dictionary } from \"@types\";\r\nimport TableZyx from '../components/fields/table-simple';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { Trans, useTranslation } from 'react-i18next';\r\nimport { langKeys } from 'lang/keys';\r\nimport { useForm } from 'react-hook-form';\r\nimport { getCollection, getMultiCollection, execute, resetAllMain, uploadFile, resetUploadFile } from 'store/main/actions';\r\nimport { showSnackbar, showBackdrop, manageConfirmation } from 'store/popus/actions';\r\nimport { getCurrencyList } from \"store/signup/actions\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { Box, Grid, IconButton, InputAdornment, Tabs, FormControlLabel } from '@material-ui/core';\r\nimport { Close, CloudUpload, Visibility, VisibilityOff, Refresh as RefreshIcon, CompareArrows } from '@material-ui/icons';\r\nimport { getCountryList } from 'store/signup/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport paths from 'common/constants/paths';\r\nimport clsx from 'clsx';\r\nimport { formatNumber } from 'common/helpers';\r\nimport { getMaximumConsumption, transferAccountBalance, getAccountBalance, updateScenario } from \"store/voximplant/actions\";\r\n\r\ninterface RowSelected {\r\n    row: Dictionary | null,\r\n    edit: boolean\r\n}\r\ninterface MultiData {\r\n    data: Dictionary[];\r\n    success: boolean;\r\n}\r\ninterface DetailOrganizationProps {\r\n    data: RowSelected;\r\n    setViewSelected: (view: string) => void;\r\n    multiData: MultiData[];\r\n    fetchData: () => void,\r\n    dataCurrency: Dictionary[];\r\n    arrayBread: any;\r\n}\r\nconst getImgUrl = (file: File | null): string | null => {\r\n    if (!file) return null;\r\n\r\n    try {\r\n        const url = URL.createObjectURL(file);\r\n        return url;\r\n    } catch (ex) {\r\n        console.error(ex);\r\n        return null;\r\n    }\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    containerDetail: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n        background: '#fff',\r\n    },\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial'\r\n    },\r\n    mb2: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    imgContainer: {\r\n        borderRadius: 20,\r\n        backgroundColor: 'white',\r\n        width: 157,\r\n        height: 90,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    text: {\r\n        fontWeight: 500,\r\n        fontSize: 16,\r\n        color: '#381052',\r\n    },\r\n    icon: {\r\n        '&:hover': {\r\n            cursor: 'pointer',\r\n            color: theme.palette.primary.main,\r\n        }\r\n    },\r\n    img: {\r\n        height: '80%',\r\n        width: 'auto',\r\n    },\r\n    notdisplay: {\r\n        display: 'none',\r\n    },\r\n    section: {\r\n        fontWeight: \"bold\"\r\n    }\r\n}));\r\n\r\nconst DetailOrganization: React.FC<DetailOrganizationProps> = ({ data: { row, edit }, setViewSelected, multiData, fetchData, dataCurrency, arrayBread }) => {\r\n    const countryList = useSelector(state => state.signup.countryList);\r\n    const user = useSelector(state => state.login.validateToken.user);\r\n    const roledesc = user?.roledesc || \"\";\r\n    const classes = useStyles();\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const [waitSaveUpload, setWaitSaveUpload] = useState(false);\r\n    const [waitTransferBalance, setWaitTransferBalance] = useState(false);\r\n    const [waitGetBalance, setWaitGetBalance] = useState(false);\r\n    const [waitUpdateScenario, setWaitUpdateScenario] = useState(false);\r\n    const [waitGetConsumption, setWaitGetConsumption] = useState(false);\r\n    const executeRes = useSelector(state => state.main.execute);\r\n    const dispatch = useDispatch();\r\n    const { t } = useTranslation();\r\n    const [pageSelected, setPageSelected] = useState(0);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showCredential, setShowCredential] = useState(row?.private_mail || false);\r\n    const uploadResult = useSelector(state => state.main.uploadFile);\r\n    const getBalanceResult = useSelector(state => state.voximplant.requestGetAccountBalance);\r\n    const updateScenarioResult = useSelector(state => state.voximplant.requestUpdateScenario);\r\n    const getConsumptionResult = useSelector(state => state.voximplant.requestGetMaximumConsumption);\r\n    const transferBalanceResult = useSelector(state => state.voximplant.requestTransferAccountBalance);\r\n    // const [valuefile, setvaluefile] = useState('')\r\n    const [doctype, setdoctype] = useState(row?.doctype || ((row?.sunatcountry) === \"PE\" ? \"1\" : \"0\"))\r\n    const [idUpload, setIdUpload] = useState('');\r\n    const [iconupload, seticonupload] = useState('');\r\n    const [iconsurl, seticonsurl] = useState({\r\n        iconbot: row?.iconbot || \"\",\r\n        iconadvisor: row?.iconadvisor || \"\",\r\n        iconclient: row?.iconclient || \"\",\r\n    });\r\n\r\n    const defaultRecharge = multiData[6] && multiData[6].success ? multiData[6]?.data : [];\r\n    const defaultRange = multiData[7] && multiData[7].success ? multiData[7]?.data : [];\r\n    const defaultPercentage = multiData[8] && multiData[8].success ? multiData[8]?.data : [];\r\n    const defaultChannel = multiData[9] && multiData[9].success ? multiData[9]?.data : [];\r\n\r\n    const { register, handleSubmit, setValue, getValues, trigger, formState: { errors } } = useForm({\r\n        defaultValues: {\r\n            corpid: row ? row.corpid : user?.corpid,\r\n            description: row ? (row.orgdesc || '') : '',\r\n            status: row ? row.status : 'ACTIVO',\r\n            type: row ? row.type : '',\r\n            id: row ? row.orgid : 0,\r\n            operation: row ? \"EDIT\" : \"INSERT\",\r\n            currency: row?.currency || \"\",\r\n            email: row?.email || \"\",\r\n            port: row?.port || 0,\r\n            password: row?.password || \"\",\r\n            host: row?.host || \"\",\r\n            ssl: row?.ssl || false,\r\n            private_mail: row?.private_mail || false,\r\n            default_credentials: row?.default_credentials || false,\r\n            billbyorg: row?.billbyorg || false,\r\n\r\n            doctype: row?.doctype || '',\r\n            docnum: row?.docnum || '',\r\n            businessname: row?.businessname || '',\r\n            fiscaladdress: row?.fiscaladdress || '',\r\n            sunatcountry: row?.sunatcountry || '',\r\n            contactemail: row?.contactemail || '',\r\n            contact: row?.contact || '',\r\n            autosendinvoice: row?.autosendinvoice || false,\r\n            automaticpayment: row?.automaticpayment || false,\r\n            automaticperiod: row?.billbyorg ? (row?.automaticperiod || false) : true,\r\n            automaticinvoice: row?.billbyorg ? (row?.automaticinvoice || false) : true,\r\n            //automaticperiod: row?.automaticperiod || false,\r\n            //automaticinvoice: row?.automaticinvoice || false,\r\n            iconbot: row?.iconbot || \"\",\r\n            iconadvisor: row?.iconadvisor || \"\",\r\n            iconclient: row?.iconclient || \"\",\r\n            credittype: row?.credittype || \"typecredit_alcontado\",\r\n            timezone: row?.timezone || \"\",\r\n            timezoneoffset: row?.timezoneoffset || \"\",\r\n            voximplantautomaticrecharge: row ? (row?.voximplantautomaticrecharge || false) : (defaultRecharge[0]?.propertyvalue === '1' ? true : false),\r\n            voximplantrechargerange: row ? (row?.voximplantrechargerange || 0) : (parseFloat(defaultRange[0]?.propertyvalue) || 0),\r\n            voximplantrechargepercentage: row ? (row?.voximplantrechargepercentage || 0.00) : (parseFloat(defaultPercentage[0]?.propertyvalue) || 0),\r\n            voximplantrechargefixed: row?.voximplantrechargefixed || 0.00,\r\n            voximplantadditionalperchannel: row ? (row?.voximplantadditionalperchannel || 0.00) : (parseFloat(defaultChannel[0]?.propertyvalue) || 0),\r\n        }\r\n    });\r\n\r\n    const dataStatus = multiData[0] && multiData[0].success ? multiData[0].data : [];\r\n    const dataType = multiData[1] && multiData[1].success ? multiData[1].data : [];\r\n    const dataCorp = multiData[2] && multiData[2].success ? multiData[2].data : [];\r\n    const dataDocType = multiData[3] && multiData[3].success ? multiData[3].data : [];\r\n    const typeofcreditList = multiData[4] && multiData[4].success ? multiData[4].data : [];\r\n    const timezoneList = multiData[5] && multiData[5].success ? multiData[5]?.data : [];\r\n\r\n    const [chargeAmount, setChargeAmount] = useState(0.00);\r\n    const [rangeAmount, setRangeAmount] = useState(row?.voximplantrechargerange || 0.00);\r\n    const [percentageAmount, setPercentageAmount] = useState(row?.voximplantrechargepercentage || 0.00);\r\n    const [fixedAmount, setFixedAmount] = useState(row?.voximplantrechargefixed || 0.00);\r\n    const [costMaximum, setCostMaximum] = useState(0.00);\r\n    const [costLimit, setCostLimit] = useState(0.00);\r\n    const [balanceChild, setBalanceChild] = useState(0.00);\r\n    const [balanceParent, setBalanceParent] = useState(0.00);\r\n    const [checkedAutomaticRecharge, setCheckedAutomaticRecharge] = useState(row ? (row?.voximplantautomaticrecharge || false) : (defaultRecharge[0]?.propertyvalue === '1' ? true : false));\r\n    const [chatBtn, setChatBtn] = useState<File | null>(getValues(\"iconbot\") as File);\r\n    const [headerBtn, setHeaderBtn] = useState<File | null>(getValues(\"iconadvisor\") as File);\r\n    const [botBtn, setBotBtn] = useState<File | null>(getValues(\"iconclient\") as File);\r\n\r\n    React.useEffect(() => {\r\n        register('corpid', { validate: (value) => (value && value > 0) || t(langKeys.field_required) });\r\n        register('description', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('type', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('status', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('currency', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('timezone', { validate: (value) => (value && value.length) || t(langKeys.field_required) });\r\n        register('doctype', { validate: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('docnum', {\r\n            validate: {\r\n                needsvalidation: (value: any) => (doctype !== \"0\") ? ((value && value.length) || t(langKeys.field_required)) : true,\r\n                dnivalidation: (value: any) => (doctype === \"1\") ? ((value && value.length === 8) || t(langKeys.doctype_dni_error)) : true,\r\n                cevalidation: (value: any) => (doctype === \"4\") ? ((value && value.length === 12) || t(langKeys.doctype_foreigners_card)) : true,\r\n                rucvalidation: (value: any) => (doctype === \"6\") ? ((value && value.length === 11) || t(langKeys.doctype_ruc_error)) : true,\r\n                passportvalidation: (value: any) => (doctype === \"7\") ? ((value && value.length === 12) || t(langKeys.doctype_passport_error)) : true,\r\n            }\r\n        });\r\n        register('businessname', { validate: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('fiscaladdress', { validate: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('contact', { validate: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('contactemail', {\r\n            validate: {\r\n                hasvalue: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true,\r\n                isemail: (value) => getValues('billbyorg') ? ((/\\S+@\\S+\\.\\S+/.test(value)) || t(langKeys.emailverification) + \"\") : true\r\n            }\r\n        });\r\n        register('sunatcountry', { validate: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('credittype', { validate: (value) => getValues('billbyorg') ? ((value && value.length) || t(langKeys.field_required)) : true });\r\n        register('host');\r\n        register('ssl');\r\n        register('private_mail');\r\n        register('automaticpayment');\r\n        register('automaticperiod');\r\n        register('automaticinvoice');\r\n        register('voximplantautomaticrecharge');\r\n        register('voximplantrechargerange', { validate: (value) => roledesc === \"SUPERADMIN\" ? (((value || String(value)) && parseFloat(String(value)) >= 0) || t(langKeys.field_required)) : true });\r\n        register('voximplantrechargepercentage', { validate: (value) => roledesc === \"SUPERADMIN\" ? (((value || String(value)) && parseFloat(String(value)) >= 0) || t(langKeys.field_required)) : true });\r\n        register('voximplantrechargefixed', { validate: (value) => ((value || String(value)) && parseFloat(String(value)) >= 0) || t(langKeys.field_required) });\r\n        register('voximplantadditionalperchannel', { validate: (value) => roledesc === \"SUPERADMIN\" ? (((value || String(value)) && parseFloat(String(value)) >= 0) || t(langKeys.field_required)) : true });\r\n    }, [edit, register, doctype, getValues, t]);\r\n\r\n    useEffect(() => {\r\n        if (row) {\r\n            if (row?.orgid && row?.voximplantrechargerange) {\r\n                handleGetConsumption(row?.orgid, row?.voximplantrechargerange, row?.timezoneoffset);\r\n                handleGetBalance(row?.orgid);\r\n            }\r\n        }\r\n    }, [row])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeRes.loading && !executeRes.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(row ? langKeys.successful_edit : langKeys.successful_register) }))\r\n                fetchData && fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setViewSelected(\"view-1\")\r\n            } else if (executeRes.error) {\r\n                const errormessage = t(executeRes.code || \"error_unexpected_error\", { module: t(langKeys.organization_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                setWaitSave(false);\r\n                dispatch(showBackdrop(false));\r\n            }\r\n        }\r\n    }, [executeRes, waitSave])\r\n\r\n    useEffect(() => {\r\n        if (waitSaveUpload) {\r\n            if (!uploadResult.loading && !uploadResult.error) {\r\n                seticonsurl((prev) => ({ ...prev, [iconupload]: uploadResult.url }))\r\n                dispatch(showBackdrop(false));\r\n                seticonupload(\"\")\r\n                setWaitSaveUpload(false);\r\n                dispatch(resetUploadFile());\r\n            } else if (uploadResult.error) {\r\n                setWaitSaveUpload(false);\r\n            }\r\n        }\r\n    }, [waitSaveUpload, uploadResult, dispatch, idUpload])\r\n\r\n    useEffect(() => {\r\n        if (waitGetConsumption) {\r\n            if (!getConsumptionResult.loading) {\r\n                if (!getConsumptionResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }))\r\n                    if (getConsumptionResult.data) {\r\n                        setCostMaximum(getConsumptionResult.data.maximumconsumption || 0);\r\n                        setCostLimit((parseFloat(fixedAmount) || 0) + ((parseFloat(getConsumptionResult.data.maximumconsumption) || 0) * ((parseFloat(percentageAmount) || 0) + 1)));\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((getConsumptionResult.msg || getConsumptionResult.message) || getConsumptionResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitGetConsumption(false);\r\n            }\r\n        }\r\n    }, [getConsumptionResult, waitGetConsumption])\r\n\r\n    useEffect(() => {\r\n        if (waitTransferBalance) {\r\n            if (!transferBalanceResult.loading) {\r\n                if (!transferBalanceResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((transferBalanceResult.msg || transferBalanceResult.message) || transferBalanceResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitTransferBalance(false);\r\n            }\r\n        }\r\n    }, [transferBalanceResult, waitTransferBalance])\r\n\r\n    useEffect(() => {\r\n        if (waitGetBalance) {\r\n            if (!getBalanceResult.loading) {\r\n                if (!getBalanceResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (getBalanceResult.data) {\r\n                        setBalanceChild(getBalanceResult.data.balancechild || 0);\r\n                        setBalanceParent(getBalanceResult.data.balanceparent || 0);\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((getBalanceResult.msg || getBalanceResult.message) || getBalanceResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitGetBalance(false);\r\n            }\r\n        }\r\n    }, [getBalanceResult, waitGetBalance])\r\n\r\n    useEffect(() => {\r\n        if (waitUpdateScenario) {\r\n            if (!updateScenarioResult.loading) {\r\n                if (!updateScenarioResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((updateScenarioResult.msg || updateScenarioResult.message) || updateScenarioResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitUpdateScenario(false);\r\n            }\r\n        }\r\n    }, [updateScenarioResult, waitUpdateScenario])\r\n\r\n    const handleUpdateScenario = () => {\r\n        dispatch(updateScenario({}));\r\n        setWaitUpdateScenario(true);\r\n        dispatch(showBackdrop(true));\r\n    }\r\n\r\n    const handleGetBalance = (orgid: any) => {\r\n        dispatch(getAccountBalance({ orgid: orgid }));\r\n        setWaitGetBalance(true);\r\n        dispatch(showBackdrop(true));\r\n    }\r\n\r\n    const handleGetConsumption = (orgid: any, daterange: any, timezoneoffset: any) => {\r\n        dispatch(getMaximumConsumption({ orgid: orgid, daterange: daterange, timezoneoffset: timezoneoffset }));\r\n        setWaitGetConsumption(true);\r\n        dispatch(showBackdrop(true));\r\n    }\r\n\r\n    const handleTransferBalance = (orgid: any, transferamount: any, toparent: boolean) => {\r\n        dispatch(transferAccountBalance({ orgid: orgid, transferamount: (toparent ? transferamount * -1 : transferamount) }));\r\n        setWaitTransferBalance(true);\r\n        dispatch(showBackdrop(true));\r\n        setChargeAmount(0.00);\r\n    }\r\n\r\n    const onSubmit = handleSubmit((data) => {\r\n        const callback = () => {\r\n            dispatch(execute(insOrg({ ...data, iconbot: iconsurl.iconbot, iconadvisor: iconsurl.iconadvisor, iconclient: iconsurl.iconclient })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true)\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_save),\r\n            callback\r\n        }))\r\n    });\r\n\r\n    const onSelectImage = (files: any, id: string) => {\r\n\r\n        dispatch(showBackdrop(true));\r\n        seticonupload(id)\r\n        const idd = new Date().toISOString()\r\n        var fd = new FormData();\r\n        fd.append('file', files, files.name);\r\n        // setvaluefile('')\r\n        setIdUpload(idd);\r\n        dispatch(uploadFile(fd));\r\n        setWaitSaveUpload(true)\r\n    }\r\n\r\n    const onChangeChatInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setChatBtn(e.target.files[0]);\r\n        setValue(\"iconbot\", e.target.files[0]);\r\n        onSelectImage(e.target.files[0], \"iconbot\")\r\n    }\r\n\r\n    const onChangeHeaderInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setHeaderBtn(e.target.files[0]);\r\n        setValue('iconadvisor', e.target.files[0]);\r\n        onSelectImage(e.target.files[0], \"iconadvisor\")\r\n    }\r\n\r\n    const onChangeBotInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n        if (!e.target.files) return;\r\n        setBotBtn(e.target.files[0]);\r\n        setValue('iconclient', e.target.files[0]);\r\n        onSelectImage(e.target.files[0], \"iconclient\")\r\n    }\r\n\r\n    const handleChatBtnClick = () => {\r\n\r\n        const input = document.getElementById('chatBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleHeaderBtnClick = () => {\r\n        const input = document.getElementById('headerBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleBotBtnClick = () => {\r\n        const input = document.getElementById('botBtnInput');\r\n        input!.click();\r\n    }\r\n\r\n    const handleCleanChatInput = () => {\r\n        if (!chatBtn) return;\r\n\r\n        seticonsurl((prev) => ({ ...prev, iconbot: \"\" }))\r\n        const input = document.getElementById('chatBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setChatBtn(null);\r\n        setValue('iconbot', null);\r\n    }\r\n\r\n    const handleCleanHeaderInput = () => {\r\n        if (!headerBtn) return;\r\n        seticonsurl((prev) => ({ ...prev, iconadvisor: \"\" }))\r\n        const input = document.getElementById('headerBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setHeaderBtn(null);\r\n        setValue('iconadvisor', null);\r\n    }\r\n\r\n    const handleCleanBotInput = () => {\r\n        if (!botBtn) return;\r\n        seticonsurl((prev) => ({ ...prev, iconclient: \"\" }))\r\n        const input = document.getElementById('botBtnInput') as HTMLInputElement;\r\n        input.value = \"\";\r\n        setBotBtn(null);\r\n        setValue('iconclient', null);\r\n    }\r\n\r\n    const chatImgUrl = getImgUrl(chatBtn);\r\n    const headerImgUrl = getImgUrl(headerBtn);\r\n    const botImgUrl = getImgUrl(botBtn);\r\n\r\n    const countries = useMemo(() => {\r\n        if (countryList.loading) return [];\r\n        return countryList.data.sort((a: Dictionary, b: Dictionary) => {\r\n            return a.description.localeCompare(b.description);\r\n        });\r\n    }, [countryList]);\r\n\r\n    const docTypes = useMemo(() => {\r\n        if (!dataDocType || dataDocType.length === 0) return [];\r\n\r\n        let val: { domaindesc: string }[];\r\n        if (getValues(\"sunatcountry\") === \"PE\") {\r\n            // FILTRAR NO DOMICILIARIO // OTROS\r\n            val = dataDocType.filter(x => x.domainvalue !== \"0\") as any[];\r\n        } else {\r\n            val = dataDocType as any[];\r\n        }\r\n\r\n        return val.sort((a, b) => {\r\n            return a.domaindesc.localeCompare(b.domaindesc);\r\n        });\r\n    }, [dataDocType, getValues(\"sunatcountry\")]);\r\n\r\n    const emailRequired = (value: string) => {\r\n        if (value.length === 0) {\r\n            return t(langKeys.field_required) as string;\r\n        } else if (!/\\S+@\\S+\\.\\S+/.test(value)) {\r\n            return t(langKeys.emailverification) as string;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <form onSubmit={onSubmit}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    <div>\r\n                        <TemplateBreadcrumbs\r\n                            breadcrumbs={[...arrayBread, { id: \"view-2\", name: t(langKeys.organizationdetail) }]}\r\n                            handleClick={setViewSelected}\r\n                        />\r\n                        <TitleDetail\r\n                            title={row ? `${row.orgdesc}` : t(langKeys.neworganization)}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => setViewSelected(\"view-1\")}\r\n                        >{t(langKeys.back)}</Button>\r\n                        {edit &&\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                type=\"submit\"\r\n                                startIcon={<SaveIcon color=\"secondary\" />}\r\n                                style={{ backgroundColor: \"#55BD84\" }}\r\n                            >{t(langKeys.save)}\r\n                            </Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <Tabs\r\n                    value={pageSelected}\r\n                    indicatorColor=\"primary\"\r\n                    variant=\"fullWidth\"\r\n                    style={{ borderBottom: '1px solid #EBEAED', backgroundColor: '#FFF', marginTop: 8 }}\r\n                    textColor=\"primary\"\r\n                    onChange={(_, value) => setPageSelected(value)}\r\n                >\r\n                    <AntTab label={t(langKeys.informationorganization)} />\r\n                    <AntTab label={t(langKeys.emailconfiguration)} />\r\n                    {roledesc === \"SUPERADMIN\" && <AntTab label={t(langKeys.voximplant_organizationchanneltab)} />}\r\n                    {false && <AntTab label={t(langKeys.chatimages)} />}\r\n                </Tabs>\r\n                {pageSelected === 0 && <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            (\r\n                                !row && ['SUPERADMIN'].includes(roledesc || \"\") ?\r\n                                    <FieldSelect\r\n                                        label={t(langKeys.corporation)}\r\n                                        className=\"col-6\"\r\n                                        valueDefault={getValues('corpid')}\r\n                                        onChange={(value) => {\r\n                                            setValue('corpid', value?.corpid);\r\n                                            setValue('billbyorg', value?.billbyorg || false);\r\n                                            trigger('billbyorg')\r\n                                        }}\r\n                                        triggerOnChangeOnFirst={true}\r\n                                        error={errors?.corpid?.message}\r\n                                        data={dataCorp}\r\n                                        disabled={!['SUPERADMIN'].includes(roledesc || \"\")}\r\n                                        optionDesc=\"description\"\r\n                                        optionValue=\"corpid\"\r\n                                    />\r\n                                    :\r\n                                    <FieldEdit\r\n                                        label={t(langKeys.corporation)}\r\n                                        className=\"col-6\"\r\n                                        valueDefault={row ? (row.corpdesc || \"\") : user?.corpdesc}\r\n                                        disabled={true}\r\n                                    />\r\n                            )\r\n                            : <FieldView\r\n                                label={t(langKeys.corporation)}\r\n                                value={user?.corpdesc}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        <FieldEdit\r\n                            label={t(langKeys.organization)}\r\n                            className=\"col-6\"\r\n                            onChange={(value) => setValue('description', value)}\r\n                            valueDefault={getValues(\"description\")}\r\n                            error={errors?.description?.message}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                uset={true}\r\n                                label={t(langKeys.type)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('type')}\r\n                                onChange={(value) => setValue('type', value.domainvalue)}\r\n                                error={errors?.type?.message}\r\n                                data={dataType}\r\n                                prefixTranslation=\"type_org_\"\r\n                                optionDesc=\"domainvalue\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.type)}\r\n                                value={row ? (row.type || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                label={t(langKeys.status)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('status')}\r\n                                onChange={(value) => setValue('status', value ? value.domainvalue : '')}\r\n                                error={errors?.status?.message}\r\n                                data={dataStatus}\r\n                                uset={true}\r\n                                prefixTranslation=\"status_\"\r\n                                optionDesc=\"domaindesc\"\r\n                                optionValue=\"domainvalue\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.status)}\r\n                                value={row ? (row.status || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <FieldSelect\r\n                                label={t(langKeys.currency)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('currency')}\r\n                                onChange={(value) => setValue('currency', value ? value.code : '')}\r\n                                error={errors?.currency?.message}\r\n                                data={dataCurrency}\r\n                                //uset={true}\r\n                                //prefixTranslation=\"status_\"\r\n                                optionDesc=\"description\"\r\n                                optionValue=\"code\"\r\n                            />\r\n                            : <FieldView\r\n                                label={t(langKeys.currency)}\r\n                                value={row ? (row.currency || \"\") : \"\"}\r\n                                className=\"col-6\"\r\n                            />}\r\n                        <FieldSelect\r\n                            label={t(langKeys.timezone)}\r\n                            className=\"col-6\"\r\n                            valueDefault={getValues('timezone')}\r\n                            onChange={(value) => { setValue('timezone', value?.description || ''); setValue('timezoneoffset', value?.houroffset || '') }}\r\n                            error={errors?.timezone?.message}\r\n                            data={timezoneList.map(x => { return { ...x, textimezone: `(${x.houroffsettext}) ${x.description}` } })}\r\n                            //uset={true}\r\n                            //prefixTranslation=\"status_\"\r\n                            optionDesc=\"textimezone\"\r\n                            optionValue=\"description\"\r\n                        />\r\n                    </div>\r\n                    {getValues('billbyorg') && (\r\n                        <>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldSelect\r\n                                    label={t(langKeys.country)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues(\"sunatcountry\")}\r\n                                    onChange={(value) => {\r\n                                        setValue(\"sunatcountry\", value?.code || \"\");\r\n\r\n                                        setValue(\"doctype\", value?.code === \"PE\" ? \"1\" : \"0\");\r\n                                        setdoctype(value?.code === \"PE\" ? \"1\" : \"0\");\r\n                                    }}\r\n                                    error={errors?.sunatcountry?.message}\r\n                                    data={countries}\r\n                                    optionDesc=\"description\"\r\n                                    optionValue=\"code\"\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.fiscaladdress)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('fiscaladdress')}\r\n                                    onChange={(value) => setValue('fiscaladdress', value)}\r\n                                    error={errors?.fiscaladdress?.message}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldSelect\r\n                                    uset={true}\r\n                                    prefixTranslation='billingfield_'\r\n                                    label={t(langKeys.docType)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={doctype}\r\n                                    disabled={getValues(\"sunatcountry\") !== \"PE\"}\r\n                                    onChange={(value) => {\r\n                                        setValue(\"doctype\", value?.domainvalue || \"\");\r\n                                        setdoctype(value?.domainvalue || \"\");\r\n                                    }}\r\n                                    error={errors?.doctype?.message}\r\n                                    data={docTypes}\r\n                                    optionDesc=\"domaindesc\"\r\n                                    optionValue=\"domainvalue\"\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.documentnumber)}\r\n                                    className={clsx(\"col-6\", {\r\n                                        // [classes.notdisplay]: doctype === \"0\",\r\n                                    })}\r\n                                    valueDefault={getValues('docnum')}\r\n                                    onChange={(value: any) => setValue('docnum', value)}\r\n                                    error={errors?.docnum?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.businessname)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('businessname')}\r\n                                    onChange={(value) => setValue('businessname', value)}\r\n                                    error={errors?.businessname?.message}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                    label={t(langKeys.contactbilling)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('contact')}\r\n                                    onChange={(value) => setValue('contact', value)}\r\n                                    error={errors?.contact?.message}\r\n                                />\r\n                                <FieldEdit\r\n                                    label={t(langKeys.billingmail)}\r\n                                    className=\"col-6\"\r\n                                    valueDefault={getValues('contactemail')}\r\n                                    onChange={(value) => setValue('contactemail', value)}\r\n                                    error={errors?.contactemail?.message}\r\n                                />\r\n                            </div>\r\n                            {roledesc === \"SUPERADMIN\" &&\r\n                                <>\r\n                                    <div className=\"row-zyx\">\r\n                                        <FieldSelect\r\n                                            label={t(langKeys.typecredit)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues(\"credittype\")}\r\n                                            onChange={(value) => { setValue(\"credittype\", value?.domainvalue || \"\"); }}\r\n                                            error={errors?.credittype?.message}\r\n                                            data={typeofcreditList}\r\n                                            uset={true}\r\n                                            optionDesc=\"domainvalue\"\r\n                                            optionValue=\"domainvalue\"\r\n                                        />\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.autosendinvoice)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('autosendinvoice')}\r\n                                            onChange={(value) => setValue('autosendinvoice', value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"row-zyx\">\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.automaticpayment)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('automaticpayment')}\r\n                                            onChange={(value) => setValue('automaticpayment', value)}\r\n                                        />\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.automaticperiod)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('automaticperiod')}\r\n                                            onChange={(value) => setValue('automaticperiod', value)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"row-zyx\">\r\n                                        <TemplateSwitch\r\n                                            label={t(langKeys.automaticinvoice)}\r\n                                            className=\"col-6\"\r\n                                            valueDefault={getValues('automaticinvoice')}\r\n                                            onChange={(value) => setValue('automaticinvoice', value)}\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </>\r\n                    )}\r\n                </div>}\r\n                {pageSelected === 1 && <div className={classes.containerDetail}>\r\n                    <div className=\"row-zyx\">\r\n                        {edit ?\r\n                            <TemplateSwitch\r\n                                label={t(langKeys.private_mail)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues(\"private_mail\")}\r\n                                onChange={(value) => { setValue('private_mail', value); setShowCredential(value) }}\r\n                            /> :\r\n                            <FieldView\r\n                                label={\"private_mail\"}\r\n                                value={row ? (row.private_mail ? t(langKeys.affirmative) : t(langKeys.negative)) : t(langKeys.negative)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        }\r\n                    </div>\r\n                    {\r\n                        showCredential &&\r\n\r\n                        <Fragment>\r\n                            <div className=\"row-zyx\">\r\n                                {edit ?\r\n                                    <FieldEdit\r\n                                        label={t(langKeys.email)} //transformar a multiselect\r\n                                        className=\"col-6\"\r\n                                        fregister={{\r\n                                            ...register(\"email\", { validate: emailRequired, value: '' })\r\n                                        }}\r\n                                        error={errors?.email?.message}\r\n                                        onChange={(value) => setValue('email', value)}\r\n                                        valueDefault={getValues(\"email\")}\r\n                                    />\r\n                                    : <FieldView\r\n                                        label={t(langKeys.email)}\r\n                                        value={row ? (row.email || \"\") : \"\"}\r\n                                        className=\"col-6\"\r\n                                    />}\r\n                                {edit ?\r\n                                    <FieldEdit\r\n                                        label={t(langKeys.port)} //transformar a multiselect\r\n                                        className=\"col-6\"\r\n                                        type=\"number\"\r\n                                        fregister={{\r\n                                            ...register(\"port\", {\r\n                                                validate: (value) => (value && value > 0) || t(langKeys.validnumber)\r\n                                            })\r\n                                        }}\r\n                                        error={errors?.port?.message}\r\n                                        onChange={(value) => setValue('port', value)}\r\n                                        valueDefault={getValues(\"port\")}\r\n                                    />\r\n                                    : <FieldView\r\n                                        label={t(langKeys.port)}\r\n                                        value={row ? (row.port || 0) : 0}\r\n                                        className=\"col-6\"\r\n                                    />}\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                {edit ?\r\n                                    <FieldEdit\r\n                                        label={t(langKeys.password)}\r\n                                        className=\"col-6\"\r\n                                        type={showPassword ? 'text' : 'password'}\r\n                                        onChange={(value) => setValue('password', value)}\r\n                                        valueDefault={getValues(\"password\")}\r\n                                        fregister={{\r\n                                            ...register(\"password\"\r\n                                                //,{ validate: (value) => (value && value.length) || t(langKeys.field_required)}\r\n                                            )\r\n                                        }}\r\n                                        error={errors?.password?.message}\r\n                                        InputProps={{\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"end\">\r\n                                                    <IconButton\r\n                                                        aria-label=\"toggle password visibility\"\r\n                                                        onClick={() => setShowPassword(!showPassword)}\r\n                                                        edge=\"end\"\r\n                                                    >\r\n                                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                    </IconButton>\r\n                                                </InputAdornment>\r\n                                            ),\r\n                                        }}\r\n                                    />\r\n                                    : \"\"}\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                {edit ?\r\n                                    <FieldEdit\r\n                                        label={t(langKeys.host)}\r\n                                        className=\"col-6\"\r\n                                        fregister={{\r\n                                            ...register(\"host\", {\r\n                                                validate: (value) => (value && value.length) || t(langKeys.field_required)\r\n                                            })\r\n                                        }}\r\n                                        error={errors?.host?.message}\r\n                                        onChange={(value: any) => setValue('host', value)}\r\n                                        valueDefault={getValues(\"host\")}\r\n                                    />\r\n                                    : <FieldView\r\n                                        label={t(langKeys.host)}\r\n                                        value={row ? (row.host || \"\") : \"\"}\r\n                                        className=\"col-6\"\r\n                                    />\r\n                                }\r\n                                {edit ?\r\n                                    <TemplateSwitch\r\n                                        label={\"SSL\"}\r\n                                        className=\"col-3\"\r\n                                        valueDefault={getValues(\"ssl\")}\r\n                                        onChange={(value) => setValue('ssl', value)}\r\n                                    /> :\r\n                                    <FieldView\r\n                                        label={\"SSL\"}\r\n                                        value={row ? (row.ssl ? t(langKeys.affirmative) : t(langKeys.negative)) : t(langKeys.negative)}\r\n                                        className=\"col-6\"\r\n                                    />\r\n                                }\r\n                                {edit ?\r\n                                    <TemplateSwitch\r\n                                        label={t(langKeys.default_credentials)}\r\n                                        className=\"col-3\"\r\n                                        valueDefault={getValues(\"default_credentials\")}\r\n                                        onChange={(value) => setValue('default_credentials', value)}\r\n                                    /> :\r\n                                    <FieldView\r\n                                        label={t(langKeys.default_credentials)}\r\n                                        value={row ? (row.default_credentials ? t(langKeys.affirmative) : t(langKeys.negative)) : t(langKeys.negative)}\r\n                                        className=\"col-6\"\r\n                                    />\r\n                                }\r\n                            </div>\r\n                        </Fragment>\r\n\r\n                    }\r\n                </div>}\r\n                {pageSelected === 2 && <>\r\n                    <div className={classes.containerDetail}>\r\n                        {row?.orgid && <div>\r\n                            <div style={{ marginLeft: \"auto\", marginRight: \"0px\", float: \"right\" }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<RefreshIcon color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                    onClick={() => handleGetConsumption(row?.orgid, (getValues('voximplantrechargerange') || 0), (getValues('timezoneoffset') || 0))}\r\n                                    disabled={((rangeAmount || 0) <= 0)}\r\n                                >{t(langKeys.calculate)}</Button>\r\n                            </div>\r\n                        </div>}\r\n                        <div className=\"row-zyx\">\r\n                            <FieldView\r\n                                className={classes.section}\r\n                                label={''}\r\n                                value={t(langKeys.voximplant_organizationchannelrecharge)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldEdit\r\n                                label={t(langKeys.voximplant_organizationchanneladditional)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('voximplantadditionalperchannel')}\r\n                                onChange={(value) => setValue('voximplantadditionalperchannel', value)}\r\n                                error={errors?.voximplantadditionalperchannel?.message}\r\n                                type=\"number\"\r\n                                inputProps={{ step: \"any\" }}\r\n                            />\r\n                            <div className={\"col-6\"} style={{ paddingBottom: '3px' }}>\r\n                                <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={2} color=\"textPrimary\">{t(langKeys.voximplant_organizationenabledrecharge)}</Box>\r\n                                <FormControlLabel\r\n                                    style={{ paddingLeft: 10 }}\r\n                                    control={<IOSSwitch checked={checkedAutomaticRecharge} onChange={(e) => { setCheckedAutomaticRecharge(e.target.checked); setValue('voximplantautomaticrecharge', e.target.checked) }} />}\r\n                                    label={\"\"}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldEdit\r\n                                label={t(langKeys.voximplant_organizationchannelrange)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('voximplantrechargerange')}\r\n                                onChange={(value) => { setValue('voximplantrechargerange', value); setRangeAmount(value || 0); }}\r\n                                error={errors?.voximplantrechargerange?.message}\r\n                                type=\"number\"\r\n                            />\r\n                            <FieldEdit\r\n                                label={t(langKeys.voximplant_organizationchannelpercentage)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('voximplantrechargepercentage')}\r\n                                onChange={(value) => { setValue('voximplantrechargepercentage', value); setPercentageAmount(value || 0); }}\r\n                                error={errors?.voximplantrechargepercentage?.message}\r\n                                type=\"number\"\r\n                                inputProps={{ step: \"any\" }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldEdit\r\n                                label={t(langKeys.voximplant_organizationchannelfixed)}\r\n                                className=\"col-6\"\r\n                                valueDefault={getValues('voximplantrechargefixed')}\r\n                                onChange={(value) => { setValue('voximplantrechargefixed', value); setFixedAmount(value || 0); }}\r\n                                error={errors?.voximplantrechargefixed?.message}\r\n                                type=\"number\"\r\n                                inputProps={{ step: \"any\" }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row-zyx\">\r\n                            <FieldView\r\n                                label={t(langKeys.voximplant_organizationcostmaximum)}\r\n                                value={formatNumber(row?.orgid ? costMaximum : 0)}\r\n                                className=\"col-6\"\r\n                            />\r\n                            <FieldView\r\n                                label={t(langKeys.voximplant_organizationcostlimit)}\r\n                                value={formatNumber(row?.orgid ? costLimit : 0)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.containerDetail}>\r\n                        {row?.orgid && <div>\r\n                            <div style={{ marginLeft: \"auto\", marginRight: \"0px\", float: \"right\" }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<CompareArrows color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#55BD84\", marginRight: \"10px\" }}\r\n                                    onClick={() => handleTransferBalance(row?.orgid, (chargeAmount || 0), false)}\r\n                                    disabled={((chargeAmount || 0) <= 0)}\r\n                                >{t(langKeys.voximplant_organizationchannelcharge)}</Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<CompareArrows color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#FB5F5F\" }}\r\n                                    onClick={() => handleTransferBalance(row?.orgid, (chargeAmount || 0), true)}\r\n                                    disabled={((chargeAmount || 0) <= 0)}\r\n                                >{t(langKeys.voximplant_organizationchannelreturn)}</Button>\r\n                            </div>\r\n                        </div>}\r\n                        {row?.orgid && <>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldView\r\n                                    className={classes.section}\r\n                                    label={''}\r\n                                    value={t(langKeys.voximplant_organizationmanualrecharge)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"row-zyx\">\r\n                                <FieldEdit\r\n                                    label={t(langKeys.voximplant_organizationchannelamount)}\r\n                                    className=\"col-12\"\r\n                                    valueDefault={chargeAmount}\r\n                                    onChange={(value) => setChargeAmount(value || 0)}\r\n                                    type=\"number\"\r\n                                    inputProps={{ step: \"any\" }}\r\n                                />\r\n                            </div>\r\n                        </>}\r\n                    </div>\r\n                    <div className={classes.containerDetail}>\r\n                        {row?.orgid && <div>\r\n                            <div style={{ marginLeft: \"auto\", marginRight: \"0px\", float: \"right\" }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<RefreshIcon color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                    onClick={() => handleGetBalance(row?.orgid)}\r\n                                >{t(langKeys.voximplant_organizationgetcredit)}</Button>\r\n                            </div>\r\n                        </div>}\r\n                        {row?.orgid && <div className=\"row-zyx\">\r\n                            <FieldView\r\n                                className={classes.section}\r\n                                label={''}\r\n                                value={t(langKeys.voximplant_organizationchannelcredit)}\r\n                            />\r\n                        </div>}\r\n                        {row?.orgid && <div className=\"row-zyx\">\r\n                            <FieldView\r\n                                label={t(langKeys.voximplant_organizationchildcredit)}\r\n                                value={formatNumber(balanceChild || 0)}\r\n                                className=\"col-6\"\r\n                            />\r\n                            <FieldView\r\n                                label={t(langKeys.voximplant_organizationfathercredit)}\r\n                                value={formatNumber(balanceParent || 0)}\r\n                                className=\"col-6\"\r\n                            />\r\n                        </div>}\r\n                    </div>\r\n                    <div className={classes.containerDetail}>\r\n                        {row?.orgid && <div>\r\n                            <div style={{ marginLeft: \"auto\", marginRight: \"0px\", float: \"right\" }}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    type=\"button\"\r\n                                    color=\"primary\"\r\n                                    startIcon={<RefreshIcon color=\"secondary\" />}\r\n                                    style={{ backgroundColor: \"#55BD84\" }}\r\n                                    onClick={() => handleUpdateScenario()}\r\n                                >{t(langKeys.voximplant_organizationupdatescenario)}</Button>\r\n                            </div>\r\n                        </div>}\r\n                        {row?.orgid && <div className=\"row-zyx\">\r\n                            <FieldView\r\n                                className={classes.section}\r\n                                label={''}\r\n                                value={t(langKeys.scenario)}\r\n                            />\r\n                        </div>}\r\n                        {row?.orgid && <div className=\"row-zyx\">\r\n                            <FieldView\r\n                                label={''}\r\n                                value={t(langKeys.voximplant_organizationupdatescenarioalert)}\r\n                                className=\"col-12\"\r\n                            />\r\n                        </div>}\r\n                    </div>\r\n                </>}\r\n                {pageSelected === 3 && <div className={classes.containerDetail}>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.boticon} />\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                        <div className={classes.imgContainer}>\r\n                                            {(chatImgUrl || iconsurl?.iconbot) && <img alt=\"chatweb\" src={chatImgUrl || iconsurl?.iconbot} className={classes.img} />}\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                            <input\r\n                                                accept=\"image/*\"\r\n                                                style={{ display: 'none' }}\r\n                                                id=\"chatBtnInput\"\r\n                                                type=\"file\"\r\n                                                onChange={onChangeChatInput}\r\n                                            />\r\n                                            <IconButton onClick={handleChatBtnClick}>\r\n                                                <CloudUpload className={classes.icon} />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={handleCleanChatInput}>\r\n                                                <Close className={classes.icon} />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.advisoricon} />\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                        <div className={classes.imgContainer}>\r\n                                            {(headerImgUrl || iconsurl?.iconadvisor) && <img alt=\"chatweb\" src={headerImgUrl || iconsurl?.iconadvisor} className={classes.img} />}\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                            <input\r\n                                                accept=\"image/*\"\r\n                                                style={{ display: 'none' }}\r\n                                                id=\"headerBtnInput\"\r\n                                                type=\"file\"\r\n                                                onChange={onChangeHeaderInput}\r\n                                            />\r\n                                            <IconButton onClick={handleHeaderBtnClick}>\r\n                                                <CloudUpload className={classes.icon} />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={handleCleanHeaderInput}>\r\n                                                <Close className={classes.icon} />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                        <Box m={1}>\r\n                            <Grid container direction=\"row\">\r\n                                <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\r\n                                    <label className={classes.text}>\r\n                                        <Trans i18nKey={langKeys.clienticon} />\r\n                                    </label>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={9} md={9} lg={9} xl={9}>\r\n                                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\r\n                                        <div className={classes.imgContainer}>\r\n                                            {(botImgUrl || iconsurl?.iconclient) && <img alt=\"chatweb\" src={botImgUrl || iconsurl.iconclient} className={classes.img} />}\r\n                                        </div>\r\n                                        <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-around', marginLeft: 12 }}>\r\n                                            <input\r\n                                                accept=\"image/*\"\r\n                                                style={{ display: 'none' }}\r\n                                                id=\"botBtnInput\"\r\n                                                type=\"file\"\r\n                                                onChange={onChangeBotInput}\r\n                                            />\r\n                                            <IconButton onClick={handleBotBtnClick}>\r\n                                                <CloudUpload className={classes.icon} />\r\n                                            </IconButton>\r\n                                            <IconButton onClick={handleCleanBotInput}>\r\n                                                <Close className={classes.icon} />\r\n                                            </IconButton>\r\n                                        </div>\r\n                                    </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </Grid>\r\n                </div>}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Organizations: FC = () => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ressignup = useSelector(state => state.signup.currencyList);\r\n    const { t } = useTranslation();\r\n    const mainResult = useSelector(state => state.main);\r\n    const executeResult = useSelector(state => state.main.execute);\r\n\r\n    const [viewSelected, setViewSelected] = useState(\"view-1\");\r\n    const [rowSelected, setRowSelected] = useState<RowSelected>({ row: null, edit: false });\r\n    const [waitSave, setWaitSave] = useState(false);\r\n    const arrayBread = [\r\n        { id: \"view-0\", name: t(langKeys.configuration_plural) },\r\n        { id: \"view-1\", name: t(langKeys.organization_plural) },\r\n    ];\r\n    function redirectFunc(view: string) {\r\n        if (view === \"view-0\") {\r\n            history.push(paths.CONFIGURATION)\r\n            return;\r\n        }\r\n        setViewSelected(view)\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                accessor: 'orgid',\r\n                NoFilter: true,\r\n                isComponent: true,\r\n                minWidth: 60,\r\n                width: '1%',\r\n                Cell: (props: any) => {\r\n                    const row = props.cell.row.original;\r\n                    return (\r\n                        <TemplateIcons\r\n                            viewFunction={() => handleView(row)}\r\n                            deleteFunction={() => handleDelete(row)}\r\n                            editFunction={() => handleEdit(row)}\r\n                        />\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.organization),\r\n                accessor: 'orgdesc',\r\n                NoFilter: true\r\n            },\r\n            {\r\n                Header: t(langKeys.type),\r\n                accessor: 'type',\r\n                prefixTranslation: 'type_org_',\r\n                NoFilter: true,\r\n                Cell: (props: any) => {\r\n                    const { type } = props.cell.row.original;\r\n                    return (t(`type_org_${type}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.status),\r\n                accessor: 'status',\r\n                NoFilter: true,\r\n                prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }\r\n            },\r\n            {\r\n                Header: t(langKeys.currency),\r\n                accessor: 'currency',\r\n                NoFilter: true,\r\n                /*prefixTranslation: 'status_',\r\n                Cell: (props: any) => {\r\n                    const { status } = props.cell.row.original;\r\n                    return (t(`status_${status}`.toLowerCase()) || \"\").toUpperCase()\r\n                }*/\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fetchData = () => dispatch(getCollection(getOrgSel(0)));\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        dispatch(getCurrencyList())\r\n        dispatch(getCountryList())\r\n        dispatch(getMultiCollection([\r\n            getValuesFromDomain(\"ESTADOGENERICO\"),\r\n            getValuesFromDomain(\"TIPOORG\"),\r\n            getCorpSel(0),\r\n            getValuesFromDomainCorp('BILLINGDOCUMENTTYPE', '_DOCUMENT', 1, 0),\r\n            getValuesFromDomain(\"TYPECREDIT\"),\r\n            getTimeZoneSel(),\r\n            getPropertySelByNameOrg(\"VOXIMPLANTAUTOMATICRECHARGE\", 0, \"_RECHARGE\"),\r\n            getPropertySelByNameOrg(\"VOXIMPLANTRECHARGERANGE\", 0, \"_RANGE\"),\r\n            getPropertySelByNameOrg(\"VOXIMPLANTRECHARGEPERCENTAGE\", 0, \"_PERCENTAGE\"),\r\n            getPropertySelByNameOrg(\"VOXIMPLANTADDITIONALPERCHANNEL\", 0, \"_CHANNEL\"),\r\n        ]));\r\n        return () => {\r\n            dispatch(resetAllMain());\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            if (!executeResult.loading && !executeResult.error) {\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_delete) }))\r\n                fetchData();\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            } else if (executeResult.error) {\r\n                const errormessage = t(executeResult.code || \"error_unexpected_error\", { module: t(langKeys.organization_plural).toLocaleLowerCase() })\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }))\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [executeResult, waitSave])\r\n\r\n    const handleRegister = () => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row: null, edit: true });\r\n    }\r\n\r\n    const handleView = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: false });\r\n    }\r\n\r\n    const handleEdit = (row: Dictionary) => {\r\n        setViewSelected(\"view-2\");\r\n        setRowSelected({ row, edit: true });\r\n    }\r\n\r\n    const handleDelete = (row: Dictionary) => {\r\n        const callback = () => {\r\n            dispatch(execute(insOrg({ ...row, description: row.orgdesc, type: row.type, operation: 'DELETE', status: 'ELIMINADO', id: row.orgid, currency: row.currency })));\r\n            dispatch(showBackdrop(true));\r\n            setWaitSave(true);\r\n        }\r\n\r\n        dispatch(manageConfirmation({\r\n            visible: true,\r\n            question: t(langKeys.confirmation_delete),\r\n            callback\r\n        }))\r\n    }\r\n\r\n    if (viewSelected === \"view-1\") {\r\n\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                    <TemplateBreadcrumbs\r\n                        breadcrumbs={arrayBread}\r\n                        handleClick={redirectFunc}\r\n                    />\r\n                </div>\r\n                <TableZyx\r\n                    columns={columns}\r\n                    titlemodule={t(langKeys.organization_plural, { count: 2 })}\r\n                    data={mainResult.mainData.data}\r\n                    download={true}\r\n                    ButtonsElement={() => (\r\n                        <Button\r\n                            disabled={mainResult.mainData.loading}\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            color=\"primary\"\r\n                            startIcon={<ClearIcon color=\"secondary\" />}\r\n                            style={{ backgroundColor: \"#FB5F5F\" }}\r\n                            onClick={() => history.push(paths.CONFIGURATION)}\r\n                        >{t(langKeys.back)}</Button>\r\n                    )}\r\n                    onClickRow={handleEdit}\r\n                    loading={mainResult.mainData.loading}\r\n                    register={true}\r\n                    handleRegister={handleRegister}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    else if (viewSelected === \"view-2\") {\r\n        return (\r\n            <DetailOrganization\r\n                data={rowSelected}\r\n                setViewSelected={redirectFunc}\r\n                multiData={mainResult.multiData.data}\r\n                fetchData={fetchData}\r\n                dataCurrency={ressignup.data}\r\n                arrayBread={arrayBread}\r\n            />\r\n        )\r\n    } else\r\n        return null;\r\n\r\n}\r\n\r\nexport default Organizations;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;","import { IActionCall, IRequestBody } from \"@types\";\r\nimport { ChannelsService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.PAGELIST,\r\n        success: actionTypes.PAGELIST_SUCCESS,\r\n        failure: actionTypes.PAGELIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeSubscription = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.execSub(requestBody),\r\n    types: {\r\n        loading: actionTypes.SIGNUP,\r\n        success: actionTypes.SIGNUP_SUCCESS,\r\n        failure: actionTypes.SIGNUP_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const validatechannels = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.valChannels(requestBody),\r\n    types: {\r\n        loading: actionTypes.VALCHANNELS,\r\n        success: actionTypes.VALCHANNELS_SUCCESS,\r\n        failure: actionTypes.VALCHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const executeCheckNewUser = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.validateNewUser(requestBody),\r\n    types: {\r\n        loading: actionTypes.ISVALID,\r\n        success: actionTypes.ISVALID_SUCCESS,\r\n        failure: actionTypes.ISVALID_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const verifyPlan = (accessToken: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.vrfplan(accessToken),\r\n    types: {\r\n        loading: actionTypes.VERIFYPLAN,\r\n        success: actionTypes.VERIFYPLAN_SUCCESS,\r\n        failure: actionTypes.VERIFYPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsListSub = (): IActionCall => ({type: actionTypes.PAGELIST_RESET});\r\n\r\nexport const getCurrencyList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCurrencyList(),\r\n    types: {\r\n        loading: actionTypes.CURRENCYLIST,\r\n        success: actionTypes.CURRENCYLIST_SUCCESS,\r\n        failure: actionTypes.CURRENCYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getCountryList = (): IActionCall => ({\r\n    callAPI: () => ChannelsService.getCountryList(),\r\n    types: {\r\n        loading: actionTypes.COUNTRYLIST,\r\n        success: actionTypes.COUNTRYLIST_SUCCESS,\r\n        failure: actionTypes.COUNTRYLIST_FAILURE,\r\n    },\r\n    type: null,\r\n});","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');"],"sourceRoot":""}