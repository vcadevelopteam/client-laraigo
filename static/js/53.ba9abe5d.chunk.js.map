{"version":3,"sources":["../node_modules/@material-ui/icons/Book.js","pages/channels/ChannelAddBlogger.tsx","store/channel/actions.ts","../node_modules/@react-oauth/google/dist/index.esm.js","store/google/actions.ts","pages/channels/GoogleLogInFrame.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","useChannelAddStyles","makeStyles","theme","button","padding","fontWeight","fontSize","textTransform","width","buttonGoogle","justifyContent","ChannelAddBlogger","dispatch","useDispatch","t","useTranslation","classes","exchangeCodeResult","useSelector","state","google","requestExchangeCode","executeResult","channel","successinsert","history","useHistory","listBloggerResult","requestListBlogger","location","useLocation","mainResult","channelList","whatsAppData","useState","channellist","setChannellist","channelreg","setChannelreg","coloricon","setcoloricon","fields","setFields","nextbutton","setNextbutton","setins","setsetins","viewSelected","setViewSelected","waitExchange","setWaitExchange","waitList","setWaitList","waitSave","setWaitSave","a","insertChannel","useEffect","loading","error","showSnackbar","show","severity","message","msg","code","langKeys","success","data","partialFields","service","accesstoken","access_token","idtoken","id_token","refreshtoken","refresh_token","scope","tokentype","token_type","listBlogger","showBackdrop","items","successful_register","push","paths","CHANNELS","errormessage","module","property","toLocaleLowerCase","style","color","href","onClick","e","preventDefault","CHANNELS_ADD","previoustext","textAlign","channel_bloggertitle","channel_bloggeralert1","channel_bloggeralert2","display","alignContent","alignItems","clientId","apiUrls","GOOGLECLIENTID_CHANNEL","paddingTop","fontStyle","connectface4","paddingBottom","cursor","window","open","rel","privacypoliciestitle","className","onChange","partialf","id","setchannelField","label","selectchannellink","valueDefault","optionDesc","optionValue","paddingLeft","variant","disabled","next","marginLeft","marginRight","maxWidth","commchannelfinishreg","parameters","description","setnameField","givechannelname","lineHeight","mb","givechannelcolor","fill","height","hex","prev","finishreg","getChannelsList","accessToken","appId","callAPI","ChannelsService","getPagelist","types","actionTypes","CHANNELS_SUCCESS","failure","CHANNELS_FAILURE","type","requestBody","insertchnl","CHANNELS_INSERTSUCCESS","activateChannel","ACTIVATECHANNEL","ACTIVATECHANNEL_SUCCESS","ACTIVATECHANNEL_FAILURE","deleteChannel","deletechnl","checkPaymentPlan","CHECK_PAYMENTPLAN","CHECK_PAYMENTPLAN_SUCCESS","CHECK_PAYMENTPLAN_FAILURE","insertChannel2","payload","chatIconFile","interface","iconbutton","headerIconFile","iconheader","botIconFile","iconbot","bubbleIconFile","bubble","iconbubble","chatIcon","headerIcon","botIcon","bubbleIcon","fd","FormData","append","name","CommonService","uploadFile","INSERT_CHANNEL","INSERT_CHANNEL_FAILURE","INSERT_CHANNEL_SUCCESS","resetInsertChannel","INSERT_CHANNEL_RESET","editChannel","channelType","editchnl","main","EDIT_CHANNEL","EDIT_CHANNEL_FAILURE","EDIT_CHANNEL_SUCCESS","resetEditChannel","EDIT_CHANNEL_RESET","getFacebookPages","getPagelistSub","FACEBOOK_PAGES","FACEBOOK_PAGES_SUCCESS","FACEBOOK_PAGES_FAILURE","resetGetFacebookPages","FACEBOOK_PAGES_RESET","getMessengerPages","MESSENGER_PAGES","MESSENGER_PAGES_SUCCESS","MESSENGER_PAGES_FAILURE","resetGetMessengerPages","MESSENGER_PAGES_RESET","getInstagramPages","INSTAGRAM_PAGES","INSTAGRAM_PAGES_SUCCESS","INSTAGRAM_PAGES_FAILURE","resetGetInstagramPages","INSTAGRAM_PAGES_RESET","getInstagramDMPages","INSTAGRAMDM_PAGES","INSTAGRAMDM_PAGES_SUCCESS","INSTAGRAMDM_PAGES_FAILURE","resetGetInstagramDMPages","INSTAGRAMDM_PAGES_RESET","synchronizeTemplate","request","SYNCHRONIZE_TEMPLATE_FAILURE","SYNCHRONIZE_TEMPLATE","SYNCHRONIZE_TEMPLATE_SUCCESS","addTemplate","ADD_TEMPLATE_FAILURE","ADD_TEMPLATE","ADD_TEMPLATE_SUCCESS","deleteTemplate","DELETE_TEMPLATE_FAILURE","DELETE_TEMPLATE","DELETE_TEMPLATE_SUCCESS","getPhoneList","PHONE_LIST","PHONE_LIST_SUCCESS","PHONE_LIST_FAILURE","GoogleOAuthContext","createContext","GoogleOAuthProvider","onScriptLoadSuccess","onScriptLoadError","children","scriptLoadedSuccessfully","options","setScriptLoadedSuccessfully","onScriptLoadSuccessRef","useRef","current","onScriptLoadErrorRef","scriptTag","document","src","async","defer","onload","_a","call","onerror","body","appendChild","removeChild","useLoadGsiScript","contextValue","useMemo","Provider","useGoogleOAuth","context","useContext","Error","useGoogleLogin","flow","onSuccess","onError","props","clientRef","onSuccessRef","onErrorRef","clientMethod","client","accounts","oauth2","client_id","callback","response","_b","loginImplicitFlow","useCallback","overrideConfig","requestAccessToken","loginAuthCodeFlow","requestCode","exchangeCode","GoogleService","EXCHANGE_CODE","EXCHANGE_CODE_SUCCESS","EXCHANGE_CODE_FAILURE","LIST_BLOGGER","LIST_BLOGGER_SUCCESS","LIST_BLOGGER_FAILURE","listYouTube","LIST_YOUTUBE","LIST_YOUTUBE_SUCCESS","LIST_YOUTUBE_FAILURE","useStyles","GoogleLogInFrame","login","tokenResponse","onGoogleLoginSucess","onGoogleLoginFailure","event","googlecode","console","log","JSON","stringify","login_with_google"],"mappings":"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","file":"static/js/53.ba9abe5d.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 2H6c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM6 4h5v8l-2.5-1.5L6 12V4z\"\n}), 'Book');\n\nexports.default = _default;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-useless-escape */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport Link from '@material-ui/core/Link';\r\nimport paths from \"common/constants/paths\";\r\nimport BookIcon from '@material-ui/icons/Book';\r\n\r\nimport { apiUrls } from 'common/constants';\r\nimport { Breadcrumbs, Box, Button, makeStyles } from '@material-ui/core';\r\nimport { ColorInput, FieldEdit, FieldSelect } from \"components\";\r\nimport { listBlogger } from \"store/google/actions\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { insertChannel } from \"store/channel/actions\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { showBackdrop, showSnackbar } from 'store/popus/actions';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { useSelector } from \"hooks\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { GoogleOAuthProvider } from '@react-oauth/google';\r\nimport GoogleLogInFrame from './GoogleLogInFrame';\r\n\r\ninterface whatsAppData {\r\n    typeWhatsApp?: string;\r\n    row?: any;\r\n}\r\n\r\nconst useChannelAddStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n    buttonGoogle: {\r\n        \"& button\": {\r\n            width: \"200px\",\r\n            justifyContent: \"center\",\r\n        }\r\n    },\r\n}));\r\n\r\nexport const ChannelAddBlogger: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { t } = useTranslation();\r\n\r\n    const classes = useChannelAddStyles();\r\n    const exchangeCodeResult = useSelector(state => state.google.requestExchangeCode);\r\n    const executeResult = useSelector(state => state.channel.successinsert);\r\n    const history = useHistory();\r\n    const listBloggerResult = useSelector(state => state.google.requestListBlogger);\r\n    const location = useLocation<whatsAppData>();\r\n    const mainResult = useSelector(state => state.channel.channelList);\r\n    const whatsAppData = location.state as whatsAppData | null;\r\n\r\n    const [channellist, setChannellist] = useState([]);\r\n    const [channelreg, setChannelreg] = useState(true);\r\n    const [coloricon, setcoloricon] = useState(\"#F06A35\");\r\n    const [fields, setFields] = useState({\r\n        \"method\": \"UFN_COMMUNICATIONCHANNEL_INS\",\r\n        \"parameters\": {\r\n            \"id\": 0,\r\n            \"description\": \"\",\r\n            \"type\": \"\",\r\n            \"communicationchannelsite\": \"\",\r\n            \"communicationchannelowner\": \"\",\r\n            \"chatflowenabled\": true,\r\n            \"integrationid\": \"\",\r\n            \"color\": \"\",\r\n            \"icons\": \"\",\r\n            \"other\": \"\",\r\n            \"form\": \"\",\r\n            \"apikey\": \"\",\r\n            \"coloricon\": \"#F06A35\",\r\n            \"voximplantcallsupervision\": false\r\n        },\r\n        \"type\": \"BLOGGER\",\r\n        \"service\": {\r\n            \"accesstoken\": \"\",\r\n            \"refreshtoken\": \"\",\r\n            \"scope\": \"\",\r\n            \"tokentype\": \"\",\r\n            \"idtoken\": \"\",\r\n            \"channel\": \"\",\r\n        }\r\n    })\r\n    const [nextbutton, setNextbutton] = useState(true);\r\n    const [setins, setsetins] = useState(false);\r\n    const [viewSelected, setViewSelected] = useState(\"view1\");\r\n    const [waitExchange, setWaitExchange] = useState(false);\r\n    const [waitList, setWaitList] = useState(false);\r\n    const [waitSave, setWaitSave] = useState(false);\r\n\r\n    const openprivacypolicies = () => {\r\n        window.open(\"/privacy\", \"_blank\");\r\n    }\r\n\r\n    async function finishreg() {\r\n        setsetins(true);\r\n        dispatch(insertChannel(fields));\r\n        setWaitSave(true);\r\n        setViewSelected(\"main\");\r\n    }\r\n\r\n    function setnameField(value: any) {\r\n        setChannelreg(value === \"\");\r\n        let partialf = fields;\r\n        partialf.parameters.description = value;\r\n        setFields(partialf);\r\n    }\r\n\r\n    function setchannelField(value: any) {\r\n        setNextbutton(value === null);\r\n        let partialf = fields;\r\n        partialf.service.channel = value?.id || \"\";\r\n        setFields(partialf);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (waitExchange) {\r\n            if (!exchangeCodeResult.loading) {\r\n                if (!exchangeCodeResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (exchangeCodeResult.data) {\r\n                        let partialFields = fields;\r\n                        partialFields.service.accesstoken = exchangeCodeResult.data.access_token;\r\n                        partialFields.service.idtoken = exchangeCodeResult.data.id_token;\r\n                        partialFields.service.refreshtoken = exchangeCodeResult.data.refresh_token;\r\n                        partialFields.service.scope = exchangeCodeResult.data.scope;\r\n                        partialFields.service.tokentype = exchangeCodeResult.data.token_type;\r\n                        setFields(partialFields);\r\n\r\n                        setViewSelected(\"view2\");\r\n                        setChannellist([]);\r\n\r\n                        dispatch(listBlogger({ accesstoken: exchangeCodeResult.data.access_token }));\r\n                        dispatch(showBackdrop(true));\r\n                        setWaitList(true);\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((exchangeCodeResult.msg || exchangeCodeResult.message) || exchangeCodeResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitExchange(false);\r\n            }\r\n        }\r\n    }, [exchangeCodeResult, waitExchange])\r\n\r\n    useEffect(() => {\r\n        if (waitList) {\r\n            if (!listBloggerResult.loading) {\r\n                if (!listBloggerResult.error) {\r\n                    dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.success) }));\r\n                    if (listBloggerResult.data) {\r\n                        if (listBloggerResult.data.items) {\r\n                            setChannellist(listBloggerResult.data.items);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    dispatch(showSnackbar({ show: true, severity: \"error\", message: t(((listBloggerResult.msg || listBloggerResult.message) || listBloggerResult.code) || 'error_unexpected_error') }));\r\n                }\r\n                dispatch(showBackdrop(false));\r\n                setWaitList(false);\r\n            }\r\n        }\r\n    }, [listBloggerResult, waitList])\r\n\r\n    useEffect(() => {\r\n        if (!mainResult.loading && setins) {\r\n            if (executeResult) {\r\n                setsetins(false);\r\n                dispatch(showSnackbar({ show: true, severity: \"success\", message: t(langKeys.successful_register) }));\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n                history.push(paths.CHANNELS);\r\n            } else if (!executeResult) {\r\n                const errormessage = t(mainResult.code || \"error_unexpected_error\", { module: t(langKeys.property).toLocaleLowerCase() });\r\n                dispatch(showSnackbar({ show: true, severity: \"error\", message: errormessage }));\r\n                dispatch(showBackdrop(false));\r\n                setWaitSave(false);\r\n            }\r\n        }\r\n    }, [mainResult])\r\n\r\n    useEffect(() => {\r\n        if (waitSave) {\r\n            dispatch(showBackdrop(false));\r\n            setWaitSave(false);\r\n        }\r\n    }, [mainResult])\r\n\r\n    if (viewSelected === \"view1\") {\r\n        return (\r\n            <>\r\n                <div style={{ width: '100%' }}>\r\n                    <Breadcrumbs aria-label=\"breadcrumb\">\r\n                        <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); history.push(paths.CHANNELS_ADD, whatsAppData) }}>\r\n                            {t(langKeys.previoustext)}\r\n                        </Link>\r\n                    </Breadcrumbs>\r\n                    <div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_bloggertitle)}</div>\r\n                        <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"1.1em\", padding: \"20px\" }}>{t(langKeys.channel_bloggeralert1)}</div>\r\n                        <div style={{ textAlign: \"center\", padding: \"20px\", color: \"#969ea5\" }}>{t(langKeys.channel_bloggeralert2)}</div>\r\n                        <div style={{ display: \"flex\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                            <GoogleOAuthProvider clientId={apiUrls.GOOGLECLIENTID_CHANNEL}>\r\n                                <GoogleLogInFrame\r\n                                    setWaitExchange={setWaitExchange}\r\n                                />\r\n                            </GoogleOAuthProvider>\r\n                        </div>\r\n                        <div style={{ textAlign: \"center\", paddingTop: \"20px\", color: \"#969ea5\", fontStyle: \"italic\" }}>{t(langKeys.connectface4)}</div>\r\n                        <div style={{ textAlign: \"center\", paddingBottom: \"80px\", color: \"#969ea5\" }}><a style={{ fontWeight: \"bold\", color: \"#6F1FA1\", cursor: \"pointer\" }} onClick={openprivacypolicies} rel=\"noopener noreferrer\">{t(langKeys.privacypoliciestitle)}</a></div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    } else if (viewSelected === \"view2\") {\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setViewSelected(\"view1\") }}>\r\n                        {t(langKeys.previoustext)}\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\" }}>{t(langKeys.channel_bloggertitle)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldSelect\r\n                            onChange={(value) => setchannelField(value)}\r\n                            label={t(langKeys.selectchannellink)}\r\n                            className=\"col-6\"\r\n                            valueDefault={fields.service.channel}\r\n                            data={channellist}\r\n                            optionDesc=\"name\"\r\n                            optionValue=\"id\"\r\n                        />\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={() => { setViewSelected(\"viewfinishreg\") }}\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            disabled={nextbutton}\r\n                        >{t(langKeys.next)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{ width: '100%' }}>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link color=\"textSecondary\" key={\"mainview\"} href=\"/\" onClick={(e) => { e.preventDefault(); setViewSelected(\"view2\") }}>\r\n                        {t(langKeys.previoustext)}\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <div>\r\n                    <div style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: \"2em\", color: \"#7721ad\", padding: \"20px\", marginLeft: \"auto\", marginRight: \"auto\", maxWidth: \"800px\" }}>{t(langKeys.commchannelfinishreg)}</div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <FieldEdit\r\n                            onChange={(value) => setnameField(value)}\r\n                            label={t(langKeys.givechannelname)}\r\n                            className=\"col-6\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"row-zyx\">\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"col-6\">\r\n                            <Box fontWeight={500} lineHeight=\"18px\" fontSize={14} mb={1} color=\"textPrimary\">\r\n                                {t(langKeys.givechannelcolor)}\r\n                            </Box>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n                                <BookIcon style={{ fill: `${coloricon}`, width: \"100px\", height: \"100px\" }} />\r\n                                <ColorInput\r\n                                    hex={fields.parameters.coloricon}\r\n                                    onChange={e => {\r\n                                        setFields(prev => ({\r\n                                            ...prev,\r\n                                            parameters: { ...prev.parameters, coloricon: e.hex, color: e.hex },\r\n                                        }));\r\n                                        setcoloricon(e.hex)\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{ paddingLeft: \"80%\" }}>\r\n                        <Button\r\n                            onClick={() => { finishreg() }}\r\n                            className={classes.button}\r\n                            disabled={channelreg || mainResult.loading}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >{t(langKeys.finishreg)}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChannelAddBlogger","import { IActionCall, IChannel, IChatWebAdd, IRequestBody } from \"@types\";\r\nimport { ChannelsService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const getChannelsList = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelist(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const getChannelsListSub = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_SUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const insertChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.insertchnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const activateChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.activateChannel(requestBody),\r\n    types: {\r\n        loading: actionTypes.ACTIVATECHANNEL,\r\n        success: actionTypes.ACTIVATECHANNEL_SUCCESS,\r\n        failure: actionTypes.ACTIVATECHANNEL_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const deleteChannel = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.deletechnl(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHANNELS,\r\n        success: actionTypes.CHANNELS_INSERTSUCCESS,\r\n        failure: actionTypes.CHANNELS_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const checkPaymentPlan = (requestBody: IRequestBody): IActionCall => ({\r\n    callAPI: () => ChannelsService.checkPaymentPlan(requestBody),\r\n    types: {\r\n        loading: actionTypes.CHECK_PAYMENTPLAN,\r\n        success: actionTypes.CHECK_PAYMENTPLAN_SUCCESS,\r\n        failure: actionTypes.CHECK_PAYMENTPLAN_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetChannelsList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetGetChannelsSubList = (): IActionCall => ({ type: actionTypes.CHANNELS_RESET });\r\n\r\nexport const resetChannelInsert = (): IActionCall => ({ type: actionTypes.CHANNELS_INSERTSUCCESS_RESET });\r\n\r\nexport const insertChannel2 = (payload: IRequestBody<IChatWebAdd>): IActionCall => ({\r\n    callAPI: async () => {\r\n        const chatIconFile = payload.service!.interface.iconbutton as File | null;\r\n        const headerIconFile = payload.service!.interface.iconheader as File | null;\r\n        const botIconFile = payload.service!.interface.iconbot as File | null;\r\n        const bubbleIconFile = payload.service!.bubble.iconbubble as File | null;\r\n\r\n        let chatIcon = \"\";\r\n        let headerIcon = \"\";\r\n        let botIcon = \"\";\r\n        let bubbleIcon = \"\";\r\n\r\n        if (chatIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', chatIconFile, chatIconFile.name);\r\n            chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (headerIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', headerIconFile, headerIconFile.name);\r\n            headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (botIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', botIconFile, botIconFile.name);\r\n            botIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        if (bubbleIconFile) {\r\n            const fd = new FormData();\r\n            fd.append('file', bubbleIconFile, bubbleIconFile.name);\r\n            bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"];\r\n        }\r\n\r\n        payload.service!.interface.iconbutton = chatIcon;\r\n        payload.service!.interface.iconheader = headerIcon;\r\n        payload.service!.interface.iconbot = botIcon;\r\n        payload.service!.bubble.iconbubble = bubbleIcon;\r\n\r\n        return ChannelsService.insertchnl(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.INSERT_CHANNEL,\r\n        failure: actionTypes.INSERT_CHANNEL_FAILURE,\r\n        success: actionTypes.INSERT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetInsertChannel = () => ({ type: actionTypes.INSERT_CHANNEL_RESET });\r\n\r\nexport const editChannel = (payload: IRequestBody<IChannel | IChatWebAdd>, channelType?: string): IActionCall => ({\r\n    callAPI: async () => {\r\n        if (channelType === \"CHAZ\" || channelType === \"SMOOCHANDROID\") {\r\n            const service = payload.service as IChatWebAdd;\r\n            let chatIcon = service.interface.iconbutton as File | string | null;\r\n            let headerIcon = service.interface.iconheader as File | string | null;\r\n            let botIcon = service.interface.iconbot as File | string | null;\r\n            let bubbleIcon = service.bubble.iconbubble as File | string | null;\r\n\r\n            if (chatIcon && typeof chatIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', chatIcon, chatIcon.name);\r\n                chatIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (headerIcon && typeof headerIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', headerIcon, headerIcon.name);\r\n                headerIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (botIcon && typeof botIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', botIcon, botIcon.name);\r\n                botIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            if (bubbleIcon && typeof bubbleIcon === \"object\") {\r\n                const fd = new FormData();\r\n                fd.append('file', bubbleIcon, bubbleIcon.name);\r\n                bubbleIcon = (await CommonService.uploadFile(fd)).data[\"url\"] as string;\r\n            }\r\n\r\n            (payload.service as IChatWebAdd).interface.iconbutton = chatIcon;\r\n            (payload.service as IChatWebAdd).interface.iconheader = headerIcon;\r\n            (payload.service as IChatWebAdd).interface.iconbot = botIcon;\r\n            (payload.service as IChatWebAdd).bubble.iconbubble = bubbleIcon;\r\n\r\n            return ChannelsService.editchnl(payload);\r\n        }\r\n        return CommonService.main(payload);\r\n    },\r\n    types: {\r\n        loading: actionTypes.EDIT_CHANNEL,\r\n        failure: actionTypes.EDIT_CHANNEL_FAILURE,\r\n        success: actionTypes.EDIT_CHANNEL_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetEditChannel = () => ({ type: actionTypes.EDIT_CHANNEL_RESET });\r\n\r\nexport const getFacebookPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.FACEBOOK_PAGES,\r\n        success: actionTypes.FACEBOOK_PAGES_SUCCESS,\r\n        failure: actionTypes.FACEBOOK_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetFacebookPages = () => ({ type: actionTypes.FACEBOOK_PAGES_RESET });\r\n\r\nexport const getMessengerPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.MESSENGER_PAGES,\r\n        success: actionTypes.MESSENGER_PAGES_SUCCESS,\r\n        failure: actionTypes.MESSENGER_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetMessengerPages = () => ({ type: actionTypes.MESSENGER_PAGES_RESET });\r\n\r\nexport const getInstagramPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAM_PAGES,\r\n        success: actionTypes.INSTAGRAM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramPages = () => ({ type: actionTypes.INSTAGRAM_PAGES_RESET });\r\n\r\nexport const getInstagramDMPages = (accessToken: String, appId: String): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPagelistSub(accessToken, appId),\r\n    types: {\r\n        loading: actionTypes.INSTAGRAMDM_PAGES,\r\n        success: actionTypes.INSTAGRAMDM_PAGES_SUCCESS,\r\n        failure: actionTypes.INSTAGRAMDM_PAGES_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetInstagramDMPages = () => ({ type: actionTypes.INSTAGRAMDM_PAGES_RESET });\r\n\r\nexport const synchronizeTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.synchronizeTemplate(request),\r\n    types: {\r\n        failure: actionTypes.SYNCHRONIZE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.SYNCHRONIZE_TEMPLATE,\r\n        success: actionTypes.SYNCHRONIZE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSynchronizeTemplate = (): IActionCall => ({ type: actionTypes.SYNCHRONIZE_TEMPLATE_RESET });\r\n\r\nexport const addTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.addTemplate(request),\r\n    types: {\r\n        failure: actionTypes.ADD_TEMPLATE_FAILURE,\r\n        loading: actionTypes.ADD_TEMPLATE,\r\n        success: actionTypes.ADD_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetAddTemplate = (): IActionCall => ({ type: actionTypes.ADD_TEMPLATE_RESET });\r\n\r\nexport const deleteTemplate = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.deleteTemplate(request),\r\n    types: {\r\n        failure: actionTypes.DELETE_TEMPLATE_FAILURE,\r\n        loading: actionTypes.DELETE_TEMPLATE,\r\n        success: actionTypes.DELETE_TEMPLATE_SUCCESS,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteTemplate = (): IActionCall => ({ type: actionTypes.DELETE_TEMPLATE_RESET });\r\n\r\nexport const getPhoneList = (request: any): IActionCall => ({\r\n    callAPI: () => ChannelsService.getPhoneList(request),\r\n    types: {\r\n        loading: actionTypes.PHONE_LIST,\r\n        success: actionTypes.PHONE_LIST_SUCCESS,\r\n        failure: actionTypes.PHONE_LIST_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetPhoneList = (): IActionCall => ({ type: actionTypes.PHONE_LIST_RESET });","import React, { useState, useRef, useEffect, createContext, useMemo, useContext, useCallback } from 'react';\n\nfunction useLoadGsiScript(options = {}) {\r\n    const { onScriptLoadSuccess, onScriptLoadError } = options;\r\n    const [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = useState(false);\r\n    const onScriptLoadSuccessRef = useRef(onScriptLoadSuccess);\r\n    onScriptLoadSuccessRef.current = onScriptLoadSuccess;\r\n    const onScriptLoadErrorRef = useRef(onScriptLoadError);\r\n    onScriptLoadErrorRef.current = onScriptLoadError;\r\n    useEffect(() => {\r\n        const scriptTag = document.createElement('script');\r\n        scriptTag.src = 'https://accounts.google.com/gsi/client';\r\n        scriptTag.async = true;\r\n        scriptTag.defer = true;\r\n        scriptTag.onload = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(true);\r\n            (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadSuccessRef);\r\n        };\r\n        scriptTag.onerror = () => {\r\n            var _a;\r\n            setScriptLoadedSuccessfully(false);\r\n            (_a = onScriptLoadErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onScriptLoadErrorRef);\r\n        };\r\n        document.body.appendChild(scriptTag);\r\n        return () => {\r\n            document.body.removeChild(scriptTag);\r\n        };\r\n    }, []);\r\n    return scriptLoadedSuccessfully;\r\n}\n\nconst GoogleOAuthContext = createContext(null);\r\nfunction GoogleOAuthProvider({ clientId, onScriptLoadSuccess, onScriptLoadError, children, }) {\r\n    const scriptLoadedSuccessfully = useLoadGsiScript({\r\n        onScriptLoadSuccess,\r\n        onScriptLoadError,\r\n    });\r\n    const contextValue = useMemo(() => ({\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n    }), [clientId, scriptLoadedSuccessfully]);\r\n    return (React.createElement(GoogleOAuthContext.Provider, { value: contextValue }, children));\r\n}\r\nfunction useGoogleOAuth() {\r\n    const context = useContext(GoogleOAuthContext);\r\n    if (!context) {\r\n        throw new Error('Google OAuth components must be used within GoogleOAuthProvider');\r\n    }\r\n    return context;\r\n}\n\nconst containerHeightMap = { large: 40, medium: 32, small: 20 };\r\nfunction GoogleLogin({ onSuccess, onError, useOneTap, promptMomentNotification, type = 'standard', theme = 'outline', size = 'large', text, shape, logo_alignment, width, locale, ...props }) {\r\n    const btnContainerRef = useRef(null);\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b, _c;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!credentialResponse.clientId || !credentialResponse.credential) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                onSuccessRef.current(credentialResponse);\r\n            },\r\n            ...props,\r\n        });\r\n        (_b = window.google) === null || _b === void 0 ? void 0 : _b.accounts.id.renderButton(btnContainerRef.current, {\r\n            type,\r\n            theme,\r\n            size,\r\n            text,\r\n            shape,\r\n            logo_alignment,\r\n            width,\r\n            locale,\r\n        });\r\n        if (useOneTap)\r\n            (_c = window.google) === null || _c === void 0 ? void 0 : _c.accounts.id.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a;\r\n            if (useOneTap)\r\n                (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.cancel();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        useOneTap,\r\n        type,\r\n        theme,\r\n        size,\r\n        text,\r\n        shape,\r\n        logo_alignment,\r\n        width,\r\n        locale,\r\n    ]);\r\n    return (React.createElement(\"div\", { ref: btnContainerRef, style: { height: containerHeightMap[size] } }));\r\n}\n\nfunction googleLogout() {\r\n    var _a;\r\n    (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.disableAutoSelect();\r\n}\n\n/* eslint-disable import/export */\r\nfunction useGoogleLogin({ flow = 'implicit', scope = '', onSuccess, onError, ...props }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const clientRef = useRef();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    useEffect(() => {\r\n        var _a;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        const clientMethod = flow === 'implicit' ? 'initTokenClient' : 'initCodeClient';\r\n        const client = (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.oauth2[clientMethod]({\r\n            client_id: clientId,\r\n            scope: `openid profile email ${scope}`,\r\n            callback: (response) => {\r\n                var _a, _b;\r\n                if (response.error)\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef, response);\r\n                (_b = onSuccessRef.current) === null || _b === void 0 ? void 0 : _b.call(onSuccessRef, response);\r\n            },\r\n            ...props,\r\n        });\r\n        clientRef.current = client;\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [clientId, scriptLoadedSuccessfully, flow, scope]);\r\n    const loginImplicitFlow = useCallback((overrideConfig) => clientRef.current.requestAccessToken(overrideConfig), []);\r\n    const loginAuthCodeFlow = useCallback(() => clientRef.current.requestCode(), []);\r\n    return flow === 'implicit' ? loginImplicitFlow : loginAuthCodeFlow;\r\n}\n\nfunction useGoogleOneTapLogin({ onSuccess, onError, promptMomentNotification, cancel_on_tap_outside, hosted_domain, }) {\r\n    const { clientId, scriptLoadedSuccessfully } = useGoogleOAuth();\r\n    const onSuccessRef = useRef(onSuccess);\r\n    onSuccessRef.current = onSuccess;\r\n    const onErrorRef = useRef(onError);\r\n    onErrorRef.current = onError;\r\n    const promptMomentNotificationRef = useRef(promptMomentNotification);\r\n    promptMomentNotificationRef.current = promptMomentNotification;\r\n    useEffect(() => {\r\n        var _a, _b;\r\n        if (!scriptLoadedSuccessfully)\r\n            return;\r\n        (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.initialize({\r\n            client_id: clientId,\r\n            callback: (credentialResponse) => {\r\n                var _a;\r\n                if (!credentialResponse.clientId || !credentialResponse.credential) {\r\n                    return (_a = onErrorRef.current) === null || _a === void 0 ? void 0 : _a.call(onErrorRef);\r\n                }\r\n                onSuccessRef.current(credentialResponse);\r\n            },\r\n            hosted_domain,\r\n            cancel_on_tap_outside,\r\n        });\r\n        (_b = window.google) === null || _b === void 0 ? void 0 : _b.accounts.id.prompt(promptMomentNotificationRef.current);\r\n        return () => {\r\n            var _a;\r\n            (_a = window.google) === null || _a === void 0 ? void 0 : _a.accounts.id.cancel();\r\n        };\r\n    }, [\r\n        clientId,\r\n        scriptLoadedSuccessfully,\r\n        cancel_on_tap_outside,\r\n        hosted_domain,\r\n    ]);\r\n}\n\n/**\r\n * Checks if the user granted all the specified scope or scopes\r\n * @returns True if all the scopes are granted\r\n */\r\nfunction hasGrantedAllScopesGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    if (!window.google)\r\n        return false;\r\n    return window.google.accounts.oauth2.hasGrantedAllScopes(tokenResponse, firstScope, ...restScopes);\r\n}\n\n/**\r\n * Checks if the user granted any of the specified scope or scopes.\r\n * @returns True if any of the scopes are granted\r\n */\r\nfunction hasGrantedAnyScopeGoogle(tokenResponse, firstScope, ...restScopes) {\r\n    if (!window.google)\r\n        return false;\r\n    return window.google.accounts.oauth2.hasGrantedAnyScope(tokenResponse, firstScope, ...restScopes);\r\n}\n\nexport { GoogleLogin, GoogleOAuthProvider, googleLogout, hasGrantedAllScopesGoogle, hasGrantedAnyScopeGoogle, useGoogleLogin, useGoogleOneTapLogin };\n","import { IActionCall } from \"@types\";\r\nimport { GoogleService } from \"network\";\r\n\r\nimport actionTypes from \"./actionTypes\";\r\n\r\nexport const exchangeCode = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.exchangeCode(request),\r\n    types: {\r\n        loading: actionTypes.EXCHANGE_CODE,\r\n        success: actionTypes.EXCHANGE_CODE_SUCCESS,\r\n        failure: actionTypes.EXCHANGE_CODE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetExchangeCode = (): IActionCall => ({ type: actionTypes.EXCHANGE_CODE_RESET });\r\n\r\nexport const listBlogger = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.listBlogger(request),\r\n    types: {\r\n        loading: actionTypes.LIST_BLOGGER,\r\n        success: actionTypes.LIST_BLOGGER_SUCCESS,\r\n        failure: actionTypes.LIST_BLOGGER_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetListBlogger = (): IActionCall => ({ type: actionTypes.LIST_BLOGGER_RESET });\r\n\r\nexport const listYouTube = (request: any): IActionCall => ({\r\n    callAPI: () => GoogleService.listYouTube(request),\r\n    types: {\r\n        loading: actionTypes.LIST_YOUTUBE,\r\n        success: actionTypes.LIST_YOUTUBE_SUCCESS,\r\n        failure: actionTypes.LIST_YOUTUBE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetListYouTube = (): IActionCall => ({ type: actionTypes.LIST_YOUTUBE_RESET });","import { FC } from \"react\";\r\nimport { Button, makeStyles } from '@material-ui/core';\r\nimport { langKeys } from \"lang/keys\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { exchangeCode } from \"store/google/actions\";\r\nimport { showBackdrop } from 'store/popus/actions';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        padding: 12,\r\n        fontWeight: 500,\r\n        fontSize: '14px',\r\n        textTransform: 'initial',\r\n        width: \"180px\"\r\n    },\r\n}));\r\n\r\ninterface GoogleLogInFrameProps {\r\n    setWaitExchange: (value: boolean) => void;\r\n}\r\n\r\nexport const GoogleLogInFrame: FC<GoogleLogInFrameProps> = ({ setWaitExchange }) => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    \r\n    const login = useGoogleLogin({\r\n        onSuccess: tokenResponse => onGoogleLoginSucess(tokenResponse),\r\n        onError: error => onGoogleLoginFailure(error),\r\n        flow: 'auth-code',\r\n        scope: 'https://www.googleapis.com/auth/gmail.compose \\\r\n        https://www.googleapis.com/auth/youtube.readonly \\\r\n        https://www.googleapis.com/auth/youtube.upload \\\r\n        https://www.googleapis.com/auth/youtube.force-ssl \\\r\n        https://www.googleapis.com/auth/drive.file \\\r\n        https://www.googleapis.com/auth/gmail.readonly \\\r\n        https://www.googleapis.com/auth/blogger \\\r\n        https://www.googleapis.com/auth/blogger.readonly \\\r\n        https://www.googleapis.com/auth/drive.readonly',\r\n    });\r\n\r\n    const onGoogleLoginSucess = (event: any) => {\r\n        if (event) {\r\n            if (event.code) {\r\n                dispatch(exchangeCode({ googlecode: event.code }));\r\n                dispatch(showBackdrop(true));\r\n                setWaitExchange(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onGoogleLoginFailure = (event: any) => {\r\n        console.log('GOOGLE LOGIN FAILURE: ' + JSON.stringify(event));\r\n    }\r\n\r\n    return <Button\r\n        onClick={() => { login() }}\r\n        className={classes.button}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n    >\r\n        {t(langKeys.login_with_google)}\r\n    </Button>\r\n};\r\n\r\nexport default GoogleLogInFrame"],"sourceRoot":""}