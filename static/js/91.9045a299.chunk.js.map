{"version":3,"sources":["../node_modules/@material-ui/icons/esm/Add.js","pages/dashboard/DashboardAdd.tsx","store/dashboard/actions.ts"],"names":["createSvgIcon","React","d","ReactGridLayout","WidthProvider","RGL","useDashboardAddStyles","makeStyles","theme","root","display","flexDirection","width","dragDropContextRow","minHeight","droppableColumn","height","droppableContainer","backgroundColor","color","item","layout","header","gap","useSubmitModalStyles","position","top","left","transform","maxWidth","maxHeight","padding","overflowY","SubmitModal","open","loading","defaultDescription","onClose","onSubmit","classes","t","useTranslation","useState","description","setDescription","_","reason","className","id","variant","component","i18nKey","langKeys","placeholder","enterDashboardDescription","value","onChange","e","target","InputProps","readOnly","disabled","length","onClick","save","useNewBtnStyles","the","overflow","justifyContent","alignItems","minWidth","addIcon","NewBtn","useLayoutItemStyles","deleteBtn","right","funnelLvlTitle","field","marginBottom","LayoutItem","key","layoutKey","edit","templates","kpis","tags","errors","getValues","setValue","register","unregister","onDelete","selectedIndex","setSelectedIndex","contentType","setContentType","tagsdata","settagsdata","columns","setColumns","useEffect","reporttemplateid","undefined","findIndex","defaultContentType","validate","mandatoryStrField","mandatoryContentType","mandatoryReportTemplate","mandatoryColumn","mandatoryNumField","columnas","JSON","parse","columnjson","summary","summaryjson","map","x","alias","summarization","find","y","columnname","function","descriptionT","join_alias","join_on","join_table","tablename","type","concat","some","field_required","invalidEntry","size","style","valueDefault","label","title","error","message","v","data","contentTypes","optionDesc","optionValue","uset","prefixTranslation","kpiid","report","groupment","groupingType","grouping","chartType","graphTypes","graph","displayinterval","desc","day","week","month","column","slice","filter","includes","tag","i","fontSize","fontWeight","level","index","newtagsdata","deleteFunnel","margin","marginRight","paddingLeft","fregister","initTags","newtagdata","float","add","CenterLoading","DashboardAdd","match","useRouteMatch","location","useLocation","dispatch","useDispatch","history","useHistory","now","Date","toString","openModal","setOpenModal","w","h","minW","minH","isResizable","isDraggable","static","setLayout","reportTemplatesAndKpis","useSelector","state","main","multiData","dashboardSave","dashboard","dashboardtemplateSave","dashboardtemplate","setDashboardTemplate","dashboardtemplateid","Number","params","push","paths","DASHBOARD","dashboardId","getDashboardTemplate","getDashboardTemplateSel","getMultiCollection","getReportTemplateSel","getKpiSel","getTagsChatflow","resetMain","resetMultiMain","resetSaveDashboardTemplate","code","module","user","toLocaleLowerCase","showSnackbar","severity","show","success","prev","Infinity","layoutjson","reset","detailjson","useForm","defaultValues","formState","handleSubmit","addItemOnClick","newKey","newlayout","addbtn","useCallback","cleanLayout","saveDashboardTemplate","getDashboardTemplateIns","stringify","status","operation","breadcrumbs","name","edit_custom_dashboard","create_custom_dashboard","handleClick","newDashboard","flexGrow","startIcon","back","empty_dashboard_form_error","console","warn","validMultiMainData","onLayoutChange","cols","rowHeight","getDashboard","parameters","callAPI","DashboardService","types","actionTypes","GET_DASHBOARD","GET_DASHBOARD_SUCCESS","failure","GET_DASHBOARD_FAILURE","resetGetDashboard","GET_DASHBOARD_RESET","body","CommonService","GET_DASHBOARDTEMPLATE","GET_DASHBOARDTEMPLATE_SUCCESS","GET_DASHBOARDTEMPLATE_FAILURE","payload","SET_DASHBOARDTEMPLATE","resetGetDashboardTemplate","GET_DASHBOARDTEMPLATE_RESET","SAVE_DASHBOARDTEMPLATE","SAVE_DASHBOARDTEMPLATE_SUCCESS","SAVE_DASHBOARDTEMPLATE_FAILURE","SAVE_DASHBOARDTEMPLATE_RESET","deleteDashboardTemplate","DELETE_DASHBOARDTEMPLATE","DELETE_DASHBOARDTEMPLATE_SUCCESS","DELETE_DASHBOARDTEMPLATE_FAILURE","resetDeleteDashboardTemplate","DELETE_DASHBOARDTEMPLATE_RESET"],"mappings":"0HAAA,mBAEeA,gBAA4BC,gBAAoB,OAAQ,CACrEC,EAAG,wCACD,Q,0XCkDEC,EAAkBC,wBAAcC,KAEhCC,EAAwBC,aAAW,SAAAC,GAAK,MAAK,CAC/CC,KAAM,CACFC,QAAS,OACTC,cAAe,SACfC,MAAO,QAEXC,mBAAoB,CAChBH,QAAS,OACTC,cAAe,MACfG,UAAW,KAEfC,gBAAiB,CACbL,QAAS,OACTC,cAAe,SACfK,OAAQ,QAEZC,mBAAoB,CAChBP,QAAQ,OACRQ,gBAAiB,MACjBC,MAAO,QACPR,cAAe,SACfK,OAAQ,UACRJ,MAAO,KAEXQ,KAAM,CACFF,gBAAiB,OACjBC,MAAO,SAEXE,OAAQ,CACJH,gBAAiB,UACjBN,MAAO,QAEXU,OAAQ,CACJZ,QAAS,OACTC,cAAe,MACfY,IAAK,WA2SPC,EAAuBjB,aAAW,SAAAC,GAAK,MAAK,CAC9CC,KAAM,CACFgB,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,SAAU,MACVC,UAAW,MACXlB,MAAO,MACPM,gBAAiB,QACjBa,QAAS,OACTC,UAAW,OACXtB,QAAS,OACTC,cAAe,SACfY,IAAK,WAIPU,EAAoC,SAAH,GAAuE,IAAjEC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAAQ,EAAD,EAAEC,0BAAkB,MAAG,GAAE,EAAEC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SACpFC,EAAUf,IACRgB,EAAMC,cAAND,EACR,EAAsCE,mBAASN,GAAmB,mBAA3DO,EAAW,KAAEC,EAAc,KAElC,OACI,cAAC,IAAK,CACFV,KAAMA,EACNG,QAAS,SAACQ,EAAGC,GACLX,GACJE,KAEJ,kBAAgB,+BAChB,mBAAiB,qCAAoC,SAErD,eAAC,IAAG,CAACU,UAAWR,EAAQ9B,KAAK,UACzB,cAAC,IAAU,CAACuC,GAAG,+BAA+BC,QAAQ,KAAKC,UAAU,KAAI,SACrE,cAAC,IAAK,CAACC,QAASC,IAAST,gBAE7B,cAAC,IAAS,CACNK,GAAG,qCACHK,YAAab,EAAEY,IAASE,2BACxBC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAea,EAAEC,OAAOH,QACvCI,WAAY,CAAEC,SAAUzB,KAE5B,cAAC,IAAM,CACHc,QAAQ,YACR9B,MAAM,UACN0C,SAAU1B,GAAkC,IAAvBQ,EAAYmB,OACjCC,QAAS,kBAAMzB,EAASK,IAAa,SAErC,cAAC,IAAK,CAACQ,QAASC,IAASY,eAWvCC,EAAkB1D,aAAW,SAAA2D,GAAG,MAAK,CACvCzD,KAAM,CACFG,MAAO,UACPI,OAAQ,UACRe,QAAS,MACTrB,QAAS,OACTyD,SAAU,SACVC,eAAgB,SAChBC,WAAY,SAEZC,SAAU,QACVxD,UAAW,SAEfyD,QAAS,CACL3D,MAAO,GACPI,OAAQ,QAIVwD,EAA0B,SAAH,GAAqB,IAAfT,EAAO,EAAPA,QACzBxB,EAAU0B,IAEhB,OACI,cAAC,IAAM,CAAClB,UAAWR,EAAQ9B,KAAMsD,QAASA,EAAQ,SAC9C,cAAC,IAAO,CAAC5C,MAAM,UAAU4B,UAAWR,EAAQgC,aAoBlDE,EAAsBlE,aAAW,SAAAC,GAAK,MAAK,CAC7CC,KAAM,CACFS,gBAAiB,QACjBN,MAAO,UACPI,OAAQ,UACRe,QAAS,MACTrB,QAAS,QACTyD,SAAU,OACV1C,SAAU,YAEdiD,UAAW,CACPjD,SAAU,WACVC,IAAK,EACLiD,MAAO,GAEXC,eAAgB,CACZlE,QAAS,OACT0D,eAAgB,iBAEpBS,MAAO,CACHC,aAAc,eAITC,EAAkC,SAAH,GAarC,IAAD,oCAZSC,EAAG,EAAdC,UACAC,EAAI,EAAJA,KAAK,EAAD,EACJ/C,eAAO,OAAQ,MACfgD,iBAAS,MAAG,GAAE,MACdC,YAAI,MAAG,GAAE,MACTC,YAAI,MAAE,GAAE,EACRC,EAAM,EAANA,OACAC,EAAS,EAATA,UACAC,EAAQ,EAARA,SACAC,EAAQ,EAARA,SACAC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SAEMpD,EAAUkC,IACRjC,EAAMC,cAAND,EACR,EAA0CE,oBAAU,GAAE,mBAA/CkD,EAAa,KAAEC,GAAgB,KACtC,GAAsCnD,mBAAS,IAAG,qBAA3CoD,GAAW,MAAEC,GAAc,MAClC,GAAgCrD,mBAAc6C,EAAU,GAAD,OAAIP,EAAG,WAAU,IAAG,qBAApEgB,GAAQ,MAAEC,GAAW,MAE5B,GAA8BvD,mBAA2B,IAAG,qBAArDwD,GAAO,MAAEC,GAAU,MAE1BC,qBAAU,WACN,IAAa,IAATlB,EAAJ,CAEA,IAAMmB,EAAmBd,EAAU,GAAD,OAAIP,EAAG,2BAChBsB,IAArBD,GAAuD,OAArBA,GAClCR,GAAiBV,EAAUoB,WAAU,SAAA9C,GAAC,OAAIA,EAAE4C,mBAAqBA,MAGrE,IAAMG,EAAqBjB,EAAU,GAAD,OAAIP,EAAG,sBAChBsB,IAAvBE,GAA2D,OAAvBA,GACpCT,GAAeS,GAGQjB,EAAU,GAAD,OAAIP,EAAG,oBAK5C,CAACE,EAAMK,IAEVa,qBAAU,WAIN,OAHAX,EAAS,GAAD,OAAIT,EAAG,gBAAgB,CAAEyB,SAAUC,GAAmBnD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,kBAAmB,KACxGS,EAAS,GAAD,OAAIT,EAAG,gBAAgB,CAAEyB,SAAUE,GAAsBpD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,kBAAmB,KAEpG,WACHU,EAAWV,MAGhB,CAACS,EAAUC,EAAYlD,EAAGwC,IAE7BoB,qBAAU,WACc,WAAhBN,IACAJ,EAAW,GAAD,OAAIV,EAAG,WAEjBS,EAAS,GAAD,OAAIT,EAAG,qBAAqB,CAAEyB,SAAUG,GAAyBrD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,uBAAwB,IACxHS,EAAS,GAAD,OAAIT,EAAG,aAAa,CAAEyB,SAAUC,GAAmBnD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,eAAgB,KAClGS,EAAS,GAAD,OAAIT,EAAG,UAAU,CAAEyB,SAAUC,GAAmBnD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,YAAa,KAC5FS,EAAS,GAAD,OAAIT,EAAG,WAAW,CAAEyB,SAAUI,GAAiBtD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,aAAc,KAC5FS,EAAS,GAAD,OAAIT,EAAG,2BACfS,EAAS,GAAD,OAAIT,EAAG,aAAa,CAACzB,MAAOgC,EAAU,GAAD,OAAIP,EAAG,iBAC7B,QAAhBc,IACPJ,EAAW,GAAD,OAAIV,EAAG,sBACjBU,EAAW,GAAD,OAAIV,EAAG,cACjBU,EAAW,GAAD,OAAIV,EAAG,WACjBU,EAAW,GAAD,OAAIV,EAAG,YAEjBS,EAAS,GAAD,OAAIT,EAAG,UAAU,CAAEyB,SAAUK,GAAmBvD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,YAAa,KAEvE,WAAhBc,KACLJ,EAAW,GAAD,OAAIV,EAAG,WACjBU,EAAW,GAAD,OAAIV,EAAG,cACjBU,EAAW,GAAD,OAAIV,EAAG,WAEjBS,EAAS,GAAD,OAAIT,EAAG,qBAAqB,CAAEyB,SAAUG,GAAyBrD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,uBAAwB,IACxHS,EAAS,GAAD,OAAIT,EAAG,WAAW,CAAEyB,SAAUI,GAAiBtD,MAAOgC,EAAU,GAAD,OAAIP,EAAG,aAAc,KAC5FS,EAAS,GAAD,OAAIT,EAAG,aAGpB,CAACc,GAAaI,GAASf,IAE1BiB,qBAAU,WACN,IAAuB,IAAnBR,EAAJ,CAIA,IAAImB,EAAUC,KAAKC,MAAM9B,EAAUS,GAAesB,YAC9CC,EAAUH,KAAKC,MAAM9B,EAAUS,GAAewB,aAAaC,KAAI,SAACC,GAAS,IAAD,EAAC,MAAO,CAChFC,MAAM,GAAD,OAAK/E,EAAEY,IAASoE,eAAc,cAAc,OAART,QAAQ,IAARA,GAAkD,QAA1C,EAARA,EAAUU,MAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAeL,EAAEK,qBAAW,WAA1C,EAAR,EAAoDJ,MAAK,aAAK/E,EAAE,YAAc8E,EAAEM,UAAS,KAClID,WAAW,GAAD,OAAKL,EAAEK,YAAU,OAAGL,EAAEM,UAChCjF,YAAa2E,EAAEK,WACfE,aAAcP,EAAEK,WAChB9D,UAAU,EACViE,WAAY,KACZC,QAAS,KACTC,WAAY,KACZC,UAAW,GACXC,KAAMZ,EAAEY,KACRN,SAAUN,EAAEM,aAEhBzB,GAAWgB,EAAQgB,OAAOpB,SAjBtBZ,GAAW,MAmBhB,CAACP,EAAeT,IAEnB,IAAMyB,GAA0B,SAACrD,GAC7B,GAAc,IAAVA,IAAgB4B,EAAUiD,MAAK,SAAAd,GAAC,OAAIA,EAAEjB,mBAAqB9C,KAC3D,OAAOf,EAAEY,IAASiF,iBAMpBxB,GAAkB,SAACtD,GACrB,IACKA,GACgB,IAAjBA,EAAMO,SACLoC,GAAQkC,MAAK,SAAAd,GAAC,OAAIA,EAAEK,aAAepE,KAEpC,OAAOf,EAAEY,IAASiF,iBAMpB1B,GAAuB,SAACpD,GAC1B,OAAKA,GAA0B,IAAjBA,EAAMO,OAEC,WAAVP,GAAgC,QAAVA,GAA6B,WAAVA,EAI7Cf,EAAEY,IAASkF,mBAJX,EADI9F,EAAEY,IAASiF,iBAQpB3B,GAAoB,SAACnD,GACvB,OAAQA,GAA0B,IAAjBA,EAAMO,YAA4CwC,EAA7B9D,EAAEY,IAASiF,iBAG/CvB,GAAoB,SAACvD,GACvB,OAAiB,IAAVA,EAAcf,EAAEY,IAASiF,qBAAkB/B,GAStD,OACI,sBAAKvD,UAAWR,EAAQ9B,KAAK,UACzB,cAAC,IAAU,CAACsC,UAAWR,EAAQmC,UAAWX,QAAS4B,EAAU4C,KAAK,QAAO,SACrE,cAAC,IAAS,CAACC,MAAO,CAAE5H,MAAO,GAAII,OAAQ,QAE3C,cAAC,IAAS,CACN+B,UAAWR,EAAQsC,MACnB4D,aAAclD,EAAU,GAAD,OAAIP,EAAG,iBAC9B0D,MAAOlG,EAAEY,IAASuF,OAClB9E,SAAU1B,EACVyG,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAa,QAAb,EAAX,EAAarC,mBAAW,WAAb,EAAX,EAA0BkG,QACjCrF,SAAU,SAACsF,GAAS,OAAKtD,EAAS,GAAD,OAAIR,EAAG,gBAAgB8D,MAE5D,cAAC,IAAW,CACR/F,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAAS0C,aAClBiD,KAAMC,IACNC,WAAW,MACXC,YAAY,MACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,iBAC9BxB,SAAU,SAACsF,GACP,IAAMvF,GAAS,OAADuF,QAAC,IAADA,OAAC,EAADA,EAAG9D,MAAO,GACxBQ,EAAS,GAAD,OAAIR,EAAG,gBAAgBzB,GAC/BwC,GAAexC,IAEnBqF,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAa,QAAb,EAAX,EAAac,mBAAW,WAAb,EAAX,EAA0B+C,QACjChF,SAAU1B,EACVgH,MAAI,EACJC,kBAAkB,2BAEL,QAAhBtD,IACG,cAAC,IAAW,CACR/C,UAAWR,EAAQsC,MACnB6D,MAAM,MACNK,KAAM3D,EACN6D,WAAW,UACXC,YAAY,KACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,WAC9BxB,SAAU,SAACsF,GAAc,OAAKtD,EAAS,GAAD,OAAIR,EAAG,WAAW,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAG9F,KAAM,IAChE4F,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAO,QAAP,EAAX,EAAaqE,aAAK,WAAP,EAAX,EAAoBR,QAC3BhF,SAAU1B,IAGD,WAAhB2D,IACG,qCACI,cAAC,IAAW,CACR/C,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAASkG,QAClBP,KAAM5D,EACN8D,WAAW,cACXC,YAAY,mBACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,sBAC9BxB,SAAU,SAACsF,GACP,IAAMzC,GAAoB,OAADyC,QAAC,IAADA,OAAC,EAADA,EAAGzC,mBAAoB,EAChDb,EAAS,GAAD,OAAIR,EAAG,qBAAqBqB,GACX,IAArBA,GACAb,EAAS,GAAD,OAAIR,EAAG,WAAW,IAE9Ba,GAAkBiD,EAAS3D,EAAUoB,WAAU,SAAA9C,GAAC,OAAIA,IAAMqF,MAAnC,IAE3BF,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAkB,QAAlB,EAAX,EAAaqB,wBAAgB,WAAlB,EAAX,EAA+BwC,QACtChF,SAAU1B,IAEd,cAAC,IAAW,CACRY,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAASmG,WAClBR,KAAMS,IACNP,WAAW,MACXC,YAAY,MACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,cAC9BxB,SAAU,SAACsF,GACPtD,EAAS,GAAD,OAAIR,EAAG,cAAc,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAG9D,MAAO,IACtCQ,EAAS,GAAD,OAAIR,EAAG,aAAa,KAEhC4D,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAU,QAAV,EAAX,EAAayE,gBAAQ,WAAV,EAAX,EAAuBZ,QAC9BhF,SAAU1B,EACVgH,MAAI,EACJC,kBAAkB,yBAEtB,cAAC,IAAW,CACRrG,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAASsG,WAClBX,KAAMY,IACNV,WAAW,MACXC,YAAY,MACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,WAC9BxB,SAAU,SAACsF,GACPtD,EAAS,GAAD,OAAIR,EAAG,WAAW,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAG9D,MAAO,IACnCQ,EAAS,GAAD,OAAIR,EAAG,aAAa,KAGhC4D,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAO,QAAP,EAAX,EAAa4E,aAAK,WAAP,EAAX,EAAoBf,QAC3BhF,SAAU1B,EACVgH,MAAI,EACJC,kBAAkB,0BAEU,QAA9B7D,EAAU,GAAD,OAAIP,EAAG,YAAoD,SAA7BO,EAAU,GAAD,OAAIP,EAAG,aAAwB,cAAC,IAAW,CACzFjC,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAASyG,iBAClBd,KAAM,CACF,CAAC/D,IAAK,MAAO8E,KAAKtH,EAAEY,IAAS2G,MAC7B,CAAC/E,IAAK,OAAQ8E,KAAKtH,EAAEY,IAAS4G,OAC9B,CAAChF,IAAK,QAAS8E,KAAKtH,EAAEY,IAAS6G,SAEnChB,WAAW,OACXC,YAAY,MACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,cAC9BxB,SAAU,SAACsF,GAAC,OAAGtD,EAAS,GAAD,OAAIR,EAAG,cAAc,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAG9D,MAAO,KACrDnB,SAAU1B,IAEd,cAAC,IAAW,CACRY,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAAS8G,QAClBnB,KAAM7C,GACN+C,WAAW,QACXC,YAAY,aACZT,aAAY,UAAKlD,EAAU,GAAD,OAAIP,EAAG,aAAU,OAAGO,EAAU,GAAD,OAAIP,EAAG,4BAA4B,IAC1FxB,SAAU,SAACsF,GACS,IAAD,KAAX,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGlB,UACFpC,EAAS,GAAD,OAAIR,EAAG,WAAY,OAAD8D,QAAC,IAADA,GAAa,QAAZ,EAADA,EAAGnB,kBAAU,WAAZ,EAAD,EAAewC,MAAM,KAAK,OAADrB,QAAC,IAADA,GAAW,QAAV,EAADA,EAAGlB,gBAAQ,WAAV,EAAD,EAAa9D,SAAQ,KAGxE0B,EAAS,GAAD,OAAIR,EAAG,YAAY,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAGnB,aAAY,IAE7CnC,EAAS,GAAD,OAAIR,EAAG,2BAA2B,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAGlB,WAAY,KAE5DgB,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAQ,QAAR,EAAX,EAAakF,cAAM,WAAR,EAAX,EAAqBrB,QAC5BhF,SAAU1B,GAA8B,IAAnB+D,GAAQpC,YAIxB,WAAhBgC,IACG,qCACI,cAAC,IAAW,CACR/C,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAASkG,QAClBP,KAAM5D,EACN8D,WAAW,cACXC,YAAY,mBACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,sBAC9BxB,SAAU,SAACsF,GACP,IAAMzC,GAAoB,OAADyC,QAAC,IAADA,OAAC,EAADA,EAAGzC,mBAAoB,EAChDb,EAAS,GAAD,OAAIR,EAAG,qBAAqBqB,GACX,IAArBA,GACAb,EAAS,GAAD,OAAIR,EAAG,WAAW,IAE9Ba,GAAkBiD,EAAS3D,EAAUoB,WAAU,SAAA9C,GAAC,OAAIA,IAAMqF,MAAnC,IAE3BF,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAkB,QAAlB,EAAX,EAAaqB,wBAAgB,WAAlB,EAAX,EAA+BwC,QACtChF,SAAU1B,IAEd,cAAC,IAAW,CACRY,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAAS8G,QAClBnB,KAAM7C,GAAQkE,QAAO,SAAA3G,GAAC,OAAEA,EAAEkE,WAAW0C,SAAS,UAC9CpB,WAAW,QACXC,YAAY,aACZT,aAAY,UAAKlD,EAAU,GAAD,OAAIP,EAAG,aAAU,OAAGO,EAAU,GAAD,OAAIP,EAAG,4BAA4B,IAC1FxB,SAAU,SAACsF,GACS,IAAD,KAAX,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGlB,UACFpC,EAAS,GAAD,OAAIR,EAAG,WAAY,OAAD8D,QAAC,IAADA,GAAa,QAAZ,EAADA,EAAGnB,kBAAU,WAAZ,EAAD,EAAewC,MAAM,KAAK,OAADrB,QAAC,IAADA,GAAW,QAAV,EAADA,EAAGlB,gBAAQ,WAAV,EAAD,EAAa9D,SAAQ,KAGxE0B,EAAS,GAAD,OAAIR,EAAG,YAAY,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAGnB,aAAY,IAE7CnC,EAAS,GAAD,OAAIR,EAAG,2BAA2B,OAAD8D,QAAC,IAADA,OAAC,EAADA,EAAGlB,WAAY,KAE5DgB,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAQ,QAAR,EAAX,EAAakF,cAAM,WAAR,EAAX,EAAqBrB,QAC5BhF,SAAU1B,GAA8B,IAAnB+D,GAAQpC,SAGjC,mCACKkC,GAASqB,KAAI,SAACiD,EAASC,GAAc,IAAD,gBACjC,OAAO,gCACH,sBAAKxH,UAAWR,EAAQqC,eAAe,UACnC,oBAAG4D,MAAO,CAACgC,SAAU,GAAIC,WAAY,KAAK,UAAEjI,EAAEY,IAASsH,OAAM,IAAGH,EAAE,KAClE,cAAC,IAAU,CAACxG,QAAS,kBAtLrD,SAAsB4G,GAClB,IAAIC,EAAY5E,GAASoE,QAAO,SAAC9C,EAAMiD,GAAQ,OAAGA,IAAII,KACtD1E,GAAY2E,GACZpF,EAAS,GAAD,OAAIR,EAAG,SAAQ4F,GAmL8BC,CAAaN,IAAIhC,KAAK,QAAQC,MAAO,CAAE5H,MAAO,GAAII,OAAQ,GAAI8J,OAAQ,GAAIC,YAAa,GAAI,SAChH,cAAC,IAAS,CAACvC,MAAO,CAAE5H,MAAO,GAAII,OAAQ,WAG/C,sBAAQwH,MAAO,CAACwC,YAAa,IAAI,UAC7B,cAAC,IAAW,CACRC,UAAS,eACFxF,EAAS,GAAD,OAAIT,EAAG,iBAASuF,EAAC,WAAW,CACnC9D,SAAU,SAAClD,GAAU,OAAMA,GAASA,EAAMO,QAAWtB,EAAEY,IAASiF,oBAGxEtF,UAAWR,EAAQsC,MACnB6D,MAAOlG,EAAEY,IAASG,OAClBwF,KAAM1D,EACN4D,WAAW,MACXC,YAAY,MACZT,aAAclD,EAAU,GAAD,OAAIP,EAAG,iBAASuF,EAAC,YACxC/G,SAAU,SAACsF,GACP,IAAIoC,EAAS3F,EAAU,GAAD,OAAIP,EAAG,WAAU,GACvCkG,EAASX,GAAGhH,OAAS,OAADuF,QAAC,IAADA,OAAC,EAADA,EAAGwB,MAAO,GAC9B,IAAIa,EAAWnF,GACfmF,EAAWZ,GAAGhH,OAAS,OAADuF,QAAC,IAADA,OAAC,EAADA,EAAGwB,MAAO,GAChCrE,GAAYkF,GACZ3F,EAAS,GAAD,OAAIR,EAAG,SAAQkG,IAE3BtC,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAM,QAAN,EAAX,EAAaK,YAAI,OAAK,QAAL,EAAjB,EAAoBkF,UAAE,OAAO,QAAP,EAAtB,EAAwBhH,aAAK,WAAlB,EAAX,EAA+BsF,UAE1C,cAAC,IAAS,CACNoC,UAAS,eACFxF,EAAS,GAAD,OAAIT,EAAG,iBAASuF,EAAC,WAAW,CACnC9D,SAAU,SAAClD,GAAU,OAAMA,GAASA,EAAMO,QAAWtB,EAAEY,IAASiF,oBAGxEK,MAAK,UAAKlG,EAAEY,IAASuF,OAAM,YAAInG,EAAEY,IAASsH,OAAM,YAAIH,EAAE,GACtD9B,aAAclD,EAAU,GAAD,OAAIP,EAAG,iBAASuF,EAAC,YACxCxH,UAAWR,EAAQsC,MACnBrB,SAAU,SAACD,GACP,IAAI2H,EAAS3F,EAAU,GAAD,OAAIP,EAAG,WAAU,GACvCkG,EAASX,GAAG5B,MAAQpF,GAAS,GAC7B,IAAI4H,EAAWnF,GACfmF,EAAWZ,GAAG5B,MAAQpF,GAAS,GAC/B0C,GAAYkF,GACZ3F,EAAS,GAAD,OAAIR,EAAG,SAAQkG,IAE3BtC,MAAkB,QAAb,EAAEtD,EAAON,UAAI,OAAM,QAAN,EAAX,EAAaK,YAAI,OAAK,QAAL,EAAjB,EAAoBkF,UAAE,OAAO,QAAP,EAAtB,EAAwB5B,aAAK,WAAlB,EAAX,EAA+BE,eAExC,sBAjDsB0B,EAAE,SAqD1C,eAAC,IAAM,CAAC/B,MAAO,CAAC4C,MAAM,SAAUrH,QAAS,WACrC,IAAImH,EAAS3F,EAAU,GAAD,OAAIP,EAAG,WAAU,GACvCiB,GAAY,GAAD,mBAAKiF,GAAQ,CAAC,CAAC3H,MAAM,GAAGoF,MAAM,OACzCnD,EAAS,GAAD,OAAIR,EAAG,+BAAYkG,GAAQ,CAAC,CAAC3H,MAAM,GAAGoF,MAAM,QACtD,UAAC,cAAC,IAAO,IAAE,IAAEnG,EAAEY,IAASiI,KAAI,IAAG7I,EAAEY,IAASsH,iBAO1DY,EAAoB,WACtB,OACI,qBAAK9C,MAAO,CAAE9H,QAAS,OAAQ0D,eAAgB,SAAUC,WAAY,SAAUzD,MAAO,QAAS,SAC3F,cAAC,IAAgB,OAKd2K,UAjyB8B,SAAH,GAA0B,IAAD,IAAnBrG,YAAI,OAAQ,EAChD1C,EAAMC,cAAND,EACFgJ,EAAQC,cACRC,EAAWC,cACXpJ,EAAUjC,IACVsL,EAAWC,cACXC,EAAUC,cACVC,EAAMC,KAAKD,MAAME,WACvB,EAAkCxJ,oBAAS,GAAM,mBAA1CyJ,EAAS,KAAEC,EAAY,KAC9B,EAA4B1J,mBAAuB,CAC/C,CAAC6H,EAAG,iBAAkBjD,EAAG,EAAGI,EAAG,EAAG2E,EAAG,EAAGC,EAAG,EAAGC,KAAM,EAAGC,KAAM,EAAGC,aAAa,EAAOC,aAAa,EAAOC,QAAQ,GAChH,CAACpC,EAAGyB,EAAK1E,EAAG,EAAGI,EAAG,EAAG2E,EAAG,EAAGC,EAAG,EAAGC,KAAM,EAAGC,KAAM,EAAGG,QAAQ,KAC7D,mBAHKtL,EAAM,KAAEuL,EAAS,KAIlBC,EAAyBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,aACzDC,EAAgBJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,UAAUC,yBACrDC,EAAoBP,aAAY,SAAAC,GAAK,OAAIA,EAAMI,UAAUE,qBAE/DjH,qBAAU,WACN,IAAa,IAATlB,GAAkBwG,EAASqB,OAGX,IAAT7H,GAAiBwG,EAASqB,MACjCnB,EAAS0B,YAAqB,2BACvB5B,EAASqB,OAAK,IACjBpK,YAAY,GAAD,OAAK+I,EAASqB,MAAMpK,YAAW,OAC1C4K,oBAAqB,OAET,IAATrI,GAAkBwG,EAASqB,OAAUS,OAAOhC,EAAMiC,OAAOzK,KAChE8I,EAAQ4B,KAAKC,IAAMC,eAVe,CAClC,IAAMC,EAAcrC,EAAMiC,OAAOzK,GACjC4I,EAASkC,YAAqBC,aAAwBF,KAiB1D,OANAjC,EAASoC,YAAmB,CACxBC,eACAC,eACAC,kBAGG,WACHvC,EAASwC,eACTxC,EAASyC,eACTzC,EAAS0C,kBAGd,CAACpJ,EAAMwG,EAASqB,MAAOvB,EAAMiC,OAAOzK,GAAI4I,IAE3CxF,qBAAU,WACN,IAAIyG,EAAuB1K,SACvB0K,EAAuBjE,MAAO,CAC9B,IAAMA,EAAQpG,EAAEqK,EAAuB0B,MAAQ,yBAA0B,CAAEC,OAAQhM,EAAEY,IAASqL,MAAMC,sBACpG9C,EAAS+C,YAAa,CAClB9F,QAASD,EACTgG,SAAU,QACVC,MAAM,QAGf,CAAChC,EAAwBrK,EAAGoJ,IAE/BxF,qBAAU,WACN,IAAI8G,EAAc/K,QAClB,GAAI+K,EAActE,MAAO,CACrB,IAAMA,EAAQpG,EAAE0K,EAAcqB,MAAQ,yBAA0B,CAAEC,OAAQhM,EAAEY,IAAS+J,WAAWuB,sBAChG9C,EAAS+C,YAAa,CAClB9F,QAASD,EACTgG,SAAU,QACVC,MAAM,UAEuB,IAA1B3B,EAAc4B,UACrBlD,EAAS+C,YAAa,CAClB9F,QAAS,4BACT+F,SAAU,UACVC,MAAM,KAEV/C,EAAQ4B,KAAKC,IAAMC,cAExB,CAACV,EAAepB,EAAStJ,EAAGoJ,IAE/BxF,qBAAU,WACN,IAAa,IAATlB,IAAkBmI,EAAkBlL,QACxC,GAAIkL,EAAkBzE,MAAO,CACzB,IAAMA,EAAQpG,EAAE6K,EAAkBkB,MAAQ,yBAA0B,CAAEC,OAAQhM,EAAEY,IAASqL,MAAMC,sBAC/F9C,EAAS+C,YAAa,CAClB9F,QAASD,EACTgG,SAAU,QACVC,MAAM,UAEHxB,EAAkB9J,QACzBqJ,GAAU,SAAAmC,GAAI,kCAEHA,EAAK,IAAE,IACVzH,EAAyB,GAAnByH,EAAKjL,OAAS,GAAU,GAAM,EACpC4D,EAAGsH,OAAQ,mBAEXhI,KAAKC,MAAMoG,EAAkB9J,MAAO0L,iBAE5CC,GAAMlI,KAAKC,MAAMoG,EAAkB9J,MAAO4L,gBAG/C,CAAC9B,EAAmBnI,EAAM1C,EAAGoJ,IAGhC,MAA8FwD,YAAe,CACzGC,cAAe,KADZ5J,EAAQ,EAARA,SAASC,EAAU,EAAVA,WAAwBJ,EAAM,EAAnBgK,UAAahK,OAAUC,GAAS,EAATA,UAAWC,GAAQ,EAARA,SAAU+J,GAAY,EAAZA,aAAaL,GAAK,EAALA,MAM9EM,GAAiB,WACnB,IAAMC,EAASxD,KAAKD,MAAME,WAC1BU,GAAU,SAAAmC,GACN,IAAMW,EAAS,sBACRX,GAAI,CACP,CACIxE,EAAGkF,EACHnI,EAAwB,GAAnByH,EAAKjL,OAAS,GAAU,GAC7B4D,EAAGsH,IACH3C,EAAG,EACHC,EAAG,EACHC,KAAM,EACNC,KAAM,EACNG,QAAQ,KAGVgD,EAA4B,mBAAnBD,EAAU,GAAGnF,GAA0BmF,EAAU,GAKhE,OAJIC,IACAD,EAAU,GAAE,2BAAQC,GAAM,IAAErI,EAAyB,GAAnByH,EAAKjL,OAAS,GAAU,GAAM,EAAG4D,EAAGsH,OAGnEU,MAsBTpN,GAAWsN,uBAAY,SAACjN,GAC1B,IAAa,IAATuC,GAAkBmI,EAAkB9J,MAAxC,CAEA,IAAMwF,EAAOxD,KACDsK,EAAZ,YAA2BxO,GAAJ,SACvBuK,EAASkE,YAAsBC,aAAwB,CACnD/M,GAAIkC,EAAOmI,EAAkB9J,MAAOgK,oBAAsB,EAC1D5K,cACAwM,WAAYnI,KAAKgJ,UAAUjH,GAC3BkG,WAAYjI,KAAKgJ,UAAUH,GAC3BI,OAAQ,SACR/H,KAAM,UACNgI,UAAWhL,GAAyD,IAAjDmI,EAAkB9J,MAAOgK,oBAA4B,SAAW,gBAExF,CAACrI,EAAMmI,EAAmBhM,EAAQkE,GAAWqG,IAUhD,OAAa,IAAT1G,IAAkBmI,EAAkBlL,SAAYkL,EAAkB9J,MAKlE,eAAC,IAAG,CAACR,UAAWR,EAAQ9B,KAAK,UACzB,cAAC,IAAmB,CAChB0P,YAAa,CACT,CAAEnN,GAAI,SAAUoN,KAAM,cACtB,CACIpN,GAAI,SACJoN,KAAM5N,EAAE0C,EAAO9B,IAASiN,sBAAwBjN,IAASkN,2BAGjEC,YAAa,SAAAvN,GAAE,MAAW,WAAPA,GAAmB8I,EAAQ4B,KAAKC,IAAMC,cAE7D,sBAAK7K,UAAWR,EAAQjB,OAAO,UAC3B,cAAC,IAAW,CAACqH,MAAOzD,EAAOmI,EAAkB9J,MAAOZ,YAAcH,EAAEY,IAASoN,gBAC7E,qBAAKhI,MAAO,CAAEiI,SAAU,KACxB,cAAC,IAAM,CACHxN,QAAQ,YACRiF,KAAK,SACL/G,MAAM,UACNuP,UAAW,cAAC,IAAS,CAACvP,MAAM,cAC5BqH,MAAO,CAAEtH,gBAAiB,WAC1B6C,QAAS,kBAAM+H,EAAQ4B,KAAKC,IAAMC,YAAW,SAE7C,cAAC,IAAK,CAACzK,QAASC,IAASuN,SAS7B,cAAC,IAAM,CACH1N,QAAQ,YACR9B,MAAM,UACN4C,QA7EG,WACX1C,EAAOyC,QAAU,EACjB8H,EAAS+C,YAAa,CAClB9F,QAASrG,EAAEY,IAASwN,4BACpBhC,SAAU,QACVC,MAAM,KAGVU,IAAa,SAACxG,GACVqD,GAAa,MACd,SAAA3I,GAAC,OAAIoN,QAAQC,KAAK,UAAWrN,KAFhC8L,IAsEQ1L,SAAUwJ,EAAkBlL,QAC5BqG,MAAO,CAAEtH,gBAAiB,WAC1BwP,UAAW,cAAC,IAAQ,CAACvP,MAAM,cAAe,SAE1C,cAAC,IAAK,CAACgC,QAASC,IAASY,YAGjC,qBAAKwE,MAAO,CAAExH,OAAQ,SAvDH,WAAO,IAAD,IAC7B,OACK6L,EAAuB1K,SACgB,4BAAV,QAA9B,EAAA0K,EAAuB9D,KAAK,UAAE,aAA9B,EAAgC/D,MACQ,iBAAV,QAA9B,EAAA6H,EAAuB9D,KAAK,UAAE,aAA9B,EAAgC/D,KAoD9B+L,GACE,cAAC5Q,EAAe,CACZ4C,UAAWR,EAAQlB,OACnBA,OAAQA,EACR2P,eAAgBpE,EAChBqE,KAAM,GACNC,UAAW,IAAI,SAEd7P,EAAOgG,KAAI,SAAA5D,GACR,MAAY,mBAARA,EAAE8G,EAEE,8BACI,cAAC/F,EAAM,CAACT,QAASyL,MADX/L,EAAE8G,GAOhB,8BACI,cAACxF,EAAU,CACPG,KAAMA,EACND,UAAWxB,EAAE8G,EACbpF,UAAW0H,EAAuB9D,KAAK,GAAGA,KAC1C3D,KAAMyH,EAAuB9D,KAAK,GAAGA,KACrC1D,KAAMwH,EAAuB9D,KAAK,GAAGA,KACrC5G,QAAS0K,EAAuB1K,QAChCsD,SAAUA,EACVC,WAAYA,EACZH,UAAWA,GACXC,SAAUA,GACVF,OAAQA,EACRK,SAAU,kBAzHfX,EAyHuCvB,EAAE8G,OAxHhEqC,GAAU,SAAAmC,GAAI,OAAIA,EAAK3E,QAAO,SAAA3G,GAAC,OAAIA,EAAE8G,IAAMvF,QADrB,IAACA,MA4GOvB,EAAE8G,QAlBH,cAACe,EAAa,IAsCvC,cAACrJ,EAAW,CACRG,oBAA6B,IAAT8C,EAAiB,GAAKmI,EAAkB9J,MAAOZ,YACnET,KAAMiK,EACNhK,QAAS+K,EAAc/K,QACvBE,QAAS,kBAAM+J,GAAa,IAC5B9J,SAAUA,QA1FX,cAACgJ,EAAa,M,iCC7R7B,sUAUa6F,EAAe,SAACC,GAA8B,MAAmB,CAC1EC,QAAS,kBAAMC,IAAiBH,aAAa,CAAEC,gBAC/CG,MAAO,CACHpP,QAASqP,IAAYC,cACrB3C,QAAS0C,IAAYE,sBACrBC,QAASH,IAAYI,uBAEzB1J,KAAM,OAGG2J,EAAoB,WAAH,MAAuB,CAAC3J,KAAMsJ,IAAYM,sBAE3DhE,EAAuB,SAACiE,GAAkB,MAAmB,CACtEV,QAAS,kBAAMW,IAAchF,KAAK+E,IAClCR,MAAO,CACHpP,QAASqP,IAAYS,sBACrBnD,QAAS0C,IAAYU,8BACrBP,QAASH,IAAYW,+BAEzBjK,KAAM,OAGGoF,EAAuB,SAAC8E,GAA0B,MAAmB,CAC9EA,UACAlK,KAAMsJ,IAAYa,wBAGTC,EAA4B,WAAH,MAAuB,CAACpK,KAAMsJ,IAAYe,8BAEnEzC,EAAwB,SAACiC,GAAkB,MAAmB,CACvEV,QAAS,kBAAMW,IAAchF,KAAK+E,IAClCR,MAAO,CACHpP,QAASqP,IAAYgB,uBACrB1D,QAAS0C,IAAYiB,+BACrBd,QAASH,IAAYkB,gCAEzBxK,KAAM,OAGGoG,EAA6B,WAAH,MAAuB,CAACpG,KAAMsJ,IAAYmB,+BAEpEC,EAA0B,SAACb,GAAkB,MAAmB,CACzEV,QAAS,kBAAMW,IAAchF,KAAK+E,IAClCR,MAAO,CACHpP,QAASqP,IAAYqB,yBACrB/D,QAAS0C,IAAYsB,iCACrBnB,QAASH,IAAYuB,kCAEzB7K,KAAM,OAGG8K,EAA+B,WAAH,MAAuB,CAAC9K,KAAMsJ,IAAYyB","file":"static/js/91.9045a299.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');","import { Box, Button, IconButton, makeStyles, Modal, Typography, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport paths from \"common/constants/paths\";\r\nimport { FieldEdit, FieldSelect, TemplateBreadcrumbs, TitleDetail } from \"components\";\r\nimport { FC, useCallback, useEffect, useState } from \"react\";\r\nimport { useHistory, useRouteMatch, useLocation } from \"react-router\";\r\nimport RGL, { WidthProvider } from 'react-grid-layout';\r\nimport { Trans, useTranslation } from \"react-i18next\";\r\nimport { langKeys } from \"lang/keys\";\r\nimport { Close as CloseIcon, Clear as ClearIcon, Add as AddIcon, Save as SaveIcon } from \"@material-ui/icons\";\r\nimport { FieldErrors, useForm, UseFormGetValues, UseFormRegister, UseFormSetValue, UseFormUnregister } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMultiCollection, resetMain, resetMultiMain } from \"store/main/actions\";\r\nimport { getDashboardTemplateIns, getDashboardTemplateSel, getKpiSel, getReportTemplateSel, getTagsChatflow } from \"common/helpers\";\r\nimport { useSelector } from \"hooks\";\r\nimport { contentTypes, graphTypes, groupingType } from \"./constants\";\r\nimport { showSnackbar } from \"store/popus/actions\";\r\nimport { getDashboardTemplate, resetSaveDashboardTemplate, saveDashboardTemplate, setDashboardTemplate } from \"store/dashboard/actions\";\r\nimport { DashboardTemplate } from \"@types\";\r\n\r\nexport interface ReportTemplate {\r\n    columnjson: string; // array json\r\n    createdate: string;\r\n    description: string;\r\n    filterjson: string; // json\r\n    reporttemplateid: number;\r\n    status: string;\r\n    type: string;\r\n    summaryjson: string;\r\n}\r\n\r\nexport interface KpiTemplate {\r\n    description: string;\r\n    id: number;\r\n    kpiname: string;\r\n}\r\n\r\ninterface ColumnTemplate {\r\n    // filter: string;\r\n    // hasFilter: boolean;\r\n    // key: string;\r\n    // value: string;\r\n    alias: string;\r\n    columnname: string;\r\n    description: string;\r\n    descriptionT: string;\r\n    disabled: boolean;\r\n    join_alias: any;\r\n    join_on: any;\r\n    join_table: any;\r\n    tablename: string;\r\n    type: string;\r\n    function?: string;\r\n}\r\n\r\nconst ReactGridLayout = WidthProvider(RGL);\r\n\r\nconst useDashboardAddStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n    },\r\n    dragDropContextRow: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        minHeight: 500,\r\n    },\r\n    droppableColumn: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n    },\r\n    droppableContainer: {\r\n        display:'flex',\r\n        backgroundColor: 'red',\r\n        color: 'white',\r\n        flexDirection: 'column',\r\n        height: 'inherit',\r\n        width: 250,\r\n    },\r\n    item: {\r\n        backgroundColor: 'blue',\r\n        color: 'white',\r\n    },\r\n    layout: {\r\n        backgroundColor: 'inherit',\r\n        width: '100%',\r\n    },\r\n    header: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        gap: '1em',\r\n    },\r\n}));\r\n\r\ninterface Item {\r\n    description: string;\r\n    contentType: string;\r\n    kpiid : number;\r\n    reporttemplateid: number;\r\n    interval?: string;\r\n    grouping: string;\r\n    graph: string;\r\n    column: string;\r\n    summarizationfunction?: string;\r\n    tags?: any[];\r\n}\r\n\r\ninterface Items {\r\n    [key: string]: Item;\r\n}\r\n\r\nconst DashboardAdd: FC<{ edit?: boolean }> = ({ edit = false }) => {\r\n    const { t } = useTranslation();\r\n    const match = useRouteMatch<{ id: string }>();\r\n    const location = useLocation<DashboardTemplate | null>();\r\n    const classes = useDashboardAddStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const now = Date.now().toString();\r\n    const [openModal, setOpenModal] = useState(false);\r\n    const [layout, setLayout] = useState<RGL.Layout[]>([\r\n        {i: 'add-btn-layout', x: 3, y: 0, w: 3, h: 2, minW: 2, minH: 1, isResizable: false, isDraggable: false, static: false},\r\n        {i: now, x: 0, y: 0, w: 3, h: 2, minW: 2, minH: 1, static: false},\r\n    ]);\r\n    const reportTemplatesAndKpis = useSelector(state => state.main.multiData);\r\n    const dashboardSave = useSelector(state => state.dashboard.dashboardtemplateSave);\r\n    const dashboardtemplate = useSelector(state => state.dashboard.dashboardtemplate);\r\n\r\n    useEffect(() => {\r\n        if (edit === true && !location.state) {\r\n            const dashboardId = match.params.id;\r\n            dispatch(getDashboardTemplate(getDashboardTemplateSel(dashboardId)));\r\n        } else if (edit === true && location.state) {\r\n            dispatch(setDashboardTemplate({\r\n                ...location.state,\r\n                description: `${location.state.description}-v1`,\r\n                dashboardtemplateid: 0,\r\n            }));\r\n        } else if (edit === true && !location.state && !Number(match.params.id)) {\r\n            history.push(paths.DASHBOARD);\r\n        }\r\n\r\n        dispatch(getMultiCollection([\r\n            getReportTemplateSel(),\r\n            getKpiSel(),\r\n            getTagsChatflow(),\r\n        ]));\r\n\r\n        return () => {\r\n            dispatch(resetMain());\r\n            dispatch(resetMultiMain());\r\n            dispatch(resetSaveDashboardTemplate());\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [edit, location.state, match.params.id, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (reportTemplatesAndKpis.loading) return;\r\n        if (reportTemplatesAndKpis.error) {\r\n            const error = t(reportTemplatesAndKpis.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() });\r\n            dispatch(showSnackbar({\r\n                message: error,\r\n                severity: \"error\",\r\n                show: true,\r\n            }));\r\n        }\r\n    }, [reportTemplatesAndKpis, t, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (dashboardSave.loading) return;\r\n        if (dashboardSave.error) {\r\n            const error = t(dashboardSave.code || \"error_unexpected_error\", { module: t(langKeys.dashboard).toLocaleLowerCase() });\r\n            dispatch(showSnackbar({\r\n                message: error,\r\n                severity: \"error\",\r\n                show: true,\r\n            }));\r\n        } else if (dashboardSave.success === true) {\r\n            dispatch(showSnackbar({\r\n                message: \"Se guardó el dashboard\",\r\n                severity: \"success\",\r\n                show: true,\r\n            }));\r\n            history.push(paths.DASHBOARD);\r\n        }\r\n    }, [dashboardSave, history, t, dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (edit === false || dashboardtemplate.loading) return;\r\n        if (dashboardtemplate.error) {\r\n            const error = t(dashboardtemplate.code || \"error_unexpected_error\", { module: t(langKeys.user).toLocaleLowerCase() });\r\n            dispatch(showSnackbar({\r\n                message: error,\r\n                severity: \"error\",\r\n                show: true,\r\n            }));\r\n        } else if (dashboardtemplate.value) {\r\n            setLayout(prev => ([\r\n                {\r\n                    ...prev[0], // 'add-btn-layout'\r\n                    x: (((prev.length - 1) * 3) % 12) + 3,\r\n                    y: Infinity,\r\n                },\r\n                ...(JSON.parse(dashboardtemplate.value!.layoutjson) as RGL.Layout[]),\r\n            ]));\r\n            reset(JSON.parse(dashboardtemplate.value!.detailjson) as Items);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dashboardtemplate, edit, t, dispatch]);\r\n\r\n\r\n    const {register,unregister,formState: { errors }, getValues, setValue, handleSubmit,reset,} = useForm<Items>({\r\n        defaultValues: {\r\n            \r\n        }\r\n    });\r\n\r\n    const addItemOnClick = () => {\r\n        const newKey = Date.now().toString();\r\n        setLayout(prev => {\r\n            const newlayout = [\r\n                ...prev,\r\n                {\r\n                    i: newKey,\r\n                    x: ((prev.length - 1) * 3) % 12,\r\n                    y: Infinity,\r\n                    w: 3,\r\n                    h: 2,\r\n                    minW: 2,\r\n                    minH: 1,\r\n                    static: false,\r\n                },\r\n            ];\r\n            const addbtn = newlayout[0].i === 'add-btn-layout' && newlayout[0];\r\n            if (addbtn) {\r\n                newlayout[0] = { ...addbtn, x: (((prev.length - 1) * 3) % 12) + 3, y: Infinity };\r\n            }\r\n\r\n            return newlayout;\r\n        });\r\n    };\r\n\r\n    const deleteItemOnClick = (key: string) => {\r\n        setLayout(prev => prev.filter(e => e.i !== key));\r\n    }\r\n\r\n    const onContinue = () => {\r\n        if (layout.length <= 1) {\r\n            dispatch(showSnackbar({\r\n                message: t(langKeys.empty_dashboard_form_error),\r\n                severity: \"error\",\r\n                show: true,\r\n            }));\r\n        } else {\r\n            handleSubmit((data) => {\r\n                setOpenModal(true);\r\n            }, e => console.warn('errores', e))();\r\n        }\r\n    }\r\n\r\n    const onSubmit = useCallback((description: string) => {\r\n        if (edit === true && !dashboardtemplate.value) return;\r\n\r\n        const data = getValues();\r\n        const [, ...cleanLayout] = layout; // quitando el boton en el index 0\r\n        dispatch(saveDashboardTemplate(getDashboardTemplateIns({\r\n            id: edit ? dashboardtemplate.value!.dashboardtemplateid : 0,\r\n            description,\r\n            detailjson: JSON.stringify(data),\r\n            layoutjson: JSON.stringify(cleanLayout),\r\n            status: 'ACTIVO',\r\n            type: 'NINGUNO',\r\n            operation: edit && dashboardtemplate.value!.dashboardtemplateid !== 0 ? 'UPDATE' : 'INSERT',\r\n        })));\r\n    }, [edit, dashboardtemplate, layout, getValues, dispatch]);\r\n\r\n    const validMultiMainData = () => {\r\n        return (\r\n            !reportTemplatesAndKpis.loading &&\r\n            reportTemplatesAndKpis.data[0]?.key === \"UFN_REPORTTEMPLATE_SEL\" &&\r\n            reportTemplatesAndKpis.data[1]?.key === \"UFN_KPI_LST\"\r\n        );\r\n    }\r\n\r\n    if (edit === true && (dashboardtemplate.loading || !dashboardtemplate.value)) {\r\n        return <CenterLoading />;\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <TemplateBreadcrumbs\r\n                breadcrumbs={[\r\n                    { id: \"view-1\", name: \"Dashboards\" },\r\n                    {\r\n                        id: \"view-2\",\r\n                        name: t(edit ? langKeys.edit_custom_dashboard : langKeys.create_custom_dashboard),\r\n                    }\r\n                ]}\r\n                handleClick={id => id === \"view-1\" && history.push(paths.DASHBOARD)}\r\n            />\r\n            <div className={classes.header}>\r\n                <TitleDetail title={edit ? dashboardtemplate.value!.description : t(langKeys.newDashboard)} />\r\n                <div style={{ flexGrow: 1 }} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    type=\"button\"\r\n                    color=\"primary\"\r\n                    startIcon={<ClearIcon color=\"secondary\" />}\r\n                    style={{ backgroundColor: \"#FB5F5F\" }}\r\n                    onClick={() => history.push(paths.DASHBOARD)}\r\n                >\r\n                    <Trans i18nKey={langKeys.back} />\r\n                </Button>\r\n                {/* <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={addItemOnClick}\r\n                >\r\n                    <Trans i18nKey={langKeys.add} />\r\n                </Button> */}\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={onContinue}\r\n                    disabled={dashboardtemplate.loading}\r\n                    style={{ backgroundColor: \"#55BD84\" }}\r\n                    startIcon={<SaveIcon color=\"secondary\" />}\r\n                >\r\n                    <Trans i18nKey={langKeys.save} />\r\n                </Button>\r\n            </div>\r\n            <div style={{ height: '1em' }} />\r\n            {!validMultiMainData() ? <CenterLoading /> : (\r\n                <ReactGridLayout\r\n                    className={classes.layout}\r\n                    layout={layout}\r\n                    onLayoutChange={setLayout}\r\n                    cols={12}\r\n                    rowHeight={140}\r\n                >\r\n                    {layout.map(e => {\r\n                        if (e.i === 'add-btn-layout') {\r\n                            return (\r\n                                <div key={e.i}>\r\n                                    <NewBtn onClick={addItemOnClick} />\r\n                                </div>\r\n                            );\r\n                        }\r\n\r\n                        return (\r\n                            <div key={e.i}>\r\n                                <LayoutItem\r\n                                    edit={edit}\r\n                                    layoutKey={e.i}\r\n                                    templates={reportTemplatesAndKpis.data[0].data as ReportTemplate[]}\r\n                                    kpis={reportTemplatesAndKpis.data[1].data as KpiTemplate[]}\r\n                                    tags={reportTemplatesAndKpis.data[2].data as any[]}\r\n                                    loading={reportTemplatesAndKpis.loading}\r\n                                    register={register}\r\n                                    unregister={unregister}\r\n                                    getValues={getValues}\r\n                                    setValue={setValue}\r\n                                    errors={errors}\r\n                                    onDelete={() => deleteItemOnClick(e.i)}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </ReactGridLayout>\r\n            )}\r\n            <SubmitModal\r\n                defaultDescription={edit === false ? '' : dashboardtemplate.value!.description}\r\n                open={openModal}\r\n                loading={dashboardSave.loading}\r\n                onClose={() => setOpenModal(false)}\r\n                onSubmit={onSubmit}\r\n            />\r\n        </Box>\r\n    );\r\n}\r\n\r\ninterface SubmitModalProps {\r\n    open: boolean;\r\n    loading: boolean;\r\n    defaultDescription?: string;\r\n    onSubmit: (description: string) => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst useSubmitModalStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'absolute' as 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        maxWidth: \"80%\",\r\n        maxHeight: \"80%\",\r\n        width: '80%',\r\n        backgroundColor: 'white',\r\n        padding: \"16px\",\r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: '1em',\r\n    },\r\n}));\r\n\r\nconst SubmitModal: FC<SubmitModalProps> = ({ open, loading, defaultDescription = '', onClose, onSubmit }) => {\r\n    const classes = useSubmitModalStyles();\r\n    const { t } = useTranslation();\r\n    const [description, setDescription] = useState(defaultDescription);\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={(_, reason) => {\r\n                if (loading) return;\r\n                onClose();\r\n            }}\r\n            aria-labelledby=\"dashboard-submit-modal-title\"\r\n            aria-describedby=\"dashboard-submit-modal-description\"\r\n        >\r\n            <Box className={classes.root}>\r\n                <Typography id=\"dashboard-submit-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    <Trans i18nKey={langKeys.description} />\r\n                </Typography>\r\n                <TextField\r\n                    id=\"dashboard-submit-modal-description\"\r\n                    placeholder={t(langKeys.enterDashboardDescription)}\r\n                    value={description}\r\n                    onChange={e => setDescription(e.target.value)}\r\n                    InputProps={{ readOnly: loading }}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={loading || description.length === 0}\r\n                    onClick={() => onSubmit(description)}\r\n                >\r\n                    <Trans i18nKey={langKeys.save} />\r\n                </Button>\r\n            </Box>\r\n        </Modal>\r\n    );\r\n}\r\n\r\ninterface NewBtnProps {\r\n    onClick: () => void;\r\n}\r\n\r\nconst useNewBtnStyles = makeStyles(the => ({\r\n    root: {\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n        padding: '1em',\r\n        display: 'flex',\r\n        overflow: 'hidden',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n        minWidth: 'unset',\r\n        minHeight: 'unset',\r\n    },\r\n    addIcon: {\r\n        width: 42,\r\n        height: 42,\r\n    },\r\n}));\r\n\r\nconst NewBtn: FC<NewBtnProps> = ({ onClick }) => {\r\n    const classes = useNewBtnStyles();\r\n\r\n    return (\r\n        <Button className={classes.root} onClick={onClick}>\r\n            <AddIcon color=\"primary\" className={classes.addIcon} />\r\n        </Button>\r\n    );\r\n}\r\n\r\ninterface LayoutItemProps {\r\n    edit: boolean;\r\n    layoutKey: string;\r\n    templates: ReportTemplate[];\r\n    kpis: KpiTemplate[];\r\n    tags: any[];\r\n    loading?: boolean;\r\n    errors: FieldErrors<Items>;\r\n    getValues: UseFormGetValues<Items>;\r\n    setValue: UseFormSetValue<Items>;\r\n    register: UseFormRegister<Items>;\r\n    unregister: UseFormUnregister<Items>;\r\n    onDelete?: () => void;\r\n}\r\n\r\nconst useLayoutItemStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: 'white',\r\n        width: 'inherit',\r\n        height: 'inherit',\r\n        padding: '1em',\r\n        display: 'block',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n    },\r\n    deleteBtn: {\r\n        position: 'absolute',\r\n        top: 1,\r\n        right: 1,\r\n    },\r\n    funnelLvlTitle: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    field: {\r\n        marginBottom: '0.65rem',\r\n    },\r\n}));\r\n\r\nexport const LayoutItem: FC<LayoutItemProps> = ({\r\n    layoutKey: key,\r\n    edit,\r\n    loading = false,\r\n    templates = [],\r\n    kpis = [],\r\n    tags =[],\r\n    errors,\r\n    getValues,\r\n    setValue,\r\n    register,\r\n    unregister,\r\n    onDelete,\r\n}) => {\r\n    const classes = useLayoutItemStyles();\r\n    const { t } = useTranslation();\r\n    const [selectedIndex, setSelectedIndex] = useState(-1);\r\n    const [contentType, setContentType] = useState('');\r\n    const [tagsdata, settagsdata] = useState<any>(getValues(`${key}.tags`)||[]);\r\n    // const [graphicType, setgraphicType] = useState(getValues(`${key}.graph`));\r\n    const [columns, setColumns] = useState<ColumnTemplate[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (edit === false) return;\r\n\r\n        const reporttemplateid = getValues(`${key}.reporttemplateid`);\r\n        if (reporttemplateid !== undefined || reporttemplateid !== null) {\r\n            setSelectedIndex(templates.findIndex(e => e.reporttemplateid === reporttemplateid));\r\n        }\r\n\r\n        const defaultContentType = getValues(`${key}.contentType`);\r\n        if (defaultContentType !== undefined || defaultContentType !== null) {\r\n            setContentType(defaultContentType);\r\n        }\r\n\r\n        const defaultGraphicType = getValues(`${key}.contentType`);\r\n        if (defaultGraphicType !== undefined || defaultGraphicType !== null) {\r\n            // setgraphicType(defaultGraphicType);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [edit, getValues]);\r\n\r\n    useEffect(() => {\r\n        register(`${key}.description`, { validate: mandatoryStrField, value: getValues(`${key}.description`) || '' });\r\n        register(`${key}.contentType`, { validate: mandatoryContentType, value: getValues(`${key}.contentType`) || '' });\r\n\r\n        return () => {\r\n            unregister(key);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [register, unregister, t, key]);\r\n\r\n    useEffect(() => {\r\n        if (contentType === \"report\") {\r\n            unregister(`${key}.kpiid`);\r\n\r\n            register(`${key}.reporttemplateid`, { validate: mandatoryReportTemplate, value: getValues(`${key}.reporttemplateid`) || 0 });\r\n            register(`${key}.grouping`, { validate: mandatoryStrField, value: getValues(`${key}.grouping`) || '' });\r\n            register(`${key}.graph`, { validate: mandatoryStrField, value: getValues(`${key}.graph`) || '' });\r\n            register(`${key}.column`, { validate: mandatoryColumn, value: getValues(`${key}.column`) || '' });\r\n            register(`${key}.summarizationfunction`);\r\n            register(`${key}.interval`, {value: getValues(`${key}.interval`)});\r\n        } else if (contentType === \"kpi\") {\r\n            unregister(`${key}.reporttemplateid`);\r\n            unregister(`${key}.grouping`);\r\n            unregister(`${key}.graph`);\r\n            unregister(`${key}.column`);\r\n\r\n            register(`${key}.kpiid`, { validate: mandatoryNumField, value: getValues(`${key}.kpiid`) || 0 });\r\n        }\r\n        else if (contentType === \"funnel\") {\r\n            unregister(`${key}.kpiid`);\r\n            unregister(`${key}.grouping`);\r\n            unregister(`${key}.graph`);\r\n            \r\n            register(`${key}.reporttemplateid`, { validate: mandatoryReportTemplate, value: getValues(`${key}.reporttemplateid`) || 0 });\r\n            register(`${key}.column`, { validate: mandatoryColumn, value: getValues(`${key}.column`) || '' });\r\n            register(`${key}.tags`);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [contentType, columns, templates]);\r\n\r\n    useEffect(() => {\r\n        if (selectedIndex === -1) {\r\n            setColumns([]);\r\n            return;\r\n        }\r\n        let columnas= JSON.parse(templates[selectedIndex].columnjson) as ColumnTemplate[]\r\n        let summary = JSON.parse(templates[selectedIndex].summaryjson).map((x:any)=>{return {\r\n            alias: `${t(langKeys.summarization)} - ${columnas?.find(y => y.columnname === x.columnname)?.alias} (${t(\"function_\" + x.function)})`,\r\n            columnname: `${x.columnname}${x.function}`,\r\n            description: x.columnname,\r\n            descriptionT: x.columnname,\r\n            disabled: false,\r\n            join_alias: null,\r\n            join_on: null,\r\n            join_table: null,\r\n            tablename: \"\",\r\n            type: x.type,\r\n            function: x.function\r\n        }})\r\n        setColumns(summary.concat(columnas));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedIndex, templates]);\r\n\r\n    const mandatoryReportTemplate = (value: number) => {\r\n        if (value === 0 || !templates.some(x => x.reporttemplateid === value)) {\r\n            return t(langKeys.field_required)\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    const mandatoryColumn = (value: string) => {\r\n        if (\r\n            !value ||\r\n            value.length === 0 ||\r\n            !columns.some(x => x.columnname === value)\r\n        ) {\r\n            return t(langKeys.field_required);\r\n        }\r\n\r\n        return  undefined;\r\n    }\r\n\r\n    const mandatoryContentType = (value: string) => {\r\n        if (!value || value.length === 0) {\r\n            return t(langKeys.field_required);\r\n        } else if (value === \"report\" || value === \"kpi\" || value === \"funnel\") {\r\n            return undefined;\r\n        }\r\n\r\n        return t(langKeys.invalidEntry);\r\n    }\r\n\r\n    const mandatoryStrField = (value: string) => {\r\n        return !value || value.length === 0 ? t(langKeys.field_required) : undefined;\r\n    }\r\n\r\n    const mandatoryNumField = (value: number) => {\r\n        return value === 0 ? t(langKeys.field_required) : undefined;\r\n    }\r\n\r\n    function deleteFunnel(index:number){\r\n        let newtagsdata=tagsdata.filter((x:any,i:number)=>i!==index)\r\n        settagsdata(newtagsdata)\r\n        setValue(`${key}.tags`,newtagsdata)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton className={classes.deleteBtn} onClick={onDelete} size=\"small\">\r\n                <CloseIcon style={{ width: 18, height: 18 }} />\r\n            </IconButton>\r\n            <FieldEdit\r\n                className={classes.field}\r\n                valueDefault={getValues(`${key}.description`)}\r\n                label={t(langKeys.title)}\r\n                disabled={loading}\r\n                error={errors[key]?.description?.message}\r\n                onChange={(v: string) => setValue(`${key}.description`, v)}\r\n            />\r\n            <FieldSelect\r\n                className={classes.field}\r\n                label={t(langKeys.contentType)}\r\n                data={contentTypes}\r\n                optionDesc=\"key\"\r\n                optionValue=\"key\"\r\n                valueDefault={getValues(`${key}.contentType`)}\r\n                onChange={(v: typeof contentTypes[number]) => {\r\n                    const value = v?.key || '';\r\n                    setValue(`${key}.contentType`, value);\r\n                    setContentType(value);\r\n                }}\r\n                error={errors[key]?.contentType?.message}\r\n                disabled={loading}\r\n                uset\r\n                prefixTranslation=\"dashboard_contentType_\"\r\n            />\r\n            {contentType === \"kpi\" && (\r\n                <FieldSelect\r\n                    className={classes.field}\r\n                    label=\"KPI\"\r\n                    data={kpis}\r\n                    optionDesc=\"kpiname\"\r\n                    optionValue=\"id\"\r\n                    valueDefault={getValues(`${key}.kpiid`)}\r\n                    onChange={(v: KpiTemplate) => setValue(`${key}.kpiid`, v?.id || 0)}\r\n                    error={errors[key]?.kpiid?.message}\r\n                    disabled={loading}\r\n                />\r\n            )}\r\n            {contentType === \"report\" && (\r\n                <>\r\n                    <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.report)}\r\n                        data={templates}\r\n                        optionDesc=\"description\"\r\n                        optionValue=\"reporttemplateid\"\r\n                        valueDefault={getValues(`${key}.reporttemplateid`)}\r\n                        onChange={(v: ReportTemplate) => {\r\n                            const reporttemplateid = v?.reporttemplateid || 0;\r\n                            setValue(`${key}.reporttemplateid`, reporttemplateid);\r\n                            if (reporttemplateid === 0) {\r\n                                setValue(`${key}.column`, '');\r\n                            }\r\n                            setSelectedIndex(!v ? -1 : templates.findIndex(e => e === v));\r\n                        }}\r\n                        error={errors[key]?.reporttemplateid?.message}\r\n                        disabled={loading}\r\n                    />\r\n                    <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.groupment)}\r\n                        data={groupingType}\r\n                        optionDesc=\"key\"\r\n                        optionValue=\"key\"\r\n                        valueDefault={getValues(`${key}.grouping`)}\r\n                        onChange={(v: typeof groupingType[number]) => {\r\n                            setValue(`${key}.grouping`, v?.key || '')\r\n                            setValue(`${key}.interval`, \"\")\r\n                        }}\r\n                        error={errors[key]?.grouping?.message}\r\n                        disabled={loading}\r\n                        uset\r\n                        prefixTranslation=\"dashboard_groupment_\"\r\n                    />\r\n                    <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.chartType)}\r\n                        data={graphTypes}\r\n                        optionDesc=\"key\"\r\n                        optionValue=\"key\"\r\n                        valueDefault={getValues(`${key}.graph`)}\r\n                        onChange={(v: typeof graphTypes[number]) => {\r\n                            setValue(`${key}.graph`, v?.key || '')\r\n                            setValue(`${key}.interval`, \"\")\r\n                            // setgraphicType(v?.key || '')\r\n                        }}\r\n                        error={errors[key]?.graph?.message}\r\n                        disabled={loading}\r\n                        uset\r\n                        prefixTranslation=\"dashboard_chartType_\"\r\n                    />\r\n                    {(getValues(`${key}.graph`) === \"bar\" || getValues(`${key}.graph`) ===\"line\") && <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.displayinterval)}\r\n                        data={[\r\n                            {key: \"day\", desc:t(langKeys.day)},\r\n                            {key: \"week\", desc:t(langKeys.week)},\r\n                            {key: \"month\", desc:t(langKeys.month)},\r\n                        ]}\r\n                        optionDesc=\"desc\"\r\n                        optionValue=\"key\"\r\n                        valueDefault={getValues(`${key}.interval`)}\r\n                        onChange={(v)=>setValue(`${key}.interval`, v?.key || \"\")}\r\n                        disabled={loading}\r\n                    />}\r\n                    <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.column)}\r\n                        data={columns}\r\n                        optionDesc=\"alias\"\r\n                        optionValue=\"columnname\"\r\n                        valueDefault={`${getValues(`${key}.column`)}${getValues(`${key}.summarizationfunction`)|| ''}`}\r\n                        onChange={(v: ColumnTemplate) => {\r\n                            if(v?.function){\r\n                                setValue(`${key}.column`, v?.columnname?.slice(0,-(v?.function?.length||0)));\r\n                            }\r\n                            else{\r\n                                setValue(`${key}.column`, v?.columnname||'');\r\n                            }\r\n                            setValue(`${key}.summarizationfunction`, v?.function || '');\r\n                        }}\r\n                        error={errors[key]?.column?.message}\r\n                        disabled={loading || columns.length === 0}\r\n                    />\r\n                </>\r\n            )}\r\n            {contentType === \"funnel\" && (\r\n                <>\r\n                    <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.report)}\r\n                        data={templates}\r\n                        optionDesc=\"description\"\r\n                        optionValue=\"reporttemplateid\"\r\n                        valueDefault={getValues(`${key}.reporttemplateid`)}\r\n                        onChange={(v: ReportTemplate) => {\r\n                            const reporttemplateid = v?.reporttemplateid || 0;\r\n                            setValue(`${key}.reporttemplateid`, reporttemplateid);\r\n                            if (reporttemplateid === 0) {\r\n                                setValue(`${key}.column`, '');\r\n                            }\r\n                            setSelectedIndex(!v ? -1 : templates.findIndex(e => e === v));\r\n                        }}\r\n                        error={errors[key]?.reporttemplateid?.message}\r\n                        disabled={loading}\r\n                    />\r\n                    <FieldSelect\r\n                        className={classes.field}\r\n                        label={t(langKeys.column)}\r\n                        data={columns.filter(e=>e.columnname.includes(\"tag\"))}\r\n                        optionDesc=\"alias\"\r\n                        optionValue=\"columnname\"\r\n                        valueDefault={`${getValues(`${key}.column`)}${getValues(`${key}.summarizationfunction`)|| ''}`}\r\n                        onChange={(v: ColumnTemplate) => {\r\n                            if(v?.function){\r\n                                setValue(`${key}.column`, v?.columnname?.slice(0,-(v?.function?.length||0)));\r\n                            }\r\n                            else{\r\n                                setValue(`${key}.column`, v?.columnname||'');\r\n                            }\r\n                            setValue(`${key}.summarizationfunction`, v?.function || '');\r\n                        }}\r\n                        error={errors[key]?.column?.message}\r\n                        disabled={loading || columns.length === 0}\r\n                    />\r\n                    \r\n                    <>\r\n                        {tagsdata.map((tag:any, i:number) => {\r\n                            return <div key={`tagdatalevel${i+1}`}>\r\n                                <div className={classes.funnelLvlTitle}>\r\n                                    <p style={{fontSize: 14, fontWeight: 500}}>{t(langKeys.level)} {i+1}</p>\r\n                                    <IconButton onClick={()=>deleteFunnel(i)} size=\"small\" style={{ width: 18, height: 18, margin: 14, marginRight: 0 }} >\r\n                                        <CloseIcon style={{ width: 18, height: 18 }} />\r\n                                    </IconButton>\r\n                                </div>\r\n                                <div    style={{paddingLeft: 40}}>\r\n                                    <FieldSelect\r\n                                        fregister={{\r\n                                            ...register(`${key}.tags[${i}].value`, {\r\n                                                validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                            })\r\n                                        }}\r\n                                        className={classes.field}\r\n                                        label={t(langKeys.value)}\r\n                                        data={tags}\r\n                                        optionDesc=\"tag\"\r\n                                        optionValue=\"tag\"\r\n                                        valueDefault={getValues(`${key}.tags[${i}].value`)}\r\n                                        onChange={(v: any) => {\r\n                                            let initTags=getValues(`${key}.tags`)||[];\r\n                                            initTags[i].value = v?.tag || \"\";\r\n                                            let newtagdata=tagsdata;\r\n                                            newtagdata[i].value = v?.tag || \"\";\r\n                                            settagsdata(newtagdata)\r\n                                            setValue(`${key}.tags`,initTags)\r\n                                        }}\r\n                                        error={errors[key]?.tags?.[i]?.value?.message}\r\n                                    />\r\n                                    <FieldEdit\r\n                                        fregister={{\r\n                                            ...register(`${key}.tags[${i}].title`, {\r\n                                                validate: (value: any) => (value && value.length) || t(langKeys.field_required)\r\n                                            })\r\n                                        }}\r\n                                        label={`${t(langKeys.title)} ${t(langKeys.level)} ${i+1}`}\r\n                                        valueDefault={getValues(`${key}.tags[${i}].title`)}\r\n                                        className={classes.field}\r\n                                        onChange={(value: any) => {\r\n                                            let initTags=getValues(`${key}.tags`)||[];\r\n                                            initTags[i].title = value || \"\";\r\n                                            let newtagdata=tagsdata;\r\n                                            newtagdata[i].title = value || \"\";\r\n                                            settagsdata(newtagdata)\r\n                                            setValue(`${key}.tags`,initTags)\r\n                                        }}\r\n                                        error={errors[key]?.tags?.[i]?.title?.message}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        })}\r\n                    </>\r\n                    <Button style={{float:\"right\"}} onClick={()=>{\r\n                        let initTags=getValues(`${key}.tags`)||[];\r\n                        settagsdata([...initTags,{value:\"\",title:\"\"}])\r\n                        setValue(`${key}.tags`,[...initTags,{value:\"\",title:\"\"}])\r\n                    }}><AddIcon/> {t(langKeys.add)} {t(langKeys.level)}</Button> \r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst CenterLoading: FC = () => {\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%' }}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardAdd;\r\n","import { DashboardTemplate, IActionCall, IRequestBody } from \"@types\";\r\nimport { DashboardService, CommonService } from \"network\";\r\nimport actionTypes from \"./actionTypes\";\r\n\r\ninterface GetDashboardParams {\r\n    dashboardtemplateid: number | string;\r\n    startdate: string;\r\n    enddate: string;\r\n    offset: number;\r\n}\r\n\r\nexport const getDashboard = (parameters: GetDashboardParams): IActionCall => ({\r\n    callAPI: () => DashboardService.getDashboard({ parameters }),\r\n    types: {\r\n        loading: actionTypes.GET_DASHBOARD,\r\n        success: actionTypes.GET_DASHBOARD_SUCCESS,\r\n        failure: actionTypes.GET_DASHBOARD_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetGetDashboard = (): IActionCall => ({type: actionTypes.GET_DASHBOARD_RESET});\r\n\r\nexport const getDashboardTemplate = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.GET_DASHBOARDTEMPLATE,\r\n        success: actionTypes.GET_DASHBOARDTEMPLATE_SUCCESS,\r\n        failure: actionTypes.GET_DASHBOARDTEMPLATE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const setDashboardTemplate = (payload: DashboardTemplate): IActionCall => ({\r\n    payload,\r\n    type: actionTypes.SET_DASHBOARDTEMPLATE,\r\n});\r\n\r\nexport const resetGetDashboardTemplate = (): IActionCall => ({type: actionTypes.GET_DASHBOARDTEMPLATE_RESET});\r\n\r\nexport const saveDashboardTemplate = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.SAVE_DASHBOARDTEMPLATE,\r\n        success: actionTypes.SAVE_DASHBOARDTEMPLATE_SUCCESS,\r\n        failure: actionTypes.SAVE_DASHBOARDTEMPLATE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetSaveDashboardTemplate = (): IActionCall => ({type: actionTypes.SAVE_DASHBOARDTEMPLATE_RESET});\r\n\r\nexport const deleteDashboardTemplate = (body: IRequestBody): IActionCall => ({\r\n    callAPI: () => CommonService.main(body),\r\n    types: {\r\n        loading: actionTypes.DELETE_DASHBOARDTEMPLATE,\r\n        success: actionTypes.DELETE_DASHBOARDTEMPLATE_SUCCESS,\r\n        failure: actionTypes.DELETE_DASHBOARDTEMPLATE_FAILURE,\r\n    },\r\n    type: null,\r\n});\r\n\r\nexport const resetDeleteDashboardTemplate = (): IActionCall => ({type: actionTypes.DELETE_DASHBOARDTEMPLATE_RESET});\r\n"],"sourceRoot":""}